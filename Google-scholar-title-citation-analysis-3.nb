(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1262758,      27495]
NotebookOptionsPosition[   1255932,      27275]
NotebookOutlinePosition[   1256285,      27291]
CellTagsIndexPosition[   1256242,      27288]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"dataGet", "[", 
   RowBox[{"str_String", ",", "page_"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "url", "}"}], ",", 
      RowBox[{
       RowBox[{"url", "=", 
        RowBox[{"\"\<https://scholar.google.co.uk/scholar?start=\>\"", "<>", 
         RowBox[{"URLEncode", "[", "i", "]"}], "<>", "\"\<&q=\>\"", "<>", 
         RowBox[{"URLEncode", "[", "str", "]"}], "<>", 
         "\"\<&hl=en&as_sdt=0,5\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"Import", "[", 
            RowBox[{"url", ",", "\"\<XMLObject\>\""}], "]"}], ",", 
           RowBox[{"XMLElement", "[", 
            RowBox[{"\"\<div\>\"", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<id\>\"", "\[Rule]", "\"\<gs_ccl\>\""}], ",", 
               RowBox[{"\"\<role\>\"", "\[Rule]", "\"\<main\>\""}]}], "}"}], 
             ",", "___"}], "]"}], ",", "Infinity"}], "]"}], ",", 
         RowBox[{"XMLElement", "[", 
          RowBox[{"\"\<h3\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<class\>\"", "\[Rule]", "\"\<gs_rt\>\""}], "}"}], ",",
            "___"}], "]"}], ",", "Infinity"}], "]"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "page"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parseData2", "[", "dataIn_", "]"}], ":=", 
  RowBox[{"ToLowerCase", "@", 
   RowBox[{"DeleteStopwords", "@", 
    RowBox[{"Flatten", "@", 
     RowBox[{"TextWords", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"DeleteCases", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Cases", "[", 
             RowBox[{"dataRaw", ",", 
              RowBox[{"XMLElement", "[", 
               RowBox[{"\"\<a\>\"", ",", "_", ",", "_"}], "]"}], ",", 
              "Infinity"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"XMLElement", "[", 
            RowBox[{"\"\<b\>\"", ",", "_", ",", "_"}], "]"}], ",", 
           "Infinity"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{"dataRaw", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "*", 
           RowBox[{"Length", "@", "dataRaw"}]}]}], "}"}]}], 
       "]"}]}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parseData1", "[", "dataIn_", "]"}], ":=", 
  RowBox[{"DeleteStopwords", "@", 
   RowBox[{"Flatten", "@", 
    RowBox[{"TextWords", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Cases", "[", 
           RowBox[{"dataIn", ",", 
            RowBox[{"XMLElement", "[", 
             RowBox[{"\"\<a\>\"", ",", "_", ",", "_"}], "]"}], ",", 
            "Infinity"}], "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{
          RowBox[{"Length", "@", 
           RowBox[{"dataRaw", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "*", 
          RowBox[{"Length", "@", "dataRaw"}]}]}], "}"}]}], 
      "]"}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"associate", "[", "words_", "]"}], ":=", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Thread", "[", 
          RowBox[{"#", "\[DirectedEdge]", 
           RowBox[{"DeleteCases", "[", 
            RowBox[{
             RowBox[{"Nearest", "[", 
              RowBox[{"words", ",", "#", ",", "3"}], "]"}], ",", "#"}], 
            "]"}]}], "]"}], ")"}], "&"}], ",", "words"}], "]"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"commonAssociateMinus", "[", 
   RowBox[{"dataParsed_", ",", "Ncommonest_", ",", "minusWords_"}], "]"}], ":=", 
  RowBox[{"associate", "[", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"Commonest", "[", 
      RowBox[{"dataParsed", ",", "Ncommonest"}], "]"}], ",", "minusWords"}], 
    "]"}], "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.685440766385091*^9, {3.685441670522058*^9, 3.685441680499728*^9}, {
   3.685442146860334*^9, 3.685442147279626*^9}, {3.685442408210812*^9, 
   3.685442408619903*^9}, 3.6854456808863773`*^9, {3.685699299425344*^9, 
   3.685699302465547*^9}, {3.6857010815402727`*^9, 3.685701204822072*^9}, {
   3.694690423619542*^9, 3.694690425718197*^9}, 3.6946904607276154`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "google", " ", "scholar", " ", "data", " ", "from", " ", 
    "first", " ", "three", " ", "search", " ", "pages", " ", "ZrC", " ", 
    "electrical", " ", "conductivity"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataRaw", "=", 
     RowBox[{"dataGet", "[", 
      RowBox[{"\"\<zirconium carbide electrical conductivity\>\"", ",", "3"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataParsed", "=", 
     RowBox[{"parseData2", "[", "dataRaw", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"WordCloud", "@", "dataParsed"}]}]}]], "Input",
 CellChangeTimes->{{3.69495805117789*^9, 3.69495810067128*^9}}],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"refractory\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.16203703703703703`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"temperature\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11574074074074073`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-21.5, -41.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"micro-supercapacitors\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-0.5, 44.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"single-crystalline\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-0.5, 71.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"high\[Hyphen]temperature\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-13.5, -76.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"thermophysical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {-0.5, 98.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"titanium\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09259259259259259],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-0.5, -108.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"hafnium\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09259259259259259],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-0.5, 126.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"applications\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {12.5, -136.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"distributions\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-0.5, 158.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"oxycarbide\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {77.5, -157.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"monolithic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {-104.5, -163.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"modeling\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {130.5, -97.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"plasticity\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {-131.5, -109.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"diborides\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {-132.5, 125.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"sintering\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {127.5, 124.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"physical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-136.5, 152.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"crystals\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[1, 0.75, 0]], {133.5, 155.5}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"element\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {85.5, 180.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"plasma\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {148.5, -124.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"thermal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {-121.5, 179.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"density\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {150.5, -66.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"nuclear\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-142.5, -136.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"derived\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {151.5, 92.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"optical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-147.5, 92.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"carbon\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-0.5, -184.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"temperatures\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.046296296296296294`],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {107.5, -178.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"microstructure\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.046296296296296294`],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {-113.5, -184.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"oxides\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {-13.5, 185.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"current\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {163.5, 65.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"single\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {173.5, -31.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"spark\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {-167.5, -73.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"creep\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {83.5, -200.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"stress\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {-41.5, -205.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"eight\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {177.5, -1.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ultra-high\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.046296296296296294`],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-169.5, 67.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"reinforced\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.046296296296296294`],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {44.5, 204.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"finite\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-178.5, 0.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"films\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {-183.5, 26.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ceramics\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.046296296296296294`],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {-67.5, 203.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"fuel\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06944444444444445],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {177.5, 25.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"diboride\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.046296296296296294`],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {-120.5, -203.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"whisker\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.046296296296296294`],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {126.5, 202.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"silicon\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.046296296296296294`],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {-186.5, -20.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nitride\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.046296296296296294`],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-183.5, -41.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"diboride-based\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.023148148148148147`],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {-145.5, 200.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"high\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.046296296296296294`],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {20.5, -206.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"compounds\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.023148148148148147`],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {-179.5, 47.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"composites\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.023148148148148147`],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {179.5, 46.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"mechanical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.023148148148148147`],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {-182.5, -56.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"processing\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.023148148148148147`],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {175.5, -142.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"oxidation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.023148148148148147`],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {143.5, -49.5},
     Center, Automatic]},
  DefaultBaseStyle->{
   "Graphics", FontFamily -> "Helvetica", FontWeight -> Plain, FontTracking -> 
    "Plain", FontSlant -> Plain, FontVariations -> {}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-218., 214.}, {-219., 217.}}]], "Output",
 CellChangeTimes->{{3.694958070239173*^9, 3.694958092994433*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "google", " ", "scholar", " ", "data", " ", "from", " ", 
    "first", " ", "three", " ", "search", " ", "pages", " ", "on", " ", 
    "WC"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataRaw", "=", 
     RowBox[{"dataGet", "[", 
      RowBox[{"\"\<carbide, tungsten\>\"", ",", "1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataParsed", "=", 
     RowBox[{"parseData2", "[", "dataRaw", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"WordCloud", "@", "dataParsed"}]}]}]], "Input",
 CellChangeTimes->{{3.694710817320809*^9, 3.6947108576945343`*^9}, {
  3.694710940838385*^9, 3.694711004894979*^9}, {3.69471104594166*^9, 
  3.6947110671058893`*^9}}],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"overvoltage\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11419249592169659`],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"composite\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11419249592169659`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {-4.5, 55.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"protection\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11419249592169659`],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-0.5, -56.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"titanium\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11419249592169659`],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-37.5, 98.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"material\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11419249592169659`],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {4.5, -110.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"method\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11419249592169659`],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-0.5, 151.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"device\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11419249592169659`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {8.5, -165.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"nickel\[Hyphen]promoted\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {-0.5, 196.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"electrochemical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-0.5, -204.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"light-sensitive\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {22.5, 226.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"compensation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {68.5, -229.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"temperatures\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {-145.5, -233.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"photocatalyst\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {-0.5, 256.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"platinum-like\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {41.5, -260.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"molybdenum\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {183.5, 99.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"composites\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-180.5, -143.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"net\[Hyphen]shaped\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {196.5, -143.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"conversion\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-202.5, -104.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nanowires\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {207.5, -89.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"displacive\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {192.5, 135.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cemented\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-191.5, 143.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"refractory\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {188.5, 164.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"preparing\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-188.5, -175.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"activation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[1, 0.75, 0]], {-194.5, 171.5}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"hydrogen\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {193.5, -174.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"materials\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {195.5, 193.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"evolution\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {-194.5, 200.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cellulose\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {219.5, -34.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"catalysts\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-172.5, 236.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"catalysis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-219.5, -38.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"behavior\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-220.5, -69.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"ethylene\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {219.5, 32.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"coatings\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {221.5, 62.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"catalytic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {-220.5, 81.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"porosity\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {-124.5, -264.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"process\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {-224.5, 32.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"efficient\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {-222.5, 109.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"welding\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {164.5, 248.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"surface\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {-181.5, -207.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"powder\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-157.5, 266.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"modest\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {230.5, -206.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"trioxde\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {-234.5, -3.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"visible\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {194.5, -259.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"dense\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-239.5, -258.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"boride\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {228.5, 0.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"stable\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {148.5, 277.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"glycol\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {241.5, 278.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"alloys\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-0.5, 286.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"direct\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {27.5, -290.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"metal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {114.5, -289.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"using\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {266.5, 222.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"novel\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {257.5, -59.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"steel\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {-82.5, 289.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"base\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {-176.5, 289.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"dcp\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {-274.5, -207.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"near\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05709624796084829],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {229.5, -114.5},
     Center, Automatic]},
  DefaultBaseStyle->{
   "Graphics", FontFamily -> "Helvetica", FontWeight -> Plain, FontTracking -> 
    "Plain", FontSlant -> Plain, FontVariations -> {}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-305., 308.}, {-303., 308.}}]], "Output",
 CellChangeTimes->{{3.694710832651585*^9, 3.694710843278241*^9}, {
   3.694710897002246*^9, 3.694711006977058*^9}, 3.694711048619272*^9, 
   3.6947110811630707`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "google", " ", "scholar", " ", "data", " ", "from", " ", 
    "first", " ", "three", " ", "search", " ", "pages", " ", "on", " ", "W", 
    " ", "conductivity"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataRaw", "=", 
     RowBox[{"dataGet", "[", 
      RowBox[{"\"\<tungsten conductivity\>\"", ",", "3"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataParsed", "=", 
     RowBox[{"parseData2", "[", "dataRaw", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"WordCloud", "@", "dataParsed"}]}]}]], "Input",
 CellChangeTimes->{{3.694710268483811*^9, 3.6947102931040363`*^9}, {
  3.694710733621861*^9, 3.694710735029323*^9}}],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"thermal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.20833333333333331`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"diamond\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11309523809523808`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-0.5, 34.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"composites\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08928571428571427],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-9.5, -33.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"electrical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.10119047619047619`],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-0.5, -61.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"emissivity\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08928571428571427],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-9.5, 63.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"materials\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08928571428571427],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-0.5, -89.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"high-performance\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {5.5, 85.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"high\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11309523809523808`],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-8.5, 113.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"coating\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07738095238095238],
     FontColor->RGBColor[1, 0.75, 0]], {-0.5, -113.5}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"copper\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07738095238095238],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {67.5, 107.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"temperatures\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {79.5, 126.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"development\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-0.5, -135.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"molybdenum\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {94.5, -107.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"matrix\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07738095238095238],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {102.5, -31.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"mesoporous\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-96.5, 102.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"phosphate\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {100.5, 63.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nanotubes\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {104.5, -79.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nanolayer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {106.5, -51.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"consisting\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-103.5, -80.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"enhanced\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-85.5, -109.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"aluminum\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-27.5, 138.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"impurities\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-85.5, 119.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"interface\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {107.5, 40.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"individual\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {-108.5, -54.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"tantalum\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {-111.5, 41.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"magnetoconductivities\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02976190476190476],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {67.5, 141.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"batteries\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {-112.5, 58.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"selected\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-104.5, 79.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"spectral\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {112.5, 80.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ordered\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {-85.5, -126.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"glasses\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {85.5, -127.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"application\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041666666666666664`],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-103.5, 137.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"composite\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041666666666666664`],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {-120.5, -29.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"carbon\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {-82.5, -143.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"lithium\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {81.5, -147.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"effect\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {129.5, 97.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"anode\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-139.5, 0.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"particles\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041666666666666664`],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {-140.5, -15.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"bronzes\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041666666666666664`],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {140.5, 0.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"silver\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {136.5, 16.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"using\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-141.5, 20.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"oxide\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {10.5, -152.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"novel\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {0.5, 153.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"sodium\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041666666666666664`],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {-36.5, -155.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"2300\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {45.5, 154.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"temperature\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02976190476190476],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {-127.5, -92.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"filler\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-41.5, 154.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"intermediate\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02976190476190476],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {131.5, -93.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"total\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {-78.5, 153.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"high-field\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02976190476190476],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {56.5, -161.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"low\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {149.5, -14.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"hydrates\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02976190476190476],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {-145.5, -66.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"heat\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041666666666666664`],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {81.5, 154.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ion\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {153.5, -31.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"trioxide\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02976190476190476],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {146.5, -65.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"sink\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041666666666666664`],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {-153.5, 73.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"lattice\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02976190476190476],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {80.5, -65.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"proton\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02976190476190476],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {-76.5, -156.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ac\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {154.5, 30.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"k\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05357142857142857],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {149.5, 43.5},
     Center, Automatic]},
  DefaultBaseStyle->{
   "Graphics", FontFamily -> "Helvetica", FontWeight -> Plain, FontTracking -> 
    "Plain", FontSlant -> Plain, FontVariations -> {}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-169., 167.}, {-169., 166.}}]], "Output",
 CellChangeTimes->{3.694710301921288*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "google", " ", "scholar", " ", "data", " ", "from", " ", 
    "first", " ", "three", " ", "search", " ", "pages", " ", "on", " ", 
    "hafnium", " ", "carbide"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dataRaw", "=", 
    RowBox[{"dataGet", "[", 
     RowBox[{"\"\<hafnium carbide\>\"", ",", "3"}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.694701082762004*^9, 3.694701086405793*^9}, {
  3.694710737980332*^9, 3.69471074577859*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataParsed", "=", 
   RowBox[{"parseData2", "[", "dataRaw", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"WordCloud", "@", "dataParsed"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"oxidation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.21943573667711597`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"temperatures\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09852216748768472],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {0., -35.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"temperature\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09852216748768472],
     FontColor->RGBColor[1, 0.75, 0]], {-1., 45.5}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"tantalum\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09852216748768472],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {0., -63.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"carbon\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09852216748768472],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-18., 67.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"high\[Hyphen]temperature\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05821764442454098],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {0., -85.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"range\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09852216748768472],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {26., 89.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"praseodymium\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05821764442454098],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {14., -104.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"zirconium\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07165248544558889],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {0., 108.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"mechanisms\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05821764442454098],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-77., 85.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"1400\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09852216748768472],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {95., -62.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"titanium\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07165248544558889],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {98., 64.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"constitution\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05821764442454098],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {80., -121.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"phosphate\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05821764442454098],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {-93., -105.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"formation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05821764442454098],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-100., -67.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pressures\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05821764442454098],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {-93., 102.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"low\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09852216748768472],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {109., 32.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"additions\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05821764442454098],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {88., 107.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"emission\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05821764442454098],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-89., 116.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"fracture\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05821764442454098],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {101., 83.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"glasses\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05821764442454098],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {105., -83.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"diboride\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05821764442454098],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-106., -86.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"oxygen\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05821764442454098],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {-99., 67.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"crystals\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05821764442454098],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {-118., 31.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"soluble\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05821764442454098],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {-2., -123.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"substitutes\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04478280340349306],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {0., 126.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"single\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05821764442454098],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {-119., -31.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"plastic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05821764442454098],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {122., -30.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"composite\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04478280340349306],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {-67., -124.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"reinforced\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04478280340349306],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {70., 123.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"solution-derived\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03134796238244514],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {-74., 131.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"physical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04478280340349306],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {109., -100.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"industrial\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04478280340349306],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {0., 140.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"diamond\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04478280340349306],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {0., -140.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nanocrystalline\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03134796238244514],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-122., 46.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"2100\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05821764442454098],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {52., 138.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"2060\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05821764442454098],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {51., -140.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"carbothermal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03134796238244514],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {-122., -48.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"field\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05821764442454098],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {94., 138.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"high\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05821764442454098],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {92., -140.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"flow\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05821764442454098],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-95., -139.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"study\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04478280340349306],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-49., -140.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"x\[Hyphen]ray\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04478280340349306],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {134., 47.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"synthesis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03134796238244514],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {-57., 143.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"reduction\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03134796238244514],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {124., 119.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"reactions\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03134796238244514],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {-123., -121.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"precursors\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03134796238244514],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {-105., 143.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"powders\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03134796238244514],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {-132., 128.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"fiber\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04478280340349306],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {144., 95.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"c\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09852216748768472],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {144., 24.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"liquid\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03134796238244514],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {142., -45.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"using\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03134796238244514],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {-144., 58.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"iv\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05821764442454098],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {145., 0.5},
     Center, Automatic]},
  DefaultBaseStyle->{
   "Graphics", FontFamily -> "Helvetica", FontWeight -> Plain, FontTracking -> 
    "Plain", FontSlant -> Plain, FontVariations -> {}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-158.5, 160.5}, {-153., 151.}}]], "Output",
 CellChangeTimes->{3.6947011153456373`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "google", " ", "scholar", " ", "data", " ", "from", " ", 
    "first", " ", "search", " ", "page", " ", "on", " ", "TI"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dataRaw", "=", 
    RowBox[{"dataGet", "[", 
     RowBox[{"\"\<thermodynamic integration\>\"", ",", "1"}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.685440768791623*^9, 3.685440769949931*^9}, {
  3.6854408237330227`*^9, 3.685440862383514*^9}, {3.685441047416642*^9, 
  3.685441047766117*^9}, {3.685441106327794*^9, 3.6854411138404617`*^9}, {
  3.685442181627516*^9, 3.685442181694003*^9}, {3.6854422502667522`*^9, 
  3.6854422579937468`*^9}, {3.6870004092244463`*^9, 3.6870004181282377`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataParsed", "=", 
   RowBox[{"parseData2", "[", "dataRaw", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"WordCloud", "@", "dataParsed"}]}], "Input",
 CellChangeTimes->{3.6854417008667383`*^9}],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"energy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.20676691729323307`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Free\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.2631578947368421],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {-0.5, 38.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"difference\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.15037593984962405`],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-0.5, -42.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"Comparison\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09398496240601503],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-0.5, -68.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"calculations\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09398496240601503],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {37.5, 68.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"efficiency\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09398496240601503],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-0.5, 90.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"analysis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09398496240601503],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-0.5, -92.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"umbrella\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09398496240601503],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {47.5, 107.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"scaling\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09398496240601503],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-11.5, -116.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"method\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09398496240601503],
     FontColor->RGBColor[1, 0.75, 0]], {-43.5, 112.5}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"Separation\[Hyphen]shifted\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {87.5, -85.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Multiconfiguration\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {-87.5, -85.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Lennard\[Hyphen]Jones\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {-88.5, 77.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"dimethylamine\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {86.5, 86.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theophylline\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {-98.5, 21.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Fast-growth\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {98.5, 21.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"coordinates\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {-96.5, 33.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"exponential\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {101.5, -21.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"interactions\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {97.5, 33.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Computing\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-95.5, 46.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"coordinate\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-100.5, -21.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"calculating\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {105.5, -5.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"MM\[Hyphen]PBSA\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {95.5, 45.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"difficulties\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {-107.5, 0.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"computed\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {-92.5, 58.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"averaging\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {91.5, -60.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"acceptance\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-96.5, -60.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"obtaining\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {109.5, -33.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Cartesian\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-77.5, 89.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"hydration\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {67.5, -98.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"sampling\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {107.5, 7.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"methods\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {-111.5, -33.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"energies\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {108.5, -46.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"provides\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-67.5, -97.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Bridging\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-110.5, -45.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"aptamer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {47.5, -110.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"reaction\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {18.5, 124.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Bennett\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {-71.5, -110.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"precise\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {45.5, -122.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"factors\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-111.5, -71.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"binding\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {85.5, -110.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"acetone\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {3.5, -22.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"tested\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {53.5, 124.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Bayes\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {-67.5, -122.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"value\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {-21.5, 125.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"using\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {-41.5, 23.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"novel\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {118.5, 57.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"RNA\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {79.5, -72.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"finite\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {116.5, 69.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"water\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], 
    {-118.5, -9.5}, Center, Automatic], InsetBox[
    StyleBox["\<\"ratio\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-100.5, -97.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"bias\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-61.5, 125.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"gap\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {100.5, -95.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"error\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {-98.5, 101.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"new\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03759398496240601],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-80.5, -70.5},
     Center, Automatic]},
  DefaultBaseStyle->{
   "Graphics", FontFamily -> "Helvetica", FontWeight -> Plain, FontTracking -> 
    "Plain", FontSlant -> Plain, FontVariations -> {}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-134., 132.}, {-132., 133.}}]], "Output",
 CellChangeTimes->{
  3.6854410760508623`*^9, 3.685441118822586*^9, {3.685441694380351*^9, 
   3.6854417179903803`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "google", " ", "scholar", " ", "data", " ", "from", " ", 
    "first", " ", "three", " ", "search", " ", "pages", " ", "on", " ", 
    "TI"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dataRaw", "=", 
    RowBox[{"dataGet", "[", 
     RowBox[{"\"\<thermodynamic integration\>\"", ",", "3"}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.685442197732923*^9, 3.685442226084845*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataParsed", "=", 
   RowBox[{"parseData2", "[", "dataRaw", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"WordCloud", "@", "dataParsed"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"energy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.15570260801868432`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Free\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.19073569482288827`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0., 39.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"difference\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.12066952121448034`],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {0., -45.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Comparison\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08563643441027637],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {0., -76.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"calculations\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08563643441027637],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {0., 84.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"umbrella\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0973141300116777],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-12., -105.}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"efficiency\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08563643441027637],
     FontColor->RGBColor[1, 0.75, 0]], {0., 112.}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"analysis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08563643441027637],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-1., -133.}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Multiconfiguration\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {0., 136.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"dimethylamine\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {-24., 153.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Fast-growth\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {108., -98.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"sampling\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06228104320747373],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {117., 25.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theophylline\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {110., -121.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"reaction\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06228104320747373],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {-111., 25.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"calculating\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {-113., 44.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"coordinates\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {113., 63.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"MM\[Hyphen]PBSA\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {-119., 61.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"exponential\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {113., 102.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"acceptance\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {60., -152.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"factors\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06228104320747373],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {116., -22.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"method\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06228104320747373],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-123., 80.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"difficulties\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-108., 102.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"averaging\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-101., -125.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"coordinate\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {112., 119.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Cartesian\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-123., -22.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"obtaining\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {125., 0.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"computed\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-116., 123.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"energies\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {-125., 0.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Bayes\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06228104320747373],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {130., -44.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"hydration\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {-124., -84.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Bridging\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {121., -71.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"methods\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {120., 80.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"provides\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {-117., -103.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"aptamer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {108., 44.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"binding\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-130., -41.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Bennett\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-129., -64.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Computing\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03892565200467108],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {-36., -153.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Estimating\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03892565200467108],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {71., 152.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"precise\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-103., -148.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"acetone\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {-119., 139.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Separation\[Hyphen]shifted\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027247956403269755`],
     FontColor->RGBColor[
      0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {115., 134.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"population\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03892565200467108],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {-120., 154.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"tested\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {134., -140.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"value\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {131., 148.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"finite\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {131., -160.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Lennard\[Hyphen]Jones\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027247956403269755`],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {27., 167.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"novel\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {0., -171.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"water\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {-33., 170.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"RNA\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {-46., -173.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"scaling\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03892565200467108],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {47., -172.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"free-energy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027247956403269755`],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {14., 65.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"MCMC\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03892565200467108],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {86., 166.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"perturbation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027247956403269755`],
     FontColor->RGBColor[
      0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {-87., 168.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ratio\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {163., 40.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"gap\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {-87., -164.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"bias\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {89., -171.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"interactions\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027247956403269755`],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {0., -24.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Application\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027247956403269755`],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {-130., -166.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"enzymatic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027247956403269755`],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {135., 165.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"using\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03892565200467108],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {-162., -120.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"compared\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027247956403269755`],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {-159., -140.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"error\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05060334760607241],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {-137., 168.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"via\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03892565200467108],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-39., 24.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"MM\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027247956403269755`],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {66., -136.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"QM\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027247956403269755`],
     FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {-161., 11.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"new\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027247956403269755`],
     FontColor->RGBColor[
      0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {97., -83.},
     Center, Automatic]},
  DefaultBaseStyle->{
   "Graphics", FontFamily -> "Helvetica", FontWeight -> Plain, FontTracking -> 
    "Plain", FontSlant -> Plain, FontVariations -> {}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-184.5, 182.5}, {-182.5, 179.5}}]], "Output",
 CellChangeTimes->{
  3.685442173013886*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzEvQt4VFd+J1iDJITxI/1OOpNMurMzu7PJdPd4tpMvm833bdw9ns3Gm5CO
+0unm27HsQev/dF02sZM29hebIwNGByMaB5txENggUGAQEJIgIQQICH0RO8S
KqmkkqpUUpWqSlWleqiq9Nv/ed57SxJguydTfFWozj3v8/v9X+fcW3/1jy8/
v2rNP778wrP/+LX/66V//PnzLzy79mv/5Z9eoqScf2Wz/avn6f3s12zsb9hs
6oO/XmAf8ov8O8L/y8FcIo50NIpMCraXxKVp/t9SzIU64XntWQz8/V/J9w/h
bRp/0ZwrH8Gt4qqnuhXxsV54N4rvvuG47eci6zr+Xy6Q6sS5ShuOVP4YrhTy
ePIyeO3PUZJMTrLEMNqu2Xha82Q4V2aj4ui79ZjIWrsPCcrWXCuyXXa6l8pG
Et59srbn4E7hP6m2qXTKO4r4sBNxbyhXDh+JEJUYRzIUZ9/4iIA4kmOjSPhD
mBMTiHQohDRN0cOmzsw01SLQPsrzzKXYhRDGn/krOI50zht4K07zPq3AcFIP
3N31Y97Vky3XZDNhNMoR1XsDoo8PYMa7U46I3tVs4IC798dyIg6x77Y82VLf
rW+K9GvFmAU+J5Pnwn3ITHUi42vFXCz8G6pfsWGePBcaZkBYridlAO61fBlt
S/hnLgbW7sNMQvRyprogRyYPbj2JBBt7tBOuZ/5K5H4YA6s3YXzPywI2e1oR
Pc3+fhlRqiHjOMnTvfao+W9qCXwgM6a8bEqnCl+WvciB47XX4aD8ziOdfKH4
2KJ+zAw7EHUMYzaFZXrBEzQ8luxAzB9dIseWodxsYRneVYu8BkcfIl1dCNsd
SEZTtr+av4Ln5Aq65q8g4U+vYLOxggJRy9mYUaVWUMOXzWQNjvG0b+LODHJV
Y5k+nJdZr4xNKqzODT6H2Tob0r6AxCp9Th3iaan+VpsaIlIOpJu+ydLpm/zs
Oic7qIYtKJFu4/kw21GjKYEA0jQuo3g+ZtsOYS4jK0j1IcWK1D3HZ1F05fcw
U/ayFAS9SEVDiLWX8rUaLhvQ6+zY+BHBeRzTpzfx7yOVTsQqX+d/j9f1Iul1
wl8ocfNMAWaiKUQ//il9/ynCUaKh/SORtytk/lsOabkl7/SeH/LrrtM3CAit
cK8Wgsn5cacaauT0q+j7++cx+vEv6Vvf33+fqmDfJ7r8arYQLXuTXcHQaYdI
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
8ChBTMFQpa27KCBmziMG8AjB0LNgHvWd1AbDG09bs38I1yZJYE/6lij87Xfi
TP04dh6221Ra+ZjiOyQYtchPSHlMTqoMq+ZibOc+1DdH+bWLBxxig4KtQxJ9
m4rQMywtFgFhVUojY9/bDFlKOmYjg2/xd/4K8cJvswgIISRvPhpc4QXsGw6H
H6jkWeXNPWZeHLW/w+KGanHChcKdsu9p+4yL8/l7L04yjDfY4uzxSCE+h5qP
7WKxzvlN0eRctF8c4Okr94wzi+/3rAvDZnvK4Wbk1QuT8HrJtk4jEw1gyhvX
u0RkEk0NB7gQnLcaux5n3qrqf6YtK7AQH0HaSaI+Tgih6Z2LTiLjbSWefntB
nsabTZZnvFE7X1T0/5S9iaeSiCS5bCMP0eB0ZmAnuSSVTGqo1Uo0EXf3HEbI
m9KrNWu/CnfhYfjs/s+4Wp+7/9Xa74FwtRPYu1NQq2YKBgRn0dwyiWu9M8w0
kgv1N/y/R/jsz56QfqixrydiNhYLnMDgkD7tuSpF99S5xxecaW4p6E36lM4X
KyxgTfwbNdv+avzJhb24nYTtd3jaUnhGq/H0xbcoXb6rj+F2HH8siwRrTqJu
zV44h5O2P/kUM3xiMPXJ+UAzzAcTC2vhteqwEzs/dlJ72+gzlz5HsPfcCHZW
TMKvp/l7/D/SMF7DoWHhgKQOB+QYaA5UmbZYSePc+BUSxY8brr5bezhGPiJI
oobynTDyJezKq4beF4hMVtFkvo/mJA97Cnsj48ILbIIvFuHypBtD3ht4mk/6
MQxl8EeyqO/ETtK9b6K7O/ypJvyNmsj9a4eFJzzfZJ00R8TIpCb4WzmYOdcp
jVdF60SFNH9vdOozk50FKoucr2XcqUw0d6o5M6QFaX2qUi1Tok17M1olx5NB
uEIT9PYjktFbzsHIBIYCbrhmYpxiPHzAV6AA3cTB+IyfF4lDH8KJx4PwzAQR
zxjH15gQjSST3KFZrhfNj7o7jeieYfE4YVXFedVv4XIkbSza3s+0aGsq1M7V
byI6eC+Vni2HZnF0j2DJ0TvMzJxDIj2HFPU2NeXHKpZ3pwtj2nezPalnlYQ4
TVwmMMk2brSPzpJ9DpLt9Pa52SV9BE3OAf0fFte9fF9HG/upCRTfKmDzQ4Nm
n0vpczN2Oob0grM5Lb6xOYdfzsPTzY0QIIvhYPVb+P7tAX0qs7uLqqquktdB
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
9b0g3n7K8wmauje2R6tqs0aRoxxLU77l6Cm5aHSJaxaatR4fpkj9TQyPo+n8
LcYRBe3Nr1SjX4cyzCPOtcCeqs1RPL1bjTnmGiUhls0jhBa7hErfB2/mwPfe
K1TUv2cLpj54E9Pdk4Z4DQ0ifHoHJl9+zCb8jgcN68pECC7pNdi/RSbTK/BT
rUt43fn0+Sam9rwJf2Ep+biy3LNb+D3Y+tm49qPZpFAm1Yy3kEvgs3dOcIdl
c1cXBrt+RGk/wzXHCe587CPTiElZ7szc2IFTTFKzvA07cLyO0q4cRTLZrh2U
a/Yd/PoVMq+S/kIuwS86LuEsA3tDrVEXaYSKkUE03aL6rmzGtZ7NPP0aOUZB
j9AMR7p2o4Dlvcg9FcWHoGeQPM02VHqikg95mLp1y4SQC7g+nNQoiwz3Z4Xy
81DWYWxDfhZSULum7QHerlrj+2x7cZYYx7KjKNtQLgEs8l033V6gz0aSFC80
saSwdNh4EjZZHgEX9poun2lVB3L58OcRRNSmVY6ozNSxvIVqNB2/TeDAuWLs
8RIYUyP4mzPFOMD+znjw4zOn0ETuZHfLKfxNi4fn3UN5f9zG/p7FgfPF2OGZ
kfs1efOYFv94JY1HehGFTTwtRZ6F8PqXY/ynzyFQXms8dWNhSuWrIAEzvSYM
+yptYU9hNnvEfH4FYbLkKm7vxrWRLhlrTmFstJQfM2jyCkcCmSAGvXaMeC7h
ov0SvMkIRijPxZ7zEEc06Lu3C2OTpI66jqLTH1RPxQ1S9Vd6juKaswnBlKxq
klV1Hg0eNlFxDI6wqkoxGIkrU5b16or9PHkBpcoSs6kYjKO02mKcJ3Ugigz3
4V6LiK3sT5rMY44Q07W43BZZnBjUlkEM0ZaJUAu3pxwfc5yR4KjOA6XHdBHN
g4ISfbrRiMv5BiwOAbkpurs9hnWGAs01K/8VA6gey9afdHd0hDGrLjPy90jk
B4dq8Cgh/zsN7BSVh1ggkN9OyP8OQ35sgF9/9Nx1MjFmOWMM5M/XMeQ/a1c8
zcL8c4kUv1kihegHwhvw13k4rILSax9/+U2E2+1IReUDSUOT+gHQjAhW4yuI
gCwXaA/yejPEIvYDO3PeSyJiwPRLwnBayAC7i/31H5TASNVzO8oMR0/dDdM6
1aJ/xvy8GZJ571gh91ngSG2Z1pK3ZYHjQu3dFY556C8xsWlnL0Y72k1N3IAn
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
LC6k1C1elggZLCr6zP8FU/94pA==\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "google", " ", "scholar", " ", "data", " ", "from", " ", 
    "first", " ", "five", " ", "search", " ", "pages", " ", "on", " ", 
    "ZrC"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dataRaw", "=", 
    RowBox[{"dataGet", "[", 
     RowBox[{"\"\<zirconium carbide\>\"", ",", "5"}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.6854422697509747`*^9, 3.685442270101282*^9}, {
  3.685442301332958*^9, 3.685442301601317*^9}, {3.6854423969838533`*^9, 
  3.685442398376897*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataParsed", "=", 
   RowBox[{"parseData2", "[", "dataRaw", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"WordCloud", "@", "dataParsed"}]}], "Input",
 CellChangeTimes->{3.685442288875482*^9}],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"Synthesis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.13986928104575164`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"carbon\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.15555555555555556`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {-0.5, 50.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Carbothermal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08496732026143791],
     FontColor->RGBColor[1, 0.75, 0]], {-5.5, -45.5}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"Microstructure\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07712418300653594],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {-0.5, -76.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"precursors\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08496732026143791],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-6.5, 96.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"composites\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07712418300653594],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-5.5, -105.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"crystals\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09281045751633987],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-8.5, 130.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"oxidation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08496732026143791],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-1.5, -137.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"sol\[Dash]gel\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09281045751633987],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {108.5, 157.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"kinetics\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09281045751633987],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-35.5, 163.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"powders\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08496732026143791],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {64.5, -163.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Carbon\[Hyphen]Containing\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05359477124183006],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {93.5, 187.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"single\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09281045751633987],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {139.5, 85.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"heterogeneous\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05359477124183006],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {-90.5, -159.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Formation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06928104575163399],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {131.5, 119.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ablation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07712418300653594],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-141.5, 120.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"effect\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09281045751633987],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {135.5, -101.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"oxyacetylene\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05359477124183006],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-79.5, -182.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"using\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08496732026143791],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {149.5, 32.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"solution-derived\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04575163398692811],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {68.5, -191.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nanocrystalline\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04575163398692811],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-86.5, 192.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"temperatures\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04575163398692811],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {136.5, -128.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Hot-pressing\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04575163398692811],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {-140.5, -125.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nucleation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05359477124183006],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {-152.5, 78.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nanosized\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05359477124183006],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-150.5, -100.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ultra-fine\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05359477124183006],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {-158.5, 40.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"inorganic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05359477124183006],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {159.5, -33.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Plasticity\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05359477124183006],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {157.5, -59.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"additions\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05359477124183006],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-159.5, -67.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"behavior\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05359477124183006],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-166.5, -29.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"method\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05359477124183006],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {-145.5, 147.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Platelet\[Hyphen]Reinforced\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030065359477124184`],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {-67.5, -205.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"reduction\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04575163398692811],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {-147.5, 168.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Scales\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05359477124183006],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {-172.5, 6.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Oxide\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05359477124183006],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {168.5, -1.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"hafnium\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04575163398692811],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {174.5, -148.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"flame\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05359477124183006],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {174.5, -170.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nitride\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05359477124183006],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {178.5, -192.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"properties\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03790849673202614],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-165.5, -201.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"creep\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05359477124183006],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-182.5, -177.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"relatively\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03790849673202614],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {187.5, 51.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"liquid\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05359477124183006],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {-3.5, 210.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"microporous\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030065359477124184`],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-136.5, 98.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"route\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05359477124183006],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {19.5, -211.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"mesoporous\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030065359477124184`],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {-146.5, 61.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Composite\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030065359477124184`],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {58.5, 207.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Deposition\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030065359477124184`],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {-188.5, -46.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Prepared\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030065359477124184`],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {-61.5, 211.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"iron\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05359477124183006],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-195.5, 96.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"doped\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03790849673202614],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {73.5, -209.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Reaction\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030065359477124184`],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {120.5, 205.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Ceramic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030065359477124184`],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {-118.5, 206.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Directed\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030065359477124184`],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {-197.5, -142.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"porosity\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030065359477124184`],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {198.5, 138.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"analysis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030065359477124184`],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {124.5, -209.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"via\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05359477124183006],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {121.5, 54.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"structure\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030065359477124184`],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {-184.5, 186.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"derived\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030065359477124184`],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {-194.5, -157.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"mechanism\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.022222222222222223`],
     FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {36.5, -26.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Boron\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030065359477124184`],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {151.5, -77.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"chemical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.022222222222222223`],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {156.5, -17.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"coatings\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.022222222222222223`],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {-154.5, 24.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"diboride\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.022222222222222223`],
     FontColor->RGBColor[
      0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {-155.5, -9.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"low\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03790849673202614],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {-200.5, 59.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"vapor\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.022222222222222223`],
     FontColor->RGBColor[
      0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {-34.5, -24.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"high\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.022222222222222223`],
     FontColor->RGBColor[
      0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {-133.5, -45.5},
     Center, Automatic]},
  DefaultBaseStyle->{
   "Graphics", FontFamily -> "Helvetica", FontWeight -> Plain, FontTracking -> 
    "Plain", FontSlant -> Plain, FontVariations -> {}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-225., 225.}, {-221., 224.}}]], "Output",
 CellChangeTimes->{{3.685442281015647*^9, 
  3.685442294230176*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
NXr0tFv7ZEcdnMZqSbC92WIx5sLmzQE+RCof5/D17Psc1tgG3NgIVt9jaToq
ZS/i+NkLiK+onE1U1n8BSRNUoydY2beQXNO/gpRs/hYVfYMVaQ1hQ6zsY3lA
1vVWfj62qDVTDS1GrigYOYmIGiVt4qwhG/y8a6Pb1baLCKmruiA2jWZsb4jT
pQhOincZJJpfKFFD+S5UspHhea+K+z0lcXhW/fyToI7xqy/IXthnOVZt+l1y
yI5VwqvPlfKri86J3x/5baFp6gdzc4k0PPMJLM8m4AvmFfnPpXJYS+T5Wr/6
nR+llB82MrOWg29pDR53ikU4+peSkKNy6s6zlEQ4kjeMzjrC7jUs06kFGimc
WJcGqYysQYpLsDAbg8eX+ZRU91xkDTODEfiYqufyWEuJBOhynYOksGMmYWiO
08xTmHq8dRfBuNbnxIoTPW+eNOlzORoazb8aYl6cLiPtGtfLmoRZvRT8/pSl
ieHPN651E3OS3VXwRM6sI8Sff8iEAxivUguDJ432lhCcD1uiVt+vnZ+C6Yfk
+G69/neqlVhD6rU02QwS4QS8Xc2mxe2TGHFEkViNMvqnxN507Ts8a5CbCt66
/55pj302AXd7J+fVxoXXwWsSjk1KmWlS+u8tUyyS4YDx93TKi/rnG9qxH0ta
4drzDdKaZmRzLqz+TGjOykeVSEx2IXLhW1J5lc5HEX5PtFnTb4ezlCnjmWz+
htkGCAX85/C88wbirOez35A9f0v2/OuOriwQtTtxGPGxNoQvfGuLMmDvvII4
/x0g1fRz8JO+J0NZrJss0+qtZkSvvrJFqrbnPbGuoUxBaFa9IPxxeWGPcwsV
GbIh3v22nEeqx8xLblJZJQSaryA5149Y8xvMPFDZPp7hkCbhn8q5Yrfq1tvM
qc7BkTCcZiqKD7n/9epX8S20Lyl6+eGZVcsb+nydiwQSdq4UjaMGH6yQoyhr
8vPvzuDId6dF1a306cC9eclUUzE+4gd1URVZrI56WW1eeYsc+cgRrwrikQtG
celHivSW4VxjRK7v5HDv5Jwo3o5D7zIOIYq75aUupCwjauOy3LjABb2l+DMN
Ub9/Zosi1/udOP2jaS44zZY20RQeSbes4+CLe2tw0VJWbo6N+Z9l2w25bLfZ
KgiGqcxU15Dhr+6n1NkAk6RCnTZvVitkGaXmsE7LXbdBbqbhOnPCYuIKdYky
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
HC1wju7+aIGm6SFwpTJiQ3kOeYFk4aRzaocz2SximjbDQDimDg7M4G0LNI2x
jTFkGb8DjdFIQSw01dDcB9NkFzSRi7Q0iS2l86IK8kWxdEKLmpO4UCJDKKhQ
s0lykklOUEZGe3NpD90Q0+EaIc0Vl5E5L+we9qRwx84rOUjGK0Oi4zLVaI0Z
JVKBpM6oMdWaK9eaTHdeeizld3qwQwOkQ9N8h0/YTzihRiDqokDUx/K0bmwi
P3KS3nafHJAGUKb5HWGW4j3yWwvunR9D8sY+aa669vXiGHohtGU1Vk7K1ODv
agg0j2l8k4P47rWsiiqYOTKAzR0RzSkzOwGxfS/TQpW8Js/ui/II8JJXqmHB
1wIz0nZ+GpLatr+M6CfeT0SNkuMhmJ9wS43Z2pOA+fwCzZng67giRkX/wjcm
mKP4MJw8HYBAKAPuHrdh5YeJAVTM8t44WMbmIOZPwI33bOz1by4iQRZoYkfv
Xh4S3+EBnz9DQ+il5rnWxKsTMOnPUS5w33DKBTaUhbQkvitD6rvXO2DQloQk
9vDGjmEj2aEg74oNTINJOhJJfxSucqm3e2+g1BHaIHXUGmoasH04Kj0swzd/
aOWU+VDx3/HpKxfi/Qs+fUVRH/HB5LmTL0svKSe4t1rxBrIW+VuYaeQci5z0
w7Uwu/tt8PxQ8BW7F+rxQmLf07Kce+suCJ3cB94XBLdXQWhIfNOHxlQECGav
jJU0SeY0tnM1f3UlzGx5G2a3PK38ui2NdNO+9p7UFHMn12r+39uQlllVyG4/
/K6g0HtRYoqvBiv/kERqedpENf89eyVugGDve8PEqeIlVM4BWWT5kDlcNHdB
51IW/bWBIxDR8hKqYFTTQAePyVQIXhXs1orufnUSfFxiodat5bcPHhOrnXRJ
Vvp8CEjTRInPJ/YfrbmpsoQFu3knpbWqMjqLtpe93/Y6PN9aB8+2HibW13+9
CAf23h0H5gUHPljCDvkh9m/nD9/RTpDKwdyVtzmLVENwCOVybky6/8EeLxf2
DyMrMdaZOdIrOZCVWwspLplKuf4iq3oV+JvVOXnzN3Zx7lpLJKT+mpg30SnC
lMI5X5j6WDEl7fAuIpRYVh1PJmOM52ieQQeLfLXo4Ksky+bke9Ngsc3JEiyJ
Ig+TzU44+YYdjuJ18r1JsE2gdHxbiiIOh2/AvD8Cre+N0nJH3x6Fy5fC4B4s
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
S+6+yGL9OGqItJF6vsd4NynxkUpdl4dY4VhDJOEZS6yh5Uool5+5eFGdQY8E
5TrxTfbzWuqscmpbdhcjw+Br2UbuS8Ewe34fhPjiiZylePc2ysamT/yQNCEO
XyRfZ6hswXU4QU++W8ZgKNbPZ4P0XAvMV/2QG43Y7MWD9Eh6fZaSsy3gvviM
QW4RVTcwYaNGpSxnvwhzHzFaWGcox6Iia8UnOQ/r/DPgQCHjpBf5Pz3UTNLp
SnWJs0UhE4X9r49QilrP6eqlmoBc6a8yuvoib3oxaIVUK0kS3AKJcyRxcSck
u9vJmbM89ZadMZmd7oT0MLH+JU2ZbXbWTUhJUyj5Z3JklJ78/u9kz+OoaQ9A
eJgwqkD/RbwXGGqByKwN0vG0CvybHVF3DwnpMuEALYDoWAv4u8vxng8/URoh
g4zYbVT1ljvoyFaLnP4FsX9R7B852IiVW0/V/cjwRfB2HISFtoPg6Xgfr5Pg
68U6Z4dp2b+4i7L/nqNromWCrKe8Xjo9B6OeFB1PBknFOelHjjJSyBf9wqRU
/sRprz/kI0mZuem11Amxcrq73Cz15H9fYabzeOgKK7KHfhJOmoELh9RIn33P
TfiiNIGR5ZS/q/182kOq+KpxkNn5/BiIVztqQZIT2biXdzKR8in+H6vs/GoH
uZejasLihnNX5uh1bTol3m4emZzTVnkapjMSs/+nbCcLg3fa4dkr52HrdZrM
oVnNNpPDdHbIwOkD2qj93LCQ9lfVOXm4wv0e9U/E2mWQUKfDYBkKgOU2XsNh
oiqxxVgHXtSornUtQF2Li05MeZ0TzrUswO3pBKnqr8TKZbIQDCTBS6+UiEMh
YYRgh5y8cbgdk5PHTkX7Ap08f0zf2IrfI2EtuTwLYfydvZgqxf7N0n/5YMkL
pRbg2HULTCdSMHi7Dp697aJPxmNhcMdSYk4Svfk+MRLEDs37REVMtvt7YN5w
5J2RQd7vtfjvGq3Mn/4ezJz+IZYjnyjWTytaEWrzRJcDfs5FShH9LIHXznkg
mEzAhxKHUzCaVMegUe1mhBdmDOnZvVOE0GkJsTUmMe3WqN0OE8klfjvkgogc
YrEu5eh1YTqjtHzsVmudnXS5oFDqV6Ow95wbSS2hsY5xuKMIRJ4kg4v75uUq
eLb1Iny/thWmky54s/Zj2Np+BX5cUwc3Iwmobq2Cjc3N8AqW+VZNMwzHZ2Dj
Jx9DtXMUXumyQ9jZDhu7Zug03rzVCh3Y7JXrSCitWMcnZ+D7+FtvD9Z/pRne
bD4P2287lRHqzDk+bz2V8+QkZyJpkn43pEJk25kd4rNdPB/4e1IP0cNE31uO
IO7hwCNJOCvowoIK5m/PiBXiukiJgKX6i4XgtddHHuDUdc6mts8hK1xDbxfn
PYU/FawRdPXuHPBUN5koQGrdodFHuS0lexVxesRvnDax/r02jQ5N6OIbEJ5p
hR/zNXU6x+DGOHLgHgZ89tsEnEK6+f2EC4YnbsCzt7BsbAJeEf9yuvjxdTun
i2bo8AzBxtYhVoe9lf42PjMBvW4nXLl9Bb7f3E8TggRxkEN+RWBX+XG2SVn1
n7UFysuNPHHwrgXyf1+unOmRPXE4zKd2jeAX781Aq8ULdXUz8NLrUj35+V41
0+IdPF3n9FUYoY922WLgDSdRaISg9co0QbWsGRnGdMaUVu7cDa0kKQUaaEUO
KBaUtCKbfdeOMskF5ecojxEDenbvkiyFLPv32ydos9P2YbhpU2Tgn2imZOWc
GYIrMzPQMXgFWQf+lrAj6dg56UywOlrH6DNX2uug1TcGG6/00SX125vh+1jf
YM95rLcfemfGoMMdlu961E4f/pJc5dchxrfO/Re5emlIkW3LHjvJzvGQROpk
KP9QnPtLNSWQcLoNy/7SOS9R99SbmVLQ+BGjDEY1I8Y1TobJ+okl3ntFbkMp
EAkEGY8/lx3kkMb9JJsSuF03bhjR3pagervyWjqi1nPjZiPKk0YQhlOtuKzI
Wb5/uR2ms+z7xisX4ce1zdCLPXYit9l4uQ62473fT7ihtQul0icX4YprCn6P
LDjs6oftKHm2Yh3funwDyDaCmz0oiS5fhK2tdfDmIIqcGQvqkyihapGD2QNS
nSSnnp/POW4bl9A7PEwt3f8hy5nbZILhLC85fpgTPs3VgnFmkmLiidIUM8h+
feEy8wtyzfD2aFJfMzKoRah7737SwTozOjAjy5+f9uaQZQmlA4Mhw5rmJPAf
+Vyk0+pdsuQvnU6pve+JCdhOuAXWhJrnn/LqdQeFOGJ/5vzrEJhgeWI/EvOR
sYO76icwW/UMOMhFdsKwjGhuR5E5c4KvcQe4Lr8O843kwv83llPnRKHpcjGj
hXGLB3PMVm1uYzGUCajeX8GrLUgQXyASzhNO733G6zLrFKYsXjx6YVrOtoR6
wrmwlHbwXVEQtcYrRGdHdr39+sSfi9s0AjkMkbEG8HefXEMMfKyQmfonwd/f
QnOEiJvhZfLIGkhnssR0SKbJizRoLYIODJN8aM6gD+fhJSZMwiJK9MFAHG7f
XoCjx8eL+EDLbZlPOadrl5zTiE17TtWpnamgP2eY0M2igWQcRqwTUFHdDW8c
bS2EX5WSc4d+e7gdjtQOwY0xH0QyINyj8xN2OH22HbbuqsdvT79yCYtu3tcM
b5zshtrOGXCE0sLZ5hibgNPVFjhd24dXP+ryNuibCFD6k2+aR5Q4sMqKyg74
1b7GNbAZ6y3Gz0b4Fe2AFW7xR4SXPuL3wY1r/XDgaDOWu1TEO/E0PvLbo51Q
cQ01O0/yP5it17vGtcx4vMLckpMjTp8h5vPEsBd1jymiTJUIlQTJQUi9e9aE
lllO/Tlm6BmXE7nPuUOmy/kzvkAQ8kFtZSudlfX0kyxTPRxosoNXy5BLeBxw
oPSSodzWoxa45dC3ixO+k4SWs41ilnl9jdDHKU2UG29tJ7/SEmtEudIhOXQZ
Bkh64A1DuWL8bJfv1PSOjcIbu/S+N8PpTjd1C3xB6/vxw6xPD/Jym0s7oGWM
ZUoI38tIU2t+nw5bZZ90R3rt0UuyRTrSo1YRIlArvZSCEs4DmbTMhl2EfqR1
TKjlNWIfawHjVTMGZpvfAyVN5DMGg+fPQEnyCCcsEp6aAd+UEwKusHTjpZMQ
D4QhGUnKJNVsxAue4Slw21AJCiTlET6BAIQ9AfLy8YJ/qzUcnZ0B96CNhpOw
uFyHeesQbObr9ZBGa9WD1K0u/TiOPotc14f4ev2q0gbC+T5Y31yikc9gDqmO
1Dfnk8W+/nxSjc3Br3LLYX0juHbjrR0Fn5Mk1Q8OLkPEcc3jnd2yjc/zcqSL
oo11si8mJIp9CeSRaBIqSnNIVJVbmUTz5YCYjqDNJciHe52KqJm+9yMntA6F
wZsEUY2Z9DPXJJmHSe5rW5X4uisqlfmEaTf07dgNdX+/G6sin+ugbkc1DJ0q
J9/gD5+wVxwmh1vp95aPbSIrO+vqhaa/p4/idQCcEUMx4QvwNVfzIqKFYmjZ
3w7OG/XiPjQcG5FL77n4oWi5QBgiyeEmUS3vDfv+h49tBTJxAdXtoW2kvmPg
UgfHZj0j0PU8a76Qf5Lm+VvoZDzUcUtR3Bc4nfy2Xh4rI43KyFh/HmU+vc8C
Dlyj48h4deTkMvmlqDWfyc/Bb/OQ0woV9Z357WaMlD7YpATJF0W5o4ppr11l
X3TkVJsgR27aXA45udqszpwXofX0qHJKTEHd7RDMhzMFYof46tHCfhOK/AoK
NL8/Ctc8iwUimmEmgzhSPifJJAmjr+2WNNu0oxyu73i7UJD0KSNp4ne5f8H9
cZl8rO75SvAkDOWEmZWd7VbFflYGXYcr4Q8/2y2oltwa6PaKUdLVcX98LKe1
tXrNeT0qlE8LsJQRsPClHIEWiee34frhi9D12gEOWmz/tW5pJwtwB6wKDWuF
KoGqJGqWhntH+uRuWCnbAbnvAf5siVRDURc+2g6/LW0mouxzsspLFACDmmqw
OjAV62DiV70sv1nd18SRNU/MoLiS5VRXicbcAW+d7MDuNq4TSmClXc5SySq7
+pljLUPUXvnoey6hhEvHE8SicEEYuV1hmY+3km4l8Ht0SJ7iVyC3rBgwtaTD
YUedIg0hKL3KIW8OR1IwDAPbdnMxMCKg5vrkQ4khEwAITpyPm0ITnCCWBps4
HKulrkCm011fKXHRN6jG/ulwSUg2H5czxw7wPpSDK6BOoor2NsmhDtliMjAT
c0i1q5iT0hvVVhicj5L4oxxuxO+Bhup2QzmKsaS+jIVg1ywTacEctkCfwdJh
tmjA44GW+m6Cq3XygXpocLA60xm5I+leRCFjJlgx2ioNg27wxtIcalnyrmQY
vDUEv911SUjgN1rVBhT56sp5m2xWDPqtWhsxeQ2DJnuqxgfRlNqnJLrOw4pX
OYw/ArIvKGS/VJd73MZamLdMKyjtdejm96qQTezo22G9zmJwdml1vm4DS1hJ
5ts1emxkFFrnF9WegHAI9uZ7RHORHbFxOXQAZgLyWCIC+L7n7xOyixDZXP38
WSVBtn682wBvpW8w/Lkla10NnpkP2IjnmORa3TcCAg3u+otwfW81TE4lpWi9
UdkoSatQs+ZappMGko5M2yTei7iE2lqtn5MOgvwExW8+OyHz99T5d3G4Ud+u
iTjSXCc47pLizYAr6jvdp5IF1BtEktBe2WxkL5rVqb9jseFoDhsi0+FI8/VQ
9TWcrM8p1wn2uxzHfUHucpbjAzB6ZdwAhcbJhJYIn4VRi9MQRmTpQ8ZWzcFb
pP12AW3QYIy+JA+mbzs5sEsosCf0vPuAX7VWQnFd3hVEjTwLiWQKJm679LCo
7i3lWVsSvwkb/OHvJc0LRqRBiFFknqK8WvCi7erphwapKR+Dnk9uwGT3CPhc
Xpg8fECgl40rMQPd28qgZcexEvjDjmM4tpbnj4FtlskkrclPJagTU3zQaM3u
bQV7Wy+WtTV34+fkjX6w4+WajSkBE5qBrTlStWLMJLXcb5flCiWYWqW/j/1R
ElXU3gH2nMP/7Jo/RZYrVdT+adAtuIouHxUaCWqNaPxtU/7J3bpcFuWqJ5Re
pQ4WCMGRXcZyB27lKpD/CtBNUosCOSH5QgqqHYfGtZSfYiYkPWpXkBLMa82w
zQX5SMEDQuifU0mzou1pJaBx6oSJvbQu/dkhVnqBbjQJxOKYyWeRQiganvjb
Ov5jTy+7fVcyVzqCiDzLgSbTJ0T1DcdGQP9DUpEkTIw3MZeC1HVSKuQEf3pM
S/xPugkUFKyOjkrhKsisr7Y5pw4jOX4a+Ont5r28m/UtR4dQQl2sTl91vq7x
q9o5ORdiHInpIdNxBHLqu2/wszkldPY6pdWqZ0+9pOmhtzX3QHByIS9ycG7Y
wDVJ9ZoObDNmbsnfSOTAAdfaZqRkZP2ZEUk9ctjO204Ju2IRrahxweF3jX38
LOFXJMvVbWsiex5Y5x6kO4FJPMLZ3QujF1uh5/CHUoZKJOID4SlydqsPP0vw
0w38nLS7EZRNh+9ogtINXT/TNWClxjfsvwGuQcIeZ7rvYM+dg3eg+2fcvaZU
ep3pKyquhxZP1khNmkwVSP1VvaRiEZBQiDlpy0OqKWLuE1INfZ/PinWh5cab
crkM6gOaAFRzoZxmqj7lalbZ4rkBD+OcfXqkrjMgNRMIQ92VObjQgldXiCiq
Kgc2Aa3kNsmVbvOCV2sekknoanPAa++OFgjV8qVDE3D0igcmwosa0mNw7boH
WrvwsoRoHFoahuGobLrOwvz6EU8ILtRMw453kYp+vpdUvuM9O5y7HoBgRqgn
D+GjMWi8MgOvoUx+Ca8d2PT+c3NgYTYWeCeD0HXbD11DIfLcZ4Dbj6fycYt2
L2qnyiJFcbaDtTITkZnLk3vfFtCV+yA8n+TWum5JjJIwiVMd+gsJ4fwto4Ec
3duNcFZBFq9EaFebV1Klf0JGHs3kgiFSfNiIUC3KDQTpJIgiEbqvT9YhKFu3
i80o9r4g9LCMXitEmYxRs7Pl0qY9JnNx1CZls4hzOTo78hCvu6xW6+deGqHG
cj/hSxidcMHzr4zAb47OgTvDX7GyPE1/YTmaBuKEirucMLqf+ylfa0dDLEAH
jOW4n/RzNKbQ/XE7TPaSxD6ho6EU2FEPHk8MsokY+AZvyBgE6oF8sh6EuMcJ
w5ziG/Zi/bNeKphMqJu3t576SycHnfTZodfe5lSv/KppWzsvuxZaDt8AXyAG
SdcU9GzbrZeVCxuw9uUt2FudSvl+kC+H4xaN0pFcHH5d0oMKAgRmZpPMvFhh
ze8Hjf9WozUlNeL5UkMzE9VUWPKmQh+HfOuyGV84qbBwv2n8f+HlErEMRPBK
JBcLvs0pO+MJQnX1NKX93U3RXLpHG6RJBbKF9uI6xSJ3TdxoMNAbM1vwYRYH
mCHxb+ZVLFAxu3p2uvVgE6pT4pcPwR3JHVgYev5ej1KXQDfaQcJL2XSM0/dg
01puxzQduwP6n/tiOW8CTahur+G3wfpmaePoWoU4vsFM+yDaQrU1JyPoj0CX
utn/0HL1qawnSZeDtSapKagdcQ+Btn2YypkcOuoD72dEl3/FZydhCFtPkAQ1
dfAvMkWfJw5uT5LEafTDl32eBLj9wle3CNFQRiZXkS1m0ViWpsI+aF6VcMZY
a8eR+u1a1qsWTQvA6Klq6D7WCoEEJ/+/hHBvO3Tvr4bhXm8++eMjto8vwh+e
V+yy+1Q7BBDc6dk70LO/EkYHvRAebIdrz78NDSgWxMrGp0ZgYP+H0PL8AWgi
17ZjKBq6IRARa/4ndE6d9U0kAi4Vlj4UH+5ABtKuO9B37CKMcjpPz/bTftpo
e93Q9VoZrbfhZweg65M7hN+IGETchkX5z03Pl8H1w03EMWemD0s9fCwfMXpy
U7GwXEs7oPqWAxz+OAl1rTbT4tOARidy4TEXRG6/1mEKhvx8LjNw5ddHqKqd
e9bNTI/7DZovylGnYd43BiPuOzAemFOUj5zVG54DbzwiX5CWmxdyW3PIkX16
hPnXTmT4vYdQKATgnV0j9D67RqHWypZbKw/k3KJDu0bWkBs4gOdLp+EMyjHy
8wlrCuVcAHbzKs5Y41C9D/Wr+pBs2bHAVK7qAJ+lB5ZteawJgbpvTr2bqxDG
6idY7YNJgV2xv93MvlCWwEzBN3LvfeLkCcQrr71I1Bc6DTf86OdmngBxpLoP
aq9NQN+EDwIxlpVub2ov+iOSemJiyGQYyspeidQFCYusONPMV63d+03q0rxK
34E3634E/4TXm6OTMjsDC55vIbd/CTLRIj0G77X8CB/FwsjX/qnuObg0Y4HK
P7DH/6nub+F2EuR2bZtTA4ZNA8ZfokUwR2mrYkzsaUzCGUqaE3AdLeGgJwwV
hxmJ9vrBUH6ydYqBBKk+6I9Bw1mGit+c9dAUu+iYk5W9FUYLOsOQURvibf8p
DFSPc/KfAnUQwPLtj9VjG7vmRAofZQTvCRgdXVBb8JeFiOsUM1dI7iGDyDqZ
e0hiSgP1/UQeyRSQplM2Ud1KqBHvghvU0oZEetGvTnZKwXG/HUzLQSQyoTK1
TN3YwFzhhphpJgcWK4z7s4FFMXjtpZym8Wooox4ksYVNYeM5jo00tF//0RoK
i0L49fW9cPD6c/ybuFcBjDFoqbKxGLS2uaHxOl5dQc3BtDYPHwmHm3N6IUj+
DQ2f11Y7oRcr1suP1RP6tkG3fA17Fip2UQzQb6zsODAVQ+KDFc3E4B1qqU/B
NiJpeGqO1r6QY3rzufAQBv/uo6wrvaE8eHArg0BBvo4EVTRbcy8NWgp4ZKdu
yIwjmsGgWSj47PLwaIQbbA5ks+QYmt9yLfzL/6qhYCIh/shQ0HcuX2IsvoDR
+INwyaP3PRcOEahsYdA5ODkj03TS8TtwsIlDquk03SLExvadPHqPjs1JFeXV
0nG8bHhNwDtH7dCGxoRePjPvpbRKvm/bNwHvVU7Db/D/rxro3QbWWD69B60O
+lzbfBKaCb8/TI9TWbH9XILvrhzFsjPgRKXtVXzunWviZH5JetmIG5zdd8A1
Febn+qyF5OwIDJ2qh75TTeB0JSEbcJK4BLhnwwVmpC2WSSMdWY5wIZI/duBo
c8GX7pa0Sz+NInT3pD34r4K0kZNHr8GLdYx0D3ZRlg0vdnep/K9cyg5AJafg
g7YZoUIl3KcZUbecJvFCNqjvShqt5ikv4vtvzs5BW+cCNFzzQHPTtKTjPJ6P
us1Anxdq653w3kmmi69M04vQdnSE0iJJfHLfmqY03O1fuX0DTWeiVA5sqw7S
OhsINvbRnXRs1PJMR8iGIBCcggW8Eln40TJUe9wq1aeCr3MEkBe4eD0+GLHO
QHunFSpqLXDgZDv8al89ruZdUrHmnlmJivtyqHi+r9ukPpJHanw37lKCRrh7
7os6X3qvFP15sA//htHiHy5BBKn7/6PU/RsYkSca5pI0wK3uv2V8fS280lUG
V2xX4bZ7Eg3gqwwcSNYROTRF19uOuog3X9LKbyq9MlnMfWuG6ejTRt2EHBrx
G4oJsZU4Q3WTbZyuE9OcrnN1E/6c1FNC7Pvu1uiK7et0HRx0KANb4gP5v2eR
0/V6wRogBJ1NBVAxYGE989TAucs4zx9eLkDt58PLj+EkaeclJy1Qc7kAzt5q
5jemoPFKAXzYdpwIlO/zZdS38siITq2K6Kg9d1lIxOIwP++D8TE7HCnVMqZX
DYdmmVm9nPezwtT7aebVVJnaMqN7LD9AccDMK08cOWfv1ZGjvKRLw+FPdNjw
Pw+c4Nz6bdsMEO59hn9/zy4iEflwgPQkVF775xKhwDPypw0zbvFdaWKKa3d9
GJyc5J7fNQ7vHLZx09DNTFIDa4/DCf7cO2enYfc+/v9rMer/2SbrtUEDmqIV
5P/Ihqe52dvgENDJMrb8yjSQ7Lbl2lcQwGdKR6hLVp4LGgrQNrfVBg0Q+BMF
gdsIgbQVapG+P7yyHcaDPkhE+6EFf/vw8kZwcN4Sde4n6MDrVRZCDdbw70/C
VBL+jVi7TApcPpZRLKIn+XkUZpHYtZCYd0B10xDUtlrZRf5/i+01VgdDh+D0
vrszd80iATIB0AQzb6w2kmWCGdOxnsyP1pJz6N7KLbfLsrqIgYatpTHzJcOG
VEr6vmpu9v4z3OI63LgUKdXcEWrATIFIPI9E52DcZYF22yU4P1AGb7b8rdT1
I0It+iu676e51QtO4rpBVb3iFutncNoPFfj9vbMz0IDiVPhc81xFyBavNxGV
yI6qvhPaUAeiUigUhdqz41TdOVG/AJP+LEwOemHAkQL3mAfJxU/UF7YKX6DN
1TZ5wMkXfKnmFXQyMNDphubBmGYZZcFK7vVFC5YSH4idhKuM4qDTHZevw+PQ
6GAvi4PxW49xqDwCozjvgfGtXNQUQtusSl79C95yZHIUnvz9KFk7hSH8lp+z
1AjtfiOd9lXW59ML0pXAmlCOI9MTcLzSAserxdWNi+UT5Dmv+WdXG2NQyQkq
cXA5mOmsX8LMYzNN/Mg3W81SuBQcxTjSDmte/8huBTHlZjCTok7LA5YiNo8N
fCVvc8Ttnue4xVChRFb4KtfW/hk6qaKcL5oi7gpmo/RYCqQDN3xFWh9Y19d4
NzTYFIgXlmemnRQeVqr8MNq9PpEUhzRoihJnGubk7C6jLH06DdIXlO4nyhGc
o8oSaj74/9o7NdCGGlCj3QrWG0QzqoQe/PfDrmb10qsMeIJxCKSycprT8SRK
hyjeAwPOAsEouIIp6U2IzNjgyfcmcMjktyQ9C07UEYnEsY649kZZJnU8WK8n
rtqCVAoCkZRhmfX2BQn3Vefn0up5OGrp8zPlNmucXYzHfq3dVMvJzV3SvUar
hZhKZTd5+ZlJDq8eaVwud3hr9UweJAZNyr11TW24EZC9ZbKv6MCtQF59pqxC
YwHqmAdHjkN7rZ47jOQyCW9z5+3bo5N83h+m6yM8U68MkQPj8iGW8FTIYMYZ
+xjatGmUbJNwpZtDtukDIkYKlsWZPwwNKFuodQQpOENUscqgwJm1ljiL6L64
ZXHmYurU7WCaDQC1zyzDWe2wFbLBSvpzjy8EU7cegQ+vbqW/taC4CIw/i79t
pV7rQr4U1hYL/LSFTSUDDz/bIuWF539vgR5ESzrohpd+34UT9uTvyWt7dnSw
8mNdg/iN3SsdwKdSISg9Lso9AE9W2ynxRmYmyB34O7yepFcvXHVR6QxXL1tY
8XX4OQjWOGv6p1ikn2saJKXrp7/vYsWK4PUuJrkCM3ZSo+jUk/yJvE7loEzf
4KFnmIh8VEFN+b5ZsmHEk1dfwgyNJnrWuJnpv0rUEgF1y59dEbVP7+qWGfUS
FZ6JZff3FGrl8gQo2+luGEfaMWoyf2q8ZvkLot03WpXOIgS8rjAI1G7VUOud
KZXIQwFYIMLW9lGuf9btxTFHuAfun0mokf9RVAt77c1hmaTEs95JRYsQ9Keo
y1nI/WgoCcEk3QQjvTaZZAp8oYw2DabIhGgznCXi7nabQObC+KtcxwuBa/hZ
KiCJoRadfVUqdtT9JVEr3qb6X6Afkfl3jRoyf6+Q+VOKzAycP9UFP23kk4oo
RZjAlYUIvIX/nplhmnFgZJgqhd1Y35PHJ4CScCoIr2OZ1weiEp3HbYQoMnCt
EcuVOxBfNgqqHrrZIQNXqhG51U6tfVoRnHkP+9DGgBF3zdC6rvqy0N/YDU9W
OqiYs3bc5gCNmvYtAOogZLRHRGauitxbYJ4vntrQFYLj+3Kk23R+nrrZTpHf
NqkdJWpDF+rJJvahkL5m+FS71Ruh2hqQNJGLT1mu1AL2ZM44Mj44sCsX791y
vOqYY5Ntp4eHZP+UwuyR9qEot7lSSWkzfMoN6Bo+lYakzvkq4vjUMizB67wE
73WXwomBa9QfKFMF4nfgDN5/r6caST4Ot4dPw4m+S4T8DXsIbo+eRpvwObz3
YtM/471XrpehcKD9FS8KYmD7ihFs+Dc9sJGi5mzbVmi88SRDVNtx1FR90EG8
bE1lzGCLXqbA/PDydj5dNuq1wHp4d/90FWiLwxGk3J9etsO1AQdcHXDCla4Z
6PdlIJ1KwuyMGyoa7zAZV26H9xEVb92Jih221jYE1WWPsWoCGPp9FK4TcFa7
WPE/l7cDOtbiXorvq/K01gzFXqktaeg96hnymfyezRD1V76rUMOGwlo3DPL3
3ctz2T0OeCuPRtXmToVdpekWSZqayzuGBGI+qMjZjKnvVjPDGjtzYT1sPtwJ
LYNz4PCEYJ6ECCbouYbsj2FOHvZC5FItx6U+FoE3eSrFtfzt4On50fy5OdoP
jphxLJH5GZO5UTHmpX2xJSivL4l79Np61or1Z2UXYh44Xbp01f+kw6NQhwdH
2BdhYfYMQuNZqL22FTrHO/kMo2o4egYGXcJW8cEofr+NJhlzIqbBMYm/O6cM
6GjxaySbi44kHEdafLJyGM602fAapXKg1JaAa5e76f9fujgKV0b8EECTq+I4
fr8VYb38axhrI+Qr0HEHXAId1J9hg+62Xkq6wnaJOybofQGPfiJNUn5UWLvg
0oKKIRB4HMmFh+xy1qRr+jb/rNjhwY8NKIFfnbRAO9KefZ7QXgjGx2ag4myr
IDc9B39pNYhsV2qnx1uOOALgDcUhEkuC1x+AkcEJOK2qO7DCMR/ixLzjQptj
1L9edBlbOd06AX1jbgTJHNzotMKRo40KG2r3pZBFuoVXzFH3RmU/3BjzwLwf
LXLsrNcTgMG+UVKVxJm+kdqsp+t4jVsPd8Dpeiu0dE5AyzUrHD/ZqrCa59cl
Uyj0uueIXvf/Lk3v7PVu/xn5bC+loDFc3cm+O3R1LzmSEPc58f/d0EVW/SIh
1BlKwHHEwJNUaUpQAt7RxzhzTwujyMlbRHEZhknqoWdK00tdIak0vUXXKAWX
iHJ0yg7hBTtt54qLPJBk9wnTpeYUUdac4Ipg+XK8f9FJ+xBxMKXpPJpE5pSa
Muub9q7qKFRzjelL2mwK+1hStKYZyCwXzXO83CFRbzTZoYFHatZyujttpLs1
ksalI5EwuC9IelNhU6VzqSMyRI82n7XlHQli7suul/aKaOO0NfdtNYyGzjTI
NEQTGuogqkFPJ6ehB7my2iWvt1pG6dpRE/biDGd8ETheLkzd9fDWLcYcPbZJ
o5m7wOjgfHW3NIv/jpvFcQcxYHvhpVOi/AB0+Rj3snYNSrP4vTvQT9pEBvcS
KUb4LNENIl54/T1u/35OmsXWll5Ux/2Sgp7ndrFJzzRdGinoqHEu6W4Fv5E/
pOeVLfnFZcqZrdev6gmPCBDZuxQF6eb4kdYhKso/r5MPP3BGD1008CNtvygJ
1SHVjeW6Q0z5CJqym7U29E33D0nyQWHossAt5x0IZuFLouJMGKIzVvAMdIKb
XFYLGkwO8rZq/hIRtVU97oZomhH+nwpAZjLIElTELh5Xb2OJYx1xrlgpRTkD
kTh7p45QtuL4PRI3bqKNx1N5bkXqzmRvqJG7WFXbCA+U3ciRNEiottS9NNyq
pzmkMn9089E+GOfKkCwX8kDFSbYiclZP9sFIiPVTAH8wL5BcpFx1yQCcPnyp
xJxGpAuDODJDc0T1UkfM7uuEPu4m0UPMg63dhp4Tt0bLRNzQ8/zQdpF0Q6SJ
+rvvkmhm88nRnP00hZANWmHyxBbo+PnXkGuRz0KwvH8EPG7WzP/GaOJZQROe
OaI4cJWWz9PhbrgxQV38KkFwfg6qqzsolaqDlBvhQO0ojHiSnMmVgKOzm521
XdpMr6276lHx9ijyScPgNXoaWoE4Z/u41WRe9RwtfORWP0mLLFgn57cdqm/R
VDi+JwJZAq54Q21OD3eRo57ZGd2ih+PXOvN6eOCaT+/heJ8V3iqtl81tJZo+
197lfjrrCTK7dIbX83keGVDax3fYPP8L/ecBeia6HZW0hqZ+OF7ZDQfOduLV
AW/hv8dr+6Glbw7mQ+kvS3CkwTvvgb6+CWhoHVpDgso4JxX1JLQ8Cjeo2RGn
yPgzQT2ZJG2h5dooNODVcssO9lBWn1qpu+v5eXIDo8cDt26NQnV9H947XdtH
aLvJStVMhz8phRLde+Jw02wochj7ETqSTnro44FKC1SjpjfoCNG+idy/RCiK
KqoDnyHJ5tg7vEdUr74JD3hjWfVmzagFLHxS19DPYvx8FHrf3wtj54/A0Ptb
4Aad6g7++TjMudP6hH+dz+Bi1AFRO0pw1xQ5X1qcqJ8NOSCG5kVsdgpS0fQD
nA0tRpE1jvdDGK+Yy03ftFCs14T3I/hYMhSXp+jSNzm5CQOVc5iN+pAOQ5CV
G+rZG+Fj4xYIj1ggdMeCcxEv+BsxXpOYor42z3OaDbf8QhAbvboOnYVoQvNU
xcHT8rI2bTg1e6rkW10eZVMjU+KwR+59a8H28kZyUICoJTNehrfWwtQlYbU9
BIme/fSeuh4B55XjMLOL/H8zRKSbKwT+qo1FpBBxiZZXkmMM5E/uA7I1ienQ
le2seCF+/hgWRtwGcoxdf1W0ivfIJ/bswzMQ0no0XtVJqwqU/5iXKYaJGkvu
AJXHfbwSpnidhbzO6Zpm9WrTnOfMZua/3dXSFYP7xKPa0m0gB93KI3ZdZzcY
fnNHJRnnr9WPISTWqlj1qIY5oLKzZ/gMkHE9BjMfboVxOXNF4nE6W/4PH2G3
H4KJsu0wW/aYWt6yGv4GMtWqWLPwpR+LFsb3bYW5qu0wIVsgL5dkY1901aie
vPJjmC3fDvZXxHwX0Xvz/Q6akIZrIZZ2ts1q2mp2ttIwMGdNGcwdE8tdAhPl
Ip/NZJ4K9Xm665VLOfvB1dvOLquN8gR5OHKwHbo0QI5Yw8utnETZF/JWLjMi
6Hkj2VHHx9IJ0xJxbDIWXWIivgDO6/J9zJDs2SPLsRXOmUR/G1knWmamRSEb
Mg6YP8Db2HecYiAzwvpme+VVbUthGiJt21nTXwTXiBDWFrC/bFyr/PVDtlTG
m9j1KsSS8myNaNt2yU8C/rxHP83yPUE/16MiZAfXjSoYR7kxcnYvWE/shCG8
Rs6fBdekgy7nX/PuZJBvx93I5vGKB8MaQ7DD0LavCZ5qQUEtmnmIP0rmJzzW
DpO12ExlKV5HYLyhCuYG+iEeTX9jFUSxNo8oIpc20u8TVZ0FIn0pfWePgSBE
GduuMvWCqodoC/O72KS7Rnx5iyKaImucEsGOdVTyziHTcNZc5qTAyfKV7eqF
Xl+mS2qsfZWkwNBOn5sfD8lWtc7ar/TfTzL4v0U5CMPceaYPrxWycdsWmBnT
5Q0iOtEPvRqix8bCBYXL/CY5AdY/uUf9ZjnfL/0cUesFuL3zUamsfA0pgKgs
tysv4KTGyXNruKLeXWkBw1/CSpoUlIctypGJWUmMXYDebV8zavpnqyDKTba/
+FSkR+ZaRlDk6hlJj5BnEae7xWSIqj5m4iN6ZaNEu/vmZfBfr1kDvus12EUf
fg30NEOgv5+pK/5mIrg47W2EuSuV4O/vhNiCA/zlj90T4dk5ew2L106shVDN
j7VRGx7Jl/o1FkUl5D171l6ID5BrhOwOKHhslRT5A40i7e+ydXuAK7lDN6TB
j0tvgW6pyZWgbNHSuNXvgjS0n9XZUNjE2E5FlEhdBUpZ9IH9/cc1QKCOvWOD
QZyp8sWUM3QbRJ1PHWHIlE5ayzpJ5r8AH1sNroyvRILZ8eOrIkG7CQlOXeo3
aNr62qPGgr1iaiHRHUKcRmI9ZVQ5KuHi9N7oiRGLICitz0sSlDZORVCRXnD/
zXdhnl+BAf9dE1S8d6dcBWE1dR0qBceABXxjFnC0nSBsiLOgYqpqukTsLkEt
rmWJzbIysY3nEJu+N0/QujTadmyC24e2QPc21d0bgsC2PZpPgAlpFEoCFFMa
vfFyztCRw+78BYy31cPcjQswcmJLkWy2VLwpmidHmdDlYxAISbpM3Ny+Al2u
y6OZMGcstgOVRI6yYl+GjH+KWqPsxXBGkkrfERrgY7CArC7U3wZBcqGxGGwT
VhDV7sQWcciEIDlrxaKX0fA7DnPlmyXXvCtqjgrG/gj4F9KKmM24I50bJX3U
5GgytBc890jMbAcKkao+GNuhVpvIy0mrW7y/O9xdarCEu8/359PpfSfj1NiR
HDLDJrpthhbiMy1we9vXipYU6FoPio0dzFBZLwFyu8EiX+YuPQs+Cwzs0HtQ
CL0tsgfGdxjpFE1XSFB02CD2VkfRqX6ldwb9mp7pgzlOcs47+Xrm4mylpGqJ
qXWQvPmqVD+TgiIP8NqFSPgS+I89kkPM/boYNydmcMPcLjFmpTiTJIvZl4WS
qZuZ2twU6nOzOoLWjrtZmqDz5SeuGlceSdfiBpq7cegCW/lPSc3rzKhZ0CnM
vPs1QWojA+pRqSAobbdgafVU60GRoYPBll+I2rWn1AsPMja4rU1Hx7a9JKHb
wJE/b1gjck1fugwxvw9i/cclo5vIJ2I2hK+a8L4pmJFa5XYIL4SoW89ftVER
ab4ZSmdrQRjJeM9zxwYZVHQj1/dwY/zPiVMohxzXwviB/RD1h6hSHBuRTieY
Q6Asoq1J7k0IhfiOFVKhuEnbOIyb3PBeD7MtFuJqhGzICi6tS8xnQB+VTpEl
ZmtVVJ3xwZF99bB1XyNWRz7JK4EaZcD0B7KOfoNQHp+Ma1Sdw8JR8iY+W6o2
qsQdO48A34wjT7OI3tipOmTQMNaZaRi85TAZiKyWuOiY3iTNv2jby1q1G8AT
zdEuWGR3nhEGVUSZ4kkIjgXIBOOZEPRbQnnGBKdLobVmxs+UcFoYN3F6SREf
7SekzlvCz1375Rlj5C89UsYVX+JQ2wwRorRUPVLAfLGoLpd3gjLLVfPknufY
I+zRInDenJK3cXAlJuNiC0NJbQ2hMxJjGJBnfhTsJZ9rIJtJE1sro3YDCOMi
5bbC5PsbDLpd19nOfFq576SkPTqgDDN1MEqOO2B1pOSDEY2Udp6QFLpWn4is
ev2EUaaT8GAcglf2gLOmBpKhKfDVbIepXY/BxCuPwMS+7RB0xZXCggzG+eGr
4O6fKpAbcTIOWKh6FZxVleQN0EKQL/ot4Dr2YxjHasZpVZth/nq/iVOcEpl8
EXrGDYErr7Ie4DV1YCs+ZqGH7rE5fgDSs50w/+FmWWZi30ZwXqqBBKep1EgN
9nKjYFtTx15FBdhBBxpqKYO5mkpyVp9skXgib5aBfRfqBryz9mN7cNzi7KTV
zVEhH3geG+RxyMxUL0SbzkOopgLCl+sgZh0nXo2HtW6krDcRtqchVFVBi0Va
O1AfX5AxxoxrBGKtjRDlV6xnEDKRtNh/AekwpGyDELvZAbGODvpzOpL+iqSh
BYjfbMQWsPbyDyB4sgwCJz+AcOtNUmyd6Agp1lFHi4SqWGdoR1x+/mrjFasS
qSmZoAN8vfUwdvZl6N7xtWKONqlgfnZo87UQx4OZm0u9sXMpX8YyaIsa5MGN
Q1UQJy5enxtphHyi0ezzyfgYB9p/kl02UPyfyttWqYNGMvAXYjENZPQEBHC9
A9u/W8xZ3vzfPA2hnmmOSzGkOIRfeUJSnrdmRCYkZGx14N1E7xfIOrb8GqI2
v2iQ1RQZgQCrQ5bzHKqAVEKf+UJINu0XDga8Rz5LsFwdZBJOCGwR3X4REgkQ
+sHi1HnNJ0F/0lK80pC4vIdWtJY36z3ZKKeyUCsX5+VK9GHMhlecitW2JdPJ
Eg6YaygFy45HuRcKCXiPZLCf3sexdkn6TVlLpdmmP1fCn9YjfPjMinTL7n9B
1qjg8OeroFHkf9HOPMVBSXPqQ5BHsSnCfQJ5NVsob82gcWpw3MEXpPxeONkr
OyRmP9m0R6wejozL+Y5pWU5QxKKrFRZ4ubUSHFsgxjZsqCBth6pvvSTvpyGu
nZ2QtX5QsAYUwPhvsk/x8i05fUIafOED7VVSbGjhN58QIw+puV5p5EVLtlKo
tyJHHh84IhxcWghiE002zoAegljK0WX+GyOypYkzM3lCI05FSoI43XdJnIyp
fsGE3E2I0/UKM29CGnGiDhS6WQP+Hou2EoaiJsTJ1pgwL/cLr0IIBVx8oAOC
bz9dxIkjNKUf5hSG0AvfLVhu2ZB45LKt4VV7T56HuG0cktYOCB3aUijbfQKi
LuMJO6hBgzfncfcrZRDt6UVxfB58L3y3UJCtgeSmwacNZn77HpTWjRA6uYcw
W9Gim7J+StGSLrQOy98YpT8A4Gk1+I9Jj/01ragELKAWMo3Cn/ToCdGq9/K4
7E+ifIvs6N9sgMBlosNMQ5LM7qEtvKMlFKM69vgUm81w4b10qsTQKfKXdV4g
eBFaCEkAshzaCZNt7RB0+5QWvnq0qIDdqhX/od7cTPJ7VEUyNhj4uXS49L6/
Ewbef5lcODTyiTbGiZ3Qm+PbM0HXV3gvMl4bRId6INrXBdFxOw1kPywpHEXm
eCcE+y3E1/x1/fYI3r7TT26bgUysp7dKrafQqtOodc/r6/nCac08WBpx0pwF
PwS36PSwASJTYeESytjOG8llewVRuAX5J2teNLSOPTSqGeUvGkYQHGCsbnGq
ghPxg+A+1AjqfWJAexR+ewOtj0HubmCHfaraov32IsQ9aU3XTUP0/afV71s+
4E69XiIAldz6NcQD+kTh0vYYJxonUws90ok2/LZyd0qW6o48FrlSCgFJfAPn
L0DA7aOUJV49fjdwM7o4l4CbUUWXhr0Bbm6w7rhLuDGI6na2cKULl01GOfPl
SLjLRphWmZH3YfofvwmOih6G4ZGT4ru2DdIHgfd+Qu7jN/K5Dqa3PAchh1Ec
+bZ/E399BqLqRTVa9QX/VfQtxxqd31Km3hi0DldYB8EGiAVUC8tyY1TnbaeN
+GmalquTUcoWrVYy+vQ4EXKSVhkitWqJ1rEAgU0GeqQF8nSzhP4caXhcyE8d
Wiujrggir2jNlQ+W8BoXp07nUjdhGkKkhqdyfUvrIPr2E1orv5Zv9FpxOpfo
RLFZJyR0fec3aRT3ONhn4gViYSFhh5mGszBJrpYWkXB/lzZ3x44jcq+K5EMs
rGQSAnCAdZvm1fwFeZET7yr7RM3xHpylaZg78biq9lGYcablotNcyLOPG5yl
7iAsibwzAnnye4FIoSM2Y2DXN+l9cs3ueh28FfvA8Y/i3g8h5BUrKhD4E4hE
tOQOrd7/Ksae6xDq8Ss2FrkprBf220BY1r8C/ozySzensdq0E8InyyBY/gEE
ys9DSvSaaVDSb9qzkEPCJVjtljyqR/Ao6L0qqFqGOI1iYrXSrgiSHRXUa0Su
2Gy8mK8VGXv0UL6gix7aoDiAUhUkyecyJOUVXhF8pj0pWaonYmye81qeLUqE
jNaZRO9OAzbdwmpeFf6EWjfQZsvpa7FQY2XtXZUqsBhs2GIAmJ41RvFpUAfv
Kv6GzcpMi525XAGnyl1v6BWfj7uGYRFk7eUSgu4Wm3TBJoZx/tntmYMtcmUF
CqNLoFAcHUZyG7JeOh6+2SIfmUGrUZ/X9SJP1aBscwVkJso1PCChoojjeZ24
egNleXgQAgfSfkihqUSudICJex16L3wgaV5Azwxey0FPeGYXE37mbS7fQ/iP
NEwpgVOt2lTzltIlbRS2q2Bb65druVhps/wv2PIL6WSwdqtgiSCH1EyLQVx0
/HwLeZ2OTsUrOeZESsXt2nayrU1RurtdYbBYt9hkzYXaownt0ZS7k6RT3Euy
Boq5mUNaNtPOvRAIGl0ECTVmqVPf1gJJ3N98N2CLVfyEgW37SQJXIYwzQwc5
Bp+BWIKtqwa05XC2OL4XQnv2UkXFHGdbNKLnONuer+/dLc4oe34aKWPhhaeJ
62TT0xC2Mao0iC/l1RObdAw44SqW0FgWXY2aDbkyvoS7PesagWhNGXhf2CC9
kkEqj4xmrb9DnkeqwJVrkZWvyHlKlmy2hDer/UU7iYUkEodv7PwFjNQSRfEE
DLz7eBGnTZkApch2JTyJZOHuPVtg4NAmqbDlxrgFOYe1JDuZ2rFnE1h4anPx
alBk0puohm6s8d2XYejEy2DZwZw+bBPTCSnA7lpCFSJonuF21oDSigNdXFGk
CiGsAjHiXLTFsA8Wk8YDSQg7yAYceIUKVPzkAITeOYLihPzmo2JFesHDbpRu
bnpPHWxDJB7WEUsrx0YS74VDshWWceRj5ZJa1poBsU8Tu5Dnw66FuGb156B1
GXdNoQ5XFIfzhsj9Up731WAUEoOGvq6EUTk/qCSH3qTOGg4WFEObtkCox2k6
plVhdWXuVbRk84V68yoc0CtTE3kYCoG25wjo7gBDosr6pQAqDaSx2p1yc2lv
gzVvpQJtKvO3RGJxE/SaOinNnThymEELyV/Uuk+EWymEuW3Ic7nvDX89Cn+J
HnD+o8QbLIG/rPC4YHXiDLN0/RMQrmc8hmHsAPNKJC0Q3vMEpGKgysSsED34
dXw2tOfrJKW1iaW1xN/5OsTG+T6rpE0rUwih8rNUtVmcOkK+4b0i/NwAyTl6
6BEkzz/Biq7Dz1+Ql4fzpjfQpmm35urx+9dFjZFrjDlnp87yGgtpjbSn137B
75VAtFdL/6d0sGTajB5RD94dQStxrFlKxAGKgriEiuO1+PmE4TeJ+4EyA+65
/2mVuO+9K9wr3uoXGocMcbu3vwiBqjpIzC4oqs5xLxPP6Fptmu4S94WrbF6o
EClnOwxwUShEa29lvRRcS+0wGpc7jNbmpNNtAB+CLjVZD7d3CPHKPCpDLDVY
ssYEKyMjJVQMHzoCQWw8TFLTtj0OXdsehdst1uV4gJpxHzjO/0KT6iRSuQFG
eKTyL3UesG5JHjC9/X21Ja0Qomd+IqxBAxswF8M/JAe+izVItu/IYQP/BVII
8VCtxgb25LMBUSbdhP8ePMJgPXeOwA2SKFZjlA0w5ktYhigDSStEsEyk10HY
AC0fozuTEf61WO6DC7xNBDGFQBzh9HVkHfWG9gWrCTd1cr7A2/amIVX7HQid
usDabt3EGYIDovh7fIqxpuyd14RyvnTWpm4DGxGwhA3sfv9mHjMweKc27aHL
rLxTI7mJouzpXO9ULnvCCiJOiJOI6MBNBIvUHSQL2ZJvIq+eTVD3tyTaxdk6
qa7IKNb7FTiXTsim1Ub82PsbVB3Moa2NNNdONnVJ5U/gys1/jkM84baC68YF
sLdUwUzbBZi50QKeSTs9qIWm+JHkv7TwkqfcNvAMtMNcdwte7aKkYLcJ/Nln
tYAHL9+kjew05Ya7OcCFSggJHwSs7eC4UU+rdg1YSEyV8pRvrBLciNCAgx+D
UASpW/v4bQpkmeffsoPffi7HMKU1yv07nDXoYn71+L4O8SOI1U57gcgRzOK8
ZDM6vtn/o/2OAnECIuUJ5zuNdcu29kKS1F3eIk5AFLezOrxj5P9fJwfE8L84
hXt0xGfoPmT61TNJH2Sm2iFe+zJlBaEPzqkop0n8h1Go9JlOVeTIZVNHjq6S
y/hPzqNBjXEYXbEbICqOFWaquqz2zToZ/5H+Z92ZvKksz//8qRBOBPVNqUBk
Bz7IGYG/QLh+k62nuUf4NAl70gaxa2pCcFBcV5FzaV2V/9lsLpfuSVFuT1RU
IR+O/0mHWrEZ1HBeSEjxAfz8HrgryiHYZ8MlsMO8CHK8sAOi82FGeu0HWfEi
mD3eJceCeGO3S2CuogESXh8kbp2EGRE2OdNjgFx9/yogh/R7EMVaq1VCbjGA
1qyA3BTbx0DKKFhyyNUKyL0sHYjMB3UAkk0bCB5Y8T+DxZkj9LaEHElgT/ZT
yCXc8uxFpsznQk52OY0K+3co1CJVeyFxp58ey6J2ueTnPuh6tsoo9hv0bKr8
ysO3meEpvbIv7IdkQn/eJPdh06ukjIrO62mYDEkZJfTjuszCK2QNazmJTvBr
AVj3SSacDCb6XaHQLDcKZ6VVpucsrbYndMvESTKdFLyEesBCaLJrr1TIrhXK
yV4wzgYJzcqTKFaa7OW6VWzWLZ42w7JQg2MoTsf6UaT2k7N1Cv7DXeCXe2Fn
j3P8Dh3EZhkgp7ccpAehZcbPEeQV09v4+cLrkNCCzt7tBKbkt/8rJ36JuglB
B6ImjSSd6WbSIzHjg0VvPf7/OwaFN9O5SRqni+4LTOkMMESGDu6FNDIBVuY1
cmAUtZOpwnvNJhXeKN3ZGGKK7ZGzWM9Z2k5ijiinPnafSK8kk4Lh2nrIhsOQ
+ADvV9VTzrE4wxTeONrO5vBkHCPCQwasTOcy8CSZaCS7epBoVWyaXb0kBVpE
JtyHOkD9MWIpko9uAH/5eYg21SGTYvSYGSjTc9zCA9OM56XjKKc7wC/y+PIT
1Az6L6s8dHNEKRKuQZIBLghV0P/9wqXolXv7HmTEjRBpusmyDPX8IrTnD9VB
WpEYLHoGyWytkfbsExCZVT8jp1E1v3KaHCsp/+hEb5cT7akZWf1E30WnCvVO
FXxZTEu003A2gXXAt3psPgzZ+WvgOb4PAreYUzDruAYLB3dAYMgJqaFymHvh
ezCzq1zmaS56B8B78BnEKt7fgtcLz8DCpS4tUZftMgmf3wfuMxfRCrRD4MwO
cLzwQ5jF8rPbd0DYIXaZfI5beF+XV7R+LwUN/V5FVUAE+Ca0FIn4dUO8/DvS
aRU+T8AUolpu6J2vc7D7tDIPKKfVzFlqSUaOiLa2QIozkfS1X0jH1TsvQ4po
DShOCe5Ztajdhi0QeYc7rtZLx1W6fgPvGRh8XdmRE8ptRlxkbuaqlkmyJrnl
NPchP5GUuVSLdNuKZFY/sKSYKITk5V/noKFQy+JTabk8h0qg736Ar1hUrSVL
xU/yXORC4kqDhS1PGHA6/3ZO7iHamii39Ud459UjWsfzpkqZodhwwdItF+ot
KziZQGYVcPqPokgmLmIgZCSwGItLVWfRa4NMWLm7F2NkB2xaTnEy56dYWtnw
MXXCtKQhEgJh9+UyqaZJHSQcY3yx1aKhfAnVOfSwYKjpA/Jd7khBZUzkYCqF
LWzQQQI3eyG4Xca/NU8h/Us27ZfJ/wtvn8/bnJJs3S+Jp0SQ0CaZ+kn/DM7V
TXLpFXEaDgnZYLSb9DyFFz6A+M0PClRat75tgma8qo0K2/M3KpBIR5DvKZK0
po1pVVNUpE0RbdKsRal4LcfcTX4zMPdCVLTeF6ZMwb/n91Lnv07Ne/Lt2/ST
eYHjrXUoKuuQnXUw9AfGIXzyVQIa6d55YQsEmno15/V6SN48D8Gq0xAsJ1Yd
0KpiNfsp1siaeKsGpea7qKrEdcTfyYV1+k9WQGI2LAiVCL3QoRfJ44p9bf81
hFC3UbHCYlaObu7DC7u1KLtVTJcqUsU2/gVrGjXx9ACSC3ajSjzHPIHZ2Q4U
tE/TLnFGLEOd1lYIvLmFdkdyzk0bwPPmfoQP3fsozi9O9ZwnIWuDeUBkNika
tS1wt8LqJu0umheZ7/SEhxaeK1lbBT5fWlELKqYu+dtZ8OBvedTC1PSZ410F
dFKeNv6+GLBB+NY1iDl8ht/p/7ew/39FQCDuQDO9HtID9ZC50wzZOTtawSC8
YoQXZees7PL75GFhUQdkbc30yQx5cs7Bt/febY1F4nYUrW+/AxZD+G8qLTag
LrrRFOg7C+m+KrwuQMbWCdlQ6H/lT2XSYYjE/BCIuCGWhWf4U6m5fvB21oCn
8zIsXK0B76CVbBf4Ju89+dl/qxm8fW0QsNnIVsMC2b2MD2IzNojOOfB+WqSt
kMMOkj43JIM+Yn3LlxUlfBAebIaF9svYWA3+2wwRd+jfsTl+WDKlNGQtv4bE
8YexKvH5LUhZLHQ60hceXkNvr8XPHxDJRE4rgeTxh8ldVFc6IXPzBeItxTIk
rP1ryITSGsfD/s0ep2Vp+Zv9a+625WLVMv0LQbr5KdIW61X5ESZ/M1bZq8Tx
f4FsSuO50X5IffItWRvtaeXOvJ5m+15QPbVYJR/QBpyoPE55hHiRbcx1DN45
/21y4TqRz0Ko7r8pjgMo+JGoI9EPtheL4Q653jpDT+6Vb7OM2mC29BHyG3aC
fBbi52Mw1+cwdC9St5k9/+JGEnyS5KlVbavrF7cjjaJ0McxNGo4DnHuLd+SN
4/ItG2iPgaP0kWLe/kRNM6SiVpjCb2t4z6wfqdyTYN3WQnq7BEbOsdvhuo16
96T7uXM/WFk/5OhGyo6LVDFF3WbDYG6DeTY5eG2GcEJINknD2QG5bMiZBSUJ
YrWQtVsvVp3c9sYNDS/OHlGr3m5Zs5payd/c8SJBg6dKGQ3GLRoNPkWKKk3L
3yx+o1hivcEy/rShN9nrT+m9UTSoVc1I3pQGC/nnkZvSUC/4fyQNWmBU0ODv
ysjeXXW6ftAiZp+vNy7v9kfkyrF762DiqsyQYIteIxb9SQhENZpUTY2es4jb
4ZonJU3ODvvUNocQON5QHWM0Sda9GEHCCGe0Rh1ChTUL4hM0mdMPMetBSZNi
CPjI9mLZCXZth0hCCQGzrhcb+8gaEXTI1P71OSwIr1P/AplZOz34OjtdD6kL
P+CcDplQ3VkiYtiQ2NpyloYlyl+A9IgFf7dD9s6RQsm3dhqyQpFuC9bwR5BS
OIppFyTjXG0PSHW2Pby6h+hz6QEUadN2vYeSsLOSGbshdeph0cMUSoPFODv2
BztOB6W6ssdgoWWv/wP/rVD1XlPMliV45+E8gn/n/A/Awvm5TvC2Fw10xS0Z
8pmGhTKdCjaDd0ZMRwgCdVsl0d958RHwuJVVpBNb0Ej0NjOi35hP9Oz4pblc
okd1fER2iEgAG4v54IQG2veT31ifvkT7NGfTsnHdl9Wjb+2H4MwUJKNps/6y
5Z6rKWAgKobxc80y6TftboOJ7QIta8F6rFm1YRxggY6NOQ0bwVxsFOewxh+Q
dDyVtz3wa4UZwvau9yszyEB5RP5SUpBUorgqvVIjbqmi5/B1NoL8bizXC6kY
tD+l35d8awlYLE6WcjAXQnpabTKVaQbeC4amUtM+jf//w93xf/wtGwYvOSkf
SSWyUA1HNF3kYMcV2fz/WBEWaA8hGVklBW6EQFCsUxEEzinuPfJRp+jxfUBD
iSka0sNlQhSNnGrLm8XFOY3imc4hZzE9vF+2gpJDtJIPhDQ5cEm0MnquM6cV
FI/BTiU0Cd/XDvXMG97qoGCgmn+gETP1eBoydd/SKUBRTSqHdv3Ct0M0139R
FPVJ1bIQyG9+udYlBIx0uTwEqPYu2XuiuV1OqyCDTOsPVIcvVN0D9f9b/tvc
0FYhDPB6CgYjqxEASCK2MkXN5zrlZv9gm6Kq7bvlGe2fGZVnZ85Ihau0MscP
WwTeU4/p7a4x6T22K4J7+QSer7UIr0vgo8dkFfZbDjOqvisOr1tJ1NTrVORp
XFZTiubLKje+RZs1HkntOfpnqvWwpqU6cVPBeFnyvUuqDkGqUlF1ela5U0W4
WDd1E+WlUuG5F2VH0DckbsIxSd/fhmOW3lXRt7IWCQmGJH2T9EMjRdwv+l5r
St9EJR2X6vd6sJbuBq/Nxt0VTEGJSluVkdbdUjmajuNiGt5g0yCoXJcEwlK9
Byp/mE9fpvlbGlkSHf8fINWOZvSdZtS0rbCYipPVFj4TbbGNi1x3QTtaxg4p
o9W4NKWT+Wz+FlMuSpZvvdjYuoEMP5/3mznJ+wjJK1ERB9npVJ6pe8+ULvcg
ZP0wO9sKXdZqrMMySk57tc4OQoAFMwv+hH6y0xa6Gr6tcf2tMJvleXvrIROb
BqutGtr6jkHjzXfh8o3dcBGvxr6PwbrgpG5cka+YSfjB65+GObyIChXLCpla
AhH/IFiGTkEL1tPSfwq6Rlth1u+XG31DwzA22wsTzkF83E2rffAuuqCiYkYM
pzQM58BMYZjaxnk6/WeHYYKZW7txUpjBMPKWevReMRs1OiN0zKJI1Kv4dJgl
e38QYJ8w18v6FYBJtH4FzBCkK3MhoQMzB2KsHe4tug/wy9gMjGEZ+GU/BfxE
FM0++i4c5FZ1MTcfPrzxMXDDV9WRHoazmkBqcYW1lzSGoa3B6A69OGnynnEs
N9hHFTccDbfgL24Fi8stiJaWmxvdneNeLYF36o5BzDCv09DW9lQJ/bkIf94K
XU6WiOCdfLdQ3EbVcIwoc6z3onPYedm5NavsnH6WmI7crI5c5XgCh02TviFw
vbUccnNcu6tHbg4UOKTkiW8zbTBTtpHYdhLFegfIHyKXS+nPKdhBbgeVyJVj
zxG52cnj9wO+fyIpIY1VXoBUw79AsvxbeqwgT6csMoK53aKw7IZU+XJYXpeP
yVU1vKwq+cCSqqTOWDLRz0Suqk02YbB0PEUpeZ10l22EPoPrmeVn6Jpmo9Ov
gB1plcxBYOedpo9lnKNYa6vrKiv3AAfsRZs8qZD9sbqKBKdBPKuUFSdcvvht
JCLWRIXlMHxoaFZDMuuuYAvY25zVoz15kLdi6AQjRunoHnnjSRhlF/E0s8/f
PQJT3NmNwBBFxxtzdwjmSEyjSi2bmJ/JfRukEd0jH3WaoRtZx3LoZo8wZyZ5
L2Jizgbh4U7wXN2vuUbuTT4bLMfN5DRWBXCD6ZwPcBzMkgDX/OZ/LoqgFUA8
1CS3JWur0tzG65ZWoBmNS2sx3qmp5WY6tBE2xSs2vZz4fnCV2nOIsBzZfmpE
yUGZXxwyt3I/DdytN5/KC0keubobrls/hsYb2wuKhBw9vxs0/zHSUC/BmnhE
w5OM3s8qX4viAsznok1rIQTsuWK7GI60HYY+1Jftrl7oGz0FFQ0/4M77YsqN
rJpMD0zuLhDs4UjdU6iGXJEHrM9Zt/LfiuAY1tk1egmu970LH9Z9u4Q/cvDq
K6hqXwJvVo5KdiOXTWBXVVOr7SLnHw8I/sExkJ08owXPdkvmKBlFsE3pvNtf
1X1L8jnrscty2k0VjRe3knc5aEFhxS3G66xS7OjwfUNp8bH27RLSYaVoqFpW
9jKZuVHjRKsRQ7D3KUIX/dF9x2bOJs5idGanuM/GfK0eO+6ukqI4NWAXrqbF
kZ0ruprwqYxfuZoW7+ie/1+rnROSeeTYC8aWC5Zo+p58TMiR2p9SntNPzsqZ
FCxDi0ur5AcwsgxtFIpluM/mPie1w4z/Up6a3TIrd/jz1RqGyw3fFng4a9Xy
tQ0YM7IO9dZ5N1yu+7aU4dS66B/OIRS2l6OlTjfun4LrTrdg2O7Jw9pP34Zj
fYMSJhOWjYbHUL8x6EC8WtnNlllFp2ImAq4rOQpHCeNwusWhM8pcjkJ7b2CO
2HttAdeZDYFPMIWDUko25igliMHfPSaVEi5YZVh79KM2YwosWo/23xWL5I0R
Fdsg+BXxc9tHNZDUksUNnUBJfqxGHfGNK+h4SzRI4vKPwbxNOxRrplKFjn63
Xz4XrnlSOv+mctIH6BuO3jJqBzIvQzcjlovhGBQ0wi28bl2xXQexzlcN7oqc
GI4Y7J3S44YDjBJ9+xU7Z54ZWiHzeMv8ysXpUgWsT1h6kFmYI3nTunRUs5TE
YSRUQ+3Gn5ubl89WuatOSL50U+NLKwc1wXtBBjVTd3IPoWKppAb/vxa60lkg
G1C9VBAzrU9p86DzpWKw3njKAJWLk06phELW6IZ4p0FzC6yCIWW81ZLnCYb0
zsV3gecMK76ZYxUh49P2hMeFu4NeB9suyZxye99mxQU2wkTenrWw4dF3mk4R
fUE4HyF2U/AhftEq5GSzARpMtaXMONXhB5fusIkr4wE+yLSGQ3JZ33oVFm61
gbf9uAE9TEzLP6LUFHPmQ5IVXJMh0UyhxOqTYD+3H8Z/V8yLItsr3Q72YzQc
oBLPVPQXFt01hfz2aNl+7MhlmK/bD7btWkeoKgHkjL+5Y1thdLuRZ42XbYbZ
zinRyTxmwn00snXSeXtdDfgHm2Hu1EaRNDFao2kEXCFUA3sMJk7th9lTm+U9
LZHCyEHW50En8ckeyLgdsBj30SzTdPM/FMgcm+mQajY3cQjhmhroFIlDwmGR
1va5IfswtW9YD1S2zmp6ELXRZFoVFHuIZVXa6leROJSGdJ1MHEper0f7NQSL
ITtkBnISh0jgQckgqudIV0zlryF9Bwfs7idJoYVmI0sPGljBOxd3g5cvg9is
bFQcJFaXs4hEAMH46HbomzwmU5KuL+Ta/MWiO/KZtgX9nV45qk/dYekYWQU3
adG5SQPlJiIn2hgjp48XrIqVLNnbB5furUk8Q2S6JvqkPSEBT/iGZ8aYkhk8
p0LTo288JiA0O+yjcYMRnpVF7tlO7Ybx7YrRCL4SyDlgLXBOZQKW8NKzfQ5J
/ai5iB+tHzFVSfXiMT2nkLzjyfGWXtN6VL4uG3LzeC+ZN6R0K+1xsdY7P++d
wdVZqCd/8iRRkly6U39jlYLUKRHNKCZp1XrjS0coKH6e4s8VGepGDeL/7+1L
gNu87jsZ8ZIsO2ebtrvpNrvbzW6PKG226aTT2W1Uz2Q6O9M4mfHOZDyK4/U4
shNnJ9I6ics4tmU5skY2fVCRJcamrMukZUqWREviYZLiIZHiId6ESIgACYC4
QQIQCBAAcfz3/+73AeAh2S1mPpB437u+937/8/3f+8pkkxuIZyWLE8yhSk54
pU1psU68qR/wxRBSM422Uh8jbf1uQJ36IcgyGfoI6tp2QX33LjjZcQQ8qYJF
dbJU7l4HnNfFZ8dHNK1O94lcVyGyVNhvgnSGWAzJjOSXciFiOTINvT07DI5I
rc8bkvZtuji/H7rdIUGfWgTvhujzLrpbrrpbIGjgXl4uGxxHmfk4XSaQHok9
KKUb28n7zHj9/w6S0w0wf/oAzDc0EU4OSx1V1GPKohIjlEZ8KNmdmCcwhzIk
OAQurNdMQorxMr+0C7yj4s1XLgg07AULGjfkHmlv9tQxWAqmhD9pZb4PXKd2
kSawW5iJ20f2hjMQDapXshFzYqGxGmyVKmKZ8BcndsU3yYg9aWkCT+Mx8LQ2
kUdSBiI+Rd8x1EW2KaUfn+bWwb2wOOfnT75VPtn86SoII9zpiJ3eRU0z+mSk
96dp7/lGFknddHvJxEFJENS513JMCMXCgV5nXobU0ItFctsCktGKxa5Am28S
FK/aXKneHP0QRiGpXjgTVvQw5h8Yd1LgAKc7n5CimTkpkIkYdlKUGmyLlNNF
NnoYHiHlMC6lJb2nDIp+k93PD/UpTADihDwj4XxdrjVO9tyv2eAV4GHMmZcr
geSyG+z2j+DKwAtwtPHrpZyidafGKhQtRmLR8kKOy6QETvYchUn3JPhJJEEq
JR4uHTh1R9S9ZifLVSd1OuZLcPcLSBhs56m/ZUD8ooaMLKpMaQuxK9PmdiJ6
nBbIruhcZGuel5l+VvyQmbsK6ZvNLER8bopsoVJOMCMYSzfYpE6GRM6k2+/X
4gfbaRpaKhqlp6jzHiTTJ2/0RO3x5odIL2fZpiyyw2sxqL/qDEh0ejyukVoQ
uzGE3bpKr4zHJdcGcrHV6l7aECYRewW1yaj7iFQNW525x3mxnaGTpiNwsvF+
vkxXSq1C3fOEoCxaC5VEKeNypqhMarzfQ2S+Aa3duktL03LJZ3WRWrxq9zYb
u5fjpA57bOUQm7dg0dj8FMT47vW/489c0LVcQgWLs6EaXGhwIXf+GgOujIUr
sOwhT/E2Au/zPDnH+yq2MuZO7pU1JpcEODB9f0ueRvx6x3n16lfmkVATpLwB
chTDzqNyHVXFFjwOV26NkHokA8WJzuMZ+hrr1DhlP3KN9Q4mdNMGu6LOGVBb
g8SKx80K6d8r+maBGZ1SM5qjRX/iMyr9NDT65n5InvkeNUOJ2PqyuJcTQ3ly
fHLV2SbuEmHdhe1vGFByfs4tZ8hI5o/TGZL7bUOX5dCWyO/74WT3Aei91QOe
iFT9Ck00a56dge9090D/+FFouv4CKsM74NBFLgjWmfP8BXHeqdLC/ZHgUltQ
1pxteiqjxwbLHrrPZJXZFs62WMwN/JXF/IBLwlD8YPdPk3QO7cKoOLNBVGhu
RA0VBUyYL4vhzXGUcVqW5njCDTP2HphxDsCUczrXuVjIclEnTsVFFISc2JmE
9O9GnUdWgVWx7lCQjOT86GVwRkI0bFBs1CiEm/sE/FJxWI5Ow5W2+zfG8fOX
RbEb0iuqNy9WgokiePsG2VnchDAh36gSTYv3VUPRP/DxIJo72eq8cGOIQEiP
/zrb+FV4D+Xmf+BZkwun4FeY9quW11GK8aVJBQl9hZ/ZpwoSuvO7s09Aguoc
MfY2eNC864ZYgfuNkAA3XLyYN3ECEprSR+lnqrCjiLIDw3thiEO3h2zMUcXb
KNjksleuN5vF1gg9xTjb34P+xbjUU1CZhiHT+9BLLrLRP6PUy0Io0Q/ram37
HvyuZQf8DnWE3oA4sxD1cfeRvHLrGqR30c+HZF+W4ELLV+GCfwkttBCE4nGl
eGSWILSE/COZks77WNwPgSW/JqdYnFgE+UwgRqGqv5stmRImsh/eY7AzwKuE
vmo7PXQMUgN4mafuFcmxKbq3n+7v9wf/SHYXTSvzh1QBJv5HAkbxfgejr+3r
xM2g1ixynf4XXhCmiVyzkBsaO07lrUX4b1UYGYfFXaQ/56hBJtFVS7k4Oqo5
Kpl3UM5MVIVrAI+uWhVBMzqCMlaDl4UsxkqXxl0i6E77yY5bIO9KXwGfPwyT
cwEYJZd9Eaz+GI1b+rLGdS5fIRzmq9gX5DX4JPsHWWhJMvgR7G/8Kksuh6PT
E3ToraPfgf2j4qyVOAwMfkcW/VXj02ClZSfQPuNF74Vftb0O3oxeNA7d17DV
xu+AmeqKIbjQhr+7NA5Q9AvRRzU2knfXm0aUkkk/SzA59LgMTelQq04CRTLI
5+Iu6LVPwmLEjWZpiDZ+peXrug0xs6xzqnzpRBQiMXOeKSMAm+YcEoDLi505
S1a7wJnSWNiOVYDE5GVvjnvsit0hX165PAkXDTEBtPhG4HQXHf5rPhOpWBgu
tY3BD965jpnJdzE812yByRAdbK7HfEWh6koNkVuQDncQJEF3OASXkaftn2AK
QjJ4nsq3gaUUmBEbe4YZrGL+NzH9IbjJI2l6e7Gu3o8gZH8asXQK2LJUSDAu
rSziqOVb0B1kDp10+BKTn4iz8bjA1dcly0IWGEZb3T0EWZ+FHioldT7iEloO
ktOj+FEpOERRC8vrRPYWsJWL5AhPDliwGH+lVTEypnxvyOsXd8D5gSPQStwX
KtxTWxXJ4XlohBhELyfyBaq2Fow6lfGPudJTWznhun+RCAQ/1FIBreNEDJ2C
8x3fk6FkNAqDhIx+D7txv661/w579bvu80oeFyMneiPveQ+1vQBXiGwbP4IV
75AUiH3RzqFaT0vn3V2zt8UqZgR78zXep7B9lqCUInULx+u7c2oJir1c4vMM
r4jLs151vPEFgi1HN8XtgFwHjdN8RswB/f9XvR2beHVJCt/XSUgzil87jFtO
wcmub1EoXkFoGuDahjDnk0fT+8/DFWSNB6etHK6SVfuqId2wBdKjQ1IRyJoe
52njKm1iB0ubGFcGa7QPMk1bSDpRhvG7FNI9tcZhjjQRPxS717CdHHJWoM1y
cqYdZEhaww6Wh36CkOn7LomsYC1cehyyYX0Fi4U7Za5upzlYOyT3dyEzuEu0
8Yc8q31K0Q5zrNwDR4cGjN1N6abK/XBx9IhCCWPjfTce1+CIWrsKeFYuJqUj
SNj2hxQ9hu1H7hHAbzvKYUtXFsslmvVgbXa7t+Pr98iO3A9DIX0oCrNn0SFs
MOfZi7WWFbYhvgjPcWxvot+l+N0P+5rN8H6vBaqbx2AnRfwP+PcgXA9lNNz/
V4n7o3PqlTYE92ddvVBJ+bU69ZjSh8D9KFcFJh6iMluI2uRCDYL8TQR9B+yh
dsuP4KzpEljDIQVwCvwlCvxxCh87URVQz41DbP55Vl6OVT76hzT0j+7ISSvV
03if+jjaCO6/hih9GTKd2xUCOz+U85Yd/a4kgKYKyKagQLNl9ERKmobgZQSA
qm/nFlYUkzv3Qmb0ZZ5lC6OlqBpIzKp61FkBmZ4dGk0Uq56Dei991HsZ6pgk
KCrVEN5tt0ocU9rMXZ0mcQ6RTlJWM3sfgAvNRokytQzCwZOn65iscsCXQz1w
vuV+WRGNehz6SIM/VeaV76xFOkM1NhAH5xwyxIsqX931U2CPGtdLCtFI6ar9
KNb7UfRXfKZciFPO/+n1s8s28K1oC1xpmBw1aSSEZHLOkfPuL04mRJ1pfJ5o
QxBbYGpLywI+bhem939EVRKRTng8JQ1UYXr9buzu+/j/t6A3SMRLCLp7maob
9r5JNWYvBcYAktx3qCxQZOKGsy0PoXqEpOEnpPUjsNPXDI9QsdQbTt0dmWzO
I5Ps4Hb2+9Iu1INAhAmCs1riOBOIcCqRRTet2iqZvxwqWawtEiSSuSXfW4r5
UJxc4qTSwwOCArWSQDPTWnxk4GwhKhFig/Byv3cA+k2nsHj3+ClM6536CGb5
/lK1qzZFl4jx0paj47Ts5FwnTKJ1EGX36YoydTCJteV0KndtuRyikWmYslwm
23TJJl0YsnRiow5yyJ0SNHRNOgUzAzsM+3YmCe7xXlqcd0iqs8KMvRNGLR/x
S1Unz/QrQB7lG+jOf+flR9v6NdIYgskVVfdgx5Dh3mhciAweNYy6zP5rP5JW
38GJHiYC4iiSW7jVV6wMRpPIuplqTtbpp7lWTiTE82CmwtEPLde+xbLdB5XD
HVSjtU78CConbmCLPDtSVOswKlv9HXwO0DhAbalyYuLuKKE8hxIikPmIw12u
cGOeaRQaV/dClp2TZqhndRooz6MBFDDs90fH1H4XdxXPs4NKnOwQz9NUJbEj
07DuB/kkFfJjfXENcGzn96KLQRi0+Nhlj9A1UnVQpA9+pvHLd+0r8oQpYhHF
UjqPLoZYMgSx3L2wmE+Z3ksQSS5JoySZXMIyKvQutmQFb5yMaQjOEhstKdyp
dziNJcZpTI1LNnH1GGStTchxPsSZwu9NkJ1rJ3pCOI+b3eFU7pCat5zK5b5V
8gwpNqDVfbdTKc47TcWWYPCmA86juvduhxneaZuCarze7bXBoCcG6uwLHNR4
DEYxL83XMQPvXp2B8zccCIEwhFfgKzxbIp6ExVAMfHgtxlZAO+ELqk9eF1Ly
uX51hJN6AUMGXE4fXOq30NrfvWqhLVyfC8JiPPNn/IFuDiIZDw5Q0r1puQTe
1Opzrls16815cmiL0N0G+9afWln1WlM7pKZ23TyrTW2+i2etqVVmyQpc72We
lnKhmpwcgyvOuCgtVZjRGyZDvn1X3fkh2yth2KdR9vvOFf4+4GLw2Z1QWd8v
7YTr2AtiLVRedWI9abh0Ts7701cX5byr9Vsn7Dt53egU6nCAL63jo3AX/nyV
ib/alD/xcsZytZegMG1RfzgLWXcf0rijm2RzdyvVQig6a2gvVz9cHROCA/e0
r44JkaevXc2j8+U8THiodXs/HLqIGuzFF4hKuSYmlLq6Ai0NbKDv4QNdfbPQ
Zv04nG8wej1+UDcDPkO+UmpBPm3g9klpcCA9QUvzoIYrtC7rhgzSAcEgn3Oa
qdE052aJpAmYjufgsECbBhCUqOlgAlE8lZw4lItSdvd8TWADuGnFZ6BbYoXE
vAsQZKwuIwhGxzet1SqWzowbtVjHy/pvCchbFTz5cWY26tmWtdOUlX6BiPiZ
GJTEgGEhrMmpJn3RMiUHVpj5P7s8A91zizDtXITuiVlCvJxwy6i+NqjtOSBc
+crl/hJO1z+7bIYrZh9cJ6KgeaRElLrsBH0lFFaoc0GQPc6SRJkK3UtLNEof
Q90IVF4eg6dPqs7uFLN9sl+iRjyc76Yp5+GwQ/UTcH7CjT10wrttYyUagEWQ
ugpVki6QwmAq06Z1C7PpAy7I+j4slupBNWoCmOSolfZ3xs1lmzRCPo2AOssO
+Y+MqwmkEEhR/2+mh5tPnbX0TGz68VXL4k1oVflsqCDYMOt3c7wHNu5O4z2M
RCiWs9Yq6VEYFBvVtKyItAypMjJFvGoFvQfbJAlkwGd1wNXmMWg6P4LXGHS0
m2HM5INwLCPe7peOxWHRGwY3XouBKCynM3L9nCwJz5ts0NtlxqYGemYwzcSK
c1oEqmykI2Ew9Zuh4xI2deYGfFjXD+fwarp0E0y2CDXDJC9ArW9qiq9+jr8P
s1HdHEvC+3Vqaok8umSPi2Uvl3nGYNg/3RuURUkIhn6POMXOz8UEp0pFAkIM
SYyed2q7KRioitbCftRpycFtGbxr1kO50dz1e6Dy5PUS3oQmOcm6BOmCJJvK
G4tC0ZJMPBVZhIN1xib2jRqbWINK/5tOBsWakbGFnNjFfbw7CG+Sn6xpF1lY
YjTgcBHPmfTSkjTNH8zz4Z0htYUSjfMy6T1DW0kP/g+cJe9uxnubdYBiEz6o
+ZeLsJ9eHWCJgVJsUjBQ00hu4fOT72LYXzNDixyXaWXQajUuA/L7ooh2W1vl
T8LVKtHqRai55JP61JJ1Bo4/f5FXzuqoOWOGRa7MCBeCu6dflOddKYH9+8aY
t2u9LhTDXM8NqOTFS0UzdTfBx7JqIj8JY5e6aI5yMQrPd8GAlbq65KvAcsUq
IkXbQ5OG8/Xq3k7k9QxtGehu7hcgfMcSz+nmlnxSkkVhTTpRR+mn4UqDDmKy
/qLyycdcCebQZImBYOyjE6KbugYq10rTEajUu3nSTJSdDYuJTwOE25Ex74WM
04Za41nItCOTbkKe3k5EBqE6P2RGUcZ/hGmXUOlo30t8uqwDqLsFsHgnL9L0
Xcj0VUsDkxVFdaBJiY3MUC2jDyGdJvog66xl1Tdh9Ze2Q8bUp14nM869xF9j
rTftILfFphCI9KEIwNsfYQ/a8dZEN9YmbRE5DEkPHJHE1gbmmDIjlkwjOXAu
hqu2lCgjqa3JbHitvLgvimi3DdTW+oqitiPnPYoMuq7LZjcLeP/LNZiLGckF
gjZJLsUatS2t3QWlECdh4ESL1kwZHYFhr86jktB7+OJWXs25frlAqbwjiFId
R+c9aY3IcuQVqithTiVPKxYtk6UJR+zzFTh/TpdX1OO2QSIrE02o8vUW4ggX
PfPdnDLQsCKgFdJj2TPSasz4wL4Jk6FXk/EN6V5/z4ddLkSOThV0rfxRgTQd
rDUaWFEyKDSkg1Cfw3uPnHdJQNYINBTGa836eO3IwatUxvuvQx7Xf+UadPRY
Yax/BprqukoESPeN5BjhaCkP5QqNUji4rwU5v5Wt37PeFa2FZdOZljxKPXi4
H6523cTmrxWViG79S78w+CA81l8imqsZgWGTB+asHhjumYTaVxo5RRXTcTYx
psX0uU2QQhWwGBJpSSdyEqKhMFxqHjKw7J91BHTUCmhVKrVF0otrwrgyI4G9
ukojX96Ug7yDN0Us+mZdkOSAPQnvamCvn5VrRdqTlpHXzhg/62pYEuxD3AIY
7PsEwb4FLOfbJBTZdV3OqxEvnxja1X7GANFjDFCrbffkvJcLTY6gB+r3GfMd
78o/4934KC2E/SpbwDAEF0lfJdmkvTM5kEe1z5SjCscC8OErF4sNzcehdZ+m
PWKTV81Rw+P7hkYMo3sEVcH7eI5ELAbTFje832GCp+uulwrvGkdzwjMrFfj3
lf0gEZ7yOwwIl3k2gPCIx+BoIZ4yiXDCtusLIDxuEDQ7LztgkfhyI3EEEfku
w+/kRo38HHDDImoYt5qITqPQIUwKBPwfFUhbC9z6zFbmMESDQv+vCfBScHdd
M84+3pM7p1DI1Op09/wN4n8QeJ271KEV1Z9qLSyXgqmuxdDkuaFIkTyxTdEb
u15BeyKmK2BGutLDXPVHrEQzCWlUvqBwJQbXb8zAc3X93DWHNuk5yQCJMVtc
AAJSs8nReiQ319FTIosSk2HnO9c/CztPEqfUTuIYxsb89pmi1VspNyw5Skhz
5ecz3IR+174xK52D91vi+Zen6BJQdjGogJq0sLRAcBWgojGaNLpUuRIrwVhZ
ZwPD52OqHpsLYVWUJZxMMTJU3iP6+JXCYs/1VfF4p1iVPhiDdU5IoJ+QgKAQ
IzvHakM+/QE7bLnr5GyRvXWfViMqSajDix0Ui3MW4S7UFj1G4P2JRcK45ExF
7RYDayW652YJV6N2sIpOIvCC4C/6vFTOLeDzzBqtVXsuZy+H0UJYZexXw6rG
xdbH6v8pOB2NMIAiUkyHpnzyqwvmtT0ca3CdQvd0y6Uw6OLQpIHulUkZysNV
pjRVDtNKZZITdHeIy7938IxLbjxLeq1wvKoLamu6oObwCLgpebI+JAsoqMuB
AFw90WZUlM+4cmazGFKLTgm6EvndD89dnoJLEz6wh5Jyu0Y8kLd4IXGX44Gp
Fu6Uwrgj2oPEHdFGczBSrXljpJ2/muhPR+DgO9cFe93XPAUHm03kIrEZ+I0P
3jYF+wzexLuE6Oa8OSJq1YATxz9NyV9oYB+aZFDYqtP7sSEaM5j+lTVmCMfi
EA5Gybs88BtNrmBchkZ/XHQmrZMGAvxwLFr0OY65ZCQCc2NWaD1zHY7suyh8
erq4FoCbvCrZhxzvg71OsIaSdMV+NZ/ezjaPRJvmgOZI3LhymVMtMkhNuYzD
O3UFEMaQp5tPKcNTlUIir0fJjfgK/pSPXzrsg4jFig/mg1RCeoETTjsm2yG+
kFAEu+CDGGZLhEUaOTc4jGkuiHkXyRZ4GTeTiEIqmtBeqYAz5bXTlm5jtckE
yAUONfHcIC4Tqqm6mGIlVctPGs6szGe4ItxkNnq2EbZFugpgia1PXeLesnXM
8CRYN9/WUExfeD3WPgI1+xqVE64qh9tjHdO9I9oMD0KLP61Y08oSXLlhg0vk
GvUIdzkhUXjnpOZkGgOrwZO+GaXpoAE45z0bhHKZqF0rPgH2tPR8JTyzhpoV
mjNwvW1QdaofrixmDGg2dop6xjaC5i+JIU2YYeqhR8B02qR83KhwB07th9GH
HsFf5LsUrO36iaE+cLz4Y36vDKZe3g/jWMfUabPIAAun98vbR+ph5hePwOgv
LkiXfLT7mKh59KHdYOuWRxJCrP0QPgC5Vw5zI2FITdeTX+Dg5xST1udf3s1b
Rx3noR+DY1BIyyi4fo1NPbRfe6MYSn7LZVoH9lApyhoZlUmwdkiw/qvRDhMF
inaMyvcnSTutSDuCa4RNY9KAVeszHdDa46Hb9MTW5MleLaISuWdCivVSCFum
DHQ1Gte3Gk7kQFi97RpCboOX4AfvmECqN+suYpIzh8cMdT/XG9TCimJCEBRc
kEGlSa7511uko1Pq+di1nXrX2CPfEQWZwITYmjglKOjTEDpdQfE2+th+cPWO
QqD5GEyQ33jZRsKUQrwvP8LzvArewRvgPrpfwN50ykR7mebQJxC3XrwK7lOv
StIY/UU92/o4UivzzDVfBe85QT5fBK83RUnC8Qt2fxopMbSQkiRlm8zpyk+x
KyMmWMDujvPuuiwJrY4KCEZlnIuoBru7JlV9OJT7sq07o6pWa3J9qmKedulV
O9EP9SeukwubJN/FUF/XD8cNzr9PlvrIu8uPaPdqmn3yaC7dfaT83o1QU9MP
V3sc4A7E712FkN4xL0m0Rv0eAxyplFpRh9spB4ikp339gbwV+wTav5WGfKXG
FfsNBBZolCFX/Sv7fRDW/NLRUIBEBhQMLKDBPlo8Tr0ZrDxCQ55xop5WNaGi
yPSurmENFKJTGeWUssL0Q1JesORyyNpaGD0QieW9wmjhsUMQTYnOlUPw1B4B
ftpcYvAY/T3T7ZJ5Ihdf5XRVj3OQ4KIJaWo6yvN8BuLdh2jaBBWeUZjndHab
T5qBVheu8768RY+RF+0kBA94+QoqkKqOUFSL0sgj1nyHZ1Nzf5FYFWoaU1bR
3RAt2hMbMNzpgqtuuAuPvTzLIE8dVE3etbco5jEQ6v7DZnV0CLkdAfOYA8wm
F5hMAapdWs63iYGpvzQD8wEaOY7Tx7GlzG0phHbWT8C7/UTRnIWDDYMiOuzp
3tzlhmJ94VMFl9WNwfs3HHCpHznHuUEZ/sYCBjaC/9/ntbu00DUZm3BuBJ7j
gbSlvGojeYLYtic73mCC6jYTPFcnvA/F1F8qJOpdiEyFxXsptqmI/GktxBMJ
SIXDkMQrFUV7iZpb+P+kxLCMfg2zYoIMQ6cqhLYoyQNSTMclIjOFFH+LUvyr
Gjl/mmqVvosXwDvpM5BhSCidGhkW6gZWO8V7n9wwBZbleXLnEFWL/f2KCJXk
XN97llvdRRF5IG2fHLe9osMMjNW1KMFH3XkGOjSfaTHQmjnyCXhtIQLnnr9o
rDcm6dDoRWwEU4zKZ32RrNfJdnkoBhWGgfabcJVcXTYijIrE4sKiRQbiqbjf
cxYZqikscbtGjJs16cT9FmviXGzvsk6oOsokkY3APqNPTMUJxBZJBF5OmzPg
SufM/Z2poxJ5k0JHZAbXI9jw6GO1EJvOBzK3Byc4Pd0+vUfgXtETNiHpKTpK
myOiMi1Nha3r05BQbV++XiTb1soEoxslovI8MWbmQcW+fiXOPhxSUTLrO/mM
eqxAXH2PYt1iRjTFjl4H5aJdmb4azK5XNGpElAesRr8Nir/k6ut25g2u27nb
uwytHqxzqHW7HEFMlujdOG2WS21FuhQ2HtFQCktj/VqZFtoX8XKx6KIPDnJR
IjZV6Ps6hDOM6K4iTLRUCqN+qL4RoEam2nyRj3GxGBb2uKGyTveAo9i6bKG0
6SIhQCcH4Wcn+6FyNKzswyR0904Ymz05BO/ylZrSNZo1kNbnjLgXSBD4R5y6
eq+Dr/sqXtch0F7PVDVU/WKc/CZOjSqsh28Y5Na6dIZSf+4xpqlGdLmFDxG3
2SG2kFif5grILVEt1Si14ok70xwtMU2bGbohwCJXILUgNfbZ0ApkCb9d2+yA
Zc2uSAccyoFfCufG9EMNMjBQIxyjBM03YD5itCuWnLY82q7tz+cPc5fa7oIC
C/GOMhqNYnSSJmHsfIfs5mHqryXr/LLr+SyrDJZV1/nVBfNJuJdPZzgUhsGb
TmgZdcCVCSdcuemBSc8SPUdpK8+z6F+EK6OzcL5/luqmYmsdyaPiB/OJ4d/z
e+FQBKbtizCJ17QnQjbMcScTef1IEqx2H3TfdMN1swcG5xbJqhRdLChfo24D
oW2RMoy4Bt0WMbkumKFpezSBwGw1Smi/vgxpSYz7DXlybbX1iS0B7heZrWbt
9UlbLW25QNPGj44S0uLUsqewrRYVz/CqRrDlmOeCsi0lxaHd2G6XAE2OHOMM
Y22Kk8F+eRSHRNGjHee+seAU4a85UtUF9TUdUs/KXcmX7oZY7kIElj18Hc4h
h67ZJxwdZdRFr6x2EryKuuTzjfI26nYHUQ08WGPWYwvXCi309RSIbny+DerP
jEATWdcSvKOExQaTD/POiJjcyleuoblLNMVJqD/cItSEI5ekccVBWRiwf79R
MP+eAha/TL9+FXy2BMTauXMA2a2t+Tr1EQqn29wg00oXju7mefbAfPsVmK+q
2MS1uNWx/Cd5giql+RHnmm9AsPsCxyYpNw8LzbXy9/TRy3AbhYnRRwgQFF15
DLs/YsY6amV3kUaAC58i0b/poxfAh0JQ1GsdXNxQyOziWG58d4lSvPQA6i2r
wVhW29rcj7m4Q7A9ICdW8umIB2r5DgoZbP3KiNgOKvHa+srFcgGy9UO5Re35
EeOlKvaXf8JjI6hHcfqpGpM60198EtDbLPno+MvHwMr5jHWENXK7+S2xQEPd
y81mvV/grqoQCyxTLxu5Z+RcLuLKpNnAPF3sE+0+VsLXkExVLZDEzkzIFSXj
2o4AGWnZe4S85ZL1TPVKMMr9YDu6h1WxBZ/rslGoFsCV0APDebgigT/JnF06
W6GjwC4dvU5ioS/brFC7T+2HIRzsHAs3VSd3QByGL13jE8/zIYtq4ust+r4Z
rpJzh3mJimAxbs/pKLA9R98FpLrTBh1jQUO+Za8D6l9p1JpBmjhvFXy56C8/
HuL+mGfJJhLchYcMDtXShNQjyaF0ixDFNLpwnuJm0D18kdwFCXKCE3ejCOuT
CNl0gq6Ky03WpAV+kINec2TaDLfxQkVYeXd9YPspUyMC3oQ4BS+1YKc5b09b
Sf+UCwcr5i/TI2v8UZzkiM2nvZ21MOOSC/vpDI3uSbOLmkck5igjnDPLgSBY
TA4YG7Lh5QCLLUy02ntE+8k4zJsdMNxvpVlMJg9ZFjCCikYPZcB8pk3JPbTH
xoIZeg/zyigBupPSBb3t5B2LHc2TmHa1y4qtRrSzgMthKRAAU/8M2S5JNkvC
QL9N9Iwf4HXnoBBriWRIk14naq1OSHjDdCgZb+LnHhldgezo382U2sW8Bbn2
l7a0IPeoIOqgWBUsNBl/x+8Vckn9b1EuHjCsRr4zpz1NgXvqJZgJCH/wGkx/
/0H8NcW/nwBXFz0iiJ/BpJ4MldFxpixqT4Yq3+AVtNFHJZsUzhnkh2s92VZx
Dwu6rR6wWH1gMftgMQlFf7bGUxevUe6f5b0kDI7ymAic/8lIRo1IgXviiPPl
ttfIOLDrSVRRTr4Ns08+uIkPjmtkgT+jOPhIDQ5OcXTaBNGFhNrIn1ikETSE
Z2xoJFCjO6jZQh+a4tpIrGG6FShXTe9tpXPseYo90fThHu2dnFEIvPEEe9Kn
6qhBw5wSqwRE5nS1gLUouuqmekIjVD6P3Pn568ScW9PKlMsU5GhkNAeXJiYg
gteSxUnYqmBH2agXR3gKky0k/khozpnwAiQWFkhO7sFBhogkGsVsUb2GUuST
NlpxZGQY58VJXyv4B2s3Xr5G0c+KHkTDsBKOkoOkJAPfQGfZ4T4oLrw20VEe
NBXlL++aghmKxd0QiULu5BjmnDmw1sLRX69xT0Z8jTSA9dEHJSdg3w/DfNuU
4ZXesbZDgkqKGGlshpk3GiDce1xSz3TNMCpDZ+n/M6cnivm4QGIKZilx7Yf5
N3arVnaDn9nFWtx3GPyHd2u9Qc3t0T0QdKqNFKnpOtqC9fREkWwCkc0QX0HG
bcsdPtzdNVue26zICcHDu4sE/7h1kp3KhQOIHSVp960ycHVi4CSxanXzNu/N
y7dOOfGIWjY+2lsg4xwA+1MPK+6HQ+P4oAEcT0kE5vGHdBSGxdpEu5WuTSim
HoWxLn4Pdd65YEZBsMA9ca5L5HSF1gUcjSd3g/WZ3VREsVEsgekDjVLWZJ2t
YnCnHt0N9sOvkUnmE1dK09wDXvXEJ8WEoVaRmACr1hSRfHNv7Idb2ggseEVD
CfDvFV24B27tPQTu029z+mRlgwsp4yScnMiHJB3IzRt+2FLDw36sXpTn9oLX
OEGK8yrLwd5kIWOqupU3qPcUGtQctO2GsEDbvXnZNlSsNC9bxtIg6YhMjXVv
hTZQxTrdCdksYlXoYdPI9yAWVGSeigNns2rRKh4EMBypRlyfmBbPPUJWlsX/
I+Q1TupNFEk/aYf++ltROzK9tLUW0nPt5IQacRpcxnJWm37kMDZhfiI4Uwvg
F+IZr9kmtuElNVHH5+WQ9iamFCw1vSYh45pI5A605Bh8vlkdz5xVxmbKBvNP
8vQDrVRNyNgaWJVbwdGm7bdJWMD+KEfsGz2rNJUHeiFJV3/q8lWfGntSdPdd
+dyqyLd+35i2/ujeU2h082AcuTv0y2KfzsmGZP+MUEoPQVQ8QXgC5uRI6krC
Vl4LJMch01yqrvYDDLihWvZ7fAiy49vpX/YJQrZvWzG5SbSVSXYsY3aIvDKd
pJVBpucYy6lVAf5aVqQcvx9g53EZak1BdnIHr4LkfByy/Gyqv+GogMABWOkq
Yhc57RHES1uIvAiDRzz/9/fDkjyqfwsdm8CBh+U9ciJiaoJL00dfI7NYJM+T
Ik5wjnHXRDh3OpSKIoBB+L86ZsrSoI80LJ3ezZXns4RnCCYrG0d2hB3dCGWU
3eVz5vSgaONd+PQdUIRhLCV7WnsoCyE7X2m5E4ooN2bTuJjHkpADSyTX9CrU
8OcAjl1IAcck0il8yYFT3gMI6waaSnE7Io+vpnmyZDUkOaTgvljNcE4wnLGw
dPIGSb2ekW3q/5s7jHQh6qcktB2yfHU/O7KdlPmGgEMGiZGcb2V6gJJFyuWS
7zHSB2CuzckQhDa5JrmJRx4Wevh4kBmsgPkPGmFhYBhiXi8sHH5i45RAJ19F
VExJnIQpJVRwdXJKnc8XHpbGC8mTj8GyPAxmwxYINKE+F2hrxduBNuzsiLPw
s5bnPevd9eKPN0wJdzmW/xakYOXEHpHvfCMD4AXHo4VJgfgiiEZkg6z1GGSu
bmMwJwflEwiP9OWTQmqIQZXrC9lJdi978wEsf2aTqBarpMrSatVkxmU1hnTn
XkYhc01sa/DcGfw7xDx/bGsUAUc2bGMn/NEPpi37yYOI926xbGjNhcbJwXLS
xbjsQjqykTPkpIOAPE+KiJqeKiJqSmRykNWwSGqwqeOj8ZFWIkR0Sus0G7Wx
Pi1r2/ITfsiuMF3xi5KGsPUQVhlx6X3VOVVYiACiIi1A4OQhcBw+DhGuycd6
66iiWybVuzyQFeVRrFEo4QBzPUnILkErE4pWcjCvG4nK5WakFZQO3I5FU+v7
b0PS+FRFqz3W3bW/ZSO0KieDD5vsHdPdNkSfgjwzwn9xZ+RpKJbTO0WeCS7r
C5JnrJ1JldYdSGINKIH4ciGhqyGNrsbHC5Mnp63sJJJnZ60kT2KbkFMTc6sp
QOWG6t2Yvxm5xGQ1VolXD1EnD0gTCeUhEVDpxYhaPkO1Md1HCKyaVbHcRwiu
mGQkHGzmDKQHuLo30UdOjWb0aFavesjO7BTVsioiTaqKMqy5AjKGIzX8kB57
QN7uw9tRvogpOhiIKErnDZLkcFyuxXiqhRqKj0K+S/D7AewDn4BoO0vGZkxk
AIPY5nbepy/AynA1pM07eRU4YMgM0jfI/zv4EfTyMXM7xkaMDslOzZNYRrUE
Kv7NfDLIOaZTO0t4N1J2eUS/fFOzNGO+/wSEwjyWhtiUUUjYLBAe6AT/h2dh
/vAeKdFyKUO4hOXKk6YKxDTGEp3QfZQQOblbGGMGwi4khG8dHtBUASODytha
wfrk7k1gfaaCrJo+sxtma3oQKoYHEwF7d9fqlrxW6acgwX7ujgYvnz88AcGw
EvvLXa9tkK/QcmKwDcW0gQ+HNyb2UQP2ViHh7mJtxPsUzyDyd4C9/4HyDCKL
/S6u9ebzFWH8ZQlpCg14zmWsZzXGotd/u0nVQ6T3QCnRgPMYizwpZAsYGYsg
L7xu4KN52iE9sYNTbinmQYU/HKTN0zxTgrv8IWTMO0TdBmawMoEaka8b63mA
k3EFXzNJQWZsG0tD1pN2NUF6eDs3WA+wPKq/gs9kXXuVXWvqZk/xefoeJ9Fi
ytwAmcUhZBwVPCs1f1XRAWzNh4MVqOKt7YT0PD6p9QB70M9RXpOyD6nBQZaV
WQH9wXP4TTA3rxpgnkeUyZgfUM26EDNzB4oED0z7VPywXIyeLkCj3OblAi8U
lVb1Ardp8/gPlg44E/ns50GYH1gQpRNdYrmOEXBy4G35O6waUat6ewwGMdGZ
w1F1QnTCYC2Urf1AH6etT+e2xVnPlK7KK1aQO2z3rjps+RxEM+julYxyfcZj
cBwbiy2Ai1v+M9qqy8rIcX0qDIyHjCRqxj3blCNqpJ28lIZ5hO5lfihqJfPb
8x2MR3Bln/IM7k3KmnfJYp1Id/5aVYy6szDrpK4WccP75g7pwiI2v6NK84pV
EFt+da5TnsN1UOj3cMLJaHGbdk6/ZtW6keuUGbhO1soUhdRUH6vis5TJoD4h
zH3Umto57VVoC7dxqTqlyWveVHdZK/cYsrBrlzoSOFzLmdGQyM5YKOMYmakH
uNLFVCfxO+UJsk5+AWHax3kXV2o+NtMpNzIdyRt1RQg7Gz7D8vQd4/EYJQZX
F5LMPRznOo6nnzkO0YUoXVqNTTRKV8L8iCQd5tr9faBrXqcbYGEEbTvD6hBZ
JpyAZDQKUWVWSEc51SNE2pOvQcRLKDoB0a7jaumvZlg0Jxdbph7dDwsTNlhZ
sIFn78M6/cggnIJPWH6XTf6HtZpEkzZMR+gWf2TPiAWS4cSdjmYhjsKavw9m
T3dCbAGbGTgrR/HW2sxIrjCvVXa5bb9cwfqgB5YXvLDUdVxNlHEB8z7BlZIR
Zg+Jj5uoL92SEWRUDKSMUSDLPcl4bhEZH5TRbpH/Uym1rz+Pr3wWjHwFNYzh
bZwnoNEX9bPVqAzXTqaUMsVppRBbEfIazSapXevUJbSIqT55O9IHaTTIMsup
fG7yl4iqbq5hoWYkeJYU/CmEgjiUDnl8gGhgwgDazliKrmnhJ+vjPejDoQu5
uMdEcCzOQ+6ep8jtl/pDCz5K3D1k8S6B7Bcvsr2cOWeCgqOggi9XgD3TURWb
koBlEVHCHx2tEeaTKWHSXrnMSzgFTj16HFYYI+HumzJKyCEZRoTZLY0Ep6Wi
picPidc6ETuuXNKyfAMnB9QqXS0v2FXeSNEGW4nUPFwkn+HwsHha/gxbch+X
kWKNIlv3Uw9qebVF6TXzlhryknv+Aw/zeywwLWxc3/2coKwlcoQ3XRZUG5i1
tM+LNGVuq7XcXEdFpIl4D5j9kEtx5vGCkpyR3HbijpA0JYTV1JCOxLLcnixG
lL9jbhejLTsR/A2c5hqk+Iui2B3YLrwP+L0ZUlamauSSGNlakr6xrVSaBzs+
LlUpR4CRl5SL/lytEhqK2hcjbVG8nmmgMVMCu0otfpjotUIPWLENg/uNPTDz
5BNwi1xPVaBEboVl6dj7DI1UmX/jNfBPeNEsaIDZJx+G6b0NkBIS+5k6iNkG
wLF3N9x6FO89+gTMHm6AWFS9NDC7MIXtkAACch+vJytg/sNhzeVBImJ6wPHG
IQjQdlrBTurDPpH67B8M0Mf5GI+6fhfu3UgX6CeJ9xxvVIgl8pkDh8A34AXx
WX9U74OMdwBcNW+DX5ZLQOiDt8FxshUSYScETr7GymNXbz31GoSciY9VVvlg
Uiiq62D2md0w89RumD3wNoRsC6hnNYL7g05IpKTY/mYu8fiCSjlUZMzTtjJv
PhrWGfsZNK6rBPXkk/VwwxpkbZSkoWMa+jklmJQkTfnZIkVGEVPKbhPIVZYD
8goaX+CH1FVd6tmUH+LqA6gFEF/ElGHdQesgT/sDOoZZ8i4a4pOYqYbUmJDA
H1OaphQ+DHS/0ifrT7va0Vxrwgv/2nke5KVZUCcwoXYGYqnOepJRjlxS0ANP
Hn2b7mAVB/tJq/9J6oz8z3dZnVyKAYu0r5dS8M+FUbVyo1aLRxHLRNUGB0/K
JwQIeUvVUB6qUmLwxeunEFgT26mbJhNNKUtxol2uGfBpTc2MG4Y3I7cbbMUq
tgk8qt72HVCmXYQLjT5BA19Q9c67VL3CXUU/CMkBrHf4DP2VndlhsP+ka2xY
vBXu80Yo3RW0CFVYJCP0HdCK2JRtuVLA9huo5Wt4BFt6uMSDNKTU1zUAkZEB
CHxwiKhG0hQSfhIAEbarr5Vp6Lr7an9fVBsd5loZ1VdEDJrwyaPFUlQo7Ws6
Grep+aUPvRfS8yjgBrYJA9g438hO0vPdyCqaIHUjn8dJlkLI1doA6Smjgm5g
O2O1zBlp2sHzCNUBOIQJfnYh70WbYWoXz7NTcDzpeb26HVLD1WjKc/jNWfhc
fgW7fUZ7DMERtyH0kYsEulFx4c0Mk3OjGziHJL8P4H2XVgbrNaHZEtC7spdD
+45hybq+Fas8phgZ9XywV4pl7bvUKM61G/ygIo9AkIwjfmO31PoJXua7ZOya
YnICL8RWAPjTDRZXTC0M4a5WWOidIChW0GKa9nTNcFGhNAPcipUsu7GLK5el
bOqXlXWcsVYUsVWncma7idOZxdj2VUCqr0iWRxKXZenyX4+4V0adyZmw/hqB
oFq828rgMM+L866lJoQn/c85JLYR/qop8kKYclSHGorEIhnlksQUNW3jXRDr
d3q+zzNK8om5vBvOtpNQjhzB4VqN0WLzc3tV8+QR56j6LjebJy0D4D68nyx6
wezePWDdux9cH3ZSPe335HxHIdLbCQsDFlL3VzZQ9M/4JBPNJDQwAEvOsMSE
nmbABNFsUyzSlc4xi0XKhiyE1IvyAiZCNBJCnkEoihHFhARKEBt7OS5LkWQs
lVnUAjUIJVhoUoY1oiZW68cKVbDIpKdYdfQ/aZzwCBBWsX+T1l7GxN2qHlex
3g36UDQ8QwVLrDrxRfKkE+bbYX0iER5kDMIuaZnTblpY0EcGxH6rmNUDFb8y
Q+XlSFErG+xn+K3MFO8eqnVMwG1dH4GhM4wbhSJyy5Fs4kJeE9TNg+w/m0gZ
m+D8lzYhVARBHNxblEJVu1ATXxd1k90zyJvTjMOztEQaQsEkJNNCPdsCEfwd
iTGaSMfS6mXVOEqRyArNK2V+Oou/s7IF8p2OrcBCIEH38n2bPd79cjaxuVgI
AjH6Xm25nZQkxZNi3iiiSLZQkrWdSi5Tk0vsMlyKR1A5pPeK2BvK7qGvjiRv
qmQfHmS0zLkXUfkJYFPwBQ6gWCgONnsMbM44WSuHtN0rB0xhLwsBZwyczmXw
Blbu5cmRwDJYzRGw2pchkgb54vdEH5h++SkIxoBvTC2GZYsb9jzr1iJcSzDN
A3t+aYGRYBZCJk8x/jBj1jYTef4VaHudHBZL0kqh6s1Z8h9cNKdh2bkAlb8U
9zZDE8mfiEEN3idNLNKmPDQk2tU/z7Jtwe9b0GlZoSPf9CyrinySpBe8Z/+T
TdI/8vlfWuiDHze+AN+U1xFoDYpQ6wV4p+sF7AXewWH85rU2IFvcl/yX4Jst
zXxjbwRqZZ7PwiPXjtB6qr2L8E4L+cvqmhx9Ff5peIb+v+RvxvKXsPyyypN0
wMttL7BqiuGpiSl5pORfiVm0egWx0hs68SqIJqD9pJWkYxr5LsFvK5w4OStm
XGWNw4WDZi3rZqg4OA8tF+w0a1XLUm4zyrZNQvtRS14rdWftIqt6PVcEkkE/
ORJd7mrIxoIQR9pEUBeJ141CYgimf7kdbsdSWMQPKwlFY3p+uWMI88QDfu1A
rDLkI3El3RKs3XRaEh7F5y91fH4FkcGBlI7BEQTX+TEWWBAac2FeO3gjt+El
RNUEjYhNw7W3EIAvEuBlKMIqL96m+V2dNszvQEK+jcC101PFZHtI/5UE2CZW
t6vHTvMuYH0XsY7zZqa3LJtl/zhI2b4MlJapGXgEQfVP/dcgQB3wEWgdfhWx
chAm8ffs9BEKKHb+Qgin7gV4yuJjQG28xI9TmIJ/atwPvbQTy3ChF8He1kxB
WI35q7wMVaM6UL2ivMozOfEqLUfaigevUbB3xdVbHskiQZLZavw8m3t0Bm2E
1AWhcKWh/aCZQakYKo+64MJ7NgO8VNYMdFXLrC8dtEPNwVsGEK/eirFotQPq
GFnwosiDLugaIA5AzwHMiYwOe2B6vQpiPDA61r93E03+NH5vA4+FaVyuZz8F
8/wIl8i57XCznsnFlKUaTM9WQQpBbkauaXr2U6x4Mdj7LaLGok2iJa1K31vb
WPIW/H4AFjxxrK0Ka6im/GGpbSflw6TVpKmad7Yc3Ca/4UGWOc6TGvZdbbMU
b5FgGDFuhvq2RbjRswA3+hfhGv6/kGQM96U3XdA3FoGpHgfjooklSivXPILY
MuB1JiCJ2K96keJXYn+RYppgXUz0EtLCLZiK5WDfUhj7xTB7qwYxdgJmZc+J
EFyAZxB3L7sj0Du4H/F4BlrtN6Bx7ga0Wjqh1btgxH7GAU8R+rl2HhrnZ2DQ
UicZ8KrY9+difwHOXEG6uuUTbDCAEjjEd2wJj370xJdgrqZPg/+WdeGftHsl
zk/0qm0+wZsellymYXgFLlWaGYO+fHsTJzBzC6WWdVrxs9rK4US3eid4zB6A
l1RRPsZ/wzCLyJrrHKdKUTY2BY4XEbsHjkEqRpg1oo6jLNazC/NWoCISgXmk
AYeZef1v6zRgRtT+UtGA+RxT6JaHDmD6TohFVqkz2ESRL+JPgrXYh9o+RgWk
PtJO/XawdCIhpadgButwjLE6kmOk7l1EOWOP9RdcIbkFJ447oJZcb9mo1nGk
GYFCmbcZaurd0HTOA031NpqXMP8kajp9bR6oP26HqmeZEIggIVRh/jab8Heh
khNYQRmMhICEEtGAHabt2tSZ7LmEYBGqihJSOZRA0PnNa33azpo/gThRDrH1
QSoNauCdiWaoxoug/ZuDU1JVEdZPPOaAxulmeLn/BDzSwiRAiCO82p+vqsTz
qMAHtW0vwCMmhzrrDZXXJU4G7DUSmyG9iCL8tlp6jr73bbC/R4zLJVhZXJLO
0UQQfwZlPFs6oa1OY6dXsJoUpqk9kks0LQPC4rt3XeqyXrYy2qj0qkDRzTD8
nsUoHYiUpnRgAWR2al/RClzYvzZlmS/wFvbTOS8STYh0Rbxx8L2J8H2zgTwx
awJt3GAD06XHqjgVCYiMI0Vsg3BsDaqyKKpieXlZ/H0Tf69eJ1A1KzLWAPPH
d9D2CQUZqeoBcJiwzWA31vUpsLc1wUJPAyz0N4EP/49L00iQ1Sy0dQbgGl6d
zW5KGpX1xB+ZgFr8/0Qn65yLyBGiWxH9B9NrhxhpUx3qRS/KqAxcex1J7E12
MLS3307z+4IhqHx2HhZ03Sq9TGVRbT/DrqPTzsgM9b6mF0kdXgihyeag+pmL
Tk8hshqcEojE7/8I7rk6KnToS1dSLnixUShUzVThqZqbhRBisRr/f9HOhBsV
VG1tONSo1bcRZa2Pkk0jUbSwrkm07xx2Uu95SXJE8MzeOiLbiof7aP2tMf3U
gSUI/PRL4DMF1SsVeJrfJA59c0HgxS9tgrnHvoRF5g5Qzx3EzhInHU/7+SsQ
J+F/JhKPQ9K2wNxPH4T5n6PA+vlbkDT/Fn+/JQ3g7OJVmMdcLO9mcDbw6Ev7
RbA99iWSitc38HqQrLyLJYH1qZEbIpfFkfubITA8b6STZASqKClaySkSxbxq
WXTdqoWpUV5AB2RamqXHxsmU+JhSsBIJQppKvJ0gZWMO/c1b8jW7tIH+PgUL
Yrlb0N/kanW6wI51ElVvrv4YBC02ygRz6c9O6C/WR+u21FeB61w1uOp30nJB
DST5+t092De3wDwkPSFKJ3voZYFrFqZ3LYxxm7wELo5xCRuJwIlnzcym/gzU
9ywys/uXTOj5kNJfOuCllBmx+KnmKGoVtnfb6xY48dYsN9/Jqb7y+Yv+h5H6
zMR0aawDN+iO0yT0TrdBb5i+fQO6Ro8UCcP4QTSBQgT//jaZRqjXPU8pU6ZV
zxOqXIbaKyLtHmouVY2ekLb+i7ccPM9+eIcKvxCc6d0vzP1HBm+AFjxFic5v
IMSv6Gk0R7zxh0hFvwU2un7w4T1nh51QIqMUYi6m7Cy91YLq4jeEugjp2Q8o
VfmxrjShxsd+y6kxDou//hLYT1xl3UDKtGO+kMtP27a/x8qvjL2FZb59d9QY
kdSYVM6hfwtqJJSFKOes96uEpKgON8cNo6XOXYyC0ki5qH/ePN6A1BEB/1uf
orpdJJZCHbIC/z8AKzFuX73VQEeOld2BGsoqdS4PUcnm9xB6C8I81k8knqLC
FOqbD8DcEFnmcMEc5p3tZNtbYj0VTLcEFR2xzCnOm8ig1Z/GKwkj9RZmZUkU
ZSGZoOeISa0Gk5ZjNEmLQsC0SBqSgh/HiJE2T6tJxxLg8qxoEiJD86alVlRM
jypbTjBf5T/oJEfe2TcDDyL8HxkelWeGztrPMMGzlJZnEqeSEOd+R7UrJg1x
+XbFNCwlk8q1uYUVEbczSeG2pFkDQTSWtODZeHJZujXVQDBq8pvjUr3LpbBI
DVLMz38D4T7UXK81Q7jjPQibXBBDDdN2ggcu/yH+xGwn+iDe+hMqpnwNFyFq
7gPPY6wqI4EhoWK6veY9uH3tIoSx2lDjBxC1dVNRF/KJNScLOO+MwIQK+NJ7
YUlgziu2T4LARNXPvxdSh9XcdOVpnJ4DSBDH24tkLHbaBp6LZxAdyDIstZQA
TPTaLr0O7gPcQbGZ2l6Oc7t4FmIPIv4T42BBCTTz5nbhnHCNMcumcI0puN28
k/s3StGEPACxBHOL3ERz8nabuFcG86jkpj3tlFxFHT5LUCBk2ezh0sYspQuV
POz1eHwNs4w6N/s6b9PTRJZN80IO/i9GCf/IayPO30eYMJCC42WLQ+BbHZuG
ZauIwHCLY1W+QHEZQK489+sfgvuNn4DzwE/AfeI9iNOIQIljWtHSiW8j2H4C
gbNvgR8v52PMSUAwO/fGlSIBWioNTvTRaVseaobAe78B94sPGqUC6miMxIK0
jbkDv8F6f4vXKzSfd3iI1r/oUqCd10G7vsUUMbu5N8FK3gihNjolpe9hFewW
iX0d64E3OO6STUhriy2ZtKgmRIeZ7wB585BYwI3AYu02yn+VhI5DClWXrHol
I/EHyxfSIiCIJaleBhkR9zQ+KqtQfBjzpWKqkSwqbjEPY0Xh2u0wN6aHfBEL
lvqg1VH7nN2rK6vBKiv4exFHplo7WgYHcszZoI94fMWyS0oyVBHp91UGRFTi
HQg+yrmQIbq5Up/m94jyH/MFIXHt1wiSp8giLD2qhnBDpZ58A0L2ON3048Z0
R8MUpE0EVL9hh/KkLBRYgdklBOJbFGy+a+M4qnG4fZgA8QPKTYmBMEfVkyWq
ttgOX8R+pyB+7RWhnsjIyfUdwwk4wZ1TFXvsMOZMop2+DC3Vt4ryXGOF2Ohn
1kUimXTZxK9s0GuNQzAQg5ajFukWVnnZZ6lnL/e0FlP+6Lex45W+zCc9ZdrL
9BFSu6kBgp540f9jE/xTOfdK1MnALftxPkJLsEBYy0+ZibUUxRF+74fMErsH
7Ic/oPbBciOKtp//EBzCGnvxLbZ3IEWMwW9IY5AkEwIwC8OvmKmcCTv4X1QG
nqeVhe5mF/vo/NMqsXr7Yz9UzCNfh4txZvHSWbUKRXyKz7MxxdFg0/SS9LPc
5v5GC2EuYo1bCsqzt++g2mJ9alREcMwPMacF6ZSu//4nnTw5uf1cn43NIOxp
b58dOQPiO+rHEX+Q0or2qkLCUMSH/J/RGAqtnW3vVgtXWFWGnXerqVApvkmJ
fTKknpQ88IFljyPVPkg2iKw26slAGC6cdUHXuAhcvQ/Sgdtw5ugsvLTfgpcV
TlwOgdd7Gy6854CWYdFzNKcuzEPdWS945SmY5RC46Ye6k/PQfjOxSv1oGGD9
F7D+ykorVB6chbqWMNhuyn6dyAc4ZT3Sh1BMwey/xo5yVbMSRGvo28aTErQF
fbF4n9TSeFP/V5uWjHYR/vtf6L2t4rf85MOX/UZ4qngCLW1zgS7x5t8Wc8Oh
+nwOdPG3VqVK21wgLafKNEoc03gYzE5mSKaR543hb6t3RVapp4kq07FlGB5Y
BJN9RVRJy/+Y/V/0qf8PRs7Kag==\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "google", " ", "scholar", " ", "data", " ", "from", " ", 
    "first", " ", "eight", " ", "search", " ", "pages", " ", "on", " ", 
    "DFT"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dataRaw", "=", 
    RowBox[{"dataGet", "[", 
     RowBox[{"\"\<density functional theory\>\"", ",", "8"}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.6854417656588078`*^9, 3.685441801155403*^9}, {
  3.685442317042369*^9, 3.685442330767838*^9}, {3.685442384437924*^9, 
  3.685442394562196*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataParsed", "=", 
   RowBox[{"parseData2", "[", "dataRaw", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"WordCloud", "@", "dataParsed"}]}], "Input",
 CellChangeTimes->{{3.685442347391364*^9, 3.685442362905871*^9}}],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"time-dependent\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.10920436817472699`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Perdew-Burke-Ernzerhof\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06600264010560422],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {0., 47.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"vibrational\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09480379215168606],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {15., -53.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"molecules\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08760350414016561],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {0., 87.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"implementation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06600264010560422],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-4., -92.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"M\[OSlash]ller-Plesset\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06600264010560422],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {0., 128.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"semiempirical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06600264010560422],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {6., -127.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"configuration\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06600264010560422],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {0., -163.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Hartree-Fock\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06600264010560422],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {0., 163.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"frequencies\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06600264010560422],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {0., 199.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"approximation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.058802352094083764`],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {0., -198.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Mott-Hubbard\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.058802352094083764`],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {0., 233.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"energetics\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06600264010560422],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-21., -231.}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"using\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09480379215168606],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {186., 195.}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"functionals\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06600264010560422],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {0., 266.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"adsorption\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06600264010560422],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {77., -266.}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"calculation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06600264010560422],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {180., -225.}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"interaction\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06600264010560422],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-120., -267.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"evaluation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06600264010560422],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-199., 265.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"quadratic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06600264010560422],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-209., -148.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Improved\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06600264010560422],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {207., -162.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Harmonic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06600264010560422],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {-202., 198.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"energies\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06600264010560422],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {-206., -42.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"excitation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06600264010560422],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {-208., -184.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"discontinuities\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.051602064082563306`],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {196., 290.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"interactions\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.058802352094083764`],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {-44., -299.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"dependent\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.058802352094083764`],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {-215., 81.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"excitations\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.058802352094083764`],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {217., 82.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Treatment\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.058802352094083764`],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {226., -91.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"efficient\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06600264010560422],
     FontColor->RGBColor[1, 0.75, 0]], {226., -43.}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"approach\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.058802352094083764`],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {-226., -77.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"electronic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.058802352094083764`],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {217., -123.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"insulators\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.058802352094083764`],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {-222., 113.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ordering\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.058802352094083764`],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {212., 115.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"adiabatic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.058802352094083764`],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-218., 145.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"revised\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06600264010560422],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-214., -111.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"derivative\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.051602064082563306`],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {222., 145.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"fractional\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.051602064082563306`],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {-186., -216.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"systems\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.051602064082563306`],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {-182., 230.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Orbital\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.058802352094083764`],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {176., 238.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"strong\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.058802352094083764`],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {143., -297.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"large\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06600264010560422],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {222., -259.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"scale\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06600264010560422],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {-267., -248.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"number\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.051602064082563306`],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {0., 297.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"chemist's\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04440177607104284],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {231., -192.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"energy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.051602064082563306`],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {-146., 297.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"particle\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.051602064082563306`],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-195., -299.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"frequency\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.037201488059522385`],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {-250., 173.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"dynamics\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.037201488059522385`],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {246., -291.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"time\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.058802352094083764`],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-278., 44.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"molecular\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.037201488059522385`],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {-252., 295.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"prediction\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.037201488059522385`],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {199., 315.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"guide\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04440177607104284],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {-284., 0.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Unified\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.037201488059522385`],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {282., 37.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"problem\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03000120004800192],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {282., 0.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"quantum\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03000120004800192],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {-159., -238.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"corrections\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02280091203648146],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {201., -66.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"-body\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03000120004800192],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {154., 264.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"description\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02280091203648146],
     FontColor->RGBColor[
      0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {276., -66.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"complexes\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02280091203648146],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {282., 58.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"including\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02280091203648146],
     FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {-158., 170.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"atoms\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03000120004800192],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-20., 315.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Accurate\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02280091203648146],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {284., 17.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"empirical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02280091203648146],
     FontColor->RGBColor[
      0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {285., -17.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Waals\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02280091203648146],
     FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {-94., 23.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"der\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02280091203648146],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {40., 26.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Proof\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.015600624024960999`],
     FontColor->RGBColor[0.31827505306025683`, 0.715, 0.3808317506505822]], {-8., 25.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"van\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02280091203648146],
     FontColor->RGBColor[
      0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {47., 57.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"E\[PartialD]\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.015600624024960999`],
     FontColor->RGBColor[
      0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {-37., -28.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ni\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.015600624024960999`],
     FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {-6., -26.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"\[PartialD]\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.015600624024960999`],
     FontColor->RGBColor[
      0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {15., 0.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"\[CurlyEpsilon]\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.015600624024960999`],
     FontColor->RGBColor[
      0.845266573755366, 0.437100139366951, 0.03816643438841502]], {9., 26.}, 
    Center, Automatic]},
  DefaultBaseStyle->{
   "Graphics", FontFamily -> "Helvetica", FontWeight -> Plain, FontTracking -> 
    "Plain", FontSlant -> Plain, FontVariations -> {}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-321.5, 319.5}, {-318.5, 328.5}}]], "Output",
 CellChangeTimes->{3.68544236033784*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "google", " ", "scholar", " ", "data", " ", "from", " ", 
    "first", " ", "5", " ", "search", " ", "pages", " ", "on", " ", "VO2"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataRaw", "=", 
     RowBox[{"dataGet", "[", 
      RowBox[{"\"\<vanadium dioxide\>\"", ",", "5"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataParsed", "=", 
     RowBox[{"parseData2", "[", "dataRaw", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"WordCloud", "@", "dataParsed"}]}]}]], "Input",
 CellChangeTimes->{{3.685444752110503*^9, 3.6854447636216393`*^9}, 
   3.685444908593487*^9}],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"properties\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.13307984790874525`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"metal\[Dash]insulator\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.10456273764258556`],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-1., 50.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"transition\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.12357414448669202`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {0., -54.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"synthesis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09505703422053231],
     FontColor->RGBColor[1, 0.75, 0]], {-1., 92.}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"hybrid-metamaterial\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057034220532319393`],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {2., -91.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"infrared\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09505703422053231],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {0., -127.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Optical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09505703422053231],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-13., 133.}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Single-crystalline\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057034220532319393`],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {10., -158.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"films\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11406844106463879`],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-2., 176.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"single-domain\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057034220532319393`],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {0., -185.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"single-crystal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057034220532319393`],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {110., 205.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nanoparticles\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057034220532319393`],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {77., -206.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"-dimensional\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057034220532319393`],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-72., 217.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"organization\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057034220532319393`],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {146., 128.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"engineering\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057034220532319393`],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {143., 155.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"rectangular\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057034220532319393`],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-138., 170.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nanobeams\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057034220532319393`],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-92., -212.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"thin\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.10456273764258556`],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-153., 83.}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"coatings\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06653992395437262],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {150., -115.}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Molybdenum-doped\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03802281368821293],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {94., -231.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pentoxide\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057034220532319393`],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {169., 85.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nanowires\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057034220532319393`],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-154., -118.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"hydrothermal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04752851711026616],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {-165., 119.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Dynamic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057034220532319393`],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {-168., -144.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"temperature\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04752851711026616],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {-162., 141.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"domains\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057034220532319393`],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {185., -144.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"tungsten-doped\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03802281368821293],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {-142., 194.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"sections\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057034220532319393`],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {185., -32.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"aspects\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057034220532319393`],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {182., -56.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Metastable\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04752851711026616],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {-162., -177.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Terahertz-field-induced\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028517110266159697`],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {154., 177.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"resonance\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057034220532319393`],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {88., 232.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"transport\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04752851711026616],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-181., -58.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"magnetic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04752851711026616],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {-187., -82.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nanobelts\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04752851711026616],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {152., -178.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"beams\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057034220532319393`],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {185., -83.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"tuning\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057034220532319393`],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-195., 0.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"electrical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04752851711026616],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {-49., -237.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"atmospheric\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03802281368821293],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-56., 240.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Strain\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057034220532319393`],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {195., 3.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"using\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057034220532319393`],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {-190., -27.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"deposition\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03802281368821293],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {-147., -234.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Intelligent\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03802281368821293],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-156., 241.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"produced\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03802281368821293],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {210., -199.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"New\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057034220532319393`],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {209., 30.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"insulator--metal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028517110266159697`],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {185., 106.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pressure\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03802281368821293],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {-212., 23.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Understanding\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028517110266159697`],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {52., -249.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"aqueous\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03802281368821293],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {-210., -195.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"chemical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03802281368821293],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {41., 250.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cross\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057034220532319393`],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {-223., 42.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"sol\[Dash]gel\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03802281368821293],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {220., 54.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"window\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03802281368821293],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {117., 250.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"metamaterial\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028517110266159697`],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {148., -249.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"method\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03802281368821293],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-196., 212.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"correlations\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028517110266159697`],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {-114., -253.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"metal\[Hyphen]semiconductor\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019011406844106463`],
     FontColor->RGBColor[
      0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {-46., 256.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"vapor\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03802281368821293],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {-222., 64.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"principles\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028517110266159697`],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {191., 230.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"glass\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03802281368821293],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {-223., 83.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"thermochromic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019011406844106463`],
     FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {227., -15.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"stoichiometry\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019011406844106463`],
     FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {-84., -27.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"high-energy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019011406844106463`],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {-233., -97.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"implantation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019011406844106463`],
     FontColor->RGBColor[
      0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {-27., -254.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"annealing\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019011406844106463`],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {-159., -99.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Tungsten\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019011406844106463`],
     FontColor->RGBColor[0.31827505306025683`, 0.715, 0.3808317506505822]], 
    {90., -28.}, Center, Automatic], InsetBox[
    StyleBox["\<\"Influence\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019011406844106463`],
     FontColor->RGBColor[
      0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {-16., 26.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"thermal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019011406844106463`],
     FontColor->RGBColor[
      0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {102., -134.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"doping\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019011406844106463`],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {-243., -16.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ion\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019011406844106463`],
     FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {-2., -27.},
     Center, Automatic]},
  DefaultBaseStyle->{
   "Graphics", FontFamily -> "Helvetica", FontWeight -> Plain, FontTracking -> 
    "Plain", FontSlant -> Plain, FontVariations -> {}},
  ImageSize->{349.94921875, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-263.5, 262.5}, {-261.5, 263.5}}]], "Output",
 CellChangeTimes->{{3.685444769014085*^9, 3.685444789655314*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "google", " ", "scholar", " ", "data", " ", "from", " ", 
    "first", " ", "5", " ", "search", " ", "pages", " ", "on", " ", 
    "Bi2Te3"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataRaw", "=", 
     RowBox[{"dataGet", "[", 
      RowBox[{"\"\<bismuth telluride\>\"", ",", "5"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataParsed", "=", 
     RowBox[{"parseData2", "[", "dataRaw", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"WordCloud", "@", "dataParsed"}]}]}]], "Input",
 CellChangeTimes->{{3.685444897021968*^9, 3.6854449047330027`*^9}}],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"properties\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.15659955257270694`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"thermoelectric\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11465324384787472`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {0., 50.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"characterization\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09787472035794183],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {4., -49.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"crystals\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09787472035794183],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {0., -84.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"quasi--dimensional\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05592841163310962],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-1., 83.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"electrodeposited\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05592841163310962],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {0., 105.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"selenide\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08109619686800895],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {6., -119.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Atomically-thin\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05592841163310962],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {0., 127.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nanowires\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07270693512304251],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {0., -147.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"structure\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08109619686800895],
     FontColor->RGBColor[1, 0.75, 0]], {0., 152.}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"alloys\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08948545861297538],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {126., -84.}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Experimental\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05592841163310962],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {0., -173.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"measurements\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05592841163310962],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {16., 177.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Electrodeposition\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04753914988814317],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {3., -196.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"antistructure\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05592841163310962],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-131., -107.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"High\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08948545861297538],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-134., 103.}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"Thermal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06431767337807606],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {-130., -79.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"respective\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05592841163310962],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {132., -114.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"quintuples\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05592841163310962],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {-133., -131.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"crystalline\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05592841163310962],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {150., 105.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"High\[Hyphen]Density\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04753914988814317],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {147., 126.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Exfoliation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05592841163310962],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {0., 194.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"existence\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05592841163310962],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-137., 133.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"individual\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05592841163310962],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {124., 146.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Evidence\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05592841163310962],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {127., -143.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Large\[Hyphen]Area\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04753914988814317],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-126., 157.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Templates\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04753914988814317],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {-126., -158.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Fabrication\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04753914988814317],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {128., -165.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"density\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05592841163310962],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-108., 178.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ribbons\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05592841163310962],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {142., 168.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"defects\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05592841163310962],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {-121., -185.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"quality\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05592841163310962],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {171., 80.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Nanowire\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04753914988814317],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {104., 197.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"atomic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05592841163310962],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {124., -188.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"single\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05592841163310962],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-174., 195.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"predictions\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.039149888143176735`],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {-94., -212.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Alumina\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04753914988814317],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {-98., 206.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Electronic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.039149888143176735`],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {124., -209.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Aspect\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04753914988814317],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {183., -26.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"dynamics\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.039149888143176735`],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-177., 82.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Arrays\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04753914988814317],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {-186., 0.}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"molecular\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.039149888143176735`],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {170., 210.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Porous\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04753914988814317],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {188., 6.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Anodic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04753914988814317],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {-188., 18.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Band\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05592841163310962],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-183., -23.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nanoplatelets\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03076062639821029],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {-1., 213.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"films\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05592841163310962],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-179., -47.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"transport\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.039149888143176735`],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {186., 183.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"electron\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.039149888143176735`],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {182., 24.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"phonon\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.039149888143176735`],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {-190., 39.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"hexagonal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03076062639821029],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {50., -214.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Ratio\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04753914988814317],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {184., -51.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Template\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03076062639821029],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {192., 39.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"synthesis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03076062639821029],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {71., 214.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"epitaxial\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03076062639821029],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {-189., 58.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"initio\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.039149888143176735`],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {181., 55.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"growth\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03076062639821029],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {199., -66.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"conductivity\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.022371364653243846`],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {-18., -212.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Chemical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.022371364653243846`],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {64., -28.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"-step\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03076062639821029],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {-196., -77.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Ab\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.039149888143176735`],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {191., -86.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"bonding\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.022371364653243846`],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {180., -9.},
     Center, Automatic]},
  DefaultBaseStyle->{
   "Graphics", FontFamily -> "Helvetica", FontWeight -> Plain, FontTracking -> 
    "Plain", FontSlant -> Plain, FontVariations -> {}},
  ImageSize->{336.59375, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-223.5, 223.5}, {-223.5, 223.5}}]], "Output",
 CellChangeTimes->{3.685444883706875*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "google", " ", "scholar", " ", "data", " ", "from", " ", 
    "first", " ", "10", " ", "search", " ", "pages", " ", "on", " ", 
    "steganography"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dataRaw", "=", 
    RowBox[{"dataGet", "[", 
     RowBox[{"\"\<steganography\>\"", ",", "10"}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.6854449149585657`*^9, 3.685444920193091*^9}, {
  3.685444986772253*^9, 3.685445008704829*^9}, {3.685445476535069*^9, 
  3.685445476993249*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataParsed", "=", 
   RowBox[{"parseData2", "[", "dataRaw", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"WordCloud", "@", "dataParsed"}]}], "Input",
 CellChangeTimes->{{3.685445480557036*^9, 3.685445483334611*^9}, 
   3.685445677397499*^9}],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"analysis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.17587939698492464`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"image\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.15508577369606655`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-0.5, -51.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"steganalysis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08230809218506326],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {-0.5, 45.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"digital\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.1186969329405649],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {2.5, 80.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"methods\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09270490382949229],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {1.5, -96.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"information-theoretic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.056316063073990646`],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {-0.5, 111.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"data\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.12389533876277942`],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-106.5, 75.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"detection\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08230809218506326],
     FontColor->RGBColor[1, 0.75, 0]], {4.5, -126.5}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"techniques\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06671287471841969],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-5.5, 132.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"lsb\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.12909374458499395`],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {115.5, -45.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"current\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08230809218506326],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {115.5, 73.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"spectrum\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06671287471841969],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {-0.5, -152.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"hiding\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08230809218506326],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-127.5, -37.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"survey\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07710968636284873],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-113.5, -80.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"anonymized\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.056316063073990646`],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {-9.5, 153.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"watermarking\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.051117657251776125`],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {117.5, -145.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"sample\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0719112805406342],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {119.5, -79.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"wherefore\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.056316063073990646`],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {-120.5, -106.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"warfare\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06151446889620516],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-133.5, 31.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"spread\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06671287471841969],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {132.5, 36.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"model-based\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.045919251429561596`],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {-119.5, -126.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"embedded\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.051117657251776125`],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {125.5, -103.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"structural\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.056316063073990646`],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {107.5, 131.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"countermeasures\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04072084560734708],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {-0.5, 172.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"networks\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.056316063073990646`],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {122.5, -124.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"employing\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.051117657251776125`],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {-103.5, -146.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"calibration\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.051117657251776125`],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {-119.5, 131.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"based\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06671287471841969],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {143.5, 97.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"patterns\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.056316063073990646`],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {93.5, 153.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"introduction\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.045919251429561596`],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-119.5, 150.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"watermarking-attacks\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030324033962918037`],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {25.5, -169.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"information\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.045919251429561596`],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {-89.5, -170.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"r3579x\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.056316063073990646`],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {-143.5, 108.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cyber\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06151446889620516],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {117.5, -166.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"hidden\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.056316063073990646`],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-99.5, 168.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"images\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.051117657251776125`],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {136.5, 169.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"model\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.056316063073990646`],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {-155.5, 6.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pair\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0719112805406342],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {150.5, 0.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"social\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.056316063073990646`],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {165.5, -19.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"robustness\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03552243978513256],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {-119.5, -62.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"via\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0719112805406342],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-167.5, 50.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"software\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04072084560734708],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-158.5, -11.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"thou\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.056316063073990646`],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {172.5, -41.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"created\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04072084560734708],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-0.5, -184.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"linguistic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03552243978513256],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {-0.5, 188.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"grayscale\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030324033962918037`],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {120.5, 53.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"seek\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.045919251429561596`],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {170.5, -61.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"using\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04072084560734708],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {-176.5, -55.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"hide\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.045919251429561596`],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-174.5, 72.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"concerns\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03552243978513256],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {58.5, -183.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"art\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.056316063073990646`],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {185.5, 17.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"exploring\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02512562814070352],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {135.5, 113.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"vs.\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06151446889620516],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-176.5, -71.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"limits\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03552243978513256],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {80.5, 89.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"reliable\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030324033962918037`],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {-39.5, -76.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"attacks\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030324033962918037`],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {-49.5, 185.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"seeing\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02512562814070352],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {-109.5, 47.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"text\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03552243978513256],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {136.5, 15.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"color\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030324033962918037`],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {79.5, 170.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"unseen\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02512562814070352],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {-66.5, 26.5},
     Center, Automatic]},
  DefaultBaseStyle->{
   "Graphics", FontFamily -> "Helvetica", FontWeight -> Plain, FontTracking -> 
    "Plain", FontSlant -> Plain, FontVariations -> {}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-198., 200.}, {-192., 198.}}]], "Output",
 CellChangeTimes->{3.685445486705633*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "google", " ", "scholar", " ", "data", " ", "from", " ", 
    "first", " ", "search", " ", "page", " ", "on", " ", "calphad"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dataRaw", "=", 
    RowBox[{"dataGet", "[", 
     RowBox[{"\"\<calphad\>\"", ",", "2"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.685445662908601*^9, 3.685445664673637*^9}, {
  3.685445705223969*^9, 3.685445705812488*^9}, {3.685445744639998*^9, 
  3.685445746584115*^9}, {3.685445780833259*^9, 3.685445803267881*^9}, {
  3.685606602563553*^9, 3.6856066035412397`*^9}, {3.685606679104968*^9, 
  3.685606679182185*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataParsed", "=", 
   RowBox[{"parseData2", "[", "dataRaw", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"WordCloud", "@", "dataParsed"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"computational\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.12704174228675136`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"software\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.12704174228675136`],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-13., 52.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"quantum-mechanical-based\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {0., -41.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"stability\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.12704174228675136`],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {0., -87.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"model\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.12704174228675136`],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {0., 107.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"lattice\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.12704174228675136`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {0., -142.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"thermodynamics\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {0., 151.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"thermochemical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {0., 180.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"comprehensive\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {7., -181.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ferromagnetic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {0., 210.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"methodology\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {-11., -213.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"thermo-calc\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {55., 233.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"experiments\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-38., -243.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"applications\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-182., -122.}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"comparison\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-184., 85.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"approaches\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {182., -135.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"predictions\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {178., 91.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"calculation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {-176., 114.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"databases\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {193., -98.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"formation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {193., 45.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"diagrams\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {-188., -73.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"transition\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {166., 120.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"materials\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {-160., -153.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"interface\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-195., 143.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"factsage\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {197., 150.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"enthalpy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {193., -167.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"package\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {-179., -184.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"science\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {-206., 33.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"alloying\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-186., 180.}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"method\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {149., -206.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pandat\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {212., -66.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"history\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {175., 180.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"metals\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {-94., 239.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"phase\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {-157., 210.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"alloys\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[1, 0.75, 0]], {-157., -215.}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"guide\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {125., -237.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"dictra\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {191., 207.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"metal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {-187., 239.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"tools\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {190., 236.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"initio\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {205., -237.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"brief\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-238., -222.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"ab\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {236., 0.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"ii\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06352087114337568],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {140., -72.},
     Center, Automatic]},
  DefaultBaseStyle->{
   "Graphics", FontFamily -> "Helvetica", FontWeight -> Plain, FontTracking -> 
    "Plain", FontSlant -> Plain, FontVariations -> {}},
  ImageSize->{544.5546875, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-276.5, 274.5}, {-262.5, 257.5}}]], "Output",
 CellChangeTimes->{
  3.68544570957089*^9, {3.685445762855131*^9, 3.6854457877530518`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataParsed", "=", 
   RowBox[{"parseData2", "[", "dataRaw", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"WordCloud", "@", "dataParsed"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"computational\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.13221153846153846`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"software\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.16826923076923078`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0., 47.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"quantum-mechanical-based\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {-5., -32.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"model\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.13221153846153846`],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {2., -69.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"thermodynamics\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {0., 90.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"comprehensive\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {0., -101.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"thermochemical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {0., 112.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"phase\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09615384615384616],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {5., -131.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"ferromagnetic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {0., 134.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"methodology\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {-17., 156.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"experiments\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {28., -158.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"applications\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-117., -120.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"approaches\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[1, 0.75, 0]], {-117., -144.5}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"thermo-calc\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {-114., -168.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"predictions\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {122., -120.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"calculation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {117., 156.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"databases\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {-132., -60.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"diagrams\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {128., -56.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"formation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {130., -80.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"factsage\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-130., -84.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"transition\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {139., 122.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"package\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {-141., 83.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"enthalpy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {142., 77.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"materials\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {-132., 133.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"interface\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-140., 105.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"alloying\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {140., -144.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"stability\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {-132., 160.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"science\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {141., -168.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pandat\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {0., 178.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"method\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {82., 178.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"history\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {162., 178.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"metals\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-169., 26.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"alloys\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {165., 35.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"guide\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-164., 48.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"lattice\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {6., -182.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"dictra\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-72., 180.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"metal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {171., 98.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"mtdata-thermodynamic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02403846153846154],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {139., -97.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"tools\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {69., -182.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"brief\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {182., -31.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"comparison\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02403846153846154],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {163., 54.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"equilibrium\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02403846153846154],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {-158., -101.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"laboratory\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02403846153846154],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {112., 102.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"physical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02403846153846154],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {115., 137.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"national\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02403846153846154],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {-186., -21.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"initio\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02403846153846154],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {80., -137.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ii\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06009615384615385],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {176., 0.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ab\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02403846153846154],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-58., -46.5},
     Center, Automatic]},
  DefaultBaseStyle->{
   "Graphics", FontFamily -> "Helvetica", FontWeight -> Plain, FontTracking -> 
    "Plain", FontSlant -> Plain, FontVariations -> {}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-207.5, 208.5}, {-193., 194.}}]], "Output",
 CellChangeTimes->{3.685606633559684*^9, 3.6856066875283623`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["dataParsed"], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ab\"\>", ",", "\<\"initio\"\>", ",", "\<\"lattice\"\>", 
   ",", "\<\"stability\"\>", ",", "\<\"comparison\"\>", 
   ",", "\<\"lattice\"\>", ",", "\<\"stability\"\>", 
   ",", "\<\"thermo-calc\"\>", ",", "\<\"dictra\"\>", 
   ",", "\<\"computational\"\>", ",", "\<\"tools\"\>", 
   ",", "\<\"materials\"\>", ",", "\<\"science\"\>", ",", "\<\"factsage\"\>", 
   ",", "\<\"thermochemical\"\>", ",", "\<\"software\"\>", 
   ",", "\<\"databases\"\>", ",", "\<\"model\"\>", ",", "\<\"alloying\"\>", 
   ",", "\<\"ferromagnetic\"\>", ",", "\<\"metals\"\>", 
   ",", "\<\"computational\"\>", ",", "\<\"thermodynamics\"\>", 
   ",", "\<\"method\"\>", ",", "\<\"brief\"\>", ",", "\<\"history\"\>", 
   ",", "\<\"calculation\"\>", ",", "\<\"phase\"\>", ",", "\<\"diagrams\"\>", 
   ",", "\<\"comprehensive\"\>", ",", "\<\"guide\"\>", ",", "\<\"model\"\>", 
   ",", "\<\"predictions\"\>", ",", "\<\"enthalpy\"\>", 
   ",", "\<\"formation\"\>", ",", "\<\"transition\"\>", ",", "\<\"metal\"\>", 
   ",", "\<\"alloys\"\>", ",", "\<\"ii\"\>", ",", "\<\"pandat\"\>", 
   ",", "\<\"software\"\>", ",", "\<\"package\"\>", 
   ",", "\<\"applications\"\>", ",", "\<\"interface\"\>", 
   ",", "\<\"quantum-mechanical-based\"\>", ",", "\<\"approaches\"\>", 
   ",", "\<\"experiments\"\>", ",", "\<\"methodology\"\>", 
   ",", "\<\"thermo-calc\"\>", ",", "\<\"dictra\"\>", 
   ",", "\<\"computational\"\>", ",", "\<\"tools\"\>", 
   ",", "\<\"materials\"\>", ",", "\<\"science\"\>", ",", "\<\"factsage\"\>", 
   ",", "\<\"thermochemical\"\>", ",", "\<\"software\"\>", 
   ",", "\<\"databases\"\>", ",", "\<\"model\"\>", ",", "\<\"alloying\"\>", 
   ",", "\<\"ferromagnetic\"\>", ",", "\<\"metals\"\>", 
   ",", "\<\"computational\"\>", ",", "\<\"thermodynamics\"\>", 
   ",", "\<\"method\"\>", ",", "\<\"brief\"\>", ",", "\<\"history\"\>", 
   ",", "\<\"calculation\"\>", ",", "\<\"phase\"\>", ",", "\<\"diagrams\"\>", 
   ",", "\<\"comprehensive\"\>", ",", "\<\"guide\"\>", ",", "\<\"model\"\>", 
   ",", "\<\"predictions\"\>", ",", "\<\"enthalpy\"\>", 
   ",", "\<\"formation\"\>", ",", "\<\"transition\"\>", ",", "\<\"metal\"\>", 
   ",", "\<\"alloys\"\>", ",", "\<\"ii\"\>", ",", "\<\"pandat\"\>", 
   ",", "\<\"software\"\>", ",", "\<\"package\"\>", 
   ",", "\<\"applications\"\>", ",", "\<\"interface\"\>", 
   ",", "\<\"quantum-mechanical-based\"\>", ",", "\<\"approaches\"\>", 
   ",", "\<\"experiments\"\>", ",", "\<\"methodology\"\>", 
   ",", "\<\"mtdata-thermodynamic\"\>", ",", "\<\"phase\"\>", 
   ",", "\<\"equilibrium\"\>", ",", "\<\"software\"\>", 
   ",", "\<\"national\"\>", ",", "\<\"physical\"\>", 
   ",", "\<\"laboratory\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.685606711135412*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"associate", "[", "words_", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Thread", "[", 
         RowBox[{"#", "\[DirectedEdge]", 
          RowBox[{"DeleteCases", "[", 
           RowBox[{
            RowBox[{"Nearest", "[", 
             RowBox[{"words", ",", "#", ",", "3"}], "]"}], ",", "#"}], 
           "]"}]}], "]"}], ")"}], "&"}], ",", "words"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.685606729437953*^9, 3.685606750744169*^9}, {
  3.685701066750424*^9, 3.685701078694564*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"calphad", "=", 
  RowBox[{"DeleteCases", "[", 
   RowBox[{
    RowBox[{"Commonest", "[", 
     RowBox[{"dataParsed", ",", "20"}], "]"}], ",", "\"\<ferromagnetic\>\""}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.68560694729292*^9, 3.685606948726739*^9}, {
  3.6856071058774223`*^9, 3.685607149280272*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"lattice\"\>", ",", "\<\"stability\"\>", 
   ",", "\<\"thermo-calc\"\>", ",", "\<\"dictra\"\>", 
   ",", "\<\"computational\"\>", ",", "\<\"tools\"\>", 
   ",", "\<\"materials\"\>", ",", "\<\"science\"\>", ",", "\<\"factsage\"\>", 
   ",", "\<\"thermochemical\"\>", ",", "\<\"software\"\>", 
   ",", "\<\"databases\"\>", ",", "\<\"model\"\>", ",", "\<\"alloying\"\>", 
   ",", "\<\"metals\"\>", ",", "\<\"thermodynamics\"\>", 
   ",", "\<\"method\"\>", ",", "\<\"brief\"\>", ",", "\<\"phase\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.685607126942657*^9, 3.685607149767411*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"associate", "[", "calphad", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graph", "[", 
  RowBox[{"%", ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "450"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.685606846676519*^9, 3.6856068568676777`*^9}, {
   3.685606894845477*^9, 3.685606903140444*^9}, {3.685606960597217*^9, 
   3.685606960733246*^9}, 3.685607082013288*^9, 3.6856071546797857`*^9, 
   3.6856072686900578`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"lattice\"\>", "\[DirectedEdge]", "\<\"science\"\>"}], ",", 
   RowBox[{"\<\"lattice\"\>", "\[DirectedEdge]", "\<\"factsage\"\>"}], ",", 
   RowBox[{"\<\"stability\"\>", "\[DirectedEdge]", "\<\"lattice\"\>"}], ",", 
   RowBox[{"\<\"stability\"\>", "\[DirectedEdge]", "\<\"tools\"\>"}], ",", 
   RowBox[{"\<\"thermo-calc\"\>", 
    "\[DirectedEdge]", "\<\"thermochemical\"\>"}], ",", 
   RowBox[{"\<\"thermo-calc\"\>", 
    "\[DirectedEdge]", "\<\"thermodynamics\"\>"}], ",", 
   RowBox[{"\<\"dictra\"\>", "\[DirectedEdge]", "\<\"factsage\"\>"}], ",", 
   RowBox[{"\<\"dictra\"\>", "\[DirectedEdge]", "\<\"lattice\"\>"}], ",", 
   RowBox[{"\<\"computational\"\>", "\[DirectedEdge]", "\<\"materials\"\>"}], 
   ",", 
   RowBox[{"\<\"computational\"\>", "\[DirectedEdge]", "\<\"lattice\"\>"}], 
   ",", 
   RowBox[{"\<\"tools\"\>", "\[DirectedEdge]", "\<\"model\"\>"}], ",", 
   RowBox[{"\<\"tools\"\>", "\[DirectedEdge]", "\<\"metals\"\>"}], ",", 
   RowBox[{"\<\"materials\"\>", "\[DirectedEdge]", "\<\"metals\"\>"}], ",", 
   RowBox[{"\<\"materials\"\>", "\[DirectedEdge]", "\<\"lattice\"\>"}], ",", 
   RowBox[{"\<\"science\"\>", "\[DirectedEdge]", "\<\"lattice\"\>"}], ",", 
   RowBox[{"\<\"science\"\>", "\[DirectedEdge]", "\<\"brief\"\>"}], ",", 
   RowBox[{"\<\"factsage\"\>", "\[DirectedEdge]", "\<\"lattice\"\>"}], ",", 
   RowBox[{"\<\"factsage\"\>", "\[DirectedEdge]", "\<\"dictra\"\>"}], ",", 
   RowBox[{"\<\"thermochemical\"\>", 
    "\[DirectedEdge]", "\<\"thermo-calc\"\>"}], ",", 
   RowBox[{"\<\"thermochemical\"\>", 
    "\[DirectedEdge]", "\<\"thermodynamics\"\>"}], ",", 
   RowBox[{"\<\"software\"\>", "\[DirectedEdge]", "\<\"factsage\"\>"}], ",", 
   RowBox[{"\<\"software\"\>", "\[DirectedEdge]", "\<\"lattice\"\>"}], ",", 
   RowBox[{"\<\"databases\"\>", "\[DirectedEdge]", "\<\"lattice\"\>"}], ",", 
   RowBox[{"\<\"databases\"\>", "\[DirectedEdge]", "\<\"materials\"\>"}], ",", 
   RowBox[{"\<\"model\"\>", "\[DirectedEdge]", "\<\"tools\"\>"}], ",", 
   RowBox[{"\<\"model\"\>", "\[DirectedEdge]", "\<\"metals\"\>"}], ",", 
   RowBox[{"\<\"alloying\"\>", "\[DirectedEdge]", "\<\"lattice\"\>"}], ",", 
   RowBox[{"\<\"alloying\"\>", "\[DirectedEdge]", "\<\"tools\"\>"}], ",", 
   RowBox[{"\<\"metals\"\>", "\[DirectedEdge]", "\<\"method\"\>"}], ",", 
   RowBox[{"\<\"metals\"\>", "\[DirectedEdge]", "\<\"tools\"\>"}], ",", 
   RowBox[{"\<\"thermodynamics\"\>", 
    "\[DirectedEdge]", "\<\"thermo-calc\"\>"}], ",", 
   RowBox[{"\<\"thermodynamics\"\>", 
    "\[DirectedEdge]", "\<\"thermochemical\"\>"}], ",", 
   RowBox[{"\<\"method\"\>", "\[DirectedEdge]", "\<\"metals\"\>"}], ",", 
   RowBox[{"\<\"method\"\>", "\[DirectedEdge]", "\<\"tools\"\>"}], ",", 
   RowBox[{"\<\"brief\"\>", "\[DirectedEdge]", "\<\"model\"\>"}], ",", 
   RowBox[{"\<\"brief\"\>", "\[DirectedEdge]", "\<\"tools\"\>"}], ",", 
   RowBox[{"\<\"phase\"\>", "\[DirectedEdge]", "\<\"tools\"\>"}], ",", 
   RowBox[{"\<\"phase\"\>", "\[DirectedEdge]", "\<\"model\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.685606903477955*^9, {3.685606951347557*^9, 3.68560696101455*^9}, 
   3.6856070825314493`*^9, {3.685607131014482*^9, 3.68560715510797*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "lattice", "science", "factsage", "stability", "tools", "thermo-calc", 
       "thermochemical", "thermodynamics", "dictra", "computational", 
       "materials", "model", "metals", "brief", "software", "databases", 
       "alloying", "method", "phase"}, {{{1, 2}, {1, 3}, {4, 1}, {4, 5}, {6, 
       7}, {6, 8}, {9, 3}, {9, 1}, {10, 11}, {10, 1}, {5, 12}, {5, 13}, {11, 
       13}, {11, 1}, {2, 1}, {2, 14}, {3, 1}, {3, 9}, {7, 6}, {7, 8}, {15, 
       3}, {15, 1}, {16, 1}, {16, 11}, {12, 5}, {12, 13}, {17, 1}, {17, 5}, {
       13, 18}, {13, 5}, {8, 6}, {8, 7}, {18, 13}, {18, 5}, {14, 12}, {14, 
       5}, {19, 5}, {19, 12}}, Null}, {
      ImageSize -> 450, VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[BezierCurveBox[{{3.893374826083841, -1.5248080227195413`}, {
         3.2901058389754527`, -1.1755690476490352`}, {
         3.0118966777602303`, -0.5364282219053682}}], 0.04041206180621232], 
        ArrowBox[BezierCurveBox[{{3.893374826083841, -1.5248080227195413`}, {
         4.367814165998643, -1.1461059385585368`}, {
         4.974420533425201, -1.1229397821046114`}}], 0.04041206180621232], 
        ArrowBox[BezierCurveBox[{{3.0118966777602303`, -0.5364282219053682}, {
         3.6151656648686217`, -0.8856671969775298}, {
         3.893374826083841, -1.5248080227195413`}}], 0.04041206180621232], 
        ArrowBox[{{3.0118966777602303`, -0.5364282219053682}, {
         1.8346175914396101`, -0.6418532425147276}}, 0.04041206180621232], 
        ArrowBox[BezierCurveBox[{{4.974420533425201, -1.1229397821046114`}, {
         4.499981193510384, -1.5016418662665085`}, {
         3.893374826083841, -1.5248080227195413`}}], 0.04041206180621232], 
        ArrowBox[BezierCurveBox[{{4.974420533425201, -1.1229397821046114`}, {
         4.74752963476262, -0.9401825115525968}, {
         4.673408121359279, -0.6584278290874512}}], 0.04041206180621232], 
        ArrowBox[{{2.755513267705013, -1.734626814653177}, {
         3.893374826083841, -1.5248080227195413`}}, 0.04041206180621232], 
        ArrowBox[{{2.755513267705013, -1.734626814653177}, {
         1.667313597262885, -1.5270366771907364`}}, 0.04041206180621232], 
        ArrowBox[BezierCurveBox[{{1.667313597262885, -1.5270366771907364`}, {
         1.3828260667464258`, -1.5042636114773944`}, {
         1.1673909662074073`, -1.3170752437859754`}}], 0.04041206180621232], 
        ArrowBox[BezierCurveBox[{{1.667313597262885, -1.5270366771907364`}, {
         1.871157383770486, -1.8415331705523428`}, {
         1.8485355048961698`, -2.2156301957112032`}}], 0.04041206180621232], 
        ArrowBox[BezierCurveBox[{{1.0333504372866287`, -4.641798889885237}, {
         1.142769074257536, -4.126950976001859}, {
         1.5364218787078823`, -3.7775539495392887`}}], 0.04041206180621232], 
        ArrowBox[BezierCurveBox[{{1.0333504372866287`, -4.641798889885237}, {
         0.6421884675085094, -4.289615638460313}, {
         0.5364282219053682, -3.774003866255369}}], 0.04041206180621232], 
        ArrowBox[BezierCurveBox[{{
         1.5364218787078823`, -3.7775539495392887`}, {
         1.427003241736972, -4.292401863420068}, {
         1.0333504372866287`, -4.641798889885237}}], 0.04041206180621232], 
        ArrowBox[BezierCurveBox[{{
         1.5364218787078823`, -3.7775539495392887`}, {
         1.0358412719588614`, -3.9402186120008214`}, {
         0.5364282219053682, -3.774003866255369}}], 0.04041206180621232], 
        ArrowBox[BezierCurveBox[{{0.5364282219053682, -3.774003866255369}, {
         0.9275901916834822, -4.126187117685464}, {
         1.0333504372866287`, -4.641798889885237}}], 0.04041206180621232], 
        ArrowBox[BezierCurveBox[{{0.5364282219053682, -3.774003866255369}, {
         1.0370088286544006`, -3.6113392037907923`}, {
         1.5364218787078823`, -3.7775539495392887`}}], 0.04041206180621232], 
        ArrowBox[{{4.673408121359279, -0.6584278290874512}, {
         3.893374826083841, -1.5248080227195413`}}, 0.04041206180621232], 
        ArrowBox[BezierCurveBox[{{4.673408121359279, -0.6584278290874512}, {
         4.900299020021862, -0.8411850996460707}, {
         4.974420533425201, -1.1229397821046114`}}], 0.04041206180621232], 
        ArrowBox[{{3.909995684336349, -2.7011474224446324`}, {
         3.893374826083841, -1.5248080227195413`}}, 0.04041206180621232], 
        ArrowBox[{{3.909995684336349, -2.7011474224446324`}, {
         3.2563163666293926`, -2.403036154492063}}, 0.04041206180621232], 
        ArrowBox[{{3.2563163666293926`, -2.403036154492063}, {
         3.893374826083841, -1.5248080227195413`}}, 0.04041206180621232], 
        ArrowBox[{{3.2563163666293926`, -2.403036154492063}, {
         1.8485355048961698`, -2.2156301957112032`}}, 0.04041206180621232], 
        ArrowBox[BezierCurveBox[{{
         1.1673909662074073`, -1.3170752437859754`}, {
         1.4518784967238665`, -1.3398483095040297`}, {
         1.667313597262885, -1.5270366771907364`}}], 0.04041206180621232], 
        ArrowBox[{{1.1673909662074073`, -1.3170752437859754`}, {
         1.8485355048961698`, -2.2156301957112032`}}, 0.04041206180621232], 
        ArrowBox[BezierCurveBox[{{
         1.8485355048961698`, -2.2156301957112032`}, {
         1.6446917183885696`, -1.9011337023462611`}, {
         1.667313597262885, -1.5270366771907364`}}], 0.04041206180621232], 
        ArrowBox[BezierCurveBox[{{
         1.8485355048961698`, -2.2156301957112032`}, {
         1.486163908103353, -2.430878669970836}, {
         1.066768161875178, -2.389018332204725}}], 0.04041206180621232], 
        ArrowBox[{{1.8346175914396101`, -0.6418532425147276}, {
         1.667313597262885, -1.5270366771907364`}}, 0.04041206180621232], 
        ArrowBox[{{1.8346175914396101`, -0.6418532425147276}, {
         1.1673909662074073`, -1.3170752437859754`}}, 0.04041206180621232], 
        ArrowBox[{{5.086611891419613, -1.6642231304233592`}, {
         3.893374826083841, -1.5248080227195413`}}, 0.04041206180621232], 
        ArrowBox[{{5.086611891419613, -1.6642231304233592`}, {
         4.974420533425201, -1.1229397821046114`}}, 0.04041206180621232], 
        ArrowBox[{{4.207659985835641, -2.3294608577106213`}, {
         3.893374826083841, -1.5248080227195413`}}, 0.04041206180621232], 
        ArrowBox[{{4.207659985835641, -2.3294608577106213`}, {
         3.2563163666293926`, -2.403036154492063}}, 0.04041206180621232], 
        ArrowBox[{{2.7780694882404844`, -1.21681898569164}, {
         3.893374826083841, -1.5248080227195413`}}, 0.04041206180621232], 
        ArrowBox[{{2.7780694882404844`, -1.21681898569164}, {
         1.667313597262885, -1.5270366771907364`}}, 0.04041206180621232], 
        ArrowBox[{{1.066768161875178, -2.389018332204725}, {
         1.667313597262885, -1.5270366771907364`}}, 0.04041206180621232], 
        ArrowBox[BezierCurveBox[{{1.066768161875178, -2.389018332204725}, {
         1.4291397586679946`, -2.1737698579500506`}, {
         1.8485355048961698`, -2.2156301957112032`}}], 0.04041206180621232], 
        ArrowBox[{{0.5364282219053678, -1.2530813745735032`}, {
         1.667313597262885, -1.5270366771907364`}}, 0.04041206180621232], 
        ArrowBox[{{0.5364282219053678, -1.2530813745735032`}, {
         1.1673909662074073`, -1.3170752437859754`}}, 0.04041206180621232]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{3.893374826083841, -1.5248080227195413}, 
          0.04041206180621232], 
         InsetBox["\<\"lattice\"\>", 
          Offset[{2, 2}, {3.9337868878900535, -1.484395960913329}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.0118966777602303, -0.5364282219053682}, 
          0.04041206180621232], 
         InsetBox["\<\"science\"\>", 
          Offset[{2, 2}, {3.0523087395664428, -0.4960161600991559}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.974420533425201, -1.1229397821046114}, 
          0.04041206180621232], 
         InsetBox["\<\"factsage\"\>", 
          Offset[{2, 2}, {5.014832595231414, -1.0825277202983992}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.755513267705013, -1.734626814653177}, 
          0.04041206180621232], 
         InsetBox["\<\"stability\"\>", 
          Offset[{2, 2}, {2.7959253295112254, -1.6942147528469647}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.667313597262885, -1.5270366771907364}, 
          0.04041206180621232], 
         InsetBox["\<\"tools\"\>", 
          Offset[{2, 2}, {1.7077256590690972, -1.4866246153845242}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.0333504372866287, -4.641798889885237}, 
          0.04041206180621232], 
         InsetBox["\<\"thermo-calc\"\>", 
          Offset[{2, 2}, {1.073762499092841, -4.601386828079025}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.5364218787078823, -3.7775539495392887}, 
          0.04041206180621232], 
         InsetBox["\<\"thermochemical\"\>", 
          Offset[{2, 2}, {1.5768339405140945, -3.737141887733076}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5364282219053682, -3.774003866255369}, 
          0.04041206180621232], 
         InsetBox["\<\"thermodynamics\"\>", 
          Offset[{2, 2}, {0.5768402837115805, -3.7335918044491567}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.673408121359279, -0.6584278290874512}, 
          0.04041206180621232], 
         InsetBox["\<\"dictra\"\>", 
          Offset[{2, 2}, {4.713820183165492, -0.618015767281239}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.909995684336349, -2.7011474224446324}, 
          0.04041206180621232], 
         InsetBox["\<\"computational\"\>", 
          Offset[{2, 2}, {3.9504077461425613, -2.66073536063842}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.2563163666293926, -2.403036154492063}, 
          0.04041206180621232], 
         InsetBox["\<\"materials\"\>", 
          Offset[{2, 2}, {3.296728428435605, -2.3626240926858504}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.1673909662074073, -1.3170752437859754}, 
          0.04041206180621232], 
         InsetBox["\<\"model\"\>", 
          Offset[{2, 2}, {1.2078030280136196, -1.2766631819797631}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8485355048961698, -2.2156301957112032}, 
          0.04041206180621232], 
         InsetBox["\<\"metals\"\>", 
          Offset[{2, 2}, {1.888947566702382, -2.1752181339049907}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8346175914396101, -0.6418532425147276}, 
          0.04041206180621232], 
         InsetBox["\<\"brief\"\>", 
          Offset[{2, 2}, {1.8750296532458224, -0.6014411807085154}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.086611891419613, -1.6642231304233592}, 
          0.04041206180621232], 
         InsetBox["\<\"software\"\>", 
          Offset[{2, 2}, {5.127023953225826, -1.623811068617147}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.207659985835641, -2.3294608577106213}, 
          0.04041206180621232], 
         InsetBox["\<\"databases\"\>", 
          Offset[{2, 2}, {4.248072047641854, -2.289048795904409}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.7780694882404844, -1.21681898569164}, 
          0.04041206180621232], 
         InsetBox["\<\"alloying\"\>", 
          Offset[{2, 2}, {2.818481550046697, -1.1764069238854278}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.066768161875178, -2.389018332204725}, 
          0.04041206180621232], 
         InsetBox["\<\"method\"\>", 
          Offset[{2, 2}, {1.1071802236813904, -2.3486062703985127}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5364282219053678, -1.2530813745735032}, 
          0.04041206180621232], 
         InsetBox["\<\"phase\"\>", 
          Offset[{2, 2}, {0.57684028371158, -1.212669312767291}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{588.08203125, Automatic}]], "Output",
 CellChangeTimes->{
  3.685606903477955*^9, {3.685606951347557*^9, 3.68560696101455*^9}, 
   3.6856070825314493`*^9, {3.685607131014482*^9, 3.6856071552079983`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"associate", "[", "calphad", "]"}]], "Input",
 CellChangeTimes->{{3.685607284058271*^9, 3.68560734326297*^9}}],

Cell[BoxData[
 RowBox[{"TreeGraph", "[", 
  RowBox[{
   RowBox[{"{", "lattice", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"lattice\"\>", "\[DirectedEdge]", "\<\"science\"\>"}], ",", 
     RowBox[{"\<\"lattice\"\>", "\[DirectedEdge]", "\<\"factsage\"\>"}], ",", 
     
     RowBox[{"\<\"stability\"\>", "\[DirectedEdge]", "\<\"lattice\"\>"}], ",", 
     RowBox[{"\<\"stability\"\>", "\[DirectedEdge]", "\<\"tools\"\>"}], ",", 
     RowBox[{"\<\"thermo-calc\"\>", 
      "\[DirectedEdge]", "\<\"thermochemical\"\>"}], ",", 
     RowBox[{"\<\"thermo-calc\"\>", 
      "\[DirectedEdge]", "\<\"thermodynamics\"\>"}], ",", 
     RowBox[{"\<\"dictra\"\>", "\[DirectedEdge]", "\<\"factsage\"\>"}], ",", 
     RowBox[{"\<\"dictra\"\>", "\[DirectedEdge]", "\<\"lattice\"\>"}], ",", 
     RowBox[{"\<\"computational\"\>", 
      "\[DirectedEdge]", "\<\"materials\"\>"}], ",", 
     RowBox[{"\<\"computational\"\>", "\[DirectedEdge]", "\<\"lattice\"\>"}], 
     ",", 
     RowBox[{"\<\"tools\"\>", "\[DirectedEdge]", "\<\"model\"\>"}], ",", 
     RowBox[{"\<\"tools\"\>", "\[DirectedEdge]", "\<\"metals\"\>"}], ",", 
     RowBox[{"\<\"materials\"\>", "\[DirectedEdge]", "\<\"metals\"\>"}], ",", 
     
     RowBox[{"\<\"materials\"\>", "\[DirectedEdge]", "\<\"lattice\"\>"}], ",", 
     RowBox[{"\<\"science\"\>", "\[DirectedEdge]", "\<\"lattice\"\>"}], ",", 
     RowBox[{"\<\"science\"\>", "\[DirectedEdge]", "\<\"brief\"\>"}], ",", 
     RowBox[{"\<\"factsage\"\>", "\[DirectedEdge]", "\<\"lattice\"\>"}], ",", 
     
     RowBox[{"\<\"factsage\"\>", "\[DirectedEdge]", "\<\"dictra\"\>"}], ",", 
     RowBox[{"\<\"thermochemical\"\>", 
      "\[DirectedEdge]", "\<\"thermo-calc\"\>"}], ",", 
     RowBox[{"\<\"thermochemical\"\>", 
      "\[DirectedEdge]", "\<\"thermodynamics\"\>"}], ",", 
     RowBox[{"\<\"software\"\>", "\[DirectedEdge]", "\<\"factsage\"\>"}], ",", 
     RowBox[{"\<\"software\"\>", "\[DirectedEdge]", "\<\"lattice\"\>"}], ",", 
     
     RowBox[{"\<\"databases\"\>", "\[DirectedEdge]", "\<\"lattice\"\>"}], ",", 
     RowBox[{"\<\"databases\"\>", "\[DirectedEdge]", "\<\"materials\"\>"}], 
     ",", 
     RowBox[{"\<\"model\"\>", "\[DirectedEdge]", "\<\"tools\"\>"}], ",", 
     RowBox[{"\<\"model\"\>", "\[DirectedEdge]", "\<\"metals\"\>"}], ",", 
     RowBox[{"\<\"alloying\"\>", "\[DirectedEdge]", "\<\"lattice\"\>"}], ",", 
     
     RowBox[{"\<\"alloying\"\>", "\[DirectedEdge]", "\<\"tools\"\>"}], ",", 
     RowBox[{"\<\"metals\"\>", "\[DirectedEdge]", "\<\"method\"\>"}], ",", 
     RowBox[{"\<\"metals\"\>", "\[DirectedEdge]", "\<\"tools\"\>"}], ",", 
     RowBox[{"\<\"thermodynamics\"\>", 
      "\[DirectedEdge]", "\<\"thermo-calc\"\>"}], ",", 
     RowBox[{"\<\"thermodynamics\"\>", 
      "\[DirectedEdge]", "\<\"thermochemical\"\>"}], ",", 
     RowBox[{"\<\"method\"\>", "\[DirectedEdge]", "\<\"metals\"\>"}], ",", 
     RowBox[{"\<\"method\"\>", "\[DirectedEdge]", "\<\"tools\"\>"}], ",", 
     RowBox[{"\<\"brief\"\>", "\[DirectedEdge]", "\<\"model\"\>"}], ",", 
     RowBox[{"\<\"brief\"\>", "\[DirectedEdge]", "\<\"tools\"\>"}], ",", 
     RowBox[{"\<\"phase\"\>", "\[DirectedEdge]", "\<\"tools\"\>"}], ",", 
     RowBox[{"\<\"phase\"\>", "\[DirectedEdge]", "\<\"model\"\>"}]}], "}"}]}],
   "]"}]], "Output",
 CellChangeTimes->{{3.685607284757063*^9, 3.6856073344321003`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"associate", "[", "dataParsed", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graph", "[", 
  RowBox[{"%", ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "450"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.685606762377676*^9, 3.685606789014903*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "ab", "ii", "initio", "lattice", "stability", "comparison", "formation",
        "thermo-calc", "thermochemical", "dictra", "history", "tools", 
       "model", "materials", "metals", "science", "factsage", "package", 
       "databases", "alloying", "alloys", "ferromagnetic", "metal", 
       "thermodynamics", "method", "brief", "calculation", "computational", 
       "diagrams", "comprehensive", "guide", "predictions", "applications", 
       "enthalpy", "transition", "pandat", "interface", 
       "quantum-mechanical-based", "approaches", "experiments", "methodology",
        "mtdata-thermodynamic", "equilibrium", "national", "physical", 
       "phase", "laboratory"}, {{{1, 2}, {1, 2}, {3, 2}, {3, 2}, {4, 3}, {5, 
       1}, {6, 7}, {6, 7}, {4, 3}, {5, 1}, {8, 9}, {10, 11}, {12, 13}, {14, 
       15}, {16, 4}, {17, 18}, {9, 8}, {19, 4}, {20, 21}, {22, 7}, {15, 23}, {
       24, 8}, {25, 15}, {26, 13}, {11, 10}, {27, 28}, {29, 10}, {30, 6}, {31,
        13}, {32, 33}, {34, 15}, {7, 6}, {35, 3}, {23, 15}, {21, 20}, {2, 
       1}, {36, 18}, {18, 17}, {33, 32}, {37, 14}, {38, 9}, {39, 14}, {40, 
       14}, {41, 25}, {8, 9}, {10, 11}, {12, 13}, {14, 15}, {16, 4}, {17, 
       18}, {9, 8}, {19, 4}, {20, 21}, {22, 7}, {15, 23}, {24, 8}, {25, 15}, {
       26, 13}, {11, 10}, {27, 28}, {29, 10}, {30, 6}, {31, 13}, {32, 33}, {
       34, 15}, {7, 6}, {35, 3}, {23, 15}, {21, 20}, {2, 1}, {36, 18}, {18, 
       17}, {33, 32}, {37, 14}, {38, 9}, {39, 14}, {40, 14}, {41, 25}, {42, 
       24}, {42, 24}, {43, 3}, {43, 26}, {44, 3}, {44, 14}, {45, 46}, {45, 
       46}, {47, 11}, {47, 11}}, Null}, {
      ImageSize -> 450, VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.015857246708478236`], 
        ArrowBox[BezierCurveBox[{{7.2947571264857185`, -1.146466005929517}, {
         7.301278854752463, -1.658001108386699}, {
         7.0028998903156605`, -2.0735497668784184`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{7.2947571264857185`, -1.146466005929517}, {
         7.199798340229316, -1.626053808984101}, {
         7.0028998903156605`, -2.0735497668784184`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{
         7.0028998903156605`, -2.0735497668784184`}, {
         6.996378162048916, -1.5620146644162214`}, {
         7.2947571264857185`, -1.146466005929517}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{
         7.0028998903156605`, -2.0735497668784184`}, {
         7.097858676572115, -1.5939619638268079`}, {
         7.2947571264857185`, -1.146466005929517}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{6.717739339841062, -3.1691491877981126`}, {
         6.680158427688948, -2.574457463354074}, {
         7.0028998903156605`, -2.0735497668784184`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{6.717739339841062, -3.1691491877981126`}, {
         7.040480802467785, -2.668241491315834}, {
         7.0028998903156605`, -2.0735497668784184`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{6.915720648539624, -4.222298982285091}, {
         6.64354925508916, -3.7282802793634646`}, {
         6.717739339841062, -3.1691491877981126`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{6.915720648539624, -4.222298982285091}, {
         6.989910733291526, -3.663167890667867}, {
         6.717739339841062, -3.1691491877981126`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{7.525791000157886, -0.43188895240217207`}, {
         7.527779647923745, -0.8271688619770178}, {
         7.2947571264857185`, -1.146466005929517}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{7.525791000157886, -0.43188895240217207`}, {
         7.2927684787198634`, -0.7511860963511241}, {
         7.2947571264857185`, -1.146466005929517}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{8.7345112466529, -5.802827730972089}, {
         8.210770393303795, -5.975076405478368}, {
         7.687029539957276, -5.802827730964218}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{8.7345112466529, -5.802827730972089}, {
         8.210770393304703, -5.860416882117954}, {
         7.687029539957276, -5.802827730964218}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{7.687029539957276, -5.802827730964218}, {
         8.21077039330639, -5.630579056407277}, {
         8.7345112466529, -5.802827730972089}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{7.687029539957276, -5.802827730964218}, {
         8.210770393305532, -5.745238580523701}, {
         8.7345112466529, -5.802827730972089}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{2.399508309311294, -5.802827896230744}, {
         2.9252164525607833`, -5.629932137588013}, {
         3.45092464260415, -5.802827753948982}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{2.399508309311294, -5.802827896230744}, {
         2.9252164681353348`, -5.7450223538855285`}, {
         3.45092464260415, -5.802827753948982}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{3.45092464260415, -5.802827753948982}, {
         2.925216499354662, -5.975723512556559}, {
         2.399508309311294, -5.802827896230744}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{3.45092464260415, -5.802827753948982}, {
         2.9252164837801096`, -5.860633296416849}, {
         2.399508309311294, -5.802827896230744}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{1.3814900085710988`, -6.666605801035088}, {
         1.9052574485741902`, -6.494348382670853}, {
         2.4290248885772447`, -6.666605801035187}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{1.3814900085710988`, -6.666605801035088}, {
         1.9052574485740374`, -6.6090137269422575`}, {
         2.4290248885772447`, -6.666605801035187}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{2.4290248885772447`, -6.666605801035187}, {
         1.9052574485741554`, -6.8388632194604}, {
         1.3814900085710988`, -6.666605801035088}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{2.4290248885772447`, -6.666605801035187}, {
         1.905257448574184, -6.724197875221495}, {
         1.3814900085710988`, -6.666605801035088}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{11.094677643209288`, -4.077991345768325}, {
         10.708916307853036`, -3.970644197325972}, {
         10.462177130290295`, -3.6552793349835437`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{11.094677643209288`, -4.077991345768325}, {
         10.847938465646529`, -3.7626264834383094`}, {
         10.462177130290295`, -3.6552793349835437`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{3.56591068815487, -3.1639071358627993`}, {
         2.8648523972293707`, -3.4677602394310902`}, {
         2.120293163097102, -3.2961764910923517`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{3.56591068815487, -3.1639071358627993`}, {
         2.821351454022621, -2.992323387518541}, {
         2.120293163097102, -3.2961764910923517`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{2.120293163097102, -3.2961764910923517`}, {
         1.7667986584970754`, -3.40145759273631}, {
         1.419819500714092, -3.2763658695504976`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{2.120293163097102, -3.2961764910923517`}, {
         1.7689671702883258`, -3.324782290418388}, {
         1.419819500714092, -3.2763658695504976`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{6.735277116606673, -4.939049660880475}, {
         6.707635865440917, -4.551002052426872}, {
         6.915720648539624, -4.222298982285091}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{6.735277116606673, -4.939049660880475}, {
         6.943361899705382, -4.610346590850797}, {
         6.915720648539624, -4.222298982285091}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{4.547358232437507, -6.6666058010352724`}, {
         5.047460054508013, -6.502131566596485}, {
         5.54756187657848, -6.6666058010352724`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{4.547358232437507, -6.6666058010352724`}, {
         5.047460054507995, -6.61161593539938}, {
         5.54756187657848, -6.6666058010352724`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{5.54756187657848, -6.6666058010352724`}, {
         5.047460054507976, -6.831080035619161}, {
         4.547358232437507, -6.6666058010352724`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{5.54756187657848, -6.6666058010352724`}, {
         5.047460054507994, -6.721595667196206}, {
         4.547358232437507, -6.6666058010352724`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{7.357472228893893, -4.822644900056705}, {
         7.037875107430049, -4.595113901076629}, {
         6.915720648539624, -4.222298982285091}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{7.357472228893893, -4.822644900056705}, {
         7.235317770003447, -4.449829981261455}, {
         6.915720648539624, -4.222298982285091}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{8.714909465596287, -6.6666058010352724`}, {
         8.214909465596264, -6.831046548200463}, {
         7.714909465596287, -6.6666058010352724`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{8.714909465596287, -6.6666058010352724`}, {
         8.214909465596234, -6.721584470737259}, {
         7.714909465596287, -6.6666058010352724`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{7.714909465596287, -6.6666058010352724`}, {
         8.214909465596312, -6.502165053862244}, {
         8.714909465596287, -6.6666058010352724`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{7.714909465596287, -6.6666058010352724`}, {
         8.214909465596287, -6.611627131318148}, {
         8.714909465596287, -6.6666058010352724`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{6.736306161376061, -5.80282773094628}, {
         7.211667850669608, -5.6464900681871075`}, {
         7.687029539957276, -5.802827730964218}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{6.736306161376061, -5.80282773094628}, {
         7.211667850663714, -5.959165393752994}, {
         7.687029539957276, -5.802827730964218}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{1.419819500714092, -3.2763658695504976`}, {
         1.7733140053141172`, -3.171084767901895}, {
         2.120293163097102, -3.2961764910923517`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{1.419819500714092, -3.2763658695504976`}, {
         1.7711454935228392`, -3.247760070242216}, {
         2.120293163097102, -3.2961764910923517`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{1.3499794798766838`, -5.802827754553593}, {
         1.8747439178914904`, -5.630242520484936}, {
         2.399508309311294, -5.802827896230744}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{1.3499794798766838`, -5.802827754553593}, {
         1.8747438712964446`, -5.975413130321962}, {
         2.399508309311294, -5.802827896230744}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{1.167002992093674, -3.8098839236498034`}, {
         1.5591736435521053`, -3.396270459361646}, {
         2.120293163097102, -3.2961764910923517`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{1.167002992093674, -3.8098839236498034`}, {
         1.728122511638649, -3.709789955367437}, {
         2.120293163097102, -3.2961764910923517`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{9.343031143961314, -3.504793799871302}, {
         9.927350090959921, -3.396003365298726}, {
         10.462177130290295`, -3.6552793349835437`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{9.343031143961314, -3.504793799871302}, {
         9.877858183291675, -3.7640697696152423`}, {
         10.462177130290295`, -3.6552793349835437`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{10.88266446735955, -6.6666058010352724`}, {
         10.38266446735952, -6.831046548339462}, {
         9.88266446735955, -6.6666058010352724`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{10.88266446735955, -6.6666058010352724`}, {
         10.38266446735952, -6.502165054203368}, {
         9.88266446735955, -6.6666058010352724`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{0.43188895240217207`, -6.666605801035457}, {
         0.9066894804865802, -6.510452693850401}, {
         1.3814900085710988`, -6.666605801035088}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{0.43188895240217207`, -6.666605801035457}, {
         0.9066894804866871, -6.822758908235096}, {
         1.3814900085710988`, -6.666605801035088}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{9.684084416922136, -5.8028277309434735`}, {
         9.20929783179222, -5.958976252410528}, {
         8.7345112466529, -5.802827730972089}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{9.684084416922136, -5.8028277309434735`}, {
         9.209297831782779, -5.6466792093576075`}, {
         8.7345112466529, -5.802827730972089}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{11.186641564318467`, -3.425509552119504}, {
         10.862192862078638`, -3.6595259160857503`}, {
         10.462177130290295`, -3.6552793349835437`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{11.186641564318467`, -3.425509552119504}, {
         10.78662583253011, -3.421262970635462}, {
         10.462177130290295`, -3.6552793349835437`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{1.431888952402172, -7.5303837058398}, {
         0.931888952402154, -7.694824453054809}, {
         0.43188895240217207`, -7.5303837058398}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{1.431888952402172, -7.5303837058398}, {
         0.931888952402116, -7.585362375422227}, {
         0.43188895240217207`, -7.5303837058398}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{0.43188895240217207`, -7.5303837058398}, {
         0.9318889524021893, -7.365942958702632}, {
         1.431888952402172, -7.5303837058398}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{0.43188895240217207`, -7.5303837058398}, {
         0.9318889524021701, -7.475405036273089}, {
         1.431888952402172, -7.5303837058398}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{
         1.5880471641795921`, -2.7228987354583496`}, {
         1.9484403861182606`, -2.922014683539239}, {
         2.120293163097102, -3.2961764910923517`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{
         1.5880471641795921`, -2.7228987354583496`}, {
         1.7598999411584313`, -3.097060543016866}, {
         2.120293163097102, -3.2961764910923517`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{7.158003003853954, -2.876786524904674}, {
         6.985947506582166, -3.095365142190147}, {
         6.717739339841062, -3.1691491877981126`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{7.158003003853954, -2.876786524904674}, {
         6.889794837112885, -2.9505705705691607`}, {
         6.717739339841062, -3.1691491877981126`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{6.547154463833024, -6.6666058010352724`}, {
         6.047358170205747, -6.830979553009163}, {
         5.54756187657848, -6.6666058010352724`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{6.547154463833024, -6.6666058010352724`}, {
         6.047358170205747, -6.502232049189846}, {
         5.54756187657848, -6.6666058010352724`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{3.3953781006204182`, -3.814750624114022}, {
         3.37361920488035, -3.461286373920411}, {
         3.56591068815487, -3.1639071358627993`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{3.3953781006204182`, -3.814750624114022}, {
         3.587669583894938, -3.517371386101484}, {
         3.56591068815487, -3.1639071358627993`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{4.369971109175383, -5.802827566166563}, {
         3.9104479067688422`, -5.9539563475892585`}, {
         3.45092464260415, -5.802827753948982}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{4.369971109175383, -5.802827566166563}, {
         3.910447845010692, -5.6516989723853515`}, {
         3.45092464260415, -5.802827753948982}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{3.6275769513559917`, -2.493753280870033}, {
         3.706944420398087, -2.8389706547910145`}, {
         3.56591068815487, -3.1639071358627993`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{3.6275769513559917`, -2.493753280870033}, {
         3.4865432191127748`, -2.818689761972058}, {
         3.56591068815487, -3.1639071358627993`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{3.07389638614595, -2.7509858143248693`}, {
         3.3878046277919545`, -2.8765392756597854`}, {
         3.56591068815487, -3.1639071358627993`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{3.07389638614595, -2.7509858143248693`}, {
         3.252002446508887, -3.038353674521274}, {
         3.56591068815487, -3.1639071358627993`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{0.43188895240217207`, -4.115210753985405}, {
         0.7492378001324784, -3.8416646368469327`}, {
         1.167002992093674, -3.8098839236498034`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{0.43188895240217207`, -4.115210753985405}, {
         0.8496541443633511, -4.083430040766323}, {
         1.167002992093674, -3.8098839236498034`}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{0.43188895240217184`, -5.802827565684819}, {
         0.890934247197154, -5.651856167822821}, {
         1.3499794798766838`, -5.802827754553593}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{0.43188895240217184`, -5.802827565684819}, {
         0.8909341850817025, -5.9537991524565586`}, {
         1.3499794798766838`, -5.802827754553593}}], 0.06821630618232295], 
        ArrowBox[{{8.095881804587412, -3.3353558119009437`}, {
         6.717739339841062, -3.1691491877981126`}}, 0.06821630618232295], 
        ArrowBox[{{8.095881804587412, -3.3353558119009437`}, {
         9.343031143961314, -3.504793799871302}}, 0.06821630618232295], 
        ArrowBox[{{5.132565195764547, -3.1622841176280794`}, {
         6.717739339841062, -3.1691491877981126`}}, 0.06821630618232295], 
        ArrowBox[{{5.132565195764547, -3.1622841176280794`}, {
         3.56591068815487, -3.1639071358627993`}}, 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{7.241154210762492, -7.5303837058398}, {
         6.741154210762473, -7.694824452786563}, {
         6.241154210762492, -7.5303837058398}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{7.241154210762492, -7.5303837058398}, {
         6.741154210762473, -7.36594295868627}, {
         6.241154210762492, -7.5303837058398}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{3.3796032306742436`, -6.666605801035422}, {
         2.9043140596257073`, -6.822919613755229}, {
         2.4290248885772447`, -6.666605801035187}}], 0.06821630618232295], 
        ArrowBox[BezierCurveBox[{{3.3796032306742436`, -6.666605801035422}, {
         2.9043140596257815`, -6.510291988192572}, {
         2.4290248885772447`, -6.666605801035187}}], 0.06821630618232295]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{7.2947571264857185, -1.146466005929517}, 
          0.06821630618232295], 
         InsetBox["\<\"ab\"\>", 
          Offset[{2, 2}, {7.362973432668041, -1.0782496997471942}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.0028998903156605, -2.0735497668784184}, 
          0.06821630618232295], 
         InsetBox["\<\"ii\"\>", 
          Offset[{2, 2}, {7.071116196497983, -2.0053334606960953}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.717739339841062, -3.1691491877981126}, 
          0.06821630618232295], 
         InsetBox["\<\"initio\"\>", 
          Offset[{2, 2}, {6.7859556460233845, -3.1009328816157895}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.915720648539624, -4.222298982285091}, 
          0.06821630618232295], 
         InsetBox["\<\"lattice\"\>", 
          Offset[{2, 2}, {6.983936954721947, -4.154082676102768}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.525791000157886, -0.43188895240217207}, 
          0.06821630618232295], 
         InsetBox["\<\"stability\"\>", 
          Offset[{2, 2}, {7.594007306340209, -0.3636726462198491}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.7345112466529, -5.802827730972089}, 0.06821630618232295], 
         InsetBox["\<\"comparison\"\>", 
          Offset[{2, 2}, {8.802727552835224, -5.734611424789766}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.687029539957276, -5.802827730964218}, 
          0.06821630618232295], 
         InsetBox["\<\"formation\"\>", 
          Offset[{2, 2}, {7.755245846139599, -5.734611424781895}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.399508309311294, -5.802827896230744}, 
          0.06821630618232295], 
         InsetBox["\<\"thermo-calc\"\>", 
          Offset[{2, 2}, {2.467724615493617, -5.734611590048421}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.45092464260415, -5.802827753948982}, 0.06821630618232295],
          InsetBox["\<\"thermochemical\"\>", 
          Offset[{2, 2}, {3.519140948786473, -5.734611447766659}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.3814900085710988, -6.666605801035088}, 
          0.06821630618232295], 
         InsetBox["\<\"dictra\"\>", 
          Offset[{2, 2}, {1.4497063147534217, -6.598389494852765}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.4290248885772447, -6.666605801035187}, 
          0.06821630618232295], 
         InsetBox["\<\"history\"\>", 
          Offset[{2, 2}, {2.497241194759568, -6.5983894948528645}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{11.094677643209288, -4.077991345768325}, 
          0.06821630618232295], 
         InsetBox["\<\"tools\"\>", 
          Offset[{2, 2}, {11.162893949391611, -4.009775039586002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.462177130290295, -3.6552793349835437}, 
          0.06821630618232295], 
         InsetBox["\<\"model\"\>", 
          Offset[{2, 2}, {10.530393436472618, -3.5870630288012206}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.56591068815487, -3.1639071358627993}, 
          0.06821630618232295], 
         InsetBox["\<\"materials\"\>", 
          Offset[{2, 2}, {3.634126994337193, -3.095690829680476}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.120293163097102, -3.2961764910923517}, 
          0.06821630618232295], 
         InsetBox["\<\"metals\"\>", 
          Offset[{2, 2}, {2.188509469279425, -3.2279601849100286}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.735277116606673, -4.939049660880475}, 
          0.06821630618232295], 
         InsetBox["\<\"science\"\>", 
          Offset[{2, 2}, {6.803493422788995, -4.870833354698152}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.547358232437507, -6.6666058010352724}, 
          0.06821630618232295], 
         InsetBox["\<\"factsage\"\>", 
          Offset[{2, 2}, {4.615574538619829, -6.59838949485295}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.54756187657848, -6.6666058010352724}, 
          0.06821630618232295], 
         InsetBox["\<\"package\"\>", 
          Offset[{2, 2}, {5.615778182760803, -6.59838949485295}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.357472228893893, -4.822644900056705}, 
          0.06821630618232295], 
         InsetBox["\<\"databases\"\>", 
          Offset[{2, 2}, {7.425688535076215, -4.754428593874382}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.714909465596287, -6.6666058010352724}, 
          0.06821630618232295], 
         InsetBox["\<\"alloying\"\>", 
          Offset[{2, 2}, {8.78312577177861, -6.59838949485295}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.714909465596287, -6.6666058010352724}, 
          0.06821630618232295], 
         InsetBox["\<\"alloys\"\>", 
          Offset[{2, 2}, {7.78312577177861, -6.59838949485295}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.736306161376061, -5.80282773094628}, 0.06821630618232295],
          InsetBox["\<\"ferromagnetic\"\>", 
          Offset[{2, 2}, {6.8045224675583835, -5.7346114247639575}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.419819500714092, -3.2763658695504976}, 
          0.06821630618232295], 
         InsetBox["\<\"metal\"\>", 
          Offset[{2, 2}, {1.4880358068964148, -3.2081495633681745}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.3499794798766838, -5.802827754553593}, 
          0.06821630618232295], 
         InsetBox["\<\"thermodynamics\"\>", 
          Offset[{2, 2}, {1.4181957860590066, -5.73461144837127}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.167002992093674, -3.8098839236498034}, 
          0.06821630618232295], 
         InsetBox["\<\"method\"\>", 
          Offset[{2, 2}, {1.2352192982759969, -3.7416676174674803}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.343031143961314, -3.504793799871302}, 
          0.06821630618232295], 
         InsetBox["\<\"brief\"\>", 
          Offset[{2, 2}, {9.411247450143637, -3.436577493688979}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.88266446735955, -6.6666058010352724}, 
          0.06821630618232295], 
         InsetBox["\<\"calculation\"\>", 
          Offset[{2, 2}, {10.950880773541874, -6.59838949485295}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.88266446735955, -6.6666058010352724}, 
          0.06821630618232295], 
         InsetBox["\<\"computational\"\>", 
          Offset[{2, 2}, {9.950880773541874, -6.59838949485295}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.43188895240217207, -6.666605801035457}, 
          0.06821630618232295], 
         InsetBox["\<\"diagrams\"\>", 
          Offset[{2, 2}, {0.5001052585844951, -6.5983894948531345}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.684084416922136, -5.8028277309434735}, 
          0.06821630618232295], 
         InsetBox["\<\"comprehensive\"\>", 
          Offset[{2, 2}, {9.75230072310446, -5.734611424761151}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{11.186641564318467, -3.425509552119504}, 
          0.06821630618232295], 
         InsetBox["\<\"guide\"\>", 
          Offset[{2, 2}, {11.254857870500791, -3.3572932459371807}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.431888952402172, -7.5303837058398}, 0.06821630618232295], 
         InsetBox["\<\"predictions\"\>", 
          Offset[{2, 2}, {1.500105258584495, -7.462167399657478}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.43188895240217207, -7.5303837058398}, 
          0.06821630618232295], 
         InsetBox["\<\"applications\"\>", 
          Offset[{2, 2}, {0.5001052585844951, -7.462167399657478}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.5880471641795921, -2.7228987354583496}, 
          0.06821630618232295], 
         InsetBox["\<\"enthalpy\"\>", 
          Offset[{2, 2}, {1.656263470361915, -2.6546824292760265}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.158003003853954, -2.876786524904674}, 
          0.06821630618232295], 
         InsetBox["\<\"transition\"\>", 
          Offset[{2, 2}, {7.226219310036277, -2.808570218722351}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.547154463833024, -6.6666058010352724}, 
          0.06821630618232295], 
         InsetBox["\<\"pandat\"\>", 
          Offset[{2, 2}, {6.615370770015347, -6.59838949485295}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.3953781006204182, -3.814750624114022}, 
          0.06821630618232295], 
         InsetBox["\<\"interface\"\>", 
          Offset[{2, 2}, {3.4635944068027413, -3.7465343179316988}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.369971109175383, -5.802827566166563}, 
          0.06821630618232295], 
         InsetBox["\<\"quantum-mechanical-based\"\>", 
          Offset[{2, 2}, {4.438187415357706, -5.7346112599842405}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.6275769513559917, -2.493753280870033}, 
          0.06821630618232295], 
         InsetBox["\<\"approaches\"\>", 
          Offset[{2, 2}, {3.695793257538315, -2.42553697468771}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.07389638614595, -2.7509858143248693}, 
          0.06821630618232295], 
         InsetBox["\<\"experiments\"\>", 
          Offset[{2, 2}, {3.142112692328273, -2.682769508142546}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.43188895240217207, -4.115210753985405}, 
          0.06821630618232295], 
         InsetBox["\<\"methodology\"\>", 
          Offset[{2, 2}, {0.5001052585844951, -4.046994447803082}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.43188895240217184, -5.802827565684819}, 
          0.06821630618232295], 
         InsetBox["\<\"mtdata-thermodynamic\"\>", 
          Offset[{2, 2}, {0.5001052585844948, -5.734611259502496}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.095881804587412, -3.3353558119009437}, 
          0.06821630618232295], 
         InsetBox["\<\"equilibrium\"\>", 
          Offset[{2, 2}, {8.164098110769736, -3.2671395057186206}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.132565195764547, -3.1622841176280794}, 
          0.06821630618232295], 
         InsetBox["\<\"national\"\>", 
          Offset[{2, 2}, {5.20078150194687, -3.0940678114457563}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.241154210762492, -7.5303837058398}, 0.06821630618232295], 
         InsetBox["\<\"physical\"\>", 
          Offset[{2, 2}, {7.309370516944814, -7.462167399657478}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.241154210762492, -7.5303837058398}, 0.06821630618232295], 
         InsetBox["\<\"phase\"\>", 
          Offset[{2, 2}, {6.309370516944814, -7.462167399657478}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.3796032306742436, -6.666605801035422}, 
          0.06821630618232295], 
         InsetBox["\<\"laboratory\"\>", 
          Offset[{2, 2}, {3.4478195368565667, -6.598389494853099}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{1199.6953125, Automatic}]], "Output",
 CellChangeTimes->{3.68560679006732*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"GraphicsGrid", "@", 
  RowBox[{"{", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"StarGraph", "[", 
      RowBox[{"i", ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Subscript", "[", 
         RowBox[{"S", ",", "i"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4", ",", "10"}], "}"}]}], "]"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "@", 
  RowBox[{"{", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"WheelGraph", "[", 
      RowBox[{"i", ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Subscript", "[", 
         RowBox[{"W", ",", "i"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4", ",", "7"}], "}"}]}], "]"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.6856074089692097`*^9, 3.685607440040881*^9}, {
  3.685607642875465*^9, 3.6856076711458282`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     FormBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3, 4}, {Null, 
            SparseArray[
            Automatic, {4, 4}, 0, {
             1, {{0, 3, 4, 5, 6}, {{2}, {3}, {4}, {1}, {1}, {1}}}, 
              Pattern}]}, {
           GraphLayout -> "StarEmbedding", PlotLabel -> 
            Subscript[$CellContext`S, 4]}]]}, 
         TagBox[
          GraphicsGroupBox[
           GraphicsComplexBox[{{0., 0.}, {
            0.8660254037844389, -0.5000000000000012}, {
            1.8369701987210297`*^-16, 
            1.}, {-0.8660254037844386, -0.49999999999999917`}}, {
             {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
              {Arrowheads[0.], ArrowBox[{1, 2}, 0.020399597244776413`]}, 
              {Arrowheads[0.], ArrowBox[{1, 3}, 0.020399597244776413`]}, 
              {Arrowheads[0.], ArrowBox[{1, 4}, 0.020399597244776413`]}}, 
             {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
              DiskBox[1, 0.020399597244776413], 
              DiskBox[2, 0.020399597244776413], 
              DiskBox[3, 0.020399597244776413], 
              DiskBox[4, 0.020399597244776413]}}]],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FormatType->TraditionalForm,
       FrameTicks->None,
       PlotLabel->FormBox[
         SubscriptBox["S", "4"], TraditionalForm]],
      TraditionalForm], {195.75, -189.}, {Center, Center}, {360., 360.}], 
    InsetBox[
     FormBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3, 4, 5}, {Null, 
            SparseArray[
            Automatic, {5, 5}, 0, {
             1, {{0, 4, 5, 6, 7, 8}, {{2}, {3}, {4}, {5}, {1}, {1}, {1}, {
               1}}}, Pattern}]}, {
           GraphLayout -> "StarEmbedding", PlotLabel -> 
            Subscript[$CellContext`S, 5]}]]}, 
         TagBox[
          GraphicsGroupBox[
           GraphicsComplexBox[{{0., 0.}, {6.049014748177263*^-16, -1.}, {
            1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 1.}, {-1.,
             3.6739403974420594`*^-16}}, {
             {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
              {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{1, 3}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{1, 4}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{1, 5}, 0.02261146496815286]}}, 
             {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
              DiskBox[1, 0.02261146496815286], 
              DiskBox[2, 0.02261146496815286], 
              DiskBox[3, 0.02261146496815286], 
              DiskBox[4, 0.02261146496815286], 
              DiskBox[5, 0.02261146496815286]}}]],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FormatType->TraditionalForm,
       FrameTicks->None,
       PlotLabel->FormBox[
         SubscriptBox["S", "5"], TraditionalForm]],
      TraditionalForm], {587.25, -189.}, {Center, Center}, {360., 360.}], 
    InsetBox[
     FormBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3, 4, 5, 6}, {Null, 
            SparseArray[
            Automatic, {6, 6}, 0, {
             1, {{0, 5, 6, 7, 8, 9, 10}, {{2}, {3}, {4}, {5}, {6}, {1}, {1}, {
               1}, {1}, {1}}}, Pattern}]}, {
           GraphLayout -> "StarEmbedding", PlotLabel -> 
            Subscript[$CellContext`S, 6]}]]}, 
         TagBox[
          GraphicsGroupBox[
           GraphicsComplexBox[{{0., 
            0.}, {-0.5877852522924726, -0.8090169943749468}, {
            0.5877852522924738, -0.8090169943749481}, {0.9510565162951533, 
            0.30901699437494634`}, {-7.044813998280222*^-16, 
            1.}, {-0.9510565162951538, 0.30901699437494945`}}, {
             {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
              {Arrowheads[0.], ArrowBox[{1, 2}, 0.021812234931106983`]}, 
              {Arrowheads[0.], ArrowBox[{1, 3}, 0.021812234931106983`]}, 
              {Arrowheads[0.], ArrowBox[{1, 4}, 0.021812234931106983`]}, 
              {Arrowheads[0.], ArrowBox[{1, 5}, 0.021812234931106983`]}, 
              {Arrowheads[0.], ArrowBox[{1, 6}, 0.021812234931106983`]}}, 
             {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
              DiskBox[1, 0.021812234931106983], 
              DiskBox[2, 0.021812234931106983], 
              DiskBox[3, 0.021812234931106983], 
              DiskBox[4, 0.021812234931106983], 
              DiskBox[5, 0.021812234931106983], 
              DiskBox[6, 0.021812234931106983]}}]],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FormatType->TraditionalForm,
       FrameTicks->None,
       PlotLabel->FormBox[
         SubscriptBox["S", "6"], TraditionalForm]],
      TraditionalForm], {978.75, -189.}, {Center, Center}, {360., 360.}], 
    InsetBox[
     FormBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3, 4, 5, 6, 7}, {Null, 
            SparseArray[
            Automatic, {7, 7}, 0, {
             1, {{0, 6, 7, 8, 9, 10, 11, 12}, {{2}, {3}, {4}, {5}, {6}, {7}, {
               1}, {1}, {1}, {1}, {1}, {1}}}, Pattern}]}, {
           GraphLayout -> "StarEmbedding", PlotLabel -> 
            Subscript[$CellContext`S, 7]}]]}, 
         TagBox[
          GraphicsGroupBox[
           GraphicsComplexBox[{{0., 
            0.}, {-0.8660254037844384, -0.4999999999999994}, {
            3.8285686989269494`*^-16, -1.}, {
            0.8660254037844389, -0.5000000000000012}, {0.8660254037844386, 
            0.4999999999999993}, {1.8369701987210297`*^-16, 
            1.}, {-0.8660254037844388, 0.5000000000000013}}, {
             {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
              {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{1, 3}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{1, 4}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{1, 5}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{1, 6}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{1, 7}, 0.02261146496815286]}}, 
             {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
              DiskBox[1, 0.02261146496815286], 
              DiskBox[2, 0.02261146496815286], 
              DiskBox[3, 0.02261146496815286], 
              DiskBox[4, 0.02261146496815286], 
              DiskBox[5, 0.02261146496815286], 
              DiskBox[6, 0.02261146496815286], 
              DiskBox[7, 0.02261146496815286]}}]],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FormatType->TraditionalForm,
       FrameTicks->None,
       PlotLabel->FormBox[
         SubscriptBox["S", "7"], TraditionalForm]],
      TraditionalForm], {1370.25, -189.}, {Center, Center}, {360., 360.}], 
    InsetBox[
     FormBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
            SparseArray[
            Automatic, {8, 8}, 0, {
             1, {{0, 7, 8, 9, 10, 11, 12, 13, 14}, {{2}, {3}, {4}, {5}, {6}, {
               7}, {8}, {1}, {1}, {1}, {1}, {1}, {1}, {1}}}, Pattern}]}, {
           GraphLayout -> "StarEmbedding", PlotLabel -> 
            Subscript[$CellContext`S, 8]}]]}, 
         TagBox[
          GraphicsGroupBox[
           GraphicsComplexBox[{{0., 
            0.}, {-0.9749279121818235, -0.22252093395631342`}, \
{-0.43388373911755757`, -0.9009688679024187}, {
            0.43388373911755884`, -0.9009688679024196}, {
            0.9749279121818237, -0.2225209339563155}, {0.7818314824680294, 
            0.6234898018587326}, {-7.044813998280222*^-16, 
            1.}, {-0.7818314824680302, 0.6234898018587351}}, {
             {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
              {Arrowheads[0.], ArrowBox[{1, 2}, 0.02220329551621769]}, 
              {Arrowheads[0.], ArrowBox[{1, 3}, 0.02220329551621769]}, 
              {Arrowheads[0.], ArrowBox[{1, 4}, 0.02220329551621769]}, 
              {Arrowheads[0.], ArrowBox[{1, 5}, 0.02220329551621769]}, 
              {Arrowheads[0.], ArrowBox[{1, 6}, 0.02220329551621769]}, 
              {Arrowheads[0.], ArrowBox[{1, 7}, 0.02220329551621769]}, 
              {Arrowheads[0.], ArrowBox[{1, 8}, 0.02220329551621769]}}, 
             {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
              DiskBox[1, 0.02220329551621769], 
              DiskBox[2, 0.02220329551621769], 
              DiskBox[3, 0.02220329551621769], 
              DiskBox[4, 0.02220329551621769], 
              DiskBox[5, 0.02220329551621769], 
              DiskBox[6, 0.02220329551621769], 
              DiskBox[7, 0.02220329551621769], 
              DiskBox[8, 0.02220329551621769]}}]],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FormatType->TraditionalForm,
       FrameTicks->None,
       PlotLabel->FormBox[
         SubscriptBox["S", "8"], TraditionalForm]],
      TraditionalForm], {1761.75, -189.}, {Center, Center}, {360., 360.}], 
    InsetBox[
     FormBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {Null, 
            SparseArray[
            Automatic, {9, 9}, 0, {
             1, {{0, 8, 9, 10, 11, 12, 13, 14, 15, 16}, {{2}, {3}, {4}, {5}, {
               6}, {7}, {8}, {9}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}}}, 
              Pattern}]}, {
           GraphLayout -> "StarEmbedding", PlotLabel -> 
            Subscript[$CellContext`S, 9]}]]}, 
         TagBox[
          GraphicsGroupBox[
           GraphicsComplexBox[{{0., 0.}, {-1., 
            1.0106430996148606`*^-15}, {-0.7071067811865471, \
-0.7071067811865468}, {6.049014748177263*^-16, -1.}, {
            0.7071067811865481, -0.7071067811865483}, {
            1., -1.133107779529596*^-15}, {0.707106781186547, 
            0.7071067811865467}, {-7.044813998280222*^-16, 
            1.}, {-0.707106781186548, 0.7071067811865483}}, {
             {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
              {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{1, 3}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{1, 4}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{1, 5}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{1, 6}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{1, 7}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{1, 8}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{1, 9}, 0.02261146496815286]}}, 
             {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
              DiskBox[1, 0.02261146496815286], 
              DiskBox[2, 0.02261146496815286], 
              DiskBox[3, 0.02261146496815286], 
              DiskBox[4, 0.02261146496815286], 
              DiskBox[5, 0.02261146496815286], 
              DiskBox[6, 0.02261146496815286], 
              DiskBox[7, 0.02261146496815286], 
              DiskBox[8, 0.02261146496815286], 
              DiskBox[9, 0.02261146496815286]}}]],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FormatType->TraditionalForm,
       FrameTicks->None,
       PlotLabel->FormBox[
         SubscriptBox["S", "9"], TraditionalForm]],
      TraditionalForm], {2153.25, -189.}, {Center, Center}, {360., 360.}], 
    InsetBox[
     FormBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
            SparseArray[
            Automatic, {10, 10}, 0, {
             1, {{0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18}, {{2}, {3}, {4}, {
               5}, {6}, {7}, {8}, {9}, {10}, {1}, {1}, {1}, {1}, {1}, {1}, {
               1}, {1}, {1}}}, Pattern}]}, {
           GraphLayout -> "StarEmbedding", PlotLabel -> 
            Subscript[$CellContext`S, 10]}]]}, 
         TagBox[
          GraphicsGroupBox[
           GraphicsComplexBox[{{0., 0.}, {-0.9848077530122081, 
            0.17364817766693114`}, {-0.8660254037844384, \
-0.4999999999999994}, {-0.3420201433256684, -0.9396926207859079}, {
            0.3420201433256691, -0.9396926207859085}, {
            0.8660254037844389, -0.5000000000000012}, {0.984807753012208, 
            0.17364817766692903`}, {0.6427876096865388, 
            0.7660444431189772}, {-7.044813998280222*^-16, 
            1.}, {-0.6427876096865399, 0.7660444431189788}}, {
             {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
              {Arrowheads[0.], ArrowBox[{1, 2}, 0.022364449578799767`]}, 
              {Arrowheads[0.], ArrowBox[{1, 3}, 0.022364449578799767`]}, 
              {Arrowheads[0.], ArrowBox[{1, 4}, 0.022364449578799767`]}, 
              {Arrowheads[0.], ArrowBox[{1, 5}, 0.022364449578799767`]}, 
              {Arrowheads[0.], ArrowBox[{1, 6}, 0.022364449578799767`]}, 
              {Arrowheads[0.], ArrowBox[{1, 7}, 0.022364449578799767`]}, 
              {Arrowheads[0.], ArrowBox[{1, 8}, 0.022364449578799767`]}, 
              {Arrowheads[0.], ArrowBox[{1, 9}, 0.022364449578799767`]}, 
              {Arrowheads[0.], ArrowBox[{1, 10}, 0.022364449578799767`]}}, 
             {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
              DiskBox[1, 0.022364449578799767], 
              DiskBox[2, 0.022364449578799767], 
              DiskBox[3, 0.022364449578799767], 
              DiskBox[4, 0.022364449578799767], 
              DiskBox[5, 0.022364449578799767], 
              DiskBox[6, 0.022364449578799767], 
              DiskBox[7, 0.022364449578799767], 
              DiskBox[8, 0.022364449578799767], 
              DiskBox[9, 0.022364449578799767], 
              DiskBox[10, 0.022364449578799767]}}]],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FormatType->TraditionalForm,
       FrameTicks->None,
       PlotLabel->FormBox[
         SubscriptBox["S", "10"], TraditionalForm]],
      TraditionalForm], {2544.75, -189.}, {
     Center, Center}, {360., 360.}]}, {}},
  ContentSelectable->True,
  ImageSize->{999.453125, Automatic},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.6856074094278603`*^9, 3.685607441810446*^9}, {
  3.685607643624309*^9, 3.6856076779512444`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     FormBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3, 4}, {Null, 
            SparseArray[
            Automatic, {4, 4}, 0, {
             1, {{0, 3, 6, 9, 12}, {{2}, {3}, {4}, {1}, {3}, {4}, {1}, {2}, {
               4}, {1}, {2}, {3}}}, Pattern}]}, {
           GraphLayout -> "StarEmbedding", PlotLabel -> 
            Subscript[$CellContext`W, 4]}]]}, 
         TagBox[
          GraphicsGroupBox[
           GraphicsComplexBox[{{0., 0.}, {
            0.8660254037844389, -0.5000000000000012}, {
            1.8369701987210297`*^-16, 
            1.}, {-0.8660254037844386, -0.49999999999999917`}}, {
             {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
              {Arrowheads[0.], ArrowBox[{1, 2}, 0.020399597244776413`]}, 
              {Arrowheads[0.], ArrowBox[{1, 3}, 0.020399597244776413`]}, 
              {Arrowheads[0.], ArrowBox[{1, 4}, 0.020399597244776413`]}, 
              {Arrowheads[0.], ArrowBox[{2, 3}, 0.020399597244776413`]}, 
              {Arrowheads[0.], ArrowBox[{2, 4}, 0.020399597244776413`]}, 
              {Arrowheads[0.], ArrowBox[{3, 4}, 0.020399597244776413`]}}, 
             {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
              DiskBox[1, 0.020399597244776413], 
              DiskBox[2, 0.020399597244776413], 
              DiskBox[3, 0.020399597244776413], 
              DiskBox[4, 0.020399597244776413]}}]],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FormatType->TraditionalForm,
       FrameTicks->None,
       PlotLabel->FormBox[
         SubscriptBox["W", "4"], TraditionalForm]],
      TraditionalForm], {194.4, -189.}, {
     Center, Center}, {360.00000000000006, 360.}], InsetBox[
     FormBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3, 4, 5}, {Null, 
            SparseArray[
            Automatic, {5, 5}, 0, {
             1, {{0, 4, 7, 10, 13, 16}, {{2}, {3}, {4}, {5}, {1}, {3}, {5}, {
               1}, {2}, {4}, {1}, {3}, {5}, {1}, {2}, {4}}}, Pattern}]}, {
           GraphLayout -> "StarEmbedding", PlotLabel -> 
            Subscript[$CellContext`W, 5]}]]}, 
         TagBox[
          GraphicsGroupBox[
           GraphicsComplexBox[{{0., 0.}, {6.049014748177263*^-16, -1.}, {
            1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 1.}, {-1.,
             3.6739403974420594`*^-16}}, {
             {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
              {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{1, 3}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{1, 4}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{1, 5}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{2, 3}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{2, 5}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{3, 4}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{4, 5}, 0.02261146496815286]}}, 
             {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
              DiskBox[1, 0.02261146496815286], 
              DiskBox[2, 0.02261146496815286], 
              DiskBox[3, 0.02261146496815286], 
              DiskBox[4, 0.02261146496815286], 
              DiskBox[5, 0.02261146496815286]}}]],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FormatType->TraditionalForm,
       FrameTicks->None,
       PlotLabel->FormBox[
         SubscriptBox["W", "5"], TraditionalForm]],
      TraditionalForm], {583.2, -189.}, {
     Center, Center}, {360.00000000000006, 360.}], InsetBox[
     FormBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3, 4, 5, 6}, {Null, 
            SparseArray[
            Automatic, {6, 6}, 0, {
             1, {{0, 5, 8, 11, 14, 17, 20}, {{2}, {3}, {4}, {5}, {6}, {1}, {
               3}, {6}, {1}, {2}, {4}, {1}, {3}, {5}, {1}, {4}, {6}, {1}, {
               2}, {5}}}, Pattern}]}, {
           GraphLayout -> "StarEmbedding", PlotLabel -> 
            Subscript[$CellContext`W, 6]}]]}, 
         TagBox[
          GraphicsGroupBox[
           GraphicsComplexBox[{{0., 
            0.}, {-0.5877852522924726, -0.8090169943749468}, {
            0.5877852522924738, -0.8090169943749481}, {0.9510565162951533, 
            0.30901699437494634`}, {-7.044813998280222*^-16, 
            1.}, {-0.9510565162951538, 0.30901699437494945`}}, {
             {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
              {Arrowheads[0.], ArrowBox[{1, 2}, 0.021812234931106983`]}, 
              {Arrowheads[0.], ArrowBox[{1, 3}, 0.021812234931106983`]}, 
              {Arrowheads[0.], ArrowBox[{1, 4}, 0.021812234931106983`]}, 
              {Arrowheads[0.], ArrowBox[{1, 5}, 0.021812234931106983`]}, 
              {Arrowheads[0.], ArrowBox[{1, 6}, 0.021812234931106983`]}, 
              {Arrowheads[0.], ArrowBox[{2, 3}, 0.021812234931106983`]}, 
              {Arrowheads[0.], ArrowBox[{2, 6}, 0.021812234931106983`]}, 
              {Arrowheads[0.], ArrowBox[{3, 4}, 0.021812234931106983`]}, 
              {Arrowheads[0.], ArrowBox[{4, 5}, 0.021812234931106983`]}, 
              {Arrowheads[0.], ArrowBox[{5, 6}, 0.021812234931106983`]}}, 
             {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
              DiskBox[1, 0.021812234931106983], 
              DiskBox[2, 0.021812234931106983], 
              DiskBox[3, 0.021812234931106983], 
              DiskBox[4, 0.021812234931106983], 
              DiskBox[5, 0.021812234931106983], 
              DiskBox[6, 0.021812234931106983]}}]],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FormatType->TraditionalForm,
       FrameTicks->None,
       PlotLabel->FormBox[
         SubscriptBox["W", "6"], TraditionalForm]],
      TraditionalForm], {972., -189.}, {Center, Center}, {360., 360.}], 
    InsetBox[
     FormBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3, 4, 5, 6, 7}, {Null, 
            SparseArray[
            Automatic, {7, 7}, 0, {
             1, {{0, 6, 9, 12, 15, 18, 21, 24}, {{2}, {3}, {4}, {5}, {6}, {
               7}, {1}, {3}, {7}, {1}, {2}, {4}, {1}, {3}, {5}, {1}, {4}, {
               6}, {1}, {5}, {7}, {1}, {2}, {6}}}, Pattern}]}, {
           GraphLayout -> "StarEmbedding", PlotLabel -> 
            Subscript[$CellContext`W, 7]}]]}, 
         TagBox[
          GraphicsGroupBox[
           GraphicsComplexBox[{{0., 
            0.}, {-0.8660254037844384, -0.4999999999999994}, {
            3.8285686989269494`*^-16, -1.}, {
            0.8660254037844389, -0.5000000000000012}, {0.8660254037844386, 
            0.4999999999999993}, {1.8369701987210297`*^-16, 
            1.}, {-0.8660254037844388, 0.5000000000000013}}, {
             {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
              {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{1, 3}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{1, 4}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{1, 5}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{1, 6}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{1, 7}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{2, 3}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{2, 7}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{3, 4}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{4, 5}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{5, 6}, 0.02261146496815286]}, 
              {Arrowheads[0.], ArrowBox[{6, 7}, 0.02261146496815286]}}, 
             {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
              DiskBox[1, 0.02261146496815286], 
              DiskBox[2, 0.02261146496815286], 
              DiskBox[3, 0.02261146496815286], 
              DiskBox[4, 0.02261146496815286], 
              DiskBox[5, 0.02261146496815286], 
              DiskBox[6, 0.02261146496815286], 
              DiskBox[7, 0.02261146496815286]}}]],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FormatType->TraditionalForm,
       FrameTicks->None,
       PlotLabel->FormBox[
         SubscriptBox["W", "7"], TraditionalForm]],
      TraditionalForm], {1360.8000000000002, -189.}, {
     Center, Center}, {359.9999999999998, 360.}]}, {}},
  ContentSelectable->True,
  ImageSize->{999.453125, Automatic},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.6856074094278603`*^9, 3.685607441810446*^9}, {
  3.685607643624309*^9, 3.685607678049184*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "google", " ", "scholar", " ", "data", " ", "from", " ", 
    "first", " ", "search", " ", "page", " ", "on", " ", "tungsten", " ", 
    "carbide"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dataRaw", "=", 
    RowBox[{"dataGet", "[", 
     RowBox[{"\"\<tungsten carbide\>\"", ",", "3"}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.685699085538402*^9, 3.685699095203376*^9}, {
  3.685699132511641*^9, 3.685699134940687*^9}, {3.685699216154359*^9, 
  3.6856992164863586`*^9}, {3.685699354278454*^9, 3.685699354365439*^9}, {
  3.685700769534258*^9, 3.685700769628483*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parseData2", "[", "dataIn_", "]"}], ":=", 
  RowBox[{"ToLowerCase", "@", 
   RowBox[{"DeleteStopwords", "@", 
    RowBox[{"Flatten", "@", 
     RowBox[{"TextWords", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"DeleteCases", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Cases", "[", 
             RowBox[{"dataRaw", ",", 
              RowBox[{"XMLElement", "[", 
               RowBox[{"\"\<a\>\"", ",", "_", ",", "_"}], "]"}], ",", 
              "Infinity"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"XMLElement", "[", 
            RowBox[{"\"\<b\>\"", ",", "_", ",", "_"}], "]"}], ",", 
           "Infinity"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "@", 
                RowBox[{"dataRaw", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "-", "1"}], ")"}], "*", 
             RowBox[{"Length", "@", "dataRaw"}]}], "-", "1"}], ")"}]}], 
         "}"}]}], "]"}]}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"dataParsed", "=", 
  RowBox[{"parseData2", "[", "dataRaw", "]"}]}]}], "Input",
 CellChangeTimes->{{3.685699673449827*^9, 3.6856996982298098`*^9}, {
   3.6857006988986464`*^9, 3.685700747013639*^9}, {3.685700782044916*^9, 
   3.685700790230055*^9}, 3.6857008293033123`*^9, {3.6857008873046503`*^9, 
   3.685700894149241*^9}, {3.6857009272748623`*^9, 3.685700927502879*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"direct\"\>", ",", "\<\"catalytic\"\>", 
   ",", "\<\"conversion\"\>", ",", "\<\"cellulose\"\>", 
   ",", "\<\"ethylene\"\>", ",", "\<\"glycol\"\>", ",", "\<\"using\"\>", 
   ",", "\<\"nickel\[Hyphen]promoted\"\>", ",", "\<\"catalysts\"\>", 
   ",", "\<\"hardness\"\>", ",", "\<\"deformation\"\>", 
   ",", "\<\"cemented\"\>", ",", "\<\"low\[Hyphen]cost\"\>", 
   ",", "\<\"molybdenum\"\>", ",", "\<\"counter\"\>", 
   ",", "\<\"electrodes\"\>", ",", "\<\"dye\[Hyphen]sensitized\"\>", 
   ",", "\<\"solar\"\>", ",", "\<\"cells\"\>", ",", "\<\"new\"\>", 
   ",", "\<\"catalysts\"\>", ",", "\<\"conversion\"\>", 
   ",", "\<\"methane\"\>", ",", "\<\"synthesis\"\>", ",", "\<\"gas\"\>", 
   ",", "\<\"molybdenum\"\>", ",", "\<\"study\"\>", ",", "\<\"effect\"\>", 
   ",", "\<\"machining\"\>", ",", "\<\"parameters\"\>", 
   ",", "\<\"machining\"\>", ",", "\<\"characteristics\"\>", 
   ",", "\<\"electrical\"\>", ",", "\<\"discharge\"\>", 
   ",", "\<\"machining\"\>", ",", "\<\"synthesis\"\>", 
   ",", "\<\"sintering\"\>", ",", "\<\"mechanical\"\>", 
   ",", "\<\"properties\"\>", ",", "\<\"nanocrystalline\"\>", 
   ",", "\<\"cemented\"\>", ",", "\<\"review\"\>", 
   ",", "\<\"microspheres\"\>", 
   ",", "\<\"noble\[Hyphen]metal\[Hyphen]economic\"\>", 
   ",", "\<\"electrocatalyst\"\>", ",", "\<\"methanol\"\>", 
   ",", "\<\"oxidation\"\>", ",", "\<\"study\"\>", ",", "\<\"high\"\>", 
   ",", "\<\"velocity\"\>", ",", "\<\"oxy-fuel\"\>", ",", "\<\"thermally\"\>",
    ",", "\<\"sprayed\"\>", ",", "\<\"based\"\>", ",", "\<\"coatings\"\>", 
   ",", "\<\"1\"\>", ",", "\<\"microstructures\"\>", 
   ",", "\<\"electronic\"\>", ",", "\<\"structure\"\>", 
   ",", "\<\"catalytic\"\>", ",", "\<\"behavior\"\>", ",", "\<\"hardness\"\>",
    ",", "\<\"deformation\"\>", ",", "\<\"cemented\"\>", 
   ",", "\<\"low\[Hyphen]cost\"\>", ",", "\<\"molybdenum\"\>", 
   ",", "\<\"counter\"\>", ",", "\<\"electrodes\"\>", 
   ",", "\<\"dye\[Hyphen]sensitized\"\>", ",", "\<\"solar\"\>", 
   ",", "\<\"cells\"\>", ",", "\<\"new\"\>", ",", "\<\"catalysts\"\>", 
   ",", "\<\"conversion\"\>", ",", "\<\"methane\"\>", 
   ",", "\<\"synthesis\"\>", ",", "\<\"gas\"\>", ",", "\<\"molybdenum\"\>", 
   ",", "\<\"study\"\>", ",", "\<\"effect\"\>", ",", "\<\"machining\"\>", 
   ",", "\<\"parameters\"\>", ",", "\<\"machining\"\>", 
   ",", "\<\"characteristics\"\>", ",", "\<\"electrical\"\>", 
   ",", "\<\"discharge\"\>", ",", "\<\"machining\"\>", 
   ",", "\<\"synthesis\"\>", ",", "\<\"sintering\"\>", 
   ",", "\<\"mechanical\"\>", ",", "\<\"properties\"\>", 
   ",", "\<\"nanocrystalline\"\>", ",", "\<\"cemented\"\>", 
   ",", "\<\"review\"\>", ",", "\<\"microspheres\"\>", 
   ",", "\<\"noble\[Hyphen]metal\[Hyphen]economic\"\>", 
   ",", "\<\"electrocatalyst\"\>", ",", "\<\"methanol\"\>", 
   ",", "\<\"oxidation\"\>", ",", "\<\"study\"\>", ",", "\<\"high\"\>", 
   ",", "\<\"velocity\"\>", ",", "\<\"oxy-fuel\"\>", ",", "\<\"thermally\"\>",
    ",", "\<\"sprayed\"\>", ",", "\<\"based\"\>", ",", "\<\"coatings\"\>", 
   ",", "\<\"1\"\>", ",", "\<\"microstructures\"\>", 
   ",", "\<\"electronic\"\>", ",", "\<\"structure\"\>", 
   ",", "\<\"catalytic\"\>", ",", "\<\"behavior\"\>", ",", "\<\"diffuse\"\>", 
   ",", "\<\"interstitial\"\>", ",", "\<\"lung\"\>", ",", "\<\"disease\"\>", 
   ",", "\<\"workers\"\>", ",", "\<\"low\[Hyphen]cost\"\>", 
   ",", "\<\"molybdenum\"\>", ",", "\<\"counter\"\>", 
   ",", "\<\"electrodes\"\>", ",", "\<\"dye\[Hyphen]sensitized\"\>", 
   ",", "\<\"solar\"\>", ",", "\<\"cells\"\>", ",", "\<\"new\"\>", 
   ",", "\<\"catalysts\"\>", ",", "\<\"conversion\"\>", 
   ",", "\<\"methane\"\>", ",", "\<\"synthesis\"\>", ",", "\<\"gas\"\>", 
   ",", "\<\"molybdenum\"\>", ",", "\<\"study\"\>", ",", "\<\"effect\"\>", 
   ",", "\<\"machining\"\>", ",", "\<\"parameters\"\>", 
   ",", "\<\"machining\"\>", ",", "\<\"characteristics\"\>", 
   ",", "\<\"electrical\"\>", ",", "\<\"discharge\"\>", 
   ",", "\<\"machining\"\>", ",", "\<\"synthesis\"\>", 
   ",", "\<\"sintering\"\>", ",", "\<\"mechanical\"\>", 
   ",", "\<\"properties\"\>", ",", "\<\"nanocrystalline\"\>", 
   ",", "\<\"cemented\"\>", ",", "\<\"review\"\>", 
   ",", "\<\"microspheres\"\>", 
   ",", "\<\"noble\[Hyphen]metal\[Hyphen]economic\"\>", 
   ",", "\<\"electrocatalyst\"\>", ",", "\<\"methanol\"\>", 
   ",", "\<\"oxidation\"\>", ",", "\<\"study\"\>", ",", "\<\"high\"\>", 
   ",", "\<\"velocity\"\>", ",", "\<\"oxy-fuel\"\>", ",", "\<\"thermally\"\>",
    ",", "\<\"sprayed\"\>", ",", "\<\"based\"\>", ",", "\<\"coatings\"\>", 
   ",", "\<\"1\"\>", ",", "\<\"microstructures\"\>", 
   ",", "\<\"electronic\"\>", ",", "\<\"structure\"\>", 
   ",", "\<\"catalytic\"\>", ",", "\<\"behavior\"\>", ",", "\<\"diffuse\"\>", 
   ",", "\<\"interstitial\"\>", ",", "\<\"lung\"\>", ",", "\<\"disease\"\>", 
   ",", "\<\"workers\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.6856996656963367`*^9, 3.685699699097412*^9}, {
   3.6856997468581123`*^9, 3.6856997626843843`*^9}, {3.6857000469134808`*^9, 
   3.685700067908915*^9}, {3.685700124471147*^9, 3.685700133164898*^9}, 
   3.685700240618309*^9, {3.68570067677207*^9, 3.685700747648699*^9}, {
   3.6857007787600183`*^9, 3.6857007906489887`*^9}, {3.685700885328126*^9, 
   3.685700894447558*^9}, 3.685700928569216*^9, 3.685700962994495*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCloud", "@", "dataParsed"}]], "Input",
 CellChangeTimes->{{3.68569950345693*^9, 3.685699504106357*^9}, {
  3.685700971035433*^9, 3.685700972024322*^9}}],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"machining\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.16166281755196305`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"molybdenum\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.10969976905311778`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-7., -46.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"synthesis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.10969976905311778`],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {0., 49.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"cemented\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09237875288683603],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {0., 85.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"noble\[Hyphen]metal\[Hyphen]economic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {0., -81.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"study\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.10969976905311778`],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-13., -114.}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"conversion\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07505773672055427],
     FontColor->RGBColor[1, 0.75, 0]], {-1., 114.}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"nanocrystalline\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-6., 138.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"electrocatalyst\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {12., -149.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"microstructures\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {0., 160.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"dye\[Hyphen]sensitized\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {0., -173.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"catalysts\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07505773672055427],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {109., -108.}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"microspheres\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {0., 182.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"characteristics\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-5., -197.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"catalytic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07505773672055427],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {147., 74.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"parameters\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {-135., -103.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"mechanical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {-153., 72.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"properties\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {-156., 30.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"discharge\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {154., 30.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"electrodes\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-140., 106.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"thermally\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {138., 104.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"electronic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {-126., -127.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"sintering\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {127., 131.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"oxy-fuel\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {-139., 128.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"methanol\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {-124., -151.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"oxidation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {145., -140.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"coatings\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-138., 150.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"electrical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {0., 203.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"behavior\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {137., 153.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"methane\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {129., -168.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"sprayed\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {170., -70.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"low\[Hyphen]cost\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {123., 176.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"velocity\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {-166., -74.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"structure\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {-131., -173.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"counter\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {171., -45.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"deformation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04041570438799076],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-167., 49.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"review\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {-179., -29.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"based\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {-110., 177.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"effect\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {82., 199.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"interstitial\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04041570438799076],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {-94., 197.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"hardness\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04041570438799076],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {118., -189.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"solar\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {186., 0.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"workers\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04041570438799076],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {-176., -49.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cells\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {-184., 0.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"disease\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04041570438799076],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {-118., -194.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"high\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {138., 198.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"gas\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {179., -19.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"diffuse\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04041570438799076],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {188., 45.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nickel\[Hyphen]promoted\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.023094688221709007`],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {113., -203.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"new\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {127., 51.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"lung\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04041570438799076],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {191., -95.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cellulose\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.023094688221709007`],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {59., -127.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ethylene\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.023094688221709007`],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {-190., 87.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"glycol\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.023094688221709007`],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-143., 87.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"direct\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.023094688221709007`],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {188., -111.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"using\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.023094688221709007`],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {185., -123.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"1\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057736720554272515`],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-104., 46.}, Center, 
    Automatic]},
  DefaultBaseStyle->{
   "Graphics", FontFamily -> "Helvetica", FontWeight -> Plain, FontTracking -> 
    "Plain", FontSlant -> Plain, FontVariations -> {}},
  ImageSize->{497.38671875, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-217.5, 215.5}, {-209.5, 216.5}}]], "Output",
 CellChangeTimes->{
  3.685699371307644*^9, {3.6856994715126057`*^9, 3.685699566858013*^9}, 
   3.685700937300062*^9, 3.685700972463212*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"associate", "[", "dataParsed", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Graph", "[", 
  RowBox[{"%", ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "450"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6857010098544283`*^9, 3.6857010100020943`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"direct\"\>", "\[DirectedEdge]", "\<\"effect\"\>"}], ",", 
   RowBox[{"\<\"direct\"\>", "\[DirectedEdge]", "\<\"effect\"\>"}], ",", 
   RowBox[{"\<\"cellulose\"\>", "\[DirectedEdge]", "\<\"cells\"\>"}], ",", 
   RowBox[{"\<\"cellulose\"\>", "\[DirectedEdge]", "\<\"cells\"\>"}], ",", 
   RowBox[{"\<\"ethylene\"\>", "\[DirectedEdge]", "\<\"methane\"\>"}], ",", 
   RowBox[{"\<\"ethylene\"\>", "\[DirectedEdge]", "\<\"methane\"\>"}], ",", 
   RowBox[{"\<\"glycol\"\>", "\[DirectedEdge]", "\<\"gas\"\>"}], ",", 
   RowBox[{"\<\"glycol\"\>", "\[DirectedEdge]", "\<\"gas\"\>"}], ",", 
   RowBox[{"\<\"using\"\>", "\[DirectedEdge]", "\<\"lung\"\>"}], ",", 
   RowBox[{"\<\"using\"\>", "\[DirectedEdge]", "\<\"lung\"\>"}], ",", 
   RowBox[{"\<\"nickel\[Hyphen]promoted\"\>", 
    "\[DirectedEdge]", "\<\"cellulose\"\>"}], ",", 
   RowBox[{"\<\"nickel\[Hyphen]promoted\"\>", 
    "\[DirectedEdge]", "\<\"cemented\"\>"}], ",", 
   RowBox[{"\<\"hardness\"\>", "\[DirectedEdge]", "\<\"workers\"\>"}], ",", 
   RowBox[{"\<\"deformation\"\>", "\[DirectedEdge]", "\<\"oxidation\"\>"}], 
   ",", 
   RowBox[{"\<\"hardness\"\>", "\[DirectedEdge]", "\<\"workers\"\>"}], ",", 
   RowBox[{"\<\"deformation\"\>", "\[DirectedEdge]", "\<\"oxidation\"\>"}], 
   ",", 
   RowBox[{"\<\"diffuse\"\>", "\[DirectedEdge]", "\<\"disease\"\>"}], ",", 
   RowBox[{"\<\"interstitial\"\>", "\[DirectedEdge]", "\<\"sintering\"\>"}], 
   ",", 
   RowBox[{"\<\"lung\"\>", "\[DirectedEdge]", "\<\"using\"\>"}], ",", 
   RowBox[{"\<\"disease\"\>", "\[DirectedEdge]", "\<\"diffuse\"\>"}], ",", 
   RowBox[{"\<\"workers\"\>", "\[DirectedEdge]", "\<\"direct\"\>"}], ",", 
   RowBox[{"\<\"diffuse\"\>", "\[DirectedEdge]", "\<\"disease\"\>"}], ",", 
   RowBox[{"\<\"interstitial\"\>", "\[DirectedEdge]", "\<\"sintering\"\>"}], 
   ",", 
   RowBox[{"\<\"lung\"\>", "\[DirectedEdge]", "\<\"using\"\>"}], ",", 
   RowBox[{"\<\"disease\"\>", "\[DirectedEdge]", "\<\"diffuse\"\>"}], ",", 
   RowBox[{"\<\"workers\"\>", "\[DirectedEdge]", "\<\"direct\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.685700982255764*^9, 3.685701010378121*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "direct", "effect", "cellulose", "cells", "ethylene", "methane", 
       "glycol", "gas", "using", "lung", "nickel\[Hyphen]promoted", 
       "cemented", "hardness", "workers", "deformation", "oxidation", 
       "diffuse", "disease", "interstitial", "sintering"}, {{{1, 2}, {1, 2}, {
       3, 4}, {3, 4}, {5, 6}, {5, 6}, {7, 8}, {7, 8}, {9, 10}, {9, 10}, {11, 
       3}, {11, 12}, {13, 14}, {15, 16}, {13, 14}, {15, 16}, {17, 18}, {19, 
       20}, {10, 9}, {18, 17}, {14, 1}, {17, 18}, {19, 20}, {10, 9}, {18, 
       17}, {14, 1}}, Null}, {ImageSize -> 450, VertexLabels -> {"Name"}}]]}, 
    
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[BezierCurveBox[{{
         1.1532597594991967`, -0.18740853743654748`}, {
         0.6703341484488128, -0.3462338340506251}, {
         0.18740853740786267`, -0.1874085374078628}}], 0.030216543286656697`],
         ArrowBox[BezierCurveBox[{{
         1.1532597594991967`, -0.18740853743654748`}, {
         0.6703341484582487, -0.02858324079378124}, {
         0.18740853740786267`, -0.1874085374078628}}], 0.030216543286656697`],
         ArrowBox[BezierCurveBox[{{
         2.2187905645634545`, -0.5622256122591356}, {
         2.701454501396334, -0.40348637543318255`}, {
         3.1841184382314918`, -0.5622256122522732}}], 0.030216543286656697`], 
        ArrowBox[BezierCurveBox[{{2.2187905645634545`, -0.5622256122591356}, {
         2.701454501398603, -0.7209648490783829}, {
         3.1841184382314918`, -0.5622256122522732}}], 0.030216543286656697`], 
        ArrowBox[BezierCurveBox[{{
         2.8732153214377467`, -1.6866768367063125`}, {
         2.3732153214377476`, -1.8511175838856264`}, {
         1.8732153214377467`, -1.6866768367063125`}}], 0.030216543286656697`],
         ArrowBox[BezierCurveBox[{{
         2.8732153214377467`, -1.6866768367063125`}, {
         2.3732153214377463`, -1.5222360895233955`}, {
         1.8732153214377467`, -1.6866768367063125`}}], 0.030216543286656697`],
         ArrowBox[BezierCurveBox[{{1.187408537407863, -0.9370426870748612}, {
         0.6874085374078637, -1.1014834342574291`}, {
         0.1874085374078629, -0.9370426870748612}}], 0.030216543286656697`], 
        ArrowBox[BezierCurveBox[{{1.187408537407863, -0.9370426870748612}, {
         0.6874085374078635, -0.7726019398916991}, {
         0.1874085374078629, -0.9370426870748612}}], 0.030216543286656697`], 
        ArrowBox[BezierCurveBox[{{2.8732153214377467`, -0.9370426870748612}, {
         2.3732153214377467`, -1.1014834342570738`}, {
         1.8732153214377467`, -0.9370426870748612}}], 0.030216543286656697`], 
        ArrowBox[BezierCurveBox[{{2.8732153214377467`, -0.9370426870748612}, {
         2.3732153214377343`, -0.9920213567130557}, {
         1.8732153214377467`, -0.9370426870748612}}], 0.030216543286656697`], 
        ArrowBox[BezierCurveBox[{{1.8732153214377467`, -0.9370426870748612}, {
         2.373215321437747, -0.7726019398901057}, {
         2.8732153214377467`, -0.9370426870748612}}], 0.030216543286656697`], 
        ArrowBox[BezierCurveBox[{{1.8732153214377467`, -0.9370426870748612}, {
         2.3732153214377623`, -0.8820640174275095}, {
         2.8732153214377467`, -0.9370426870748612}}], 0.030216543286656697`], 
        ArrowBox[{{1.153674728304313, -0.5622256122570987}, {
         2.2187905645634545`, -0.5622256122591356}}, 0.030216543286656697`], 
        ArrowBox[{{1.153674728304313, -0.5622256122570987}, {
         0.18740853740786267`, -0.5622256122529987}}, 0.030216543286656697`], 
        ArrowBox[BezierCurveBox[{{
         3.1842050306519054`, -0.18740853740919045`}, {
         2.7008666368978997`, -0.3463695906446701}, {
         2.2175282431361265`, -0.1874085374328296}}], 0.030216543286656697`], 
        ArrowBox[BezierCurveBox[{{
         3.1842050306519054`, -0.18740853740919045`}, {
         2.7008666368901317`, -0.028447484197350235`}, {
         2.2175282431361265`, -0.1874085374328296}}], 0.030216543286656697`], 
        ArrowBox[BezierCurveBox[{{2.2175282431361265`, -0.1874085374328296}, {
         1.6853940013182716`, -0.3624176420873708}, {
         1.1532597594991967`, -0.18740853743654748`}}], 
         0.030216543286656697`], 
        ArrowBox[BezierCurveBox[{{2.2175282431361265`, -0.1874085374328296}, {
         1.685394001317047, -0.012399432781988766`}, {
         1.1532597594991967`, -0.18740853743654748`}}], 
         0.030216543286656697`], 
        ArrowBox[BezierCurveBox[{{1.187408537407863, -1.311859761890587}, {
         0.6874085374078635, -1.4763005090744294`}, {
         0.1874085374078629, -1.311859761890587}}], 0.030216543286656697`], 
        ArrowBox[BezierCurveBox[{{1.187408537407863, -1.311859761890587}, {
         0.6874085374078632, -1.1474190147076981`}, {
         0.1874085374078629, -1.311859761890587}}], 0.030216543286656697`], 
        ArrowBox[BezierCurveBox[{{2.8732153214377467`, -1.311859761890587}, {
         2.3732153214377463`, -1.4763005090741925`}, {
         1.8732153214377467`, -1.311859761890587}}], 0.030216543286656697`], 
        ArrowBox[BezierCurveBox[{{2.8732153214377467`, -1.311859761890587}, {
         2.373215321437734, -1.366838431539391}, {
         1.8732153214377467`, -1.311859761890587}}], 0.030216543286656697`], 
        ArrowBox[BezierCurveBox[{{1.8732153214377467`, -1.311859761890587}, {
         2.373215321437747, -1.1474190147062768`}, {
         2.8732153214377467`, -1.311859761890587}}], 0.030216543286656697`], 
        ArrowBox[BezierCurveBox[{{1.8732153214377467`, -1.311859761890587}, {
         2.3732153214377623`, -1.2568810922432054`}, {
         2.8732153214377467`, -1.311859761890587}}], 0.030216543286656697`], 
        ArrowBox[BezierCurveBox[{{1.187408537407863, -1.6866768367063125`}, {
         0.6874085374078638, -1.8511175838894163`}, {
         0.1874085374078629, -1.6866768367063125`}}], 0.030216543286656697`], 
        ArrowBox[BezierCurveBox[{{1.187408537407863, -1.6866768367063125`}, {
         0.6874085374078635, -1.5222360895236218`}, {
         0.1874085374078629, -1.6866768367063125`}}], 0.030216543286656697`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{1.1532597594991967, -0.18740853743654748}, 
          0.030216543286656697], 
         InsetBox["\<\"direct\"\>", 
          Offset[{2, 2}, {1.1834763027858535, -0.15719199414989077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.18740853740786267, -0.1874085374078628}, 
          0.030216543286656697], 
         InsetBox["\<\"effect\"\>", 
          Offset[{2, 2}, {0.21762508069451936, -0.1571919941212061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.2187905645634545, -0.5622256122591356}, 
          0.030216543286656697], 
         InsetBox["\<\"cellulose\"\>", 
          Offset[{2, 2}, {2.2490071078501113, -0.5320090689724789}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.1841184382314918, -0.5622256122522732}, 
          0.030216543286656697], 
         InsetBox["\<\"cells\"\>", 
          Offset[{2, 2}, {3.2143349815181486, -0.5320090689656165}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.8732153214377467, -1.6866768367063125}, 
          0.030216543286656697], 
         InsetBox["\<\"ethylene\"\>", 
          Offset[{2, 2}, {2.9034318647244035, -1.6564602934196557}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8732153214377467, -1.6866768367063125}, 
          0.030216543286656697], 
         InsetBox["\<\"methane\"\>", 
          Offset[{2, 2}, {1.9034318647244035, -1.6564602934196557}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.187408537407863, -0.9370426870748612}, 
          0.030216543286656697], 
         InsetBox["\<\"glycol\"\>", 
          Offset[{2, 2}, {1.2176250806945197, -0.9068261437882045}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.1874085374078629, -0.9370426870748612}, 
          0.030216543286656697], 
         InsetBox["\<\"gas\"\>", 
          Offset[{2, 2}, {0.21762508069451958, -0.9068261437882045}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.8732153214377467, -0.9370426870748612}, 
          0.030216543286656697], 
         InsetBox["\<\"using\"\>", 
          Offset[{2, 2}, {2.9034318647244035, -0.9068261437882045}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8732153214377467, -0.9370426870748612}, 
          0.030216543286656697], 
         InsetBox["\<\"lung\"\>", 
          Offset[{2, 2}, {1.9034318647244035, -0.9068261437882045}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.153674728304313, -0.5622256122570987}, 
          0.030216543286656697], 
         InsetBox["\<\"nickel\[Hyphen]promoted\"\>", 
          Offset[{2, 2}, {1.1838912715909697, -0.532009068970442}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.18740853740786267, -0.5622256122529987}, 
          0.030216543286656697], 
         InsetBox["\<\"cemented\"\>", 
          Offset[{2, 2}, {0.21762508069451936, -0.532009068966342}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.1842050306519054, -0.18740853740919045}, 
          0.030216543286656697], 
         InsetBox["\<\"hardness\"\>", 
          Offset[{2, 2}, {3.214421573938562, -0.15719199412253376}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.2175282431361265, -0.1874085374328296}, 
          0.030216543286656697], 
         InsetBox["\<\"workers\"\>", 
          Offset[{2, 2}, {2.2477447864227833, -0.1571919941461729}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.187408537407863, -1.311859761890587}, 
          0.030216543286656697], 
         InsetBox["\<\"deformation\"\>", 
          Offset[{2, 2}, {1.2176250806945197, -1.2816432186039302}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.1874085374078629, -1.311859761890587}, 
          0.030216543286656697], 
         InsetBox["\<\"oxidation\"\>", 
          Offset[{2, 2}, {0.21762508069451958, -1.2816432186039302}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.8732153214377467, -1.311859761890587}, 
          0.030216543286656697], 
         InsetBox["\<\"diffuse\"\>", 
          Offset[{2, 2}, {2.9034318647244035, -1.2816432186039302}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8732153214377467, -1.311859761890587}, 
          0.030216543286656697], 
         InsetBox["\<\"disease\"\>", 
          Offset[{2, 2}, {1.9034318647244035, -1.2816432186039302}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.187408537407863, -1.6866768367063125}, 
          0.030216543286656697], 
         InsetBox["\<\"interstitial\"\>", 
          Offset[{2, 2}, {1.2176250806945197, -1.6564602934196557}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.1874085374078629, -1.6866768367063125}, 
          0.030216543286656697], 
         InsetBox["\<\"sintering\"\>", 
          Offset[{2, 2}, {0.21762508069451958, -1.6564602934196557}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->450]], "Output",
 CellChangeTimes->{{3.685700982255764*^9, 3.685701010450163*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"commonAssociateMinus", "[", 
  RowBox[{"dataParsed", ",", "10", ",", "\"\<\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Graph", "[", 
  RowBox[{"%", ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "450"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.685701254320292*^9, 3.685701254344898*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"catalytic\"\>", "\[DirectedEdge]", "\<\"catalysts\"\>"}], ",", 
   RowBox[{"\<\"catalytic\"\>", "\[DirectedEdge]", "\<\"cemented\"\>"}], ",", 
   
   RowBox[{"\<\"conversion\"\>", "\[DirectedEdge]", "\<\"counter\"\>"}], ",", 
   
   RowBox[{"\<\"conversion\"\>", "\[DirectedEdge]", "\<\"synthesis\"\>"}], 
   ",", 
   RowBox[{"\<\"catalysts\"\>", "\[DirectedEdge]", "\<\"catalytic\"\>"}], ",", 
   RowBox[{"\<\"catalysts\"\>", "\[DirectedEdge]", "\<\"synthesis\"\>"}], ",", 
   RowBox[{"\<\"cemented\"\>", "\[DirectedEdge]", "\<\"counter\"\>"}], ",", 
   RowBox[{"\<\"cemented\"\>", "\[DirectedEdge]", "\<\"catalytic\"\>"}], ",", 
   
   RowBox[{"\<\"low\[Hyphen]cost\"\>", 
    "\[DirectedEdge]", "\<\"conversion\"\>"}], ",", 
   RowBox[{"\<\"low\[Hyphen]cost\"\>", 
    "\[DirectedEdge]", "\<\"catalysts\"\>"}], ",", 
   RowBox[{"\<\"molybdenum\"\>", "\[DirectedEdge]", "\<\"counter\"\>"}], ",", 
   
   RowBox[{"\<\"molybdenum\"\>", "\[DirectedEdge]", "\<\"machining\"\>"}], 
   ",", 
   RowBox[{"\<\"counter\"\>", "\[DirectedEdge]", "\<\"cemented\"\>"}], ",", 
   RowBox[{"\<\"counter\"\>", "\[DirectedEdge]", "\<\"conversion\"\>"}], ",", 
   
   RowBox[{"\<\"synthesis\"\>", "\[DirectedEdge]", "\<\"conversion\"\>"}], 
   ",", 
   RowBox[{"\<\"synthesis\"\>", "\[DirectedEdge]", "\<\"catalysts\"\>"}], ",", 
   RowBox[{"\<\"study\"\>", "\[DirectedEdge]", "\<\"counter\"\>"}], ",", 
   RowBox[{"\<\"study\"\>", "\[DirectedEdge]", "\<\"catalytic\"\>"}], ",", 
   RowBox[{"\<\"machining\"\>", "\[DirectedEdge]", "\<\"counter\"\>"}], ",", 
   RowBox[{"\<\"machining\"\>", "\[DirectedEdge]", "\<\"catalytic\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.685701254802744*^9}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "catalytic", "catalysts", "cemented", "conversion", "counter", 
       "synthesis", "low\[Hyphen]cost", "molybdenum", "machining", 
       "study"}, {{{1, 2}, {1, 3}, {4, 5}, {4, 6}, {2, 1}, {2, 6}, {3, 5}, {3,
        1}, {7, 4}, {7, 2}, {8, 5}, {8, 9}, {5, 3}, {5, 4}, {6, 4}, {6, 2}, {
       10, 5}, {10, 1}, {9, 5}, {9, 1}}, Null}, {
      ImageSize -> 450, VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[BezierCurveBox[{{1.961930512721331, 0.5196430771127527}, {
         1.3187215986597762`, 0.3598366680535521}, {0.7062194643641856, 
         0.6130103850700738}}], 0.029860733688062094`], 
        ArrowBox[BezierCurveBox[{{1.961930512721331, 0.5196430771127527}, {
         2.4237851027067183`, 0.6349098497277349}, {2.863898330769146, 
         0.45353609847336396`}}], 0.029860733688062094`], 
        ArrowBox[BezierCurveBox[{{0.7062194643641856, 0.6130103850700738}, {
         1.3494283784257417`, 0.7728167941294}, {1.961930512721331, 
         0.5196430771127527}}], 0.029860733688062094`], 
        ArrowBox[BezierCurveBox[{{0.7062194643641856, 0.6130103850700738}, {
         0.33132606714943136`, 0.5631147345258476}, {0., 
         0.7454815967728659}}], 0.029860733688062094`], 
        ArrowBox[BezierCurveBox[{{2.863898330769146, 0.45353609847336396`}, {
         2.4020437407837605`, 0.3382693258577191}, {1.961930512721331, 
         0.5196430771127527}}], 0.029860733688062094`], 
        ArrowBox[BezierCurveBox[{{2.863898330769146, 0.45353609847336396`}, {
         2.431470456526212, 0.6814145317633254}, {2.218717319447404, 
         1.1214810601911174`}}], 0.029860733688062094`], 
        ArrowBox[BezierCurveBox[{{0.8934254202093787, 1.3284844347497216`}, {
         1.5901111594102297`, 1.4429147376166245`}, {2.218717319447404, 
         1.1214810601911174`}}], 0.029860733688062094`], 
        ArrowBox[BezierCurveBox[{{0.8934254202093787, 1.3284844347497216`}, {
         0.5425821323914821, 0.8900674721097326}, {0., 0.7454815967728659}}], 
         0.029860733688062094`], 
        ArrowBox[BezierCurveBox[{{2.218717319447404, 1.1214810601911174`}, {
         2.6511451936903376`, 0.8936026269023848}, {2.863898330769146, 
         0.45353609847336396`}}], 0.029860733688062094`], 
        ArrowBox[BezierCurveBox[{{2.218717319447404, 1.1214810601911174`}, {
         1.522031580246544, 1.0070507573247318`}, {0.8934254202093787, 
         1.3284844347497216`}}], 0.029860733688062094`], 
        ArrowBox[BezierCurveBox[{{0., 0.7454815967728659}, {
         0.37489339721475257`, 0.7953772473169879}, {0.7062194643641856, 
         0.6130103850700738}}], 0.029860733688062094`], 
        ArrowBox[BezierCurveBox[{{0., 0.7454815967728659}, {
         0.35084328781789936`, 1.18389855941286}, {0.8934254202093787, 
         1.3284844347497216`}}], 0.029860733688062094`], 
        ArrowBox[{{0.11969721907179753`, 1.4374545655392985`}, {
         0.7062194643641856, 0.6130103850700738}}, 0.029860733688062094`], 
        ArrowBox[{{0.11969721907179753`, 1.4374545655392985`}, {
         0.8934254202093787, 1.3284844347497216`}}, 0.029860733688062094`], 
        ArrowBox[{{2.947346545358965, 1.933544144883687}, {2.218717319447404, 
         1.1214810601911174`}}, 0.029860733688062094`], 
        ArrowBox[{{2.947346545358965, 1.933544144883687}, {2.789051102816953, 
         1.2824559843193437`}}, 0.029860733688062094`], 
        ArrowBox[{{2.789051102816953, 1.2824559843193437`}, {
         1.961930512721331, 0.5196430771127527}}, 0.029860733688062094`], 
        ArrowBox[{{2.789051102816953, 1.2824559843193437`}, {
         2.218717319447404, 1.1214810601911174`}}, 0.029860733688062094`], 
        ArrowBox[{{2.324326194482471, 0.}, {1.961930512721331, 
         0.5196430771127527}}, 0.029860733688062094`], 
        ArrowBox[{{2.324326194482471, 0.}, {2.218717319447404, 
         1.1214810601911174`}}, 0.029860733688062094`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{1.961930512721331, 0.5196430771127527}, 
          0.029860733688062094], 
         InsetBox["\<\"catalytic\"\>", Offset[{2, 2}, 
          {1.991791246409393, 0.5495038108008148}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.7062194643641856, 0.6130103850700738}, 
          0.029860733688062094], 
         InsetBox["\<\"catalysts\"\>", 
          Offset[{2, 2}, {0.7360801980522477, 0.6428711187581359}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.863898330769146, 0.45353609847336396}, 
          0.029860733688062094], 
         InsetBox["\<\"cemented\"\>", 
          Offset[{2, 2}, {2.893759064457208, 0.48339683216142604}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.8934254202093787, 1.3284844347497216}, 
          0.029860733688062094], 
         InsetBox["\<\"conversion\"\>", 
          Offset[{2, 2}, {0.9232861538974407, 1.3583451684377836}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.218717319447404, 1.1214810601911174}, 
          0.029860733688062094], 
         InsetBox["\<\"counter\"\>", 
          Offset[{2, 2}, {2.248578053135466, 1.1513417938791795}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 0.7454815967728659}, 0.029860733688062094], 
         InsetBox["\<\"synthesis\"\>", 
          Offset[{2, 2}, {0.029860733688062094, 0.7753423304609279}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.11969721907179753, 1.4374545655392985}, 
          0.029860733688062094], 
         InsetBox["\<\"low\[Hyphen]cost\"\>", 
          Offset[{2, 2}, {0.1495579527598596, 1.4673152992273606}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.947346545358965, 1.933544144883687}, 
          0.029860733688062094], 
         InsetBox["\<\"molybdenum\"\>", 
          Offset[{2, 2}, {2.977207279047027, 1.963404878571749}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.789051102816953, 1.2824559843193437}, 
          0.029860733688062094], 
         InsetBox["\<\"machining\"\>", 
          Offset[{2, 2}, {2.818911836505015, 1.3123167180074058}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.324326194482471, 0.}, 0.029860733688062094], 
         InsetBox["\<\"study\"\>", 
          Offset[{2, 2}, {2.354186928170533, 0.029860733688062094}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->450]], "Output",
 CellChangeTimes->{3.685701254881434*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"commonAssociateMinus", "[", 
  RowBox[{"dataParsed", ",", "20", ",", "\"\<\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Graph", "[", 
  RowBox[{"%", ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "450"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.685701021434146*^9, 3.6857010301221848`*^9}, {
  3.685701216975462*^9, 3.685701233492491*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"catalytic\"\>", "\[DirectedEdge]", "\<\"catalysts\"\>"}], ",", 
   RowBox[{"\<\"catalytic\"\>", "\[DirectedEdge]", "\<\"cemented\"\>"}], ",", 
   
   RowBox[{"\<\"conversion\"\>", "\[DirectedEdge]", "\<\"counter\"\>"}], ",", 
   
   RowBox[{"\<\"conversion\"\>", "\[DirectedEdge]", "\<\"synthesis\"\>"}], 
   ",", 
   RowBox[{"\<\"catalysts\"\>", "\[DirectedEdge]", "\<\"catalytic\"\>"}], ",", 
   RowBox[{"\<\"catalysts\"\>", "\[DirectedEdge]", "\<\"cells\"\>"}], ",", 
   RowBox[{"\<\"cemented\"\>", "\[DirectedEdge]", "\<\"counter\"\>"}], ",", 
   RowBox[{"\<\"cemented\"\>", "\[DirectedEdge]", "\<\"cells\"\>"}], ",", 
   RowBox[{"\<\"low\[Hyphen]cost\"\>", "\[DirectedEdge]", "\<\"effect\"\>"}], 
   ",", 
   RowBox[{"\<\"low\[Hyphen]cost\"\>", 
    "\[DirectedEdge]", "\<\"conversion\"\>"}], ",", 
   RowBox[{"\<\"molybdenum\"\>", "\[DirectedEdge]", "\<\"counter\"\>"}], ",", 
   
   RowBox[{"\<\"molybdenum\"\>", "\[DirectedEdge]", "\<\"solar\"\>"}], ",", 
   RowBox[{"\<\"counter\"\>", "\[DirectedEdge]", "\<\"cemented\"\>"}], ",", 
   RowBox[{"\<\"counter\"\>", "\[DirectedEdge]", "\<\"solar\"\>"}], ",", 
   RowBox[{"\<\"electrodes\"\>", "\[DirectedEdge]", "\<\"cemented\"\>"}], ",", 
   RowBox[{"\<\"electrodes\"\>", "\[DirectedEdge]", "\<\"methane\"\>"}], ",", 
   
   RowBox[{"\<\"dye\[Hyphen]sensitized\"\>", 
    "\[DirectedEdge]", "\<\"cemented\"\>"}], ",", 
   RowBox[{"\<\"dye\[Hyphen]sensitized\"\>", 
    "\[DirectedEdge]", "\<\"low\[Hyphen]cost\"\>"}], ",", 
   RowBox[{"\<\"solar\"\>", "\[DirectedEdge]", "\<\"cells\"\>"}], ",", 
   RowBox[{"\<\"solar\"\>", "\[DirectedEdge]", "\<\"gas\"\>"}], ",", 
   RowBox[{"\<\"cells\"\>", "\[DirectedEdge]", "\<\"solar\"\>"}], ",", 
   RowBox[{"\<\"cells\"\>", "\[DirectedEdge]", "\<\"new\"\>"}], ",", 
   RowBox[{"\<\"new\"\>", "\[DirectedEdge]", "\<\"gas\"\>"}], ",", 
   RowBox[{"\<\"new\"\>", "\[DirectedEdge]", "\<\"cells\"\>"}], ",", 
   RowBox[{"\<\"methane\"\>", "\[DirectedEdge]", "\<\"cemented\"\>"}], ",", 
   RowBox[{"\<\"methane\"\>", "\[DirectedEdge]", "\<\"solar\"\>"}], ",", 
   RowBox[{"\<\"synthesis\"\>", "\[DirectedEdge]", "\<\"conversion\"\>"}], 
   ",", 
   RowBox[{"\<\"synthesis\"\>", "\[DirectedEdge]", "\<\"catalysts\"\>"}], ",", 
   RowBox[{"\<\"gas\"\>", "\[DirectedEdge]", "\<\"new\"\>"}], ",", 
   RowBox[{"\<\"gas\"\>", "\[DirectedEdge]", "\<\"solar\"\>"}], ",", 
   RowBox[{"\<\"study\"\>", "\[DirectedEdge]", "\<\"solar\"\>"}], ",", 
   RowBox[{"\<\"study\"\>", "\[DirectedEdge]", "\<\"cells\"\>"}], ",", 
   RowBox[{"\<\"effect\"\>", "\[DirectedEdge]", "\<\"new\"\>"}], ",", 
   RowBox[{"\<\"effect\"\>", "\[DirectedEdge]", "\<\"cemented\"\>"}], ",", 
   RowBox[{"\<\"machining\"\>", "\[DirectedEdge]", "\<\"methane\"\>"}], ",", 
   RowBox[{"\<\"machining\"\>", "\[DirectedEdge]", "\<\"counter\"\>"}], ",", 
   RowBox[{"\<\"parameters\"\>", "\[DirectedEdge]", "\<\"catalytic\"\>"}], 
   ",", 
   RowBox[{"\<\"parameters\"\>", "\[DirectedEdge]", "\<\"catalysts\"\>"}], 
   ",", 
   RowBox[{"\<\"characteristics\"\>", 
    "\[DirectedEdge]", "\<\"catalytic\"\>"}], ",", 
   RowBox[{"\<\"characteristics\"\>", 
    "\[DirectedEdge]", "\<\"catalysts\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{3.68570123389126*^9}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "catalytic", "catalysts", "cemented", "conversion", "counter", 
       "synthesis", "cells", "low\[Hyphen]cost", "effect", "molybdenum", 
       "solar", "electrodes", "methane", "dye\[Hyphen]sensitized", "gas", 
       "new", "study", "machining", "parameters", "characteristics"}, {{{1, 
       2}, {1, 3}, {4, 5}, {4, 6}, {2, 1}, {2, 7}, {3, 5}, {3, 7}, {8, 9}, {8,
        4}, {10, 5}, {10, 11}, {5, 3}, {5, 11}, {12, 3}, {12, 13}, {14, 3}, {
       14, 8}, {11, 7}, {11, 15}, {7, 11}, {7, 16}, {16, 15}, {16, 7}, {13, 
       3}, {13, 11}, {6, 4}, {6, 2}, {15, 16}, {15, 11}, {17, 11}, {17, 7}, {
       9, 16}, {9, 3}, {18, 13}, {18, 5}, {19, 1}, {19, 2}, {20, 1}, {20, 2}},
        Null}, {ImageSize -> 450, VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[BezierCurveBox[{{3.3192859605810194`, 1.9959117064920693`}, {
         3.5018677777840366`, 1.9742489877063099`}, {3.635949382765224, 
         1.8484415293837877`}}], 0.03925141067086817], 
        ArrowBox[{{3.3192859605810194`, 1.9959117064920693`}, {
         1.7952809068332487`, 1.543183676087412}}, 0.03925141067086817], 
        ArrowBox[BezierCurveBox[{{3.635949382765224, 1.8484415293837877`}, {
         3.4533675655622154`, 1.87010424819537}, {3.3192859605810194`, 
         1.9959117064920693`}}], 0.03925141067086817], 
        ArrowBox[{{3.635949382765224, 1.8484415293837877`}, {
         2.313832186074072, 2.4091305126374634`}}, 0.03925141067086817], 
        ArrowBox[BezierCurveBox[{{1.7952809068332487`, 1.543183676087412}, {
         1.4379892858199015`, 1.305811268478748}, {1.0095499295649302`, 
         1.3268512388406082`}}], 0.03925141067086817], 
        ArrowBox[{{1.7952809068332487`, 1.543183676087412}, {
         2.313832186074072, 2.4091305126374634`}}, 0.03925141067086817], 
        ArrowBox[{{2.268086733901236, 0.5548624075375879}, {
         1.0095499295649302`, 1.3268512388406082`}}, 0.03925141067086817], 
        ArrowBox[BezierCurveBox[{{2.268086733901236, 0.5548624075375879}, {
         2.7977052911192275`, 0.8535640359507016}, {3.401234066894882, 
         0.7795944761511776}}], 0.03925141067086817], 
        ArrowBox[BezierCurveBox[{{1.0095499295649302`, 1.3268512388406082`}, {
         1.3668415505782776`, 1.5642236464510753`}, {1.7952809068332487`, 
         1.543183676087412}}], 0.03925141067086817], 
        ArrowBox[{{1.0095499295649302`, 1.3268512388406082`}, {
         1.1061743905303953`, 2.470171861455687}}, 0.03925141067086817], 
        ArrowBox[{{3.401234066894882, 0.7795944761511776}, {3.635949382765224,
          1.8484415293837877`}}, 0.03925141067086817], 
        ArrowBox[BezierCurveBox[{{3.401234066894882, 0.7795944761511776}, {
         2.871615509676886, 0.4808928477382646}, {2.268086733901236, 
         0.5548624075375879}}], 0.03925141067086817], 
        ArrowBox[BezierCurveBox[{{2.313832186074072, 2.4091305126374634`}, {
         1.6999656032934887`, 2.241063036803162}, {1.1061743905303953`, 
         2.470171861455687}}], 0.03925141067086817], 
        ArrowBox[BezierCurveBox[{{2.313832186074072, 2.4091305126374634`}, {
         2.041349254582631, 2.3285372591975326`}, {1.7742210439523847`, 
         2.425412124564342}}], 0.03925141067086817], 
        ArrowBox[{{2.0679855149438717`, 0.}, {2.268086733901236, 
         0.5548624075375879}}, 0.03925141067086817], 
        ArrowBox[{{2.0679855149438717`, 0.}, {2.0421918196870052`, 
         1.1281943257582863`}}, 0.03925141067086817], 
        ArrowBox[{{2.0421918196870052`, 1.1281943257582863`}, {
         1.7952809068332487`, 1.543183676087412}}, 0.03925141067086817], 
        ArrowBox[{{2.0421918196870052`, 1.1281943257582863`}, {
         1.7742210439523847`, 2.425412124564342}}, 0.03925141067086817], 
        ArrowBox[{{0.21894318564398052`, 2.1696059852538916`}, {
         1.0095499295649302`, 1.3268512388406082`}}, 0.03925141067086817], 
        ArrowBox[{{0.21894318564398052`, 2.1696059852538916`}, {
         1.1061743905303953`, 2.470171861455687}}, 0.03925141067086817], 
        ArrowBox[BezierCurveBox[{{1.1061743905303953`, 2.470171861455687}, {
         1.7200409733109703`, 2.638239337287976}, {2.313832186074072, 
         2.4091305126374634`}}], 0.03925141067086817], 
        ArrowBox[BezierCurveBox[{{1.1061743905303953`, 2.470171861455687}, {
         0.967001164193454, 2.870068484689585}, {1.092359406561851, 
         3.274508600484123}}], 0.03925141067086817], 
        ArrowBox[{{0.9576855828861497, 1.8442971845189482`}, {
         1.7952809068332487`, 1.543183676087412}}, 0.03925141067086817], 
        ArrowBox[{{0.9576855828861497, 1.8442971845189482`}, {
         0.5879815292902504, 1.6326105424411725`}}, 0.03925141067086817], 
        ArrowBox[{{0.5879815292902504, 1.6326105424411725`}, {
         1.7952809068332487`, 1.543183676087412}}, 0.03925141067086817], 
        ArrowBox[{{0.5879815292902504, 1.6326105424411725`}, {
         1.1061743905303953`, 2.470171861455687}}, 0.03925141067086817], 
        ArrowBox[{{1.527241157785045, 0.3079224559453344}, {
         1.7952809068332487`, 1.543183676087412}}, 0.03925141067086817], 
        ArrowBox[{{1.527241157785045, 0.3079224559453344}, {
         2.0679855149438717`, 0.}}, 0.03925141067086817], 
        ArrowBox[BezierCurveBox[{{1.092359406561851, 3.274508600484123}, {
         1.231532632898789, 2.8746119772555114`}, {1.1061743905303953`, 
         2.470171861455687}}], 0.03925141067086817], 
        ArrowBox[BezierCurveBox[{{1.092359406561851, 3.274508600484123}, {
         1.5729162841879187`, 2.962086199650971}, {1.7742210439523847`, 
         2.425412124564342}}], 0.03925141067086817], 
        ArrowBox[BezierCurveBox[{{1.7742210439523847`, 2.425412124564342}, {
         2.046703975443829, 2.5060053780013347`}, {2.313832186074072, 
         2.4091305126374634`}}], 0.03925141067086817], 
        ArrowBox[BezierCurveBox[{{1.7742210439523847`, 2.425412124564342}, {
         1.2936641663263162`, 2.737834525395428}, {1.092359406561851, 
         3.274508600484123}}], 0.03925141067086817], 
        ArrowBox[{{1.8193487735127865`, 3.2425122735389884`}, {
         2.313832186074072, 2.4091305126374634`}}, 0.03925141067086817], 
        ArrowBox[{{1.8193487735127865`, 3.2425122735389884`}, {
         1.1061743905303953`, 2.470171861455687}}, 0.03925141067086817], 
        ArrowBox[{{0., 1.0424083857235806`}, {1.0095499295649302`, 
         1.3268512388406082`}}, 0.03925141067086817], 
        ArrowBox[{{0., 1.0424083857235806`}, {0.5879815292902504, 
         1.6326105424411725`}}, 0.03925141067086817], 
        ArrowBox[{{4.358920769240992, 1.8339203822490031`}, {
         3.3192859605810194`, 1.9959117064920693`}}, 0.03925141067086817], 
        ArrowBox[{{4.358920769240992, 1.8339203822490031`}, {
         3.635949382765224, 1.8484415293837877`}}, 0.03925141067086817], 
        ArrowBox[{{4.177227616504838, 2.450458997387314}, {
         3.3192859605810194`, 1.9959117064920693`}}, 0.03925141067086817], 
        ArrowBox[{{4.177227616504838, 2.450458997387314}, {3.635949382765224, 
         1.8484415293837877`}}, 0.03925141067086817]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{3.3192859605810194, 1.9959117064920693}, 
          0.03925141067086817], 
         InsetBox["\<\"catalytic\"\>", 
          Offset[{2, 2}, {3.3585373712518876, 2.0351631171629374}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.635949382765224, 1.8484415293837877}, 
          0.03925141067086817], 
         InsetBox["\<\"catalysts\"\>", 
          Offset[{2, 2}, {3.675200793436092, 1.8876929400546558}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.7952809068332487, 1.543183676087412}, 
          0.03925141067086817], 
         InsetBox["\<\"cemented\"\>", 
          Offset[{2, 2}, {1.8345323175041168, 1.5824350867582802}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.268086733901236, 0.5548624075375879}, 
          0.03925141067086817], 
         InsetBox["\<\"conversion\"\>", 
          Offset[{2, 2}, {2.307338144572104, 0.594113818208456}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.0095499295649302, 1.3268512388406082}, 
          0.03925141067086817], 
         InsetBox["\<\"counter\"\>", 
          Offset[{2, 2}, {1.0488013402357983, 1.3661026495114763}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.401234066894882, 0.7795944761511776}, 
          0.03925141067086817], 
         InsetBox["\<\"synthesis\"\>", 
          Offset[{2, 2}, {3.4404854775657503, 0.8188458868220457}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.313832186074072, 2.4091305126374634}, 
          0.03925141067086817], 
         InsetBox["\<\"cells\"\>", 
          Offset[{2, 2}, {2.35308359674494, 2.4483819233083315}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.0679855149438717, 0.}, 0.03925141067086817], 
         InsetBox["\<\"low\[Hyphen]cost\"\>", 
          Offset[{2, 2}, {2.10723692561474, 0.03925141067086817}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.0421918196870052, 1.1281943257582863}, 
          0.03925141067086817], 
         InsetBox["\<\"effect\"\>", 
          Offset[{2, 2}, {2.0814432303578734, 1.1674457364291544}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.21894318564398052, 2.1696059852538916}, 
          0.03925141067086817], 
         InsetBox["\<\"molybdenum\"\>", 
          Offset[{2, 2}, {0.2581945963148487, 2.2088573959247597}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.1061743905303953, 2.470171861455687}, 
          0.03925141067086817], 
         InsetBox["\<\"solar\"\>", 
          Offset[{2, 2}, {1.1454258012012635, 2.509423272126555}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9576855828861497, 1.8442971845189482}, 
          0.03925141067086817], 
         InsetBox["\<\"electrodes\"\>", 
          Offset[{2, 2}, {0.9969369935570178, 1.8835485951898163}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5879815292902504, 1.6326105424411725}, 
          0.03925141067086817], 
         InsetBox["\<\"methane\"\>", 
          Offset[{2, 2}, {0.6272329399611185, 1.6718619531120407}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.527241157785045, 0.3079224559453344}, 
          0.03925141067086817], 
         InsetBox["\<\"dye\[Hyphen]sensitized\"\>", 
          Offset[{2, 2}, {1.5664925684559132, 0.3471738666162026}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.092359406561851, 3.274508600484123}, 0.03925141067086817],
          InsetBox["\<\"gas\"\>", 
          Offset[{2, 2}, {1.131610817232719, 3.313760011154991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.7742210439523847, 2.425412124564342}, 
          0.03925141067086817], 
         InsetBox["\<\"new\"\>", 
          Offset[{2, 2}, {1.8134724546232528, 2.46466353523521}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8193487735127865, 3.2425122735389884}, 
          0.03925141067086817], 
         InsetBox["\<\"study\"\>", 
          Offset[{2, 2}, {1.8586001841836546, 3.2817636842098565}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 1.0424083857235806}, 0.03925141067086817], 
         InsetBox["\<\"machining\"\>", 
          Offset[{2, 2}, {0.03925141067086817, 1.0816597963944488}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.358920769240992, 1.8339203822490031}, 
          0.03925141067086817], 
         InsetBox["\<\"parameters\"\>", 
          Offset[{2, 2}, {4.39817217991186, 1.8731717929198712}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.177227616504838, 2.450458997387314}, 0.03925141067086817],
          InsetBox["\<\"characteristics\"\>", 
          Offset[{2, 2}, {4.216479027175706, 2.489710408058182}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->450]], "Output",
 CellChangeTimes->{3.685701233951612*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xmatList1", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Xmat\>\"", ",", "\"\<ZrC\>\"", ",", "\"\<Salvatore\>\"", ",", 
     "\"\<ZrC\>\"", ",", "\"\<Mike\>\"", ",", "\"\<Tessa\>\"", ",", 
     "\"\<Xmat\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xmatList2", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<HfC\>\"", ",", "\"\<Andy\>\"", ",", "\"\<Mike\>\"", ",", 
     "\"\<Tessa\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"xmatList", "=", 
  RowBox[{"{", 
   RowBox[{"xmatList1", ",", "xmatList2"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"graphs", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"associate", "[", 
     RowBox[{"xmatList", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
    RowBox[{"associate", "[", 
     RowBox[{"xmatList", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"graphs", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "450"}]}], "]"}], ",", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"graphs", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "450"}]}], "]"}]}], "}"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "900"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.694623185361141*^9, 3.6946232183412647`*^9}, {
  3.694623253712689*^9, 3.694623302057757*^9}, {3.6946233359102917`*^9, 
  3.6946235275676413`*^9}, {3.694623574343173*^9, 3.694623663956319*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Xmat\"\>", ",", "\<\"ZrC\"\>", ",", "\<\"Salvatore\"\>", 
     ",", "\<\"ZrC\"\>", ",", "\<\"Mike\"\>", ",", "\<\"Tessa\"\>", 
     ",", "\<\"Xmat\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HfC\"\>", ",", "\<\"Andy\"\>", ",", "\<\"Mike\"\>", 
     ",", "\<\"Tessa\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6946232602123413`*^9, {3.694623296128489*^9, 3.694623302259474*^9}, {
   3.694623345220532*^9, 3.694623373856382*^9}, {3.694623403880954*^9, 
   3.6946235280215054`*^9}, {3.6946235782766943`*^9, 3.6946236643766108`*^9}, 
   3.694690321209003*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Xmat\"\>", "\[DirectedEdge]", "\<\"ZrC\"\>"}], ",", 
     RowBox[{"\<\"ZrC\"\>", "\[DirectedEdge]", "\<\"Xmat\"\>"}], ",", 
     RowBox[{"\<\"Salvatore\"\>", "\[DirectedEdge]", "\<\"Xmat\"\>"}], ",", 
     RowBox[{"\<\"Salvatore\"\>", "\[DirectedEdge]", "\<\"Xmat\"\>"}], ",", 
     RowBox[{"\<\"ZrC\"\>", "\[DirectedEdge]", "\<\"Xmat\"\>"}], ",", 
     RowBox[{"\<\"Mike\"\>", "\[DirectedEdge]", "\<\"Xmat\"\>"}], ",", 
     RowBox[{"\<\"Mike\"\>", "\[DirectedEdge]", "\<\"ZrC\"\>"}], ",", 
     RowBox[{"\<\"Tessa\"\>", "\[DirectedEdge]", "\<\"Xmat\"\>"}], ",", 
     RowBox[{"\<\"Tessa\"\>", "\[DirectedEdge]", "\<\"ZrC\"\>"}], ",", 
     RowBox[{"\<\"Xmat\"\>", "\[DirectedEdge]", "\<\"ZrC\"\>"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"HfC\"\>", "\[DirectedEdge]", "\<\"Andy\"\>"}], ",", 
     RowBox[{"\<\"HfC\"\>", "\[DirectedEdge]", "\<\"Mike\"\>"}], ",", 
     RowBox[{"\<\"Andy\"\>", "\[DirectedEdge]", "\<\"HfC\"\>"}], ",", 
     RowBox[{"\<\"Andy\"\>", "\[DirectedEdge]", "\<\"Mike\"\>"}], ",", 
     RowBox[{"\<\"Mike\"\>", "\[DirectedEdge]", "\<\"HfC\"\>"}], ",", 
     RowBox[{"\<\"Mike\"\>", "\[DirectedEdge]", "\<\"Andy\"\>"}], ",", 
     RowBox[{"\<\"Tessa\"\>", "\[DirectedEdge]", "\<\"HfC\"\>"}], ",", 
     RowBox[{"\<\"Tessa\"\>", "\[DirectedEdge]", "\<\"Andy\"\>"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6946232602123413`*^9, {3.694623296128489*^9, 3.694623302259474*^9}, {
   3.694623345220532*^9, 3.694623373856382*^9}, {3.694623403880954*^9, 
   3.6946235280215054`*^9}, {3.6946235782766943`*^9, 3.6946236643766108`*^9}, 
   3.694690321224881*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     FormBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          
          Graph[{"Xmat", "ZrC", "Salvatore", "Mike", "Tessa"}, {{{1, 2}, {2, 
            1}, {3, 1}, {3, 1}, {2, 1}, {4, 1}, {4, 2}, {5, 1}, {5, 2}, {1, 
            2}}, Null}, {ImageSize -> 450, VertexLabels -> {"Name"}}]]}, 
         TagBox[GraphicsGroupBox[{
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
             ArrowBox[BezierCurveBox[{{1.179845816297983, 
              0.8399852798718555}, {1.6525147577999164`, 
              0.9942718094778951}, {2.1244918806120885`, 
              0.8378817298040916}}], 0.023613635427348678`], 
             ArrowBox[BezierCurveBox[{{1.179845816297983, 
              0.8399852798718555}, {1.6522844988393095`, 
              0.8908688887425181}, {2.1244918806120885`, 
              0.8378817298040916}}], 0.023613635427348678`], 
             ArrowBox[BezierCurveBox[{{2.1244918806120885`, 
              0.8378817298040916}, {1.6518229391101538`, 
              0.6835952001979463}, {1.179845816297983, 0.8399852798718555}}], 
              0.023613635427348678`], 
             ArrowBox[BezierCurveBox[{{2.1244918806120885`, 
              0.8378817298040916}, {1.6520531980707642`, 
              0.7869981209327563}, {1.179845816297983, 0.8399852798718555}}], 
              0.023613635427348678`], 
             ArrowBox[BezierCurveBox[{{0., 0.8408357053290136}, {
              0.5900627527465906, 1.0344252201936044`}, {1.179845816297983, 
              0.8399852798718555}}], 0.023613635427348678`], 
             ArrowBox[BezierCurveBox[{{0., 0.8408357053290136}, {
              0.5897830635513972, 0.6463957650072334}, {1.179845816297983, 
              0.8399852798718555}}], 0.023613635427348678`], 
             ArrowBox[{{1.8222231459293008`, 1.6786453806482182`}, {
              1.179845816297983, 0.8399852798718555}}, 0.023613635427348678`],
              ArrowBox[{{1.8222231459293008`, 1.6786453806482182`}, {
              2.1244918806120885`, 0.8378817298040916}}, 
              0.023613635427348678`], 
             ArrowBox[{{1.818291458727889, 0.}, {1.179845816297983, 
              0.8399852798718555}}, 0.023613635427348678`], 
             ArrowBox[{{1.818291458727889, 0.}, {2.1244918806120885`, 
              0.8378817298040916}}, 0.023613635427348678`]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
             0.7]}], {
              DiskBox[{1.179845816297983, 0.8399852798718555}, 
               0.023613635427348678], 
              InsetBox["\<\"Xmat\"\>", 
               Offset[{2, 2}, {1.2034594517253316, 0.8635989152992041}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{2.1244918806120885, 0.8378817298040916}, 
               0.023613635427348678], 
              InsetBox["\<\"ZrC\"\>", 
               Offset[{2, 2}, {2.148105516039437, 0.8614953652314403}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{0., 0.8408357053290136}, 0.023613635427348678], 
              InsetBox["\<\"Salvatore\"\>", 
               Offset[{2, 2}, {0.023613635427348678, 0.8644493407563623}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.8222231459293008, 1.6786453806482182}, 
               0.023613635427348678], 
              InsetBox["\<\"Mike\"\>", 
               Offset[{2, 2}, {1.8458367813566494, 1.7022590160755668}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.818291458727889, 0.}, 0.023613635427348678], 
              InsetBox["\<\"Tessa\"\>", 
               Offset[{2, 2}, {1.8419050941552377, 0.023613635427348678}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FormatType->TraditionalForm,
       FrameTicks->None,
       ImageSize->450],
      TraditionalForm], {192., -189.}, {Center, Center}, {360., 360.}], 
    InsetBox[
     FormBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          
          Graph[{"HfC", "Andy", "Mike", "Tessa"}, {{{1, 2}, {1, 3}, {2, 1}, {
            2, 3}, {3, 1}, {3, 2}, {4, 1}, {4, 2}}, Null}, {
           ImageSize -> 450, VertexLabels -> {"Name"}}]]}, 
         TagBox[GraphicsGroupBox[{
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
             ArrowBox[BezierCurveBox[{{0.9409795835786596, 
              0.876157169645104}, {1.0852098383462554`, 
              0.43812933621684835`}, {0.9412882138612818, 0.}}], 
              0.021646397652951593`], 
             ArrowBox[BezierCurveBox[{{0.9409795835786596, 
              0.876157169645104}, {0.5424804602943182, 0.5025263162047979}, {
              0., 0.4383662343800104}}], 0.021646397652951593`], 
             ArrowBox[BezierCurveBox[{{0.9412882138612818, 0.}, {
              0.7970579590936852, 0.4380278334283102}, {0.9409795835786596, 
              0.876157169645104}}], 0.021646397652951593`], 
             ArrowBox[BezierCurveBox[{{0.9412882138612818, 0.}, {
              0.39855883580934187`, 0.06439697998800044}, {0., 
              0.4383662343800104}}], 0.021646397652951593`], 
             ArrowBox[BezierCurveBox[{{0., 0.4383662343800104}, {
              0.39849912328434206`, 0.8119970878203492}, {0.9409795835786596, 
              0.876157169645104}}], 0.021646397652951593`], 
             ArrowBox[BezierCurveBox[{{0., 0.4383662343800104}, {
              0.5427293780519397, 0.37396925439197454`}, {0.9412882138612818, 
              0.}}], 0.021646397652951593`], 
             ArrowBox[{{1.8819545647991063`, 0.43850997921528245`}, {
              0.9409795835786596, 0.876157169645104}}, 0.021646397652951593`],
              ArrowBox[{{1.8819545647991063`, 0.43850997921528245`}, {
              0.9412882138612818, 0.}}, 0.021646397652951593`]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
             0.7]}], {
              DiskBox[{0.9409795835786596, 0.876157169645104}, 
               0.021646397652951593], 
              InsetBox["\<\"HfC\"\>", 
               Offset[{2, 2}, {0.9626259812316112, 0.8978035672980557}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{0.9412882138612818, 0.}, 0.021646397652951593], 
              InsetBox["\<\"Andy\"\>", 
               Offset[{2, 2}, {0.9629346115142334, 0.021646397652951593}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{0., 0.4383662343800104}, 0.021646397652951593], 
              InsetBox["\<\"Mike\"\>", 
               Offset[{2, 2}, {0.021646397652951593, 0.46001263203296194}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.8819545647991063, 0.43850997921528245}, 
               0.021646397652951593], 
              InsetBox["\<\"Tessa\"\>", 
               Offset[{2, 2}, {1.9036009624520578, 0.4601563768682341}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FormatType->TraditionalForm,
       FrameTicks->None,
       ImageSize->450],
      TraditionalForm], {576., -189.}, {Center, Center}, {360., 360.}]}, {}},
  ContentSelectable->True,
  ImageSize->900,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.6946232602123413`*^9, {3.694623296128489*^9, 3.694623302259474*^9}, {
   3.694623345220532*^9, 3.694623373856382*^9}, {3.694623403880954*^9, 
   3.6946235280215054`*^9}, {3.6946235782766943`*^9, 3.6946236643766108`*^9}, 
   3.6946903217876587`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"graphs", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "Commonest"}]], "Input",
 CellChangeTimes->{{3.6946236973807783`*^9, 3.694623705128034*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"Xmat\"\>", "\[DirectedEdge]", "\<\"ZrC\"\>"}], ",", 
   RowBox[{"\<\"ZrC\"\>", "\[DirectedEdge]", "\<\"Xmat\"\>"}], ",", 
   RowBox[{"\<\"Salvatore\"\>", "\[DirectedEdge]", "\<\"Xmat\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.694623699995288*^9, 3.694623728356532*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"graphs", "//", "Commonest"}], "]"}]], "Input",
 CellChangeTimes->{
  3.69462366794746*^9, {3.694623713153904*^9, 3.6946237324805307`*^9}}],

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\<\"Xmat\"\>", "\[DirectedEdge]", "\<\"ZrC\"\>"}], ",", 
      RowBox[{"\<\"ZrC\"\>", "\[DirectedEdge]", "\<\"Xmat\"\>"}], ",", 
      RowBox[{"\<\"Salvatore\"\>", "\[DirectedEdge]", "\<\"Xmat\"\>"}], ",", 
      RowBox[{"\<\"Salvatore\"\>", "\[DirectedEdge]", "\<\"Xmat\"\>"}], ",", 
      RowBox[{"\<\"ZrC\"\>", "\[DirectedEdge]", "\<\"Xmat\"\>"}], ",", 
      RowBox[{"\<\"Mike\"\>", "\[DirectedEdge]", "\<\"Xmat\"\>"}], ",", 
      RowBox[{"\<\"Mike\"\>", "\[DirectedEdge]", "\<\"ZrC\"\>"}], ",", 
      RowBox[{"\<\"Tessa\"\>", "\[DirectedEdge]", "\<\"Xmat\"\>"}], ",", 
      RowBox[{"\<\"Tessa\"\>", "\[DirectedEdge]", "\<\"ZrC\"\>"}], ",", 
      RowBox[{"\<\"Xmat\"\>", "\[DirectedEdge]", "\<\"ZrC\"\>"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\<\"HfC\"\>", "\[DirectedEdge]", "\<\"Andy\"\>"}], ",", 
      RowBox[{"\<\"HfC\"\>", "\[DirectedEdge]", "\<\"Mike\"\>"}], ",", 
      RowBox[{"\<\"Andy\"\>", "\[DirectedEdge]", "\<\"HfC\"\>"}], ",", 
      RowBox[{"\<\"Andy\"\>", "\[DirectedEdge]", "\<\"Mike\"\>"}], ",", 
      RowBox[{"\<\"Mike\"\>", "\[DirectedEdge]", "\<\"HfC\"\>"}], ",", 
      RowBox[{"\<\"Mike\"\>", "\[DirectedEdge]", "\<\"Andy\"\>"}], ",", 
      RowBox[{"\<\"Tessa\"\>", "\[DirectedEdge]", "\<\"HfC\"\>"}], ",", 
      RowBox[{"\<\"Tessa\"\>", "\[DirectedEdge]", "\<\"Andy\"\>"}]}], "}"}]}],
    "}"}], "]"}]], "Output",
 CellChangeTimes->{
  3.694623668304907*^9, {3.694623718466408*^9, 3.694623732803606*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{"graphs", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.694689623619485*^9, 3.694689629471743*^9}}],

Cell[BoxData[
 TemplateBox[{
  "GraphData","notdef",
   "\"GraphData has no value associated with the specified argument(s).\"",2,
   611,147,29364606881128801197,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.694689651086781*^9}],

Cell[BoxData[
 RowBox[{"GraphData", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\<\"Xmat\"\>", "\[DirectedEdge]", "\<\"ZrC\"\>"}], ",", 
    RowBox[{"\<\"ZrC\"\>", "\[DirectedEdge]", "\<\"Xmat\"\>"}], ",", 
    RowBox[{"\<\"Salvatore\"\>", "\[DirectedEdge]", "\<\"Xmat\"\>"}], ",", 
    RowBox[{"\<\"Salvatore\"\>", "\[DirectedEdge]", "\<\"Xmat\"\>"}], ",", 
    RowBox[{"\<\"ZrC\"\>", "\[DirectedEdge]", "\<\"Xmat\"\>"}], ",", 
    RowBox[{"\<\"Mike\"\>", "\[DirectedEdge]", "\<\"Xmat\"\>"}], ",", 
    RowBox[{"\<\"Mike\"\>", "\[DirectedEdge]", "\<\"ZrC\"\>"}], ",", 
    RowBox[{"\<\"Tessa\"\>", "\[DirectedEdge]", "\<\"Xmat\"\>"}], ",", 
    RowBox[{"\<\"Tessa\"\>", "\[DirectedEdge]", "\<\"ZrC\"\>"}], ",", 
    RowBox[{"\<\"Xmat\"\>", "\[DirectedEdge]", "\<\"ZrC\"\>"}]}], "}"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.694689651390682*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LatticeData", "[", 
  RowBox[{"\"\<fcc\>\"", ",", "\"\<Image\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6946897582204857`*^9, 3.694689785568877*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   GraphicsComplex3DBox[{{-1, -1, -1}, {-1, -1, 1}, {-1, 1, -1}, {-1, 1, 1}, {
    1, -1, -1}, {1, -1, 1}, {1, 1, -1}, {1, 1, 1}, {0, 0, 1}, {1, 0, 0}, {0, 
    1, 0}, {-1, 0, 0}, {0, 0, -1}, {0, -1, 0}}, {
     {Opacity[0.1], EdgeForm[GrayLevel[0.8]], 
      Polygon3DBox[{{8, 4, 2, 6}, {8, 6, 5, 7}, {8, 7, 3, 4}, {4, 3, 1, 2}, {
       1, 3, 7, 5}, {2, 1, 5, 6}}]}, 
     {GrayLevel[0.8], 
      Line3DBox[{{9, 8}, {9, 4}, {9, 2}, {9, 6}, {10, 8}, {10, 6}, {10, 5}, {
       10, 7}, {11, 8}, {11, 7}, {11, 3}, {11, 4}, {12, 4}, {12, 3}, {12, 
       1}, {12, 2}, {13, 1}, {13, 3}, {13, 7}, {13, 5}, {14, 2}, {14, 1}, {14,
        5}, {14, 6}}]}}], 
   {GrayLevel[0], Specularity[
     GrayLevel[1], 5], SphereBox[{-1, -1, -1}, 0.06], 
    SphereBox[{-1, -1, 1}, 0.06], SphereBox[{-1, 1, -1}, 0.06], 
    SphereBox[{-1, 1, 1}, 0.06], SphereBox[{1, -1, -1}, 0.06], 
    SphereBox[{1, -1, 1}, 0.06], SphereBox[{1, 1, -1}, 0.06], 
    SphereBox[{1, 1, 1}, 0.06], SphereBox[{0, 0, 1}, 0.06], 
    SphereBox[{1, 0, 0}, 0.06], SphereBox[{0, 1, 0}, 0.06], 
    SphereBox[{-1, 0, 0}, 0.06], SphereBox[{0, 0, -1}, 0.06], 
    SphereBox[{0, -1, 0}, 0.06]}},
  Boxed->False,
  ImageSize->{339.97807547839653`, 358.02517237891817`},
  ImageSizeRaw->Automatic,
  ViewPoint->{4.336563135168869, -0.39615476205731603`, 0.9028063784507854},
  ViewVertical->{0.039522897981865604`, 0.1571728256276017, 
   0.9867799366724836}]], "Output",
 CellChangeTimes->{{3.6946897643218107`*^9, 3.694689785804701*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xmatlist", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Xmat\>\"", ",", "\"\<ZrC\>\"", ",", "\"\<Salvatore\>\"", ",", 
     "\"\<ZrC\>\"", ",", "\"\<Mike\>\"", ",", "\"\<Tessa\>\"", ",", 
     "\"\<Xmat\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hfclist", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<HfC\>\"", ",", "\"\<Andy\>\"", ",", "\"\<Mike\>\"", ",", 
     "\"\<Tessa\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"calphdlist", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<ZrC\>\"", ",", "\"\<Andy\>\"", ",", "\"\<Mike\>\"", ",", 
     "\"\<Tessa\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"topics", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Calphad\>\"", ",", "\"\<Transport\>\"", ",", 
     "\"\<Defect thermodynamics\>\""}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.694690028163776*^9, 3.6946900536904507`*^9}, {
  3.6946901068274*^9, 3.694690124735834*^9}, {3.694690158515226*^9, 
  3.694690177549542*^9}, {3.694690578132975*^9, 3.694690583618222*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Association", "[", 
  RowBox[{
   RowBox[{"{", "\"\<Mike\>\"", "}"}], ",", "mikeLinks"}], "]"}]], "Input",
 CellChangeTimes->{{3.69469083043015*^9, 3.694690854442401*^9}, {
  3.694691293621825*^9, 3.694691312124542*^9}}],

Cell[BoxData[
 RowBox[{"Association", "[", 
  RowBox[{
   RowBox[{"{", "\<\"Mike\"\>", "}"}], ",", "mikeLinks"}], "]"}]], "Output",
 CellChangeTimes->{{3.6946908427033253`*^9, 3.6946908548603907`*^9}, {
  3.694691297889658*^9, 3.694691312637649*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mikeLinks", "=", 
  RowBox[{"associate", "[", 
   RowBox[{"Flatten", "@", 
    RowBox[{"{", 
     RowBox[{"\"\<Mike\>\"", ",", "topics"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.694690484312359*^9, 3.694690524457259*^9}, {
  3.6946905578294992`*^9, 3.694690559063299*^9}, {3.694690703627247*^9, 
  3.694690717069463*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"Mike\"\>", "\[DirectedEdge]", "\<\"Calphad\"\>"}], ",", 
   RowBox[{"\<\"Mike\"\>", "\[DirectedEdge]", "\<\"Transport\"\>"}], ",", 
   RowBox[{"\<\"Calphad\"\>", "\[DirectedEdge]", "\<\"Mike\"\>"}], ",", 
   RowBox[{"\<\"Calphad\"\>", "\[DirectedEdge]", "\<\"Transport\"\>"}], ",", 
   RowBox[{"\<\"Transport\"\>", "\[DirectedEdge]", "\<\"Calphad\"\>"}], ",", 
   RowBox[{"\<\"Transport\"\>", "\[DirectedEdge]", "\<\"Mike\"\>"}], ",", 
   RowBox[{"\<\"Defect thermodynamics\"\>", 
    "\[DirectedEdge]", "\<\"Calphad\"\>"}], ",", 
   RowBox[{"\<\"Defect thermodynamics\"\>", 
    "\[DirectedEdge]", "\<\"Transport\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.694690491546376*^9, 3.694690524993442*^9}, 
   3.694690560329049*^9, 3.694690594248538*^9, {3.694690695297429*^9, 
   3.6946907177746677`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"mikeLinks", ",", 
   RowBox[{"VertexLabels", "->", "\"\<Name\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.694690180922819*^9, 3.694690232412285*^9}, {
  3.694690279936401*^9, 3.6946902809094048`*^9}, {3.6946906380524817`*^9, 
  3.69469063838861*^9}, {3.694690720061075*^9, 3.694690729830195*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "Mike", "Calphad", "Transport", "Defect thermodynamics"}, {{{1, 2}, {1, 
       3}, {2, 1}, {2, 3}, {3, 2}, {3, 1}, {4, 2}, {4, 3}}, Null}, {
      VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[BezierCurveBox[{{1.8816063331165955`, 
         0.43834311654120117`}, {1.3392530567206353`, 0.5028907278049387}, {
         0.9410863121668256, 0.8767579690399965}}], 0.021643529091781077`], 
        ArrowBox[BezierCurveBox[{{1.8816063331165955`, 
         0.43834311654120117`}, {1.4834449277933244`, 0.06451737884858347}, {
         0.9411205832568394, 0.}}], 0.021643529091781077`], 
        ArrowBox[BezierCurveBox[{{0.9410863121668256, 0.8767579690399965}, {
         1.4834395885627858`, 0.8122103577766462}, {1.8816063331165955`, 
         0.43834311654120117`}}], 0.021643529091781077`], 
        ArrowBox[BezierCurveBox[{{0.9410863121668256, 0.8767579690399965}, {
         1.0852781832395217`, 0.43838462008365475`}, {0.9411205832568394, 
         0.}}], 0.021643529091781077`], 
        ArrowBox[BezierCurveBox[{{0.9411205832568394, 0.}, {
         1.3392819885801086`, 0.3738257376926119}, {1.8816063331165955`, 
         0.43834311654120117`}}], 0.021643529091781077`], 
        ArrowBox[BezierCurveBox[{{0.9411205832568394, 0.}, {
         0.7969287121841441, 0.43837334895623337`}, {0.9410863121668256, 
         0.8767579690399965}}], 0.021643529091781077`], 
        ArrowBox[{{0., 0.43832716149322287`}, {0.9410863121668256, 
         0.8767579690399965}}, 0.021643529091781077`], 
        ArrowBox[{{0., 0.43832716149322287`}, {0.9411205832568394, 0.}}, 
         0.021643529091781077`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{1.8816063331165955, 0.43834311654120117}, 
          0.021643529091781077], 
         InsetBox["\<\"Mike\"\>", 
          Offset[{2, 2}, {1.9032498622083767, 0.45998664563298225}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9410863121668256, 0.8767579690399965}, 
          0.021643529091781077], 
         InsetBox["\<\"Calphad\"\>", 
          Offset[{2, 2}, {0.9627298412586067, 0.8984014981317776}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9411205832568394, 0.}, 0.021643529091781077], 
         InsetBox["\<\"Transport\"\>", 
          Offset[{2, 2}, {0.9627641123486206, 0.021643529091781077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 0.43832716149322287}, 0.021643529091781077], 
         InsetBox["\<\"Defect thermodynamics\"\>", 
          Offset[{2, 2}, {0.021643529091781077, 0.45997069058500395}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.694690185672151*^9, 3.6946902331027517`*^9}, {
   3.69469027321497*^9, 3.694690281278729*^9}, 3.6946906003577757`*^9, 
   3.694690639115448*^9, {3.6946906985219593`*^9, 
   3.694690730301179*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
vhjqgZdbSBHjzi3ynj6SM7w2ck17J0Ln5o+pMX8iSJuZpeMxrfuJciJrjTA1
g/4eW0zeAXdOrQPuZMMMDfJ4wrElHiGE4ypmCm/PWy6pAHnLJVgSABCkbYju
aJ6BZKufquW+HYtUccnQto5Yvc+GaMVfDCoJ3M1W8T/RMCBKtoaYOH4GbrvN
WPkWLatewMMTI0H7HLcw88ZTS7F1RNyiMvmNu4Dwjtm8TdStI8qLM0+pBIWg
FFf7GXP+bzp9ffsfq8x3aU8d471vw8j1QUMv7bwlCBT/b6W5JvpHg3WVWr01
dnUvssKao4wIIgBc7W0o18UaFzXuln6vPY/k03oQ20UjylZCSlH+sKGMynlA
CSOEAnnhjF7PrkKm7UKDk8GxRrOJclKseRRrwNVehjWYEIcwPS4OrDGABHcI
FiLu/VCsEGVqPfbKLG0/d6y3SQm9eey/rXiPbtDHicSp+UKYkcfWy/eVUI2k
j4RJenbfmTClUokZ7JZ+j4a02Bdsz8ae4GoNnI4Z6iyKwR7I20fSXuJ5Deb3
Ps0Uj+3sHs4HX5mSFAOMb+BqDyMpzmpUGA6pyJ0gKQVHApgRC92jyszWuPoU
+Y5aAepNGJ+nX41Qq1GlOhT7d+UTG+3eHVrLfSF2jNHA16JNd9oX3NIZxqfo
B6Tzsxxekkxq5S1Xho/z3Ydjc97ZA08rxQZKxTjdrNBSppdvInS2ZLqRPlJ1
LNgBqd1fc2fSrqxtmcUwJEiP95cjCtpb2BIGxqubaG2e9rfMUbTut+pon/xN
i3SmZfiekckQ25sLteXVOuXCRH+bwhoxLqctzzXYb912Xfc3TbDNncKJGo75
2oBfLAt5G7VnBy9qaKR42a11skPwQxDE1U9MhqkxYJTQdPYArhb7TaBMavBR
kxlUGznBzpImIDcim/NscscWqRntblGGT6YrShrKy4Ui5wG0UxRhKg1ONOJa
9rZU9j5iTG4OAxNC5SnRxImRUBIb1CxErNJdLDHShMlhX6k99IxWrJeWZsqq
2qv2/nENVU48+bjwxV2PDDde3SHfHx5iB+5YaJP5ex9ZKcRsprPftHxXRd/u
1beHK04FsYHDsSU8IhBGe0uho2e0YSt5I8HTOSpCmiy2ivOZHIx9xI9rN7S1
k1fQv0KIjdKT1ocv6+obzwUvbTFX2OO9b9nmXv+30czxrca19SkCU6FXBO6X
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
KpN+2MUWV2eXsrf9HytdYq8=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphComplement", "[", 
  RowBox[{"%", ",", 
   RowBox[{"VertexLabels", "->", "\"\<Name\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.694690334011889*^9, 3.694690340425744*^9}, {
  3.6946906107119703`*^9, 3.694690611033258*^9}, {3.694690667620623*^9, 
  3.694690673138289*^9}},
 NumberMarks->False],

Cell[BoxData[
 TemplateBox[{
  "GraphComplement","graph",
   "\"A graph object is expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) \
in \\!\\(\\*RowBox[{\\\"GraphComplement\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\
\\\", \\\"\\\\\\\"Mike\\\\\\\"\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"VertexLabels\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Name\\\\\\\"\\\"}]}], \\\"]\\\"}]\\).\"",2,673,160,
   29364606881128801197,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.694691236181643*^9}],

Cell[BoxData[
 RowBox[{"GraphComplement", "[", 
  RowBox[{
   RowBox[{"{", "\<\"Mike\"\>", "}"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\<\"Name\"\>"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.6946902930376043`*^9, 3.694690371356268*^9, {3.6946906039927473`*^9, 
   3.694690611506939*^9}, {3.694690668125149*^9, 3.694690673562046*^9}, {
   3.694690723649621*^9, 3.6946907326975737`*^9}, 3.6946912362643147`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EdgeCount", "[", "%630", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{3.6946902765843143`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CompleteGraphQ", "[", "%628", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.6946902681478662`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.694958559200526*^9, 3.6949585606436996`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Imperial\>\"", ",", "15"}], "]"}], "->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<XMAT\>\"", ",", "15"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<QMUL\>\"", ",", "15"}], "]"}], "->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<XMAT\>\"", ",", "15"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Birmingham\>\"", ",", "15"}], "]"}], "->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<XMAT\>\"", ",", "15"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<XMAT\>\"", ",", "15"}], "]"}], "<->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Birmingham\>\"", ",", "15"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<XMAT\>\"", ",", "15"}], "]"}], "<->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Imperial\>\"", ",", "15"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<XMAT\>\"", ",", "15"}], "]"}], "<->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<QMUL\>\"", ",", "15"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.694958566760483*^9, 3.6949588198513727`*^9}, {
  3.6949588722857103`*^9, 3.6949590194853067`*^9}, {3.6949590649736347`*^9, 
  3.694959081063048*^9}, {3.69495911420135*^9, 3.694959115121941*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Style["Imperial", 15], 
       Style["XMAT", 15], 
       Style["QMUL", 15], 
       Style["Birmingham", 15]}, {{{1, 2}, {3, 2}, {4, 2}}, {{2, 4}, {2, 1}, {
      2, 3}}}, {VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[BezierCurveBox[{{1.7318025873749314`, 
         0.009494272248574631}, {1.2158794039189358`, 0.11408371710033242`}, {
         0.8627505899440326, 0.5044882815490965}}], 0.020397512625243114`], 
        {Arrowheads[0.], 
         ArrowBox[BezierCurveBox[{{1.7318025873749314`, 
          0.009494272248574631}, {1.378673773400025, 0.39989883669727583`}, {
          0.8627505899440326, 0.5044882815490965}}], 
          0.020397512625243114`]}, 
        {Arrowheads[0.], 
         ArrowBox[BezierCurveBox[{{0.8627505899440326, 0.5044882815490965}, {
          0.5143337249350782, 0.11037278913148196`}, {0., 0.}}], 
          0.020397512625243114`]}, 
        {Arrowheads[0.], 
         ArrowBox[BezierCurveBox[{{0.8627505899440326, 0.5044882815490965}, {
          0.6945836399137301, 1.0035299636422108`}, {0.8554567609017061, 
          1.5049704511292168`}}], 0.020397512625243114`]}, 
        ArrowBox[BezierCurveBox[{{0., 0.}, {0.3484168650089566, 
         0.3941154924176062}, {0.8627505899440326, 0.5044882815490965}}], 
         0.020397512625243114`], 
        ArrowBox[BezierCurveBox[{{0.8554567609017061, 1.5049704511292168`}, {
         1.0236237109320085`, 1.0059287690365157`}, {0.8627505899440326, 
         0.5044882815490965}}], 0.020397512625243114`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{1.7318025873749314, 0.009494272248574631}, 
          0.020397512625243114], InsetBox[
          StyleBox["\<\"Imperial\"\>",
           StripOnInput->False,
           FontSize->15], 
          Offset[{2, 2}, {1.7522001000001746, 0.029891784873817745}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.8627505899440326, 0.5044882815490965}, 
          0.020397512625243114], InsetBox[
          StyleBox["\<\"XMAT\"\>",
           StripOnInput->False,
           FontSize->15], 
          Offset[{2, 2}, {0.8831481025692758, 0.5248857941743397}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.020397512625243114], 
         InsetBox[
          StyleBox["\<\"QMUL\"\>",
           StripOnInput->False,
           FontSize->15], 
          Offset[{2, 2}, {0.020397512625243114, 0.020397512625243114}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.8554567609017061, 1.5049704511292168}, 
          0.020397512625243114], InsetBox[
          StyleBox["\<\"Birmingham\"\>",
           StripOnInput->False,
           FontSize->15], 
          Offset[{2, 2}, {0.8758542735269492, 1.52536796375446}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.694958988268887*^9, 3.694959020178864*^9, 
  3.694959081762147*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ts", "=", "13"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<ZrC\>\"", ",", "ts"}], "]"}], "<->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Defect\\n detection\>\"", ",", "ts"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Measured Raman\>\"", ",", "ts"}], "]"}], "->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Defect\\n detection\>\"", ",", "ts"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Measured Raman\>\"", ",", "ts"}], "]"}], "->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<DFT Raman\>\"", ",", "ts"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<DFT Raman\>\"", ",", "ts"}], "]"}], "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Measured Raman\>\"", ",", "ts"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<DFT Raman\>\"", ",", "ts"}], "]"}], "->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Defect\\n detection\>\"", ",", "ts"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Measured IR\>\"", ",", "ts"}], "]"}], "->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Defect\\n detection\>\"", ",", "ts"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Measured IR\>\"", ",", "ts"}], "]"}], "->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<DFT IR\>\"", ",", "ts"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<DFT IR\>\"", ",", "ts"}], "]"}], "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Measured IR\>\"", ",", "ts"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<DFT IR\>\"", ",", "ts"}], "]"}], "->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Defect\\n detection\>\"", ",", "ts"}], "]"}]}]}], "}"}], 
   ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.694959136694396*^9, 3.6949591512118597`*^9}, {
  3.69495920048077*^9, 3.694959351763648*^9}, {3.6949593833553343`*^9, 
  3.694959442407172*^9}, {3.694959488544839*^9, 3.694959501736011*^9}, {
  3.694959545770625*^9, 3.6949595542488613`*^9}, {3.69495965040891*^9, 
  3.694959815712544*^9}, {3.69495987261259*^9, 3.694960018370672*^9}, {
  3.694960068719331*^9, 3.6949600970122957`*^9}, {3.694960366919697*^9, 
  3.694960435462426*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Style["ZrC", 13], 
       Style["Defect\n detection", 13], 
       Style["Measured Raman", 13], 
       Style["DFT Raman", 13], 
       Style["Measured IR", 13], 
       Style["DFT IR", 13]}, {{{3, 2}, {3, 4}, {4, 3}, {4, 2}, {5, 2}, {5, 
       6}, {6, 5}, {6, 2}}, {{1, 2}}}, {VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        {Arrowheads[0.], 
         ArrowBox[{{1.1444006331743515`, 1.9254562801913866`}, {
          1.1413303742194494`, 0.7134601117682643}}, 0.024858847609078222`]}, 
        ArrowBox[{{2.0349833525522696`, 0.}, {1.1413303742194494`, 
         0.7134601117682643}}, 0.024858847609078222`], 
        ArrowBox[BezierCurveBox[{{2.0349833525522696`, 0.}, {
         2.0403052356344715`, 0.39989894899301404`}, {2.28195287312288, 
         0.7185741929980514}}], 0.024858847609078222`], 
        ArrowBox[{{2.28195287312288, 0.7185741929980514}, {
         1.1413303742194494`, 0.7134601117682643}}, 0.024858847609078222`], 
        ArrowBox[BezierCurveBox[{{2.28195287312288, 0.7185741929980514}, {
         2.276630990040678, 0.3186752440051121}, {2.0349833525522696`, 0.}}], 
         0.024858847609078222`], 
        ArrowBox[{{0.24602971588015488`, 0.0017925349865570706`}, {
         1.1413303742194494`, 0.7134601117682643}}, 0.024858847609078222`], 
        ArrowBox[BezierCurveBox[{{0.24602971588015488`, 
         0.0017925349865570706`}, {0.004669553738291394, 
         0.32117701033343893`}, {0., 0.7214761062975075}}], 
         0.024858847609078222`], 
        ArrowBox[{{0., 0.7214761062975075}, {1.1413303742194494`, 
         0.7134601117682643}}, 0.024858847609078222`], 
        ArrowBox[BezierCurveBox[{{0., 0.7214761062975075}, {
         0.24136016214186357`, 0.40209163095061395`}, {0.24602971588015488`, 
         0.0017925349865570706`}}], 0.024858847609078222`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{1.1444006331743515, 1.9254562801913866}, 
          0.024858847609078222], InsetBox[
          StyleBox["\<\"ZrC\"\>",
           StripOnInput->False,
           FontSize->13], 
          Offset[{2, 2}, {1.1692594807834298, 1.950315127800465}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.1413303742194494, 0.7134601117682643}, 
          0.024858847609078222], InsetBox[
          StyleBox["\<\"Defect\\n detection\"\>",
           StripOnInput->False,
           FontSize->13], 
          Offset[{2, 2}, {1.1661892218285277, 0.7383189593773425}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.0349833525522696, 0.}, 0.024858847609078222], InsetBox[
          StyleBox["\<\"Measured Raman\"\>",
           StripOnInput->False,
           FontSize->13], 
          Offset[{2, 2}, {2.0598422001613477, 0.024858847609078222}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.28195287312288, 0.7185741929980514}, 
          0.024858847609078222], InsetBox[
          StyleBox["\<\"DFT Raman\"\>",
           StripOnInput->False,
           FontSize->13], 
          Offset[{2, 2}, {2.3068117207319583, 0.7434330406071296}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.24602971588015488, 0.0017925349865570706}, 
          0.024858847609078222], InsetBox[
          StyleBox["\<\"Measured IR\"\>",
           StripOnInput->False,
           FontSize->13], 
          Offset[{2, 2}, {0.27088856348923307, 0.026651382595635292}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 0.7214761062975075}, 0.024858847609078222], InsetBox[
          StyleBox["\<\"DFT IR\"\>",
           StripOnInput->False,
           FontSize->13], 
          Offset[{2, 2}, {0.024858847609078222, 0.7463349539065857}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{403.52734375, Automatic}]], "Output",
 CellChangeTimes->{{3.6949593426059227`*^9, 3.694959352267107*^9}, {
   3.694959391107278*^9, 3.694959442953363*^9}, 3.694959502227029*^9, 
   3.6949595552848263`*^9, 3.694959652834178*^9, 3.694959768301634*^9, {
   3.694959816377645*^9, 3.6949598416507177`*^9}, 3.694959873599558*^9, {
   3.69495990941989*^9, 3.694960018994673*^9}, {3.6949600749945498`*^9, 
   3.694960097558701*^9}, {3.6949603830342712`*^9, 3.6949604362497797`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Imperial\>\"", ",", "15"}], "]"}], "->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<XMAT\>\"", ",", "15"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<QMUL\>\"", ",", "15"}], "]"}], "->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<XMAT\>\"", ",", "15"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Birmingham\>\"", ",", "15"}], "]"}], "->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<XMAT\>\"", ",", "15"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<XMAT\>\"", ",", "15"}], "]"}], "<->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Birmingham\>\"", ",", "15"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<XMAT\>\"", ",", "15"}], "]"}], "<->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Imperial\>\"", ",", "15"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<XMAT\>\"", ",", "15"}], "]"}], "<->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<QMUL\>\"", ",", "15"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Tom, Imperial\>\"", ",", "ts"}], "]"}], "->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Salvatore, QMUL\>\"", ",", "ts"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", "\"\<Salvatore, QMUL\>\"", "]"}], "->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Tom, Imperial\>\"", ",", "ts"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Salvatore, QMUL\>\"", ",", "ts"}], "]"}], "->", 
      RowBox[{"Style", "[", "\"\<Eugenio, Imperial\>\"", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", "\"\<Eugenio, Imperial\>\"", "]"}], "->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Salvatore, QMUL\>\"", ",", "ts"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Tom, Imperial\>\"", ",", "ts"}], "]"}], "->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Eugenio, Imperial\>\"", ",", "ts"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Eugenio, Imperial\>\"", ",", "ts"}], "]"}], "->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Tom, Imperial\>\"", ",", "ts"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.694960110311844*^9, 3.6949602079564857`*^9}, {
  3.6949602486549664`*^9, 3.694960331055337*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Style["Tom, Imperial", 13], 
       Style["Salvatore, QMUL", 13], 
       Style["Salvatore, QMUL"], 
       Style["Eugenio, Imperial"], 
       Style["Eugenio, Imperial", 13]}, {{{1, 2}, {3, 1}, {2, 4}, {4, 2}, {1, 
       5}, {5, 1}}, Null}, {VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{0.6368544065646122, 0.7459957349137312}, {
         1.7615506162739545`, 0.7459935499735186}}, 0.028220586608084075`], 
        ArrowBox[BezierCurveBox[{{0.6368544065646122, 0.7459957349137312}, {
         0.4411453007817164, 0.26828818202171034`}, {0.00009200290955613255, 
         0.}}], 0.028220586608084075`], 
        ArrowBox[BezierCurveBox[{{1.7615506162739545`, 0.7459935499735186}, {
         2.2423555535837796`, 0.9040819596032782}, {2.7231370828130963`, 
         0.7459223751555247}}], 0.028220586608084075`], 
        ArrowBox[{{0., 1.4918012289063958`}, {0.6368544065646122, 
         0.7459957349137312}}, 0.028220586608084075`], 
        ArrowBox[BezierCurveBox[{{2.7231370828130963`, 0.7459223751555247}, {
         2.2423321455032714`, 0.5878339655251094}, {1.7615506162739545`, 
         0.7459935499735186}}], 0.028220586608084075`], 
        ArrowBox[BezierCurveBox[{{0.00009200290955613255, 0.}, {
         0.19580110869245265`, 0.47770755289200184`}, {0.6368544065646122, 
         0.7459957349137312}}], 0.028220586608084075`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{0.6368544065646122, 0.7459957349137312}, 
          0.028220586608084075], InsetBox[
          StyleBox["\<\"Tom, Imperial\"\>",
           StripOnInput->False,
           FontSize->13], 
          Offset[{2, 2}, {0.6650749931726962, 0.7742163215218152}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.7615506162739545, 0.7459935499735186}, 
          0.028220586608084075], InsetBox[
          StyleBox["\<\"Salvatore, QMUL\"\>",
           StripOnInput->False,
           FontSize->13], 
          Offset[{2, 2}, {1.7897712028820385, 0.7742141365816027}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 1.4918012289063958}, 0.028220586608084075], 
         InsetBox["\<\"Salvatore, QMUL\"\>", 
          Offset[{2, 2}, {0.028220586608084075, 1.5200218155144798}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.7231370828130963, 0.7459223751555247}, 
          0.028220586608084075], 
         InsetBox["\<\"Eugenio, Imperial\"\>", 
          Offset[{2, 2}, {2.7513576694211803, 0.7741429617636089}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00009200290955613255, 0.}, 0.028220586608084075], InsetBox[
          StyleBox["\<\"Eugenio, Imperial\"\>",
           StripOnInput->False,
           FontSize->13], 
          Offset[{2, 2}, {0.028312589517640208, 0.028220586608084075}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{360., Automatic}]], "Output",
 CellChangeTimes->{{3.694960123297289*^9, 3.694960135387978*^9}, 
   3.694960208708219*^9, 3.6949602565991383`*^9, 3.6949602928876963`*^9, {
   3.69496032438655*^9, 3.69496033177048*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Conductivity\>\"", ",", "ts"}], "]"}], "<->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Tungsten carbide\>\"", ",", "ts"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Tungsten carbide\>\"", ",", "ts"}], "]"}], "<->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Isotope effect\>\"", ",", "ts"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Isotope effect\>\"", ",", "ts"}], "]"}], "<->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Tungsten carbide\>\"", ",", "ts"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Isotope effect\>\"", ",", "ts"}], "]"}], "<->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Conductivity\>\"", ",", "ts"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Conductivity\>\"", ",", "ts"}], "]"}], "<->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Isotope effect\>\"", ",", "ts"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Isotope effect\>\"", ",", "ts"}], "]"}], "<->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Tungsten\>\"", ",", "ts"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Tungsten\>\"", ",", "ts"}], "]"}], "<->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Conductivity\>\"", ",", "ts"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Tungsten\>\"", ",", "ts"}], "]"}], "<->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Conductivity\>\"", ",", "ts"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<DFT\>\"", ",", "ts"}], "]"}], "<->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Isotope effect\>\"", ",", "ts"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<DFT\>\"", ",", "ts"}], "]"}], "->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Experiment\>\"", ",", "ts"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Experiment\>\"", ",", "ts"}], "]"}], "->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Conductivity\>\"", ",", "ts"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.694960712978718*^9, 3.6949608189388866`*^9}, {
  3.694960859866558*^9, 3.694960876249361*^9}, {3.6949609065027027`*^9, 
  3.694960928309906*^9}, {3.694960959144455*^9, 3.6949610782691507`*^9}, {
  3.694961109283849*^9, 3.694961176442286*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Style["Conductivity", 13], 
       Style["Tungsten carbide", 13], 
       Style["Isotope effect", 13], 
       Style["Tungsten", 13], 
       Style["DFT", 13], 
       Style["Experiment", 13]}, {{{5, 6}, {6, 1}}, {{1, 2}, {2, 3}, {3, 2}, {
       3, 1}, {1, 3}, {3, 4}, {4, 1}, {4, 1}, {5, 3}}}, {
      VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        {Arrowheads[0.], 
         ArrowBox[{{0.7712981616699597, 0.8782698390204882}, {
          0.00005695301018993071, 1.07798906178138}}, 0.021984568953581862`]}, 
        {Arrowheads[0.], 
         ArrowBox[BezierCurveBox[{{0.7712981616699597, 0.8782698390204882}, {
          0.8833248586347744, 0.5388706110280761}, {0.7720283280124351, 
          0.19923124483778154`}}], 0.021984568953581862`]}, 
        {Arrowheads[0.], 
         ArrowBox[BezierCurveBox[{{0.7712981616699597, 0.8782698390204882}, {
          0.6600016310476197, 0.5386304728303872}, {0.7720283280124351, 
          0.19923124483778154`}}], 0.021984568953581862`]}, 
        {Arrowheads[0.], 
         ArrowBox[BezierCurveBox[{{0.7712981616699597, 0.8782698390204882}, {
          0.5300724293919057, 0.3123020735042633}, {0., 0.}}], 
          0.021984568953581862`]}, 
        {Arrowheads[0.], 
         ArrowBox[BezierCurveBox[{{0.7712981616699597, 0.8782698390204882}, {
          0.2412257322780571, 0.565967765516206}, {0., 0.}}], 
          0.021984568953581862`]}, 
        {Arrowheads[0.], 
         ArrowBox[BezierCurveBox[{{0.00005695301018993071, 
          1.07798906178138}, {0.5305462325225234, 0.7655537030189191}, {
          0.7720283280124351, 0.19923124483778154`}}], 
          0.021984568953581862`]}, 
        {Arrowheads[0.], 
         ArrowBox[BezierCurveBox[{{0.00005695301018993071, 
          1.07798906178138}, {0.24153904850010383`, 0.5116666036002593}, {
          0.7720283280124351, 0.19923124483778154`}}], 
          0.021984568953581862`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.7720283280124351, 0.19923124483778154`}, {0., 0.}}, 
          0.021984568953581862`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.7720283280124351, 0.19923124483778154`}, {
          1.9231165544004174`, 0.07723490648266318}}, 0.021984568953581862`]},
         ArrowBox[{{1.9231165544004174`, 0.07723490648266318}, {
         1.9225941701699139`, 1.0011413878640893`}}, 0.021984568953581862`], 
        ArrowBox[{{1.9225941701699139`, 1.0011413878640893`}, {
         0.7712981616699597, 0.8782698390204882}}, 0.021984568953581862`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{0.7712981616699597, 0.8782698390204882}, 
          0.021984568953581862], InsetBox[
          StyleBox["\<\"Conductivity\"\>",
           StripOnInput->False,
           FontSize->13], 
          Offset[{2, 2}, {0.7932827306235415, 0.90025440797407}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00005695301018993071, 1.07798906178138}, 
          0.021984568953581862], InsetBox[
          StyleBox["\<\"Tungsten carbide\"\>",
           StripOnInput->False,
           FontSize->13], 
          Offset[{2, 2}, {0.022041521963771793, 1.099973630734962}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.7720283280124351, 0.19923124483778154}, 
          0.021984568953581862], InsetBox[
          StyleBox["\<\"Isotope effect\"\>",
           StripOnInput->False,
           FontSize->13], 
          Offset[{2, 2}, {0.794012896966017, 0.2212158137913634}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.021984568953581862], 
         InsetBox[
          StyleBox["\<\"Tungsten\"\>",
           StripOnInput->False,
           FontSize->13], 
          Offset[{2, 2}, {0.021984568953581862, 0.021984568953581862}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.9231165544004174, 0.07723490648266318}, 
          0.021984568953581862], InsetBox[
          StyleBox["\<\"DFT\"\>",
           StripOnInput->False,
           FontSize->13], 
          Offset[{2, 2}, {1.9451011233539992, 0.09921947543624504}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.9225941701699139, 1.0011413878640893}, 
          0.021984568953581862], InsetBox[
          StyleBox["\<\"Experiment\"\>",
           StripOnInput->False,
           FontSize->13], 
          Offset[{2, 2}, {1.9445787391234957, 1.0231259568176712}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.694961067833506*^9, 3.694961078669879*^9}, {
  3.6949611299003468`*^9, 3.6949611770755463`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"l", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"LatticeData", "[", 
     RowBox[{"\"\<fcc\>\"", ",", "\"\<Image\>\""}], "]"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.694964629216331*^9, 3.694964630930492*^9}, {
  3.6949647158170958`*^9, 3.694964728265568*^9}, {3.694965228685096*^9, 
  3.694965229038281*^9}, {3.694965272006*^9, 3.694965293644093*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   GraphicsComplex3DBox[{{-1, -1, -1}, {-1, -1, 1}, {-1, 1, -1}, {-1, 1, 1}, {
    1, -1, -1}, {1, -1, 1}, {1, 1, -1}, {1, 1, 1}, {0, 0, 1}, {1, 0, 0}, {0, 
    1, 0}, {-1, 0, 0}, {0, 0, -1}, {0, -1, 0}}, {
     {Opacity[0.1], EdgeForm[GrayLevel[0.8]], 
      Polygon3DBox[{{8, 4, 2, 6}, {8, 6, 5, 7}, {8, 7, 3, 4}, {4, 3, 1, 2}, {
       1, 3, 7, 5}, {2, 1, 5, 6}}]}, 
     {GrayLevel[0.8], 
      Line3DBox[{{9, 8}, {9, 4}, {9, 2}, {9, 6}, {10, 8}, {10, 6}, {10, 5}, {
       10, 7}, {11, 8}, {11, 7}, {11, 3}, {11, 4}, {12, 4}, {12, 3}, {12, 
       1}, {12, 2}, {13, 1}, {13, 3}, {13, 7}, {13, 5}, {14, 2}, {14, 1}, {14,
        5}, {14, 6}}]}}], 
   {GrayLevel[0], Specularity[
     GrayLevel[1], 5], SphereBox[{-1, -1, -1}, 0.06], 
    SphereBox[{-1, -1, 1}, 0.06], SphereBox[{-1, 1, -1}, 0.06], 
    SphereBox[{-1, 1, 1}, 0.06], SphereBox[{1, -1, -1}, 0.06], 
    SphereBox[{1, -1, 1}, 0.06], SphereBox[{1, 1, -1}, 0.06], 
    SphereBox[{1, 1, 1}, 0.06], SphereBox[{0, 0, 1}, 0.06], 
    SphereBox[{1, 0, 0}, 0.06], SphereBox[{0, 1, 0}, 0.06], 
    SphereBox[{-1, 0, 0}, 0.06], SphereBox[{0, 0, -1}, 0.06], 
    SphereBox[{0, -1, 0}, 0.06]}},
  Boxed->False,
  ImageSize->700,
  ViewPoint->{4., 1.6666666666666667`, 1.},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.694964636217681*^9, {3.694964721098641*^9, 3.6949647287587967`*^9}, 
   3.694965175283559*^9, 3.694965240770344*^9, 3.694965294223036*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"grid", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p", "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", ",", "j", ",", "k"}], "}"}], "/", "7"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"RGBColor", "[", "p", "]"}], ",", 
           RowBox[{"Opacity", "[", ".5", "]"}], ",", 
           RowBox[{"Cuboid", "[", "p", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "7"}], "}"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.694964747703932*^9, 3.694964747708871*^9}, {
  3.694964962699541*^9, 3.694965151011217*^9}, {3.6949651964185753`*^9, 
  3.6949652650020857`*^9}, {3.694965543564332*^9, 3.6949655591197844`*^9}, {
  3.694965591812579*^9, 3.694965613053031*^9}}],

Cell[BoxData[
 Graphics3DBox[{{{
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 7], 
         Rational[1, 7]}, {0.14285714285714285`, 0.14285714285714285`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 7], Rational[1, 7]}, {
        0.14285714285714285`, 0.14285714285714285`, 
        0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 7], 
         Rational[2, 7]}, {0.14285714285714285`, 0.14285714285714285`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 7], Rational[2, 7]}, {
        0.14285714285714285`, 0.14285714285714285`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 7], 
         Rational[3, 7]}, {0.14285714285714285`, 0.14285714285714285`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 7], Rational[3, 7]}, {
        0.14285714285714285`, 0.14285714285714285`, 
        0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 7], 
         Rational[4, 7]}, {0.14285714285714285`, 0.14285714285714285`, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 7], Rational[4, 7]}, {
        0.14285714285714285`, 0.14285714285714285`, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 7], 
         Rational[5, 7]}, {0.14285714285714285`, 0.14285714285714285`, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 7], Rational[5, 7]}, {
        0.14285714285714285`, 0.14285714285714285`, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 7], 
         Rational[6, 7]}, {0.14285714285714285`, 0.14285714285714285`, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 7], Rational[6, 7]}, {
        0.14285714285714285`, 0.14285714285714285`, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 7], 1}, {
        0.14285714285714285`, 0.14285714285714285`, 1}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 7], 1}, {
        0.14285714285714285`, 0.14285714285714285`, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[2, 7], 
         Rational[1, 7]}, {0.14285714285714285`, 0.2857142857142857, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[2, 7], Rational[1, 7]}, {
        0.14285714285714285`, 0.2857142857142857, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[2, 7], 
         Rational[2, 7]}, {0.14285714285714285`, 0.2857142857142857, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[2, 7], Rational[2, 7]}, {
        0.14285714285714285`, 0.2857142857142857, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[2, 7], 
         Rational[3, 7]}, {0.14285714285714285`, 0.2857142857142857, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[2, 7], Rational[3, 7]}, {
        0.14285714285714285`, 0.2857142857142857, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[2, 7], 
         Rational[4, 7]}, {0.14285714285714285`, 0.2857142857142857, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[2, 7], Rational[4, 7]}, {
        0.14285714285714285`, 0.2857142857142857, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[2, 7], 
         Rational[5, 7]}, {0.14285714285714285`, 0.2857142857142857, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[2, 7], Rational[5, 7]}, {
        0.14285714285714285`, 0.2857142857142857, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[2, 7], 
         Rational[6, 7]}, {0.14285714285714285`, 0.2857142857142857, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[2, 7], Rational[6, 7]}, {
        0.14285714285714285`, 0.2857142857142857, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[2, 7], 1}, {0.14285714285714285`, 0.2857142857142857, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[2, 7], 1}, {
        0.14285714285714285`, 0.2857142857142857, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[3, 7], 
         Rational[1, 7]}, {0.14285714285714285`, 0.42857142857142855`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[3, 7], Rational[1, 7]}, {
        0.14285714285714285`, 0.42857142857142855`, 
        0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[3, 7], 
         Rational[2, 7]}, {0.14285714285714285`, 0.42857142857142855`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[3, 7], Rational[2, 7]}, {
        0.14285714285714285`, 0.42857142857142855`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[3, 7], 
         Rational[3, 7]}, {0.14285714285714285`, 0.42857142857142855`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[3, 7], Rational[3, 7]}, {
        0.14285714285714285`, 0.42857142857142855`, 
        0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[3, 7], 
         Rational[4, 7]}, {0.14285714285714285`, 0.42857142857142855`, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[3, 7], Rational[4, 7]}, {
        0.14285714285714285`, 0.42857142857142855`, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[3, 7], 
         Rational[5, 7]}, {0.14285714285714285`, 0.42857142857142855`, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[3, 7], Rational[5, 7]}, {
        0.14285714285714285`, 0.42857142857142855`, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[3, 7], 
         Rational[6, 7]}, {0.14285714285714285`, 0.42857142857142855`, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[3, 7], Rational[6, 7]}, {
        0.14285714285714285`, 0.42857142857142855`, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[3, 7], 1}, {
        0.14285714285714285`, 0.42857142857142855`, 1}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[3, 7], 1}, {
        0.14285714285714285`, 0.42857142857142855`, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[4, 7], 
         Rational[1, 7]}, {0.14285714285714285`, 0.5714285714285714, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[4, 7], Rational[1, 7]}, {
        0.14285714285714285`, 0.5714285714285714, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[4, 7], 
         Rational[2, 7]}, {0.14285714285714285`, 0.5714285714285714, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[4, 7], Rational[2, 7]}, {
        0.14285714285714285`, 0.5714285714285714, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[4, 7], 
         Rational[3, 7]}, {0.14285714285714285`, 0.5714285714285714, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[4, 7], Rational[3, 7]}, {
        0.14285714285714285`, 0.5714285714285714, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[4, 7], 
         Rational[4, 7]}, {0.14285714285714285`, 0.5714285714285714, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[4, 7], Rational[4, 7]}, {
        0.14285714285714285`, 0.5714285714285714, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[4, 7], 
         Rational[5, 7]}, {0.14285714285714285`, 0.5714285714285714, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[4, 7], Rational[5, 7]}, {
        0.14285714285714285`, 0.5714285714285714, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[4, 7], 
         Rational[6, 7]}, {0.14285714285714285`, 0.5714285714285714, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[4, 7], Rational[6, 7]}, {
        0.14285714285714285`, 0.5714285714285714, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[4, 7], 1}, {0.14285714285714285`, 0.5714285714285714, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[4, 7], 1}, {
        0.14285714285714285`, 0.5714285714285714, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[5, 7], 
         Rational[1, 7]}, {0.14285714285714285`, 0.7142857142857143, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[5, 7], Rational[1, 7]}, {
        0.14285714285714285`, 0.7142857142857143, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[5, 7], 
         Rational[2, 7]}, {0.14285714285714285`, 0.7142857142857143, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[5, 7], Rational[2, 7]}, {
        0.14285714285714285`, 0.7142857142857143, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[5, 7], 
         Rational[3, 7]}, {0.14285714285714285`, 0.7142857142857143, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[5, 7], Rational[3, 7]}, {
        0.14285714285714285`, 0.7142857142857143, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[5, 7], 
         Rational[4, 7]}, {0.14285714285714285`, 0.7142857142857143, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[5, 7], Rational[4, 7]}, {
        0.14285714285714285`, 0.7142857142857143, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[5, 7], 
         Rational[5, 7]}, {0.14285714285714285`, 0.7142857142857143, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[5, 7], Rational[5, 7]}, {
        0.14285714285714285`, 0.7142857142857143, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[5, 7], 
         Rational[6, 7]}, {0.14285714285714285`, 0.7142857142857143, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[5, 7], Rational[6, 7]}, {
        0.14285714285714285`, 0.7142857142857143, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[5, 7], 1}, {0.14285714285714285`, 0.7142857142857143, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[5, 7], 1}, {
        0.14285714285714285`, 0.7142857142857143, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[6, 7], 
         Rational[1, 7]}, {0.14285714285714285`, 0.8571428571428571, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[6, 7], Rational[1, 7]}, {
        0.14285714285714285`, 0.8571428571428571, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[6, 7], 
         Rational[2, 7]}, {0.14285714285714285`, 0.8571428571428571, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[6, 7], Rational[2, 7]}, {
        0.14285714285714285`, 0.8571428571428571, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[6, 7], 
         Rational[3, 7]}, {0.14285714285714285`, 0.8571428571428571, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[6, 7], Rational[3, 7]}, {
        0.14285714285714285`, 0.8571428571428571, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[6, 7], 
         Rational[4, 7]}, {0.14285714285714285`, 0.8571428571428571, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[6, 7], Rational[4, 7]}, {
        0.14285714285714285`, 0.8571428571428571, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[6, 7], 
         Rational[5, 7]}, {0.14285714285714285`, 0.8571428571428571, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[6, 7], Rational[5, 7]}, {
        0.14285714285714285`, 0.8571428571428571, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[6, 7], 
         Rational[6, 7]}, {0.14285714285714285`, 0.8571428571428571, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[6, 7], Rational[6, 7]}, {
        0.14285714285714285`, 0.8571428571428571, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[6, 7], 1}, {0.14285714285714285`, 0.8571428571428571, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[6, 7], 1}, {
        0.14285714285714285`, 0.8571428571428571, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[1, 7], 1, 
         Rational[1, 7]}, {0.14285714285714285`, 1, 0.14285714285714285`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], 1, Rational[1, 7]}, {
        0.14285714285714285`, 1, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 1, 
         Rational[2, 7]}, {0.14285714285714285`, 1, 0.2857142857142857}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], 1, Rational[2, 7]}, {
        0.14285714285714285`, 1, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 1, 
         Rational[3, 7]}, {0.14285714285714285`, 1, 0.42857142857142855`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], 1, Rational[3, 7]}, {
        0.14285714285714285`, 1, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 1, 
         Rational[4, 7]}, {0.14285714285714285`, 1, 0.5714285714285714}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], 1, Rational[4, 7]}, {
        0.14285714285714285`, 1, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 1, 
         Rational[5, 7]}, {0.14285714285714285`, 1, 0.7142857142857143}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], 1, Rational[5, 7]}, {
        0.14285714285714285`, 1, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 1, 
         Rational[6, 7]}, {0.14285714285714285`, 1, 0.8571428571428571}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], 1, Rational[6, 7]}, {
        0.14285714285714285`, 1, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 1, 1}, {0.14285714285714285`, 1, 1}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], 1, 1}, {0.14285714285714285`, 1, 1}]]}}}, {{
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 7], 
         Rational[1, 7]}, {0.2857142857142857, 0.14285714285714285`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 7], Rational[1, 7]}, {
        0.2857142857142857, 0.14285714285714285`, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 7], 
         Rational[2, 7]}, {0.2857142857142857, 0.14285714285714285`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 7], Rational[2, 7]}, {
        0.2857142857142857, 0.14285714285714285`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 7], 
         Rational[3, 7]}, {0.2857142857142857, 0.14285714285714285`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 7], Rational[3, 7]}, {
        0.2857142857142857, 0.14285714285714285`, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 7], 
         Rational[4, 7]}, {0.2857142857142857, 0.14285714285714285`, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 7], Rational[4, 7]}, {
        0.2857142857142857, 0.14285714285714285`, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 7], 
         Rational[5, 7]}, {0.2857142857142857, 0.14285714285714285`, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 7], Rational[5, 7]}, {
        0.2857142857142857, 0.14285714285714285`, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 7], 
         Rational[6, 7]}, {0.2857142857142857, 0.14285714285714285`, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 7], Rational[6, 7]}, {
        0.2857142857142857, 0.14285714285714285`, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 7], 1}, {0.2857142857142857, 0.14285714285714285`, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 7], 1}, {
        0.2857142857142857, 0.14285714285714285`, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[2, 7], 
         Rational[1, 7]}, {0.2857142857142857, 0.2857142857142857, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[2, 7], Rational[1, 7]}, {
        0.2857142857142857, 0.2857142857142857, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[2, 7], 
         Rational[2, 7]}, {0.2857142857142857, 0.2857142857142857, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[2, 7], Rational[2, 7]}, {
        0.2857142857142857, 0.2857142857142857, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[2, 7], 
         Rational[3, 7]}, {0.2857142857142857, 0.2857142857142857, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[2, 7], Rational[3, 7]}, {
        0.2857142857142857, 0.2857142857142857, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[2, 7], 
         Rational[4, 7]}, {0.2857142857142857, 0.2857142857142857, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[2, 7], Rational[4, 7]}, {
        0.2857142857142857, 0.2857142857142857, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[2, 7], 
         Rational[5, 7]}, {0.2857142857142857, 0.2857142857142857, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[2, 7], Rational[5, 7]}, {
        0.2857142857142857, 0.2857142857142857, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[2, 7], 
         Rational[6, 7]}, {0.2857142857142857, 0.2857142857142857, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[2, 7], Rational[6, 7]}, {
        0.2857142857142857, 0.2857142857142857, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[2, 7], 1}, {0.2857142857142857, 0.2857142857142857, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[2, 7], 1}, {
        0.2857142857142857, 0.2857142857142857, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[3, 7], 
         Rational[1, 7]}, {0.2857142857142857, 0.42857142857142855`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[3, 7], Rational[1, 7]}, {
        0.2857142857142857, 0.42857142857142855`, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[3, 7], 
         Rational[2, 7]}, {0.2857142857142857, 0.42857142857142855`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[3, 7], Rational[2, 7]}, {
        0.2857142857142857, 0.42857142857142855`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[3, 7], 
         Rational[3, 7]}, {0.2857142857142857, 0.42857142857142855`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[3, 7], Rational[3, 7]}, {
        0.2857142857142857, 0.42857142857142855`, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[3, 7], 
         Rational[4, 7]}, {0.2857142857142857, 0.42857142857142855`, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[3, 7], Rational[4, 7]}, {
        0.2857142857142857, 0.42857142857142855`, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[3, 7], 
         Rational[5, 7]}, {0.2857142857142857, 0.42857142857142855`, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[3, 7], Rational[5, 7]}, {
        0.2857142857142857, 0.42857142857142855`, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[3, 7], 
         Rational[6, 7]}, {0.2857142857142857, 0.42857142857142855`, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[3, 7], Rational[6, 7]}, {
        0.2857142857142857, 0.42857142857142855`, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[3, 7], 1}, {0.2857142857142857, 0.42857142857142855`, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[3, 7], 1}, {
        0.2857142857142857, 0.42857142857142855`, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[4, 7], 
         Rational[1, 7]}, {0.2857142857142857, 0.5714285714285714, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[4, 7], Rational[1, 7]}, {
        0.2857142857142857, 0.5714285714285714, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[4, 7], 
         Rational[2, 7]}, {0.2857142857142857, 0.5714285714285714, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[4, 7], Rational[2, 7]}, {
        0.2857142857142857, 0.5714285714285714, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[4, 7], 
         Rational[3, 7]}, {0.2857142857142857, 0.5714285714285714, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[4, 7], Rational[3, 7]}, {
        0.2857142857142857, 0.5714285714285714, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[4, 7], 
         Rational[4, 7]}, {0.2857142857142857, 0.5714285714285714, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[4, 7], Rational[4, 7]}, {
        0.2857142857142857, 0.5714285714285714, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[4, 7], 
         Rational[5, 7]}, {0.2857142857142857, 0.5714285714285714, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[4, 7], Rational[5, 7]}, {
        0.2857142857142857, 0.5714285714285714, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[4, 7], 
         Rational[6, 7]}, {0.2857142857142857, 0.5714285714285714, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[4, 7], Rational[6, 7]}, {
        0.2857142857142857, 0.5714285714285714, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[4, 7], 1}, {0.2857142857142857, 0.5714285714285714, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[4, 7], 1}, {
        0.2857142857142857, 0.5714285714285714, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[5, 7], 
         Rational[1, 7]}, {0.2857142857142857, 0.7142857142857143, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[5, 7], Rational[1, 7]}, {
        0.2857142857142857, 0.7142857142857143, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[5, 7], 
         Rational[2, 7]}, {0.2857142857142857, 0.7142857142857143, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[5, 7], Rational[2, 7]}, {
        0.2857142857142857, 0.7142857142857143, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[5, 7], 
         Rational[3, 7]}, {0.2857142857142857, 0.7142857142857143, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[5, 7], Rational[3, 7]}, {
        0.2857142857142857, 0.7142857142857143, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[5, 7], 
         Rational[4, 7]}, {0.2857142857142857, 0.7142857142857143, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[5, 7], Rational[4, 7]}, {
        0.2857142857142857, 0.7142857142857143, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[5, 7], 
         Rational[5, 7]}, {0.2857142857142857, 0.7142857142857143, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[5, 7], Rational[5, 7]}, {
        0.2857142857142857, 0.7142857142857143, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[5, 7], 
         Rational[6, 7]}, {0.2857142857142857, 0.7142857142857143, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[5, 7], Rational[6, 7]}, {
        0.2857142857142857, 0.7142857142857143, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[5, 7], 1}, {0.2857142857142857, 0.7142857142857143, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[5, 7], 1}, {
        0.2857142857142857, 0.7142857142857143, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[6, 7], 
         Rational[1, 7]}, {0.2857142857142857, 0.8571428571428571, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[6, 7], Rational[1, 7]}, {
        0.2857142857142857, 0.8571428571428571, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[6, 7], 
         Rational[2, 7]}, {0.2857142857142857, 0.8571428571428571, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[6, 7], Rational[2, 7]}, {
        0.2857142857142857, 0.8571428571428571, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[6, 7], 
         Rational[3, 7]}, {0.2857142857142857, 0.8571428571428571, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[6, 7], Rational[3, 7]}, {
        0.2857142857142857, 0.8571428571428571, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[6, 7], 
         Rational[4, 7]}, {0.2857142857142857, 0.8571428571428571, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[6, 7], Rational[4, 7]}, {
        0.2857142857142857, 0.8571428571428571, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[6, 7], 
         Rational[5, 7]}, {0.2857142857142857, 0.8571428571428571, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[6, 7], Rational[5, 7]}, {
        0.2857142857142857, 0.8571428571428571, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[6, 7], 
         Rational[6, 7]}, {0.2857142857142857, 0.8571428571428571, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[6, 7], Rational[6, 7]}, {
        0.2857142857142857, 0.8571428571428571, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[6, 7], 1}, {0.2857142857142857, 0.8571428571428571, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[6, 7], 1}, {
        0.2857142857142857, 0.8571428571428571, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[2, 7], 1, 
         Rational[1, 7]}, {0.2857142857142857, 1, 0.14285714285714285`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], 1, Rational[1, 7]}, {
        0.2857142857142857, 1, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 1, 
         Rational[2, 7]}, {0.2857142857142857, 1, 0.2857142857142857}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], 1, Rational[2, 7]}, {
        0.2857142857142857, 1, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 1, 
         Rational[3, 7]}, {0.2857142857142857, 1, 0.42857142857142855`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], 1, Rational[3, 7]}, {
        0.2857142857142857, 1, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 1, 
         Rational[4, 7]}, {0.2857142857142857, 1, 0.5714285714285714}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], 1, Rational[4, 7]}, {
        0.2857142857142857, 1, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 1, 
         Rational[5, 7]}, {0.2857142857142857, 1, 0.7142857142857143}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], 1, Rational[5, 7]}, {
        0.2857142857142857, 1, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 1, 
         Rational[6, 7]}, {0.2857142857142857, 1, 0.8571428571428571}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], 1, Rational[6, 7]}, {
        0.2857142857142857, 1, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 1, 1}, {0.2857142857142857, 1, 1}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], 1, 1}, {0.2857142857142857, 1, 1}]]}}}, {{
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 7], 
         Rational[1, 7]}, {0.42857142857142855`, 0.14285714285714285`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 7], Rational[1, 7]}, {
        0.42857142857142855`, 0.14285714285714285`, 
        0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 7], 
         Rational[2, 7]}, {0.42857142857142855`, 0.14285714285714285`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 7], Rational[2, 7]}, {
        0.42857142857142855`, 0.14285714285714285`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 7], 
         Rational[3, 7]}, {0.42857142857142855`, 0.14285714285714285`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 7], Rational[3, 7]}, {
        0.42857142857142855`, 0.14285714285714285`, 
        0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 7], 
         Rational[4, 7]}, {0.42857142857142855`, 0.14285714285714285`, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 7], Rational[4, 7]}, {
        0.42857142857142855`, 0.14285714285714285`, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 7], 
         Rational[5, 7]}, {0.42857142857142855`, 0.14285714285714285`, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 7], Rational[5, 7]}, {
        0.42857142857142855`, 0.14285714285714285`, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 7], 
         Rational[6, 7]}, {0.42857142857142855`, 0.14285714285714285`, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 7], Rational[6, 7]}, {
        0.42857142857142855`, 0.14285714285714285`, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 7], 1}, {
        0.42857142857142855`, 0.14285714285714285`, 1}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 7], 1}, {
        0.42857142857142855`, 0.14285714285714285`, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[2, 7], 
         Rational[1, 7]}, {0.42857142857142855`, 0.2857142857142857, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[2, 7], Rational[1, 7]}, {
        0.42857142857142855`, 0.2857142857142857, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[2, 7], 
         Rational[2, 7]}, {0.42857142857142855`, 0.2857142857142857, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[2, 7], Rational[2, 7]}, {
        0.42857142857142855`, 0.2857142857142857, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[2, 7], 
         Rational[3, 7]}, {0.42857142857142855`, 0.2857142857142857, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[2, 7], Rational[3, 7]}, {
        0.42857142857142855`, 0.2857142857142857, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[2, 7], 
         Rational[4, 7]}, {0.42857142857142855`, 0.2857142857142857, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[2, 7], Rational[4, 7]}, {
        0.42857142857142855`, 0.2857142857142857, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[2, 7], 
         Rational[5, 7]}, {0.42857142857142855`, 0.2857142857142857, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[2, 7], Rational[5, 7]}, {
        0.42857142857142855`, 0.2857142857142857, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[2, 7], 
         Rational[6, 7]}, {0.42857142857142855`, 0.2857142857142857, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[2, 7], Rational[6, 7]}, {
        0.42857142857142855`, 0.2857142857142857, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[2, 7], 1}, {0.42857142857142855`, 0.2857142857142857, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[2, 7], 1}, {
        0.42857142857142855`, 0.2857142857142857, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[3, 7], 
         Rational[1, 7]}, {0.42857142857142855`, 0.42857142857142855`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[3, 7], Rational[1, 7]}, {
        0.42857142857142855`, 0.42857142857142855`, 
        0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[3, 7], 
         Rational[2, 7]}, {0.42857142857142855`, 0.42857142857142855`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[3, 7], Rational[2, 7]}, {
        0.42857142857142855`, 0.42857142857142855`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[3, 7], 
         Rational[3, 7]}, {0.42857142857142855`, 0.42857142857142855`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[3, 7], Rational[3, 7]}, {
        0.42857142857142855`, 0.42857142857142855`, 
        0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[3, 7], 
         Rational[4, 7]}, {0.42857142857142855`, 0.42857142857142855`, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[3, 7], Rational[4, 7]}, {
        0.42857142857142855`, 0.42857142857142855`, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[3, 7], 
         Rational[5, 7]}, {0.42857142857142855`, 0.42857142857142855`, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[3, 7], Rational[5, 7]}, {
        0.42857142857142855`, 0.42857142857142855`, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[3, 7], 
         Rational[6, 7]}, {0.42857142857142855`, 0.42857142857142855`, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[3, 7], Rational[6, 7]}, {
        0.42857142857142855`, 0.42857142857142855`, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[3, 7], 1}, {
        0.42857142857142855`, 0.42857142857142855`, 1}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[3, 7], 1}, {
        0.42857142857142855`, 0.42857142857142855`, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[4, 7], 
         Rational[1, 7]}, {0.42857142857142855`, 0.5714285714285714, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[4, 7], Rational[1, 7]}, {
        0.42857142857142855`, 0.5714285714285714, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[4, 7], 
         Rational[2, 7]}, {0.42857142857142855`, 0.5714285714285714, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[4, 7], Rational[2, 7]}, {
        0.42857142857142855`, 0.5714285714285714, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[4, 7], 
         Rational[3, 7]}, {0.42857142857142855`, 0.5714285714285714, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[4, 7], Rational[3, 7]}, {
        0.42857142857142855`, 0.5714285714285714, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[4, 7], 
         Rational[4, 7]}, {0.42857142857142855`, 0.5714285714285714, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[4, 7], Rational[4, 7]}, {
        0.42857142857142855`, 0.5714285714285714, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[4, 7], 
         Rational[5, 7]}, {0.42857142857142855`, 0.5714285714285714, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[4, 7], Rational[5, 7]}, {
        0.42857142857142855`, 0.5714285714285714, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[4, 7], 
         Rational[6, 7]}, {0.42857142857142855`, 0.5714285714285714, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[4, 7], Rational[6, 7]}, {
        0.42857142857142855`, 0.5714285714285714, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[4, 7], 1}, {0.42857142857142855`, 0.5714285714285714, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[4, 7], 1}, {
        0.42857142857142855`, 0.5714285714285714, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[5, 7], 
         Rational[1, 7]}, {0.42857142857142855`, 0.7142857142857143, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[5, 7], Rational[1, 7]}, {
        0.42857142857142855`, 0.7142857142857143, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[5, 7], 
         Rational[2, 7]}, {0.42857142857142855`, 0.7142857142857143, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[5, 7], Rational[2, 7]}, {
        0.42857142857142855`, 0.7142857142857143, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[5, 7], 
         Rational[3, 7]}, {0.42857142857142855`, 0.7142857142857143, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[5, 7], Rational[3, 7]}, {
        0.42857142857142855`, 0.7142857142857143, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[5, 7], 
         Rational[4, 7]}, {0.42857142857142855`, 0.7142857142857143, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[5, 7], Rational[4, 7]}, {
        0.42857142857142855`, 0.7142857142857143, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[5, 7], 
         Rational[5, 7]}, {0.42857142857142855`, 0.7142857142857143, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[5, 7], Rational[5, 7]}, {
        0.42857142857142855`, 0.7142857142857143, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[5, 7], 
         Rational[6, 7]}, {0.42857142857142855`, 0.7142857142857143, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[5, 7], Rational[6, 7]}, {
        0.42857142857142855`, 0.7142857142857143, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[5, 7], 1}, {0.42857142857142855`, 0.7142857142857143, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[5, 7], 1}, {
        0.42857142857142855`, 0.7142857142857143, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[6, 7], 
         Rational[1, 7]}, {0.42857142857142855`, 0.8571428571428571, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[6, 7], Rational[1, 7]}, {
        0.42857142857142855`, 0.8571428571428571, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[6, 7], 
         Rational[2, 7]}, {0.42857142857142855`, 0.8571428571428571, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[6, 7], Rational[2, 7]}, {
        0.42857142857142855`, 0.8571428571428571, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[6, 7], 
         Rational[3, 7]}, {0.42857142857142855`, 0.8571428571428571, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[6, 7], Rational[3, 7]}, {
        0.42857142857142855`, 0.8571428571428571, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[6, 7], 
         Rational[4, 7]}, {0.42857142857142855`, 0.8571428571428571, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[6, 7], Rational[4, 7]}, {
        0.42857142857142855`, 0.8571428571428571, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[6, 7], 
         Rational[5, 7]}, {0.42857142857142855`, 0.8571428571428571, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[6, 7], Rational[5, 7]}, {
        0.42857142857142855`, 0.8571428571428571, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[6, 7], 
         Rational[6, 7]}, {0.42857142857142855`, 0.8571428571428571, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[6, 7], Rational[6, 7]}, {
        0.42857142857142855`, 0.8571428571428571, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[6, 7], 1}, {0.42857142857142855`, 0.8571428571428571, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[6, 7], 1}, {
        0.42857142857142855`, 0.8571428571428571, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[3, 7], 1, 
         Rational[1, 7]}, {0.42857142857142855`, 1, 0.14285714285714285`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], 1, Rational[1, 7]}, {
        0.42857142857142855`, 1, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 1, 
         Rational[2, 7]}, {0.42857142857142855`, 1, 0.2857142857142857}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], 1, Rational[2, 7]}, {
        0.42857142857142855`, 1, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 1, 
         Rational[3, 7]}, {0.42857142857142855`, 1, 0.42857142857142855`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], 1, Rational[3, 7]}, {
        0.42857142857142855`, 1, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 1, 
         Rational[4, 7]}, {0.42857142857142855`, 1, 0.5714285714285714}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], 1, Rational[4, 7]}, {
        0.42857142857142855`, 1, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 1, 
         Rational[5, 7]}, {0.42857142857142855`, 1, 0.7142857142857143}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], 1, Rational[5, 7]}, {
        0.42857142857142855`, 1, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 1, 
         Rational[6, 7]}, {0.42857142857142855`, 1, 0.8571428571428571}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], 1, Rational[6, 7]}, {
        0.42857142857142855`, 1, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 1, 1}, {0.42857142857142855`, 1, 1}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], 1, 1}, {0.42857142857142855`, 1, 1}]]}}}, {{
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[1, 7], 
         Rational[1, 7]}, {0.5714285714285714, 0.14285714285714285`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[1, 7], Rational[1, 7]}, {
        0.5714285714285714, 0.14285714285714285`, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[1, 7], 
         Rational[2, 7]}, {0.5714285714285714, 0.14285714285714285`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[1, 7], Rational[2, 7]}, {
        0.5714285714285714, 0.14285714285714285`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[1, 7], 
         Rational[3, 7]}, {0.5714285714285714, 0.14285714285714285`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[1, 7], Rational[3, 7]}, {
        0.5714285714285714, 0.14285714285714285`, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[1, 7], 
         Rational[4, 7]}, {0.5714285714285714, 0.14285714285714285`, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[1, 7], Rational[4, 7]}, {
        0.5714285714285714, 0.14285714285714285`, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[1, 7], 
         Rational[5, 7]}, {0.5714285714285714, 0.14285714285714285`, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[1, 7], Rational[5, 7]}, {
        0.5714285714285714, 0.14285714285714285`, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[1, 7], 
         Rational[6, 7]}, {0.5714285714285714, 0.14285714285714285`, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[1, 7], Rational[6, 7]}, {
        0.5714285714285714, 0.14285714285714285`, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[1, 7], 1}, {0.5714285714285714, 0.14285714285714285`, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[1, 7], 1}, {
        0.5714285714285714, 0.14285714285714285`, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[2, 7], 
         Rational[1, 7]}, {0.5714285714285714, 0.2857142857142857, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[2, 7], Rational[1, 7]}, {
        0.5714285714285714, 0.2857142857142857, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[2, 7], 
         Rational[2, 7]}, {0.5714285714285714, 0.2857142857142857, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[2, 7], Rational[2, 7]}, {
        0.5714285714285714, 0.2857142857142857, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[2, 7], 
         Rational[3, 7]}, {0.5714285714285714, 0.2857142857142857, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[2, 7], Rational[3, 7]}, {
        0.5714285714285714, 0.2857142857142857, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[2, 7], 
         Rational[4, 7]}, {0.5714285714285714, 0.2857142857142857, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[2, 7], Rational[4, 7]}, {
        0.5714285714285714, 0.2857142857142857, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[2, 7], 
         Rational[5, 7]}, {0.5714285714285714, 0.2857142857142857, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[2, 7], Rational[5, 7]}, {
        0.5714285714285714, 0.2857142857142857, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[2, 7], 
         Rational[6, 7]}, {0.5714285714285714, 0.2857142857142857, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[2, 7], Rational[6, 7]}, {
        0.5714285714285714, 0.2857142857142857, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[2, 7], 1}, {0.5714285714285714, 0.2857142857142857, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[2, 7], 1}, {
        0.5714285714285714, 0.2857142857142857, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[3, 7], 
         Rational[1, 7]}, {0.5714285714285714, 0.42857142857142855`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[3, 7], Rational[1, 7]}, {
        0.5714285714285714, 0.42857142857142855`, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[3, 7], 
         Rational[2, 7]}, {0.5714285714285714, 0.42857142857142855`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[3, 7], Rational[2, 7]}, {
        0.5714285714285714, 0.42857142857142855`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[3, 7], 
         Rational[3, 7]}, {0.5714285714285714, 0.42857142857142855`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[3, 7], Rational[3, 7]}, {
        0.5714285714285714, 0.42857142857142855`, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[3, 7], 
         Rational[4, 7]}, {0.5714285714285714, 0.42857142857142855`, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[3, 7], Rational[4, 7]}, {
        0.5714285714285714, 0.42857142857142855`, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[3, 7], 
         Rational[5, 7]}, {0.5714285714285714, 0.42857142857142855`, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[3, 7], Rational[5, 7]}, {
        0.5714285714285714, 0.42857142857142855`, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[3, 7], 
         Rational[6, 7]}, {0.5714285714285714, 0.42857142857142855`, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[3, 7], Rational[6, 7]}, {
        0.5714285714285714, 0.42857142857142855`, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[3, 7], 1}, {0.5714285714285714, 0.42857142857142855`, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[3, 7], 1}, {
        0.5714285714285714, 0.42857142857142855`, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[4, 7], 
         Rational[1, 7]}, {0.5714285714285714, 0.5714285714285714, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[4, 7], Rational[1, 7]}, {
        0.5714285714285714, 0.5714285714285714, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[4, 7], 
         Rational[2, 7]}, {0.5714285714285714, 0.5714285714285714, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[4, 7], Rational[2, 7]}, {
        0.5714285714285714, 0.5714285714285714, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[4, 7], 
         Rational[3, 7]}, {0.5714285714285714, 0.5714285714285714, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[4, 7], Rational[3, 7]}, {
        0.5714285714285714, 0.5714285714285714, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[4, 7], 
         Rational[4, 7]}, {0.5714285714285714, 0.5714285714285714, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[4, 7], Rational[4, 7]}, {
        0.5714285714285714, 0.5714285714285714, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[4, 7], 
         Rational[5, 7]}, {0.5714285714285714, 0.5714285714285714, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[4, 7], Rational[5, 7]}, {
        0.5714285714285714, 0.5714285714285714, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[4, 7], 
         Rational[6, 7]}, {0.5714285714285714, 0.5714285714285714, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[4, 7], Rational[6, 7]}, {
        0.5714285714285714, 0.5714285714285714, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[4, 7], 1}, {0.5714285714285714, 0.5714285714285714, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[4, 7], 1}, {
        0.5714285714285714, 0.5714285714285714, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[5, 7], 
         Rational[1, 7]}, {0.5714285714285714, 0.7142857142857143, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[5, 7], Rational[1, 7]}, {
        0.5714285714285714, 0.7142857142857143, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[5, 7], 
         Rational[2, 7]}, {0.5714285714285714, 0.7142857142857143, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[5, 7], Rational[2, 7]}, {
        0.5714285714285714, 0.7142857142857143, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[5, 7], 
         Rational[3, 7]}, {0.5714285714285714, 0.7142857142857143, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[5, 7], Rational[3, 7]}, {
        0.5714285714285714, 0.7142857142857143, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[5, 7], 
         Rational[4, 7]}, {0.5714285714285714, 0.7142857142857143, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[5, 7], Rational[4, 7]}, {
        0.5714285714285714, 0.7142857142857143, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[5, 7], 
         Rational[5, 7]}, {0.5714285714285714, 0.7142857142857143, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[5, 7], Rational[5, 7]}, {
        0.5714285714285714, 0.7142857142857143, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[5, 7], 
         Rational[6, 7]}, {0.5714285714285714, 0.7142857142857143, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[5, 7], Rational[6, 7]}, {
        0.5714285714285714, 0.7142857142857143, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[5, 7], 1}, {0.5714285714285714, 0.7142857142857143, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[5, 7], 1}, {
        0.5714285714285714, 0.7142857142857143, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[6, 7], 
         Rational[1, 7]}, {0.5714285714285714, 0.8571428571428571, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[6, 7], Rational[1, 7]}, {
        0.5714285714285714, 0.8571428571428571, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[6, 7], 
         Rational[2, 7]}, {0.5714285714285714, 0.8571428571428571, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[6, 7], Rational[2, 7]}, {
        0.5714285714285714, 0.8571428571428571, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[6, 7], 
         Rational[3, 7]}, {0.5714285714285714, 0.8571428571428571, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[6, 7], Rational[3, 7]}, {
        0.5714285714285714, 0.8571428571428571, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[6, 7], 
         Rational[4, 7]}, {0.5714285714285714, 0.8571428571428571, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[6, 7], Rational[4, 7]}, {
        0.5714285714285714, 0.8571428571428571, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[6, 7], 
         Rational[5, 7]}, {0.5714285714285714, 0.8571428571428571, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[6, 7], Rational[5, 7]}, {
        0.5714285714285714, 0.8571428571428571, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[6, 7], 
         Rational[6, 7]}, {0.5714285714285714, 0.8571428571428571, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[6, 7], Rational[6, 7]}, {
        0.5714285714285714, 0.8571428571428571, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 
         Rational[6, 7], 1}, {0.5714285714285714, 0.8571428571428571, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], Rational[6, 7], 1}, {
        0.5714285714285714, 0.8571428571428571, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[4, 7], 1, 
         Rational[1, 7]}, {0.5714285714285714, 1, 0.14285714285714285`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], 1, Rational[1, 7]}, {
        0.5714285714285714, 1, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 1, 
         Rational[2, 7]}, {0.5714285714285714, 1, 0.2857142857142857}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], 1, Rational[2, 7]}, {
        0.5714285714285714, 1, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 1, 
         Rational[3, 7]}, {0.5714285714285714, 1, 0.42857142857142855`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], 1, Rational[3, 7]}, {
        0.5714285714285714, 1, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 1, 
         Rational[4, 7]}, {0.5714285714285714, 1, 0.5714285714285714}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], 1, Rational[4, 7]}, {
        0.5714285714285714, 1, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 1, 
         Rational[5, 7]}, {0.5714285714285714, 1, 0.7142857142857143}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], 1, Rational[5, 7]}, {
        0.5714285714285714, 1, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 1, 
         Rational[6, 7]}, {0.5714285714285714, 1, 0.8571428571428571}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], 1, Rational[6, 7]}, {
        0.5714285714285714, 1, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[4, 7], 1, 1}, {0.5714285714285714, 1, 1}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[4, 7], 1, 1}, {0.5714285714285714, 1, 1}]]}}}, {{
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[1, 7], 
         Rational[1, 7]}, {0.7142857142857143, 0.14285714285714285`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[1, 7], Rational[1, 7]}, {
        0.7142857142857143, 0.14285714285714285`, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[1, 7], 
         Rational[2, 7]}, {0.7142857142857143, 0.14285714285714285`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[1, 7], Rational[2, 7]}, {
        0.7142857142857143, 0.14285714285714285`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[1, 7], 
         Rational[3, 7]}, {0.7142857142857143, 0.14285714285714285`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[1, 7], Rational[3, 7]}, {
        0.7142857142857143, 0.14285714285714285`, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[1, 7], 
         Rational[4, 7]}, {0.7142857142857143, 0.14285714285714285`, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[1, 7], Rational[4, 7]}, {
        0.7142857142857143, 0.14285714285714285`, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[1, 7], 
         Rational[5, 7]}, {0.7142857142857143, 0.14285714285714285`, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[1, 7], Rational[5, 7]}, {
        0.7142857142857143, 0.14285714285714285`, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[1, 7], 
         Rational[6, 7]}, {0.7142857142857143, 0.14285714285714285`, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[1, 7], Rational[6, 7]}, {
        0.7142857142857143, 0.14285714285714285`, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[1, 7], 1}, {0.7142857142857143, 0.14285714285714285`, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[1, 7], 1}, {
        0.7142857142857143, 0.14285714285714285`, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[2, 7], 
         Rational[1, 7]}, {0.7142857142857143, 0.2857142857142857, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[2, 7], Rational[1, 7]}, {
        0.7142857142857143, 0.2857142857142857, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[2, 7], 
         Rational[2, 7]}, {0.7142857142857143, 0.2857142857142857, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[2, 7], Rational[2, 7]}, {
        0.7142857142857143, 0.2857142857142857, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[2, 7], 
         Rational[3, 7]}, {0.7142857142857143, 0.2857142857142857, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[2, 7], Rational[3, 7]}, {
        0.7142857142857143, 0.2857142857142857, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[2, 7], 
         Rational[4, 7]}, {0.7142857142857143, 0.2857142857142857, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[2, 7], Rational[4, 7]}, {
        0.7142857142857143, 0.2857142857142857, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[2, 7], 
         Rational[5, 7]}, {0.7142857142857143, 0.2857142857142857, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[2, 7], Rational[5, 7]}, {
        0.7142857142857143, 0.2857142857142857, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[2, 7], 
         Rational[6, 7]}, {0.7142857142857143, 0.2857142857142857, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[2, 7], Rational[6, 7]}, {
        0.7142857142857143, 0.2857142857142857, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[2, 7], 1}, {0.7142857142857143, 0.2857142857142857, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[2, 7], 1}, {
        0.7142857142857143, 0.2857142857142857, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[3, 7], 
         Rational[1, 7]}, {0.7142857142857143, 0.42857142857142855`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[3, 7], Rational[1, 7]}, {
        0.7142857142857143, 0.42857142857142855`, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[3, 7], 
         Rational[2, 7]}, {0.7142857142857143, 0.42857142857142855`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[3, 7], Rational[2, 7]}, {
        0.7142857142857143, 0.42857142857142855`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[3, 7], 
         Rational[3, 7]}, {0.7142857142857143, 0.42857142857142855`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[3, 7], Rational[3, 7]}, {
        0.7142857142857143, 0.42857142857142855`, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[3, 7], 
         Rational[4, 7]}, {0.7142857142857143, 0.42857142857142855`, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[3, 7], Rational[4, 7]}, {
        0.7142857142857143, 0.42857142857142855`, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[3, 7], 
         Rational[5, 7]}, {0.7142857142857143, 0.42857142857142855`, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[3, 7], Rational[5, 7]}, {
        0.7142857142857143, 0.42857142857142855`, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[3, 7], 
         Rational[6, 7]}, {0.7142857142857143, 0.42857142857142855`, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[3, 7], Rational[6, 7]}, {
        0.7142857142857143, 0.42857142857142855`, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[3, 7], 1}, {0.7142857142857143, 0.42857142857142855`, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[3, 7], 1}, {
        0.7142857142857143, 0.42857142857142855`, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[4, 7], 
         Rational[1, 7]}, {0.7142857142857143, 0.5714285714285714, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[4, 7], Rational[1, 7]}, {
        0.7142857142857143, 0.5714285714285714, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[4, 7], 
         Rational[2, 7]}, {0.7142857142857143, 0.5714285714285714, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[4, 7], Rational[2, 7]}, {
        0.7142857142857143, 0.5714285714285714, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[4, 7], 
         Rational[3, 7]}, {0.7142857142857143, 0.5714285714285714, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[4, 7], Rational[3, 7]}, {
        0.7142857142857143, 0.5714285714285714, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[4, 7], 
         Rational[4, 7]}, {0.7142857142857143, 0.5714285714285714, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[4, 7], Rational[4, 7]}, {
        0.7142857142857143, 0.5714285714285714, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[4, 7], 
         Rational[5, 7]}, {0.7142857142857143, 0.5714285714285714, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[4, 7], Rational[5, 7]}, {
        0.7142857142857143, 0.5714285714285714, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[4, 7], 
         Rational[6, 7]}, {0.7142857142857143, 0.5714285714285714, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[4, 7], Rational[6, 7]}, {
        0.7142857142857143, 0.5714285714285714, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[4, 7], 1}, {0.7142857142857143, 0.5714285714285714, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[4, 7], 1}, {
        0.7142857142857143, 0.5714285714285714, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[5, 7], 
         Rational[1, 7]}, {0.7142857142857143, 0.7142857142857143, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[5, 7], Rational[1, 7]}, {
        0.7142857142857143, 0.7142857142857143, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[5, 7], 
         Rational[2, 7]}, {0.7142857142857143, 0.7142857142857143, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[5, 7], Rational[2, 7]}, {
        0.7142857142857143, 0.7142857142857143, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[5, 7], 
         Rational[3, 7]}, {0.7142857142857143, 0.7142857142857143, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[5, 7], Rational[3, 7]}, {
        0.7142857142857143, 0.7142857142857143, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[5, 7], 
         Rational[4, 7]}, {0.7142857142857143, 0.7142857142857143, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[5, 7], Rational[4, 7]}, {
        0.7142857142857143, 0.7142857142857143, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[5, 7], 
         Rational[5, 7]}, {0.7142857142857143, 0.7142857142857143, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[5, 7], Rational[5, 7]}, {
        0.7142857142857143, 0.7142857142857143, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[5, 7], 
         Rational[6, 7]}, {0.7142857142857143, 0.7142857142857143, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[5, 7], Rational[6, 7]}, {
        0.7142857142857143, 0.7142857142857143, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[5, 7], 1}, {0.7142857142857143, 0.7142857142857143, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[5, 7], 1}, {
        0.7142857142857143, 0.7142857142857143, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[6, 7], 
         Rational[1, 7]}, {0.7142857142857143, 0.8571428571428571, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[6, 7], Rational[1, 7]}, {
        0.7142857142857143, 0.8571428571428571, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[6, 7], 
         Rational[2, 7]}, {0.7142857142857143, 0.8571428571428571, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[6, 7], Rational[2, 7]}, {
        0.7142857142857143, 0.8571428571428571, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[6, 7], 
         Rational[3, 7]}, {0.7142857142857143, 0.8571428571428571, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[6, 7], Rational[3, 7]}, {
        0.7142857142857143, 0.8571428571428571, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[6, 7], 
         Rational[4, 7]}, {0.7142857142857143, 0.8571428571428571, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[6, 7], Rational[4, 7]}, {
        0.7142857142857143, 0.8571428571428571, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[6, 7], 
         Rational[5, 7]}, {0.7142857142857143, 0.8571428571428571, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[6, 7], Rational[5, 7]}, {
        0.7142857142857143, 0.8571428571428571, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[6, 7], 
         Rational[6, 7]}, {0.7142857142857143, 0.8571428571428571, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[6, 7], Rational[6, 7]}, {
        0.7142857142857143, 0.8571428571428571, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 
         Rational[6, 7], 1}, {0.7142857142857143, 0.8571428571428571, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], Rational[6, 7], 1}, {
        0.7142857142857143, 0.8571428571428571, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[5, 7], 1, 
         Rational[1, 7]}, {0.7142857142857143, 1, 0.14285714285714285`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], 1, Rational[1, 7]}, {
        0.7142857142857143, 1, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 1, 
         Rational[2, 7]}, {0.7142857142857143, 1, 0.2857142857142857}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], 1, Rational[2, 7]}, {
        0.7142857142857143, 1, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 1, 
         Rational[3, 7]}, {0.7142857142857143, 1, 0.42857142857142855`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], 1, Rational[3, 7]}, {
        0.7142857142857143, 1, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 1, 
         Rational[4, 7]}, {0.7142857142857143, 1, 0.5714285714285714}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], 1, Rational[4, 7]}, {
        0.7142857142857143, 1, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 1, 
         Rational[5, 7]}, {0.7142857142857143, 1, 0.7142857142857143}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], 1, Rational[5, 7]}, {
        0.7142857142857143, 1, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 1, 
         Rational[6, 7]}, {0.7142857142857143, 1, 0.8571428571428571}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], 1, Rational[6, 7]}, {
        0.7142857142857143, 1, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 7], 1, 1}, {0.7142857142857143, 1, 1}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 7], 1, 1}, {0.7142857142857143, 1, 1}]]}}}, {{
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[1, 7], 
         Rational[1, 7]}, {0.8571428571428571, 0.14285714285714285`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[1, 7], Rational[1, 7]}, {
        0.8571428571428571, 0.14285714285714285`, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[1, 7], 
         Rational[2, 7]}, {0.8571428571428571, 0.14285714285714285`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[1, 7], Rational[2, 7]}, {
        0.8571428571428571, 0.14285714285714285`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[1, 7], 
         Rational[3, 7]}, {0.8571428571428571, 0.14285714285714285`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[1, 7], Rational[3, 7]}, {
        0.8571428571428571, 0.14285714285714285`, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[1, 7], 
         Rational[4, 7]}, {0.8571428571428571, 0.14285714285714285`, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[1, 7], Rational[4, 7]}, {
        0.8571428571428571, 0.14285714285714285`, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[1, 7], 
         Rational[5, 7]}, {0.8571428571428571, 0.14285714285714285`, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[1, 7], Rational[5, 7]}, {
        0.8571428571428571, 0.14285714285714285`, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[1, 7], 
         Rational[6, 7]}, {0.8571428571428571, 0.14285714285714285`, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[1, 7], Rational[6, 7]}, {
        0.8571428571428571, 0.14285714285714285`, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[1, 7], 1}, {0.8571428571428571, 0.14285714285714285`, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[1, 7], 1}, {
        0.8571428571428571, 0.14285714285714285`, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[2, 7], 
         Rational[1, 7]}, {0.8571428571428571, 0.2857142857142857, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[2, 7], Rational[1, 7]}, {
        0.8571428571428571, 0.2857142857142857, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[2, 7], 
         Rational[2, 7]}, {0.8571428571428571, 0.2857142857142857, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[2, 7], Rational[2, 7]}, {
        0.8571428571428571, 0.2857142857142857, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[2, 7], 
         Rational[3, 7]}, {0.8571428571428571, 0.2857142857142857, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[2, 7], Rational[3, 7]}, {
        0.8571428571428571, 0.2857142857142857, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[2, 7], 
         Rational[4, 7]}, {0.8571428571428571, 0.2857142857142857, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[2, 7], Rational[4, 7]}, {
        0.8571428571428571, 0.2857142857142857, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[2, 7], 
         Rational[5, 7]}, {0.8571428571428571, 0.2857142857142857, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[2, 7], Rational[5, 7]}, {
        0.8571428571428571, 0.2857142857142857, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[2, 7], 
         Rational[6, 7]}, {0.8571428571428571, 0.2857142857142857, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[2, 7], Rational[6, 7]}, {
        0.8571428571428571, 0.2857142857142857, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[2, 7], 1}, {0.8571428571428571, 0.2857142857142857, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[2, 7], 1}, {
        0.8571428571428571, 0.2857142857142857, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[3, 7], 
         Rational[1, 7]}, {0.8571428571428571, 0.42857142857142855`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[3, 7], Rational[1, 7]}, {
        0.8571428571428571, 0.42857142857142855`, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[3, 7], 
         Rational[2, 7]}, {0.8571428571428571, 0.42857142857142855`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[3, 7], Rational[2, 7]}, {
        0.8571428571428571, 0.42857142857142855`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[3, 7], 
         Rational[3, 7]}, {0.8571428571428571, 0.42857142857142855`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[3, 7], Rational[3, 7]}, {
        0.8571428571428571, 0.42857142857142855`, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[3, 7], 
         Rational[4, 7]}, {0.8571428571428571, 0.42857142857142855`, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[3, 7], Rational[4, 7]}, {
        0.8571428571428571, 0.42857142857142855`, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[3, 7], 
         Rational[5, 7]}, {0.8571428571428571, 0.42857142857142855`, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[3, 7], Rational[5, 7]}, {
        0.8571428571428571, 0.42857142857142855`, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[3, 7], 
         Rational[6, 7]}, {0.8571428571428571, 0.42857142857142855`, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[3, 7], Rational[6, 7]}, {
        0.8571428571428571, 0.42857142857142855`, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[3, 7], 1}, {0.8571428571428571, 0.42857142857142855`, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[3, 7], 1}, {
        0.8571428571428571, 0.42857142857142855`, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[4, 7], 
         Rational[1, 7]}, {0.8571428571428571, 0.5714285714285714, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[4, 7], Rational[1, 7]}, {
        0.8571428571428571, 0.5714285714285714, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[4, 7], 
         Rational[2, 7]}, {0.8571428571428571, 0.5714285714285714, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[4, 7], Rational[2, 7]}, {
        0.8571428571428571, 0.5714285714285714, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[4, 7], 
         Rational[3, 7]}, {0.8571428571428571, 0.5714285714285714, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[4, 7], Rational[3, 7]}, {
        0.8571428571428571, 0.5714285714285714, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[4, 7], 
         Rational[4, 7]}, {0.8571428571428571, 0.5714285714285714, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[4, 7], Rational[4, 7]}, {
        0.8571428571428571, 0.5714285714285714, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[4, 7], 
         Rational[5, 7]}, {0.8571428571428571, 0.5714285714285714, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[4, 7], Rational[5, 7]}, {
        0.8571428571428571, 0.5714285714285714, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[4, 7], 
         Rational[6, 7]}, {0.8571428571428571, 0.5714285714285714, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[4, 7], Rational[6, 7]}, {
        0.8571428571428571, 0.5714285714285714, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[4, 7], 1}, {0.8571428571428571, 0.5714285714285714, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[4, 7], 1}, {
        0.8571428571428571, 0.5714285714285714, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[5, 7], 
         Rational[1, 7]}, {0.8571428571428571, 0.7142857142857143, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[5, 7], Rational[1, 7]}, {
        0.8571428571428571, 0.7142857142857143, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[5, 7], 
         Rational[2, 7]}, {0.8571428571428571, 0.7142857142857143, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[5, 7], Rational[2, 7]}, {
        0.8571428571428571, 0.7142857142857143, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[5, 7], 
         Rational[3, 7]}, {0.8571428571428571, 0.7142857142857143, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[5, 7], Rational[3, 7]}, {
        0.8571428571428571, 0.7142857142857143, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[5, 7], 
         Rational[4, 7]}, {0.8571428571428571, 0.7142857142857143, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[5, 7], Rational[4, 7]}, {
        0.8571428571428571, 0.7142857142857143, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[5, 7], 
         Rational[5, 7]}, {0.8571428571428571, 0.7142857142857143, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[5, 7], Rational[5, 7]}, {
        0.8571428571428571, 0.7142857142857143, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[5, 7], 
         Rational[6, 7]}, {0.8571428571428571, 0.7142857142857143, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[5, 7], Rational[6, 7]}, {
        0.8571428571428571, 0.7142857142857143, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[5, 7], 1}, {0.8571428571428571, 0.7142857142857143, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[5, 7], 1}, {
        0.8571428571428571, 0.7142857142857143, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[6, 7], 
         Rational[1, 7]}, {0.8571428571428571, 0.8571428571428571, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[6, 7], Rational[1, 7]}, {
        0.8571428571428571, 0.8571428571428571, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[6, 7], 
         Rational[2, 7]}, {0.8571428571428571, 0.8571428571428571, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[6, 7], Rational[2, 7]}, {
        0.8571428571428571, 0.8571428571428571, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[6, 7], 
         Rational[3, 7]}, {0.8571428571428571, 0.8571428571428571, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[6, 7], Rational[3, 7]}, {
        0.8571428571428571, 0.8571428571428571, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[6, 7], 
         Rational[4, 7]}, {0.8571428571428571, 0.8571428571428571, 
        0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[6, 7], Rational[4, 7]}, {
        0.8571428571428571, 0.8571428571428571, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[6, 7], 
         Rational[5, 7]}, {0.8571428571428571, 0.8571428571428571, 
        0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[6, 7], Rational[5, 7]}, {
        0.8571428571428571, 0.8571428571428571, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[6, 7], 
         Rational[6, 7]}, {0.8571428571428571, 0.8571428571428571, 
        0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[6, 7], Rational[6, 7]}, {
        0.8571428571428571, 0.8571428571428571, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 
         Rational[6, 7], 1}, {0.8571428571428571, 0.8571428571428571, 1}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], Rational[6, 7], 1}, {
        0.8571428571428571, 0.8571428571428571, 1}]]}}, {
     {RGBColor[
       NCache[{
         Rational[6, 7], 1, 
         Rational[1, 7]}, {0.8571428571428571, 1, 0.14285714285714285`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], 1, Rational[1, 7]}, {
        0.8571428571428571, 1, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 1, 
         Rational[2, 7]}, {0.8571428571428571, 1, 0.2857142857142857}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], 1, Rational[2, 7]}, {
        0.8571428571428571, 1, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 1, 
         Rational[3, 7]}, {0.8571428571428571, 1, 0.42857142857142855`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], 1, Rational[3, 7]}, {
        0.8571428571428571, 1, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 1, 
         Rational[4, 7]}, {0.8571428571428571, 1, 0.5714285714285714}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], 1, Rational[4, 7]}, {
        0.8571428571428571, 1, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 1, 
         Rational[5, 7]}, {0.8571428571428571, 1, 0.7142857142857143}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], 1, Rational[5, 7]}, {
        0.8571428571428571, 1, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 1, 
         Rational[6, 7]}, {0.8571428571428571, 1, 0.8571428571428571}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], 1, Rational[6, 7]}, {
        0.8571428571428571, 1, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{
         Rational[6, 7], 1, 1}, {0.8571428571428571, 1, 1}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[6, 7], 1, 1}, {0.8571428571428571, 1, 1}]]}}}, {{
     {RGBColor[
       NCache[{1, 
         Rational[1, 7], 
         Rational[1, 7]}, {1, 0.14285714285714285`, 0.14285714285714285`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[1, 7], Rational[1, 7]}, {
        1, 0.14285714285714285`, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[1, 7], 
         Rational[2, 7]}, {1, 0.14285714285714285`, 0.2857142857142857}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[1, 7], Rational[2, 7]}, {
        1, 0.14285714285714285`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[1, 7], 
         Rational[3, 7]}, {1, 0.14285714285714285`, 0.42857142857142855`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[1, 7], Rational[3, 7]}, {
        1, 0.14285714285714285`, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[1, 7], 
         Rational[4, 7]}, {1, 0.14285714285714285`, 0.5714285714285714}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[1, 7], Rational[4, 7]}, {
        1, 0.14285714285714285`, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[1, 7], 
         Rational[5, 7]}, {1, 0.14285714285714285`, 0.7142857142857143}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[1, 7], Rational[5, 7]}, {
        1, 0.14285714285714285`, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[1, 7], 
         Rational[6, 7]}, {1, 0.14285714285714285`, 0.8571428571428571}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[1, 7], Rational[6, 7]}, {
        1, 0.14285714285714285`, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[1, 7], 1}, {1, 0.14285714285714285`, 1}]], Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[1, 7], 1}, {1, 0.14285714285714285`, 1}]]}}, {
     {RGBColor[
       NCache[{1, 
         Rational[2, 7], 
         Rational[1, 7]}, {1, 0.2857142857142857, 0.14285714285714285`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[2, 7], Rational[1, 7]}, {
        1, 0.2857142857142857, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[2, 7], 
         Rational[2, 7]}, {1, 0.2857142857142857, 0.2857142857142857}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[2, 7], Rational[2, 7]}, {
        1, 0.2857142857142857, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[2, 7], 
         Rational[3, 7]}, {1, 0.2857142857142857, 0.42857142857142855`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[2, 7], Rational[3, 7]}, {
        1, 0.2857142857142857, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[2, 7], 
         Rational[4, 7]}, {1, 0.2857142857142857, 0.5714285714285714}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[2, 7], Rational[4, 7]}, {
        1, 0.2857142857142857, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[2, 7], 
         Rational[5, 7]}, {1, 0.2857142857142857, 0.7142857142857143}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[2, 7], Rational[5, 7]}, {
        1, 0.2857142857142857, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[2, 7], 
         Rational[6, 7]}, {1, 0.2857142857142857, 0.8571428571428571}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[2, 7], Rational[6, 7]}, {
        1, 0.2857142857142857, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[2, 7], 1}, {1, 0.2857142857142857, 1}]], Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[2, 7], 1}, {1, 0.2857142857142857, 1}]]}}, {
     {RGBColor[
       NCache[{1, 
         Rational[3, 7], 
         Rational[1, 7]}, {1, 0.42857142857142855`, 0.14285714285714285`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[3, 7], Rational[1, 7]}, {
        1, 0.42857142857142855`, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[3, 7], 
         Rational[2, 7]}, {1, 0.42857142857142855`, 0.2857142857142857}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[3, 7], Rational[2, 7]}, {
        1, 0.42857142857142855`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[3, 7], 
         Rational[3, 7]}, {1, 0.42857142857142855`, 0.42857142857142855`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[3, 7], Rational[3, 7]}, {
        1, 0.42857142857142855`, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[3, 7], 
         Rational[4, 7]}, {1, 0.42857142857142855`, 0.5714285714285714}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[3, 7], Rational[4, 7]}, {
        1, 0.42857142857142855`, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[3, 7], 
         Rational[5, 7]}, {1, 0.42857142857142855`, 0.7142857142857143}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[3, 7], Rational[5, 7]}, {
        1, 0.42857142857142855`, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[3, 7], 
         Rational[6, 7]}, {1, 0.42857142857142855`, 0.8571428571428571}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[3, 7], Rational[6, 7]}, {
        1, 0.42857142857142855`, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[3, 7], 1}, {1, 0.42857142857142855`, 1}]], Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[3, 7], 1}, {1, 0.42857142857142855`, 1}]]}}, {
     {RGBColor[
       NCache[{1, 
         Rational[4, 7], 
         Rational[1, 7]}, {1, 0.5714285714285714, 0.14285714285714285`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[4, 7], Rational[1, 7]}, {
        1, 0.5714285714285714, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[4, 7], 
         Rational[2, 7]}, {1, 0.5714285714285714, 0.2857142857142857}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[4, 7], Rational[2, 7]}, {
        1, 0.5714285714285714, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[4, 7], 
         Rational[3, 7]}, {1, 0.5714285714285714, 0.42857142857142855`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[4, 7], Rational[3, 7]}, {
        1, 0.5714285714285714, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[4, 7], 
         Rational[4, 7]}, {1, 0.5714285714285714, 0.5714285714285714}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[4, 7], Rational[4, 7]}, {
        1, 0.5714285714285714, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[4, 7], 
         Rational[5, 7]}, {1, 0.5714285714285714, 0.7142857142857143}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[4, 7], Rational[5, 7]}, {
        1, 0.5714285714285714, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[4, 7], 
         Rational[6, 7]}, {1, 0.5714285714285714, 0.8571428571428571}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[4, 7], Rational[6, 7]}, {
        1, 0.5714285714285714, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[4, 7], 1}, {1, 0.5714285714285714, 1}]], Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[4, 7], 1}, {1, 0.5714285714285714, 1}]]}}, {
     {RGBColor[
       NCache[{1, 
         Rational[5, 7], 
         Rational[1, 7]}, {1, 0.7142857142857143, 0.14285714285714285`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[5, 7], Rational[1, 7]}, {
        1, 0.7142857142857143, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[5, 7], 
         Rational[2, 7]}, {1, 0.7142857142857143, 0.2857142857142857}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[5, 7], Rational[2, 7]}, {
        1, 0.7142857142857143, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[5, 7], 
         Rational[3, 7]}, {1, 0.7142857142857143, 0.42857142857142855`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[5, 7], Rational[3, 7]}, {
        1, 0.7142857142857143, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[5, 7], 
         Rational[4, 7]}, {1, 0.7142857142857143, 0.5714285714285714}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[5, 7], Rational[4, 7]}, {
        1, 0.7142857142857143, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[5, 7], 
         Rational[5, 7]}, {1, 0.7142857142857143, 0.7142857142857143}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[5, 7], Rational[5, 7]}, {
        1, 0.7142857142857143, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[5, 7], 
         Rational[6, 7]}, {1, 0.7142857142857143, 0.8571428571428571}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[5, 7], Rational[6, 7]}, {
        1, 0.7142857142857143, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[5, 7], 1}, {1, 0.7142857142857143, 1}]], Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[5, 7], 1}, {1, 0.7142857142857143, 1}]]}}, {
     {RGBColor[
       NCache[{1, 
         Rational[6, 7], 
         Rational[1, 7]}, {1, 0.8571428571428571, 0.14285714285714285`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[6, 7], Rational[1, 7]}, {
        1, 0.8571428571428571, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[6, 7], 
         Rational[2, 7]}, {1, 0.8571428571428571, 0.2857142857142857}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[6, 7], Rational[2, 7]}, {
        1, 0.8571428571428571, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[6, 7], 
         Rational[3, 7]}, {1, 0.8571428571428571, 0.42857142857142855`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[6, 7], Rational[3, 7]}, {
        1, 0.8571428571428571, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[6, 7], 
         Rational[4, 7]}, {1, 0.8571428571428571, 0.5714285714285714}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[6, 7], Rational[4, 7]}, {
        1, 0.8571428571428571, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[6, 7], 
         Rational[5, 7]}, {1, 0.8571428571428571, 0.7142857142857143}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[6, 7], Rational[5, 7]}, {
        1, 0.8571428571428571, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[6, 7], 
         Rational[6, 7]}, {1, 0.8571428571428571, 0.8571428571428571}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[6, 7], Rational[6, 7]}, {
        1, 0.8571428571428571, 0.8571428571428571}]]}, 
     {RGBColor[
       NCache[{1, 
         Rational[6, 7], 1}, {1, 0.8571428571428571, 1}]], Opacity[0.5], 
      CuboidBox[
       NCache[{1, Rational[6, 7], 1}, {1, 0.8571428571428571, 1}]]}}, {
     {RGBColor[
       NCache[{1, 1, 
         Rational[1, 7]}, {1, 1, 0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{1, 1, Rational[1, 7]}, {1, 1, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{1, 1, 
         Rational[2, 7]}, {1, 1, 0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{1, 1, Rational[2, 7]}, {1, 1, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{1, 1, 
         Rational[3, 7]}, {1, 1, 0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{1, 1, Rational[3, 7]}, {1, 1, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{1, 1, 
         Rational[4, 7]}, {1, 1, 0.5714285714285714}]], Opacity[0.5], 
      CuboidBox[
       NCache[{1, 1, Rational[4, 7]}, {1, 1, 0.5714285714285714}]]}, 
     {RGBColor[
       NCache[{1, 1, 
         Rational[5, 7]}, {1, 1, 0.7142857142857143}]], Opacity[0.5], 
      CuboidBox[
       NCache[{1, 1, Rational[5, 7]}, {1, 1, 0.7142857142857143}]]}, 
     {RGBColor[
       NCache[{1, 1, 
         Rational[6, 7]}, {1, 1, 0.8571428571428571}]], Opacity[0.5], 
      CuboidBox[
       NCache[{1, 1, Rational[6, 7]}, {1, 1, 0.8571428571428571}]]}, 
     {RGBColor[1, 1, 1], Opacity[0.5], CuboidBox[{1, 1, 1}]}}}},
  ImageSize->200,
  ViewPoint->{1.0939866069900064`, -3.1168131949146414`, 0.7339406050440782},
  ViewVertical->{0.14705788926797567`, -0.4542103836458755, 
   0.8786733776508279}]], "Output",
 CellChangeTimes->{{3.6949649388577757`*^9, 3.6949652655883904`*^9}, {
  3.694965544320997*^9, 3.694965559407641*^9}, {3.694965594771408*^9, 
  3.694965613663404*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
KCK8l1asfsaBfJzOIS8U71CfuxTqe49CoCKhvpMY3gHk/RTud0en8u2Dq7cG
3K7FtdOp6Wx8G3Hl2IT8Mb4zX8O3yvab+dY7882hlabjXEHcoiJe4oR4IbKr
iKuqPUe6QwqR/z1lLxx8l3oJ4zoV8Z2q+TajrtIL4kinEOfQCuV6ofykSjo8
iQK6jq6roN+S0zQmYn9jhoaP+d5n24L8Lgw7o+6IO7LGpPQCSk/1FOQzGX8W
eJueBTkY7/z+jO/1bHIw3mHppispj+C9f0GXoqYzPpTxjTDen/LVDMZ11LPq
iZ1xnlf0W4iPbc83NLjntxQZg0ZoQSPl59eILWHZ5s7td20jtHNPt+pIxHL/
SYgHB1+YgbhuCnHjA+7Tk1TwNt5mxFnD/e68jnGv/2DGzZJ12YImO8vfhfES
pW3JTUuV8QkH487OJMuJ8f0q45XchVIqEl+pNip3ql0ord7MucCryvlrWNfR
AeYc0byg2aHoo1BqO+zj3hN21m/+kKwr9ps5/zBYWBfr/ZTt9+JW1X67TLPf
D4Me0KMQbsyDdc0Spn3Kfy/d5aB9b+lBOhpvm4V2GJXMlzNpt/tvW+xvFdjh
U2xl3wL3b6mn4jHZuuBndvXQsO1rijGlUV7xdsq31IoHL27YzrBr/uJoj/zP
oT3gFdoXzqRd+kZ4yLjb5Xw23AudcE+fHXedE+6MuD0Y9QEwOySuZFh8/rB6
h8aO/GXZ4Rbx5s3s4ZF/mLsBVdZhyPXCuV74Hp1i3I74OHZigm/a/BHEB6YQ
f7RsTPC2I854352G+Bzq97lB1iWtjuhYvAM4t1D30iZEo5b2e+7UBFLqvFhq
9j4olB8oO0w71h2iG+tfJXw4azrhg5t+y61MhnwKcfYu1d8qviUJ413Is7OH
bP1fU2PbMRod/xWtj0+lgvKdVFTXMFPPpc/bTrj6us9/c8LdZhJOW5grRIA0
bV9nxueoKq4gbce6cAprnWrCc9TOk2yV6mMq1TUGxqdUOsIbvV5F2uZ9h7GW
7kFnpPd7Tyg0I/WZsBONo7khZ2cURI8pTUzNTPm2d463LWxBTrt8jzpzrVJd
6W7hVz9dY6h2frk8pVrLT1PxQ346lI4cOrggiQ4u5K+Wc+pChxYm0vFF6bRt
7gp6a0EK9Szmm7ZfhvJb0j8NfpteRlyU+HXYCS09CdgNP/HYv43H6O1FyWTJ
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
q7cgfvT/AdQiJXM=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"grid", ",", 
   RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 Graphics3DBox[{{{
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[1, 14], 
         Rational[1, 14]}, {0.07142857142857142, 0.07142857142857142, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[1, 14], Rational[1, 14]}, {
        0.07142857142857142, 0.07142857142857142, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[1, 14], 
         Rational[1, 7]}, {0.07142857142857142, 0.07142857142857142, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[1, 14], Rational[1, 7]}, {
        0.07142857142857142, 0.07142857142857142, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[1, 14], 
         Rational[3, 14]}, {0.07142857142857142, 0.07142857142857142, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[1, 14], Rational[3, 14]}, {
        0.07142857142857142, 0.07142857142857142, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[1, 14], 
         Rational[2, 7]}, {0.07142857142857142, 0.07142857142857142, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[1, 14], Rational[2, 7]}, {
        0.07142857142857142, 0.07142857142857142, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[1, 14], 
         Rational[5, 14]}, {0.07142857142857142, 0.07142857142857142, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[1, 14], Rational[5, 14]}, {
        0.07142857142857142, 0.07142857142857142, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[1, 14], 
         Rational[3, 7]}, {0.07142857142857142, 0.07142857142857142, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[1, 14], Rational[3, 7]}, {
        0.07142857142857142, 0.07142857142857142, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[1, 14], 
         Rational[1, 2]}, {0.07142857142857142, 0.07142857142857142, 0.5}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[1, 14], Rational[1, 2]}, {
        0.07142857142857142, 0.07142857142857142, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[1, 7], 
         Rational[1, 14]}, {0.07142857142857142, 0.14285714285714285`, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[1, 7], Rational[1, 14]}, {
        0.07142857142857142, 0.14285714285714285`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[1, 7], 
         Rational[1, 7]}, {0.07142857142857142, 0.14285714285714285`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[1, 7], Rational[1, 7]}, {
        0.07142857142857142, 0.14285714285714285`, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[1, 7], 
         Rational[3, 14]}, {0.07142857142857142, 0.14285714285714285`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[1, 7], Rational[3, 14]}, {
        0.07142857142857142, 0.14285714285714285`, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[1, 7], 
         Rational[2, 7]}, {0.07142857142857142, 0.14285714285714285`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[1, 7], Rational[2, 7]}, {
        0.07142857142857142, 0.14285714285714285`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[1, 7], 
         Rational[5, 14]}, {0.07142857142857142, 0.14285714285714285`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[1, 7], Rational[5, 14]}, {
        0.07142857142857142, 0.14285714285714285`, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[1, 7], 
         Rational[3, 7]}, {0.07142857142857142, 0.14285714285714285`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[1, 7], Rational[3, 7]}, {
        0.07142857142857142, 0.14285714285714285`, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[1, 7], 
         Rational[1, 2]}, {0.07142857142857142, 0.14285714285714285`, 0.5}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[1, 7], Rational[1, 2]}, {
        0.07142857142857142, 0.14285714285714285`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[3, 14], 
         Rational[1, 14]}, {0.07142857142857142, 0.21428571428571427`, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[3, 14], Rational[1, 14]}, {
        0.07142857142857142, 0.21428571428571427`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[3, 14], 
         Rational[1, 7]}, {0.07142857142857142, 0.21428571428571427`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[3, 14], Rational[1, 7]}, {
        0.07142857142857142, 0.21428571428571427`, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[3, 14], 
         Rational[3, 14]}, {0.07142857142857142, 0.21428571428571427`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[3, 14], Rational[3, 14]}, {
        0.07142857142857142, 0.21428571428571427`, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[3, 14], 
         Rational[2, 7]}, {0.07142857142857142, 0.21428571428571427`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[3, 14], Rational[2, 7]}, {
        0.07142857142857142, 0.21428571428571427`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[3, 14], 
         Rational[5, 14]}, {0.07142857142857142, 0.21428571428571427`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[3, 14], Rational[5, 14]}, {
        0.07142857142857142, 0.21428571428571427`, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[3, 14], 
         Rational[3, 7]}, {0.07142857142857142, 0.21428571428571427`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[3, 14], Rational[3, 7]}, {
        0.07142857142857142, 0.21428571428571427`, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[3, 14], 
         Rational[1, 2]}, {0.07142857142857142, 0.21428571428571427`, 0.5}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[3, 14], Rational[1, 2]}, {
        0.07142857142857142, 0.21428571428571427`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[2, 7], 
         Rational[1, 14]}, {0.07142857142857142, 0.2857142857142857, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[2, 7], Rational[1, 14]}, {
        0.07142857142857142, 0.2857142857142857, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[2, 7], 
         Rational[1, 7]}, {0.07142857142857142, 0.2857142857142857, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[2, 7], Rational[1, 7]}, {
        0.07142857142857142, 0.2857142857142857, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[2, 7], 
         Rational[3, 14]}, {0.07142857142857142, 0.2857142857142857, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[2, 7], Rational[3, 14]}, {
        0.07142857142857142, 0.2857142857142857, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[2, 7], 
         Rational[2, 7]}, {0.07142857142857142, 0.2857142857142857, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[2, 7], Rational[2, 7]}, {
        0.07142857142857142, 0.2857142857142857, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[2, 7], 
         Rational[5, 14]}, {0.07142857142857142, 0.2857142857142857, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[2, 7], Rational[5, 14]}, {
        0.07142857142857142, 0.2857142857142857, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[2, 7], 
         Rational[3, 7]}, {0.07142857142857142, 0.2857142857142857, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[2, 7], Rational[3, 7]}, {
        0.07142857142857142, 0.2857142857142857, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[2, 7], 
         Rational[1, 2]}, {0.07142857142857142, 0.2857142857142857, 0.5}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[2, 7], Rational[1, 2]}, {
        0.07142857142857142, 0.2857142857142857, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[5, 14], 
         Rational[1, 14]}, {0.07142857142857142, 0.35714285714285715`, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[5, 14], Rational[1, 14]}, {
        0.07142857142857142, 0.35714285714285715`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[5, 14], 
         Rational[1, 7]}, {0.07142857142857142, 0.35714285714285715`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[5, 14], Rational[1, 7]}, {
        0.07142857142857142, 0.35714285714285715`, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[5, 14], 
         Rational[3, 14]}, {0.07142857142857142, 0.35714285714285715`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[5, 14], Rational[3, 14]}, {
        0.07142857142857142, 0.35714285714285715`, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[5, 14], 
         Rational[2, 7]}, {0.07142857142857142, 0.35714285714285715`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[5, 14], Rational[2, 7]}, {
        0.07142857142857142, 0.35714285714285715`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[5, 14], 
         Rational[5, 14]}, {0.07142857142857142, 0.35714285714285715`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[5, 14], Rational[5, 14]}, {
        0.07142857142857142, 0.35714285714285715`, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[5, 14], 
         Rational[3, 7]}, {0.07142857142857142, 0.35714285714285715`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[5, 14], Rational[3, 7]}, {
        0.07142857142857142, 0.35714285714285715`, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[5, 14], 
         Rational[1, 2]}, {0.07142857142857142, 0.35714285714285715`, 0.5}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[5, 14], Rational[1, 2]}, {
        0.07142857142857142, 0.35714285714285715`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[3, 7], 
         Rational[1, 14]}, {0.07142857142857142, 0.42857142857142855`, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[3, 7], Rational[1, 14]}, {
        0.07142857142857142, 0.42857142857142855`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[3, 7], 
         Rational[1, 7]}, {0.07142857142857142, 0.42857142857142855`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[3, 7], Rational[1, 7]}, {
        0.07142857142857142, 0.42857142857142855`, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[3, 7], 
         Rational[3, 14]}, {0.07142857142857142, 0.42857142857142855`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[3, 7], Rational[3, 14]}, {
        0.07142857142857142, 0.42857142857142855`, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[3, 7], 
         Rational[2, 7]}, {0.07142857142857142, 0.42857142857142855`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[3, 7], Rational[2, 7]}, {
        0.07142857142857142, 0.42857142857142855`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[3, 7], 
         Rational[5, 14]}, {0.07142857142857142, 0.42857142857142855`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[3, 7], Rational[5, 14]}, {
        0.07142857142857142, 0.42857142857142855`, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[3, 7], 
         Rational[3, 7]}, {0.07142857142857142, 0.42857142857142855`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[3, 7], Rational[3, 7]}, {
        0.07142857142857142, 0.42857142857142855`, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[3, 7], 
         Rational[1, 2]}, {0.07142857142857142, 0.42857142857142855`, 0.5}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[3, 7], Rational[1, 2]}, {
        0.07142857142857142, 0.42857142857142855`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[1, 2], 
         Rational[1, 14]}, {0.07142857142857142, 0.5, 0.07142857142857142}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[1, 2], Rational[1, 14]}, {
        0.07142857142857142, 0.5, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[1, 2], 
         Rational[1, 7]}, {0.07142857142857142, 0.5, 0.14285714285714285`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[1, 2], Rational[1, 7]}, {
        0.07142857142857142, 0.5, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[1, 2], 
         Rational[3, 14]}, {0.07142857142857142, 0.5, 0.21428571428571427`}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[1, 2], Rational[3, 14]}, {
        0.07142857142857142, 0.5, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[1, 2], 
         Rational[2, 7]}, {0.07142857142857142, 0.5, 0.2857142857142857}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[1, 2], Rational[2, 7]}, {
        0.07142857142857142, 0.5, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[1, 2], 
         Rational[5, 14]}, {0.07142857142857142, 0.5, 0.35714285714285715`}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[1, 2], Rational[5, 14]}, {
        0.07142857142857142, 0.5, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[1, 2], 
         Rational[3, 7]}, {0.07142857142857142, 0.5, 0.42857142857142855`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[1, 2], Rational[3, 7]}, {
        0.07142857142857142, 0.5, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 14], 
         Rational[1, 2], 
         Rational[1, 2]}, {0.07142857142857142, 0.5, 0.5}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 14], Rational[1, 2], Rational[1, 2]}, {
        0.07142857142857142, 0.5, 0.5}]]}}}, {{
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 14], 
         Rational[1, 14]}, {0.14285714285714285`, 0.07142857142857142, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 14], Rational[1, 14]}, {
        0.14285714285714285`, 0.07142857142857142, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 14], 
         Rational[1, 7]}, {0.14285714285714285`, 0.07142857142857142, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 14], Rational[1, 7]}, {
        0.14285714285714285`, 0.07142857142857142, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 14], 
         Rational[3, 14]}, {0.14285714285714285`, 0.07142857142857142, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 14], Rational[3, 14]}, {
        0.14285714285714285`, 0.07142857142857142, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 14], 
         Rational[2, 7]}, {0.14285714285714285`, 0.07142857142857142, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 14], Rational[2, 7]}, {
        0.14285714285714285`, 0.07142857142857142, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 14], 
         Rational[5, 14]}, {0.14285714285714285`, 0.07142857142857142, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 14], Rational[5, 14]}, {
        0.14285714285714285`, 0.07142857142857142, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 14], 
         Rational[3, 7]}, {0.14285714285714285`, 0.07142857142857142, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 14], Rational[3, 7]}, {
        0.14285714285714285`, 0.07142857142857142, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 14], 
         Rational[1, 2]}, {0.14285714285714285`, 0.07142857142857142, 0.5}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 14], Rational[1, 2]}, {
        0.14285714285714285`, 0.07142857142857142, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 7], 
         Rational[1, 14]}, {0.14285714285714285`, 0.14285714285714285`, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 7], Rational[1, 14]}, {
        0.14285714285714285`, 0.14285714285714285`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 7], 
         Rational[1, 7]}, {0.14285714285714285`, 0.14285714285714285`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 7], Rational[1, 7]}, {
        0.14285714285714285`, 0.14285714285714285`, 
        0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 7], 
         Rational[3, 14]}, {0.14285714285714285`, 0.14285714285714285`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 7], Rational[3, 14]}, {
        0.14285714285714285`, 0.14285714285714285`, 
        0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 7], 
         Rational[2, 7]}, {0.14285714285714285`, 0.14285714285714285`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 7], Rational[2, 7]}, {
        0.14285714285714285`, 0.14285714285714285`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 7], 
         Rational[5, 14]}, {0.14285714285714285`, 0.14285714285714285`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 7], Rational[5, 14]}, {
        0.14285714285714285`, 0.14285714285714285`, 
        0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 7], 
         Rational[3, 7]}, {0.14285714285714285`, 0.14285714285714285`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 7], Rational[3, 7]}, {
        0.14285714285714285`, 0.14285714285714285`, 
        0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 7], 
         Rational[1, 2]}, {0.14285714285714285`, 0.14285714285714285`, 0.5}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 7], Rational[1, 2]}, {
        0.14285714285714285`, 0.14285714285714285`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[3, 14], 
         Rational[1, 14]}, {0.14285714285714285`, 0.21428571428571427`, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[3, 14], Rational[1, 14]}, {
        0.14285714285714285`, 0.21428571428571427`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[3, 14], 
         Rational[1, 7]}, {0.14285714285714285`, 0.21428571428571427`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[3, 14], Rational[1, 7]}, {
        0.14285714285714285`, 0.21428571428571427`, 
        0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[3, 14], 
         Rational[3, 14]}, {0.14285714285714285`, 0.21428571428571427`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[3, 14], Rational[3, 14]}, {
        0.14285714285714285`, 0.21428571428571427`, 
        0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[3, 14], 
         Rational[2, 7]}, {0.14285714285714285`, 0.21428571428571427`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[3, 14], Rational[2, 7]}, {
        0.14285714285714285`, 0.21428571428571427`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[3, 14], 
         Rational[5, 14]}, {0.14285714285714285`, 0.21428571428571427`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[3, 14], Rational[5, 14]}, {
        0.14285714285714285`, 0.21428571428571427`, 
        0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[3, 14], 
         Rational[3, 7]}, {0.14285714285714285`, 0.21428571428571427`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[3, 14], Rational[3, 7]}, {
        0.14285714285714285`, 0.21428571428571427`, 
        0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[3, 14], 
         Rational[1, 2]}, {0.14285714285714285`, 0.21428571428571427`, 0.5}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[3, 14], Rational[1, 2]}, {
        0.14285714285714285`, 0.21428571428571427`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[2, 7], 
         Rational[1, 14]}, {0.14285714285714285`, 0.2857142857142857, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[2, 7], Rational[1, 14]}, {
        0.14285714285714285`, 0.2857142857142857, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[2, 7], 
         Rational[1, 7]}, {0.14285714285714285`, 0.2857142857142857, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[2, 7], Rational[1, 7]}, {
        0.14285714285714285`, 0.2857142857142857, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[2, 7], 
         Rational[3, 14]}, {0.14285714285714285`, 0.2857142857142857, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[2, 7], Rational[3, 14]}, {
        0.14285714285714285`, 0.2857142857142857, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[2, 7], 
         Rational[2, 7]}, {0.14285714285714285`, 0.2857142857142857, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[2, 7], Rational[2, 7]}, {
        0.14285714285714285`, 0.2857142857142857, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[2, 7], 
         Rational[5, 14]}, {0.14285714285714285`, 0.2857142857142857, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[2, 7], Rational[5, 14]}, {
        0.14285714285714285`, 0.2857142857142857, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[2, 7], 
         Rational[3, 7]}, {0.14285714285714285`, 0.2857142857142857, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[2, 7], Rational[3, 7]}, {
        0.14285714285714285`, 0.2857142857142857, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[2, 7], 
         Rational[1, 2]}, {0.14285714285714285`, 0.2857142857142857, 0.5}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[2, 7], Rational[1, 2]}, {
        0.14285714285714285`, 0.2857142857142857, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[5, 14], 
         Rational[1, 14]}, {0.14285714285714285`, 0.35714285714285715`, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[5, 14], Rational[1, 14]}, {
        0.14285714285714285`, 0.35714285714285715`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[5, 14], 
         Rational[1, 7]}, {0.14285714285714285`, 0.35714285714285715`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[5, 14], Rational[1, 7]}, {
        0.14285714285714285`, 0.35714285714285715`, 
        0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[5, 14], 
         Rational[3, 14]}, {0.14285714285714285`, 0.35714285714285715`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[5, 14], Rational[3, 14]}, {
        0.14285714285714285`, 0.35714285714285715`, 
        0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[5, 14], 
         Rational[2, 7]}, {0.14285714285714285`, 0.35714285714285715`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[5, 14], Rational[2, 7]}, {
        0.14285714285714285`, 0.35714285714285715`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[5, 14], 
         Rational[5, 14]}, {0.14285714285714285`, 0.35714285714285715`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[5, 14], Rational[5, 14]}, {
        0.14285714285714285`, 0.35714285714285715`, 
        0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[5, 14], 
         Rational[3, 7]}, {0.14285714285714285`, 0.35714285714285715`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[5, 14], Rational[3, 7]}, {
        0.14285714285714285`, 0.35714285714285715`, 
        0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[5, 14], 
         Rational[1, 2]}, {0.14285714285714285`, 0.35714285714285715`, 0.5}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[5, 14], Rational[1, 2]}, {
        0.14285714285714285`, 0.35714285714285715`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[3, 7], 
         Rational[1, 14]}, {0.14285714285714285`, 0.42857142857142855`, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[3, 7], Rational[1, 14]}, {
        0.14285714285714285`, 0.42857142857142855`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[3, 7], 
         Rational[1, 7]}, {0.14285714285714285`, 0.42857142857142855`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[3, 7], Rational[1, 7]}, {
        0.14285714285714285`, 0.42857142857142855`, 
        0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[3, 7], 
         Rational[3, 14]}, {0.14285714285714285`, 0.42857142857142855`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[3, 7], Rational[3, 14]}, {
        0.14285714285714285`, 0.42857142857142855`, 
        0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[3, 7], 
         Rational[2, 7]}, {0.14285714285714285`, 0.42857142857142855`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[3, 7], Rational[2, 7]}, {
        0.14285714285714285`, 0.42857142857142855`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[3, 7], 
         Rational[5, 14]}, {0.14285714285714285`, 0.42857142857142855`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[3, 7], Rational[5, 14]}, {
        0.14285714285714285`, 0.42857142857142855`, 
        0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[3, 7], 
         Rational[3, 7]}, {0.14285714285714285`, 0.42857142857142855`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[3, 7], Rational[3, 7]}, {
        0.14285714285714285`, 0.42857142857142855`, 
        0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[3, 7], 
         Rational[1, 2]}, {0.14285714285714285`, 0.42857142857142855`, 0.5}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[3, 7], Rational[1, 2]}, {
        0.14285714285714285`, 0.42857142857142855`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 2], 
         Rational[1, 14]}, {0.14285714285714285`, 0.5, 0.07142857142857142}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 2], Rational[1, 14]}, {
        0.14285714285714285`, 0.5, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 2], 
         Rational[1, 7]}, {0.14285714285714285`, 0.5, 0.14285714285714285`}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 2], Rational[1, 7]}, {
        0.14285714285714285`, 0.5, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 2], 
         Rational[3, 14]}, {0.14285714285714285`, 0.5, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 2], Rational[3, 14]}, {
        0.14285714285714285`, 0.5, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 2], 
         Rational[2, 7]}, {0.14285714285714285`, 0.5, 0.2857142857142857}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 2], Rational[2, 7]}, {
        0.14285714285714285`, 0.5, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 2], 
         Rational[5, 14]}, {0.14285714285714285`, 0.5, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 2], Rational[5, 14]}, {
        0.14285714285714285`, 0.5, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 2], 
         Rational[3, 7]}, {0.14285714285714285`, 0.5, 0.42857142857142855`}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 2], Rational[3, 7]}, {
        0.14285714285714285`, 0.5, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 7], 
         Rational[1, 2], 
         Rational[1, 2]}, {0.14285714285714285`, 0.5, 0.5}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 7], Rational[1, 2], Rational[1, 2]}, {
        0.14285714285714285`, 0.5, 0.5}]]}}}, {{
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[1, 14], 
         Rational[1, 14]}, {0.21428571428571427`, 0.07142857142857142, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[1, 14], Rational[1, 14]}, {
        0.21428571428571427`, 0.07142857142857142, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[1, 14], 
         Rational[1, 7]}, {0.21428571428571427`, 0.07142857142857142, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[1, 14], Rational[1, 7]}, {
        0.21428571428571427`, 0.07142857142857142, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[1, 14], 
         Rational[3, 14]}, {0.21428571428571427`, 0.07142857142857142, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[1, 14], Rational[3, 14]}, {
        0.21428571428571427`, 0.07142857142857142, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[1, 14], 
         Rational[2, 7]}, {0.21428571428571427`, 0.07142857142857142, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[1, 14], Rational[2, 7]}, {
        0.21428571428571427`, 0.07142857142857142, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[1, 14], 
         Rational[5, 14]}, {0.21428571428571427`, 0.07142857142857142, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[1, 14], Rational[5, 14]}, {
        0.21428571428571427`, 0.07142857142857142, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[1, 14], 
         Rational[3, 7]}, {0.21428571428571427`, 0.07142857142857142, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[1, 14], Rational[3, 7]}, {
        0.21428571428571427`, 0.07142857142857142, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[1, 14], 
         Rational[1, 2]}, {0.21428571428571427`, 0.07142857142857142, 0.5}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[1, 14], Rational[1, 2]}, {
        0.21428571428571427`, 0.07142857142857142, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[1, 7], 
         Rational[1, 14]}, {0.21428571428571427`, 0.14285714285714285`, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[1, 7], Rational[1, 14]}, {
        0.21428571428571427`, 0.14285714285714285`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[1, 7], 
         Rational[1, 7]}, {0.21428571428571427`, 0.14285714285714285`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[1, 7], Rational[1, 7]}, {
        0.21428571428571427`, 0.14285714285714285`, 
        0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[1, 7], 
         Rational[3, 14]}, {0.21428571428571427`, 0.14285714285714285`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[1, 7], Rational[3, 14]}, {
        0.21428571428571427`, 0.14285714285714285`, 
        0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[1, 7], 
         Rational[2, 7]}, {0.21428571428571427`, 0.14285714285714285`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[1, 7], Rational[2, 7]}, {
        0.21428571428571427`, 0.14285714285714285`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[1, 7], 
         Rational[5, 14]}, {0.21428571428571427`, 0.14285714285714285`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[1, 7], Rational[5, 14]}, {
        0.21428571428571427`, 0.14285714285714285`, 
        0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[1, 7], 
         Rational[3, 7]}, {0.21428571428571427`, 0.14285714285714285`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[1, 7], Rational[3, 7]}, {
        0.21428571428571427`, 0.14285714285714285`, 
        0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[1, 7], 
         Rational[1, 2]}, {0.21428571428571427`, 0.14285714285714285`, 0.5}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[1, 7], Rational[1, 2]}, {
        0.21428571428571427`, 0.14285714285714285`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[3, 14], 
         Rational[1, 14]}, {0.21428571428571427`, 0.21428571428571427`, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[3, 14], Rational[1, 14]}, {
        0.21428571428571427`, 0.21428571428571427`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[3, 14], 
         Rational[1, 7]}, {0.21428571428571427`, 0.21428571428571427`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[3, 14], Rational[1, 7]}, {
        0.21428571428571427`, 0.21428571428571427`, 
        0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[3, 14], 
         Rational[3, 14]}, {0.21428571428571427`, 0.21428571428571427`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[3, 14], Rational[3, 14]}, {
        0.21428571428571427`, 0.21428571428571427`, 
        0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[3, 14], 
         Rational[2, 7]}, {0.21428571428571427`, 0.21428571428571427`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[3, 14], Rational[2, 7]}, {
        0.21428571428571427`, 0.21428571428571427`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[3, 14], 
         Rational[5, 14]}, {0.21428571428571427`, 0.21428571428571427`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[3, 14], Rational[5, 14]}, {
        0.21428571428571427`, 0.21428571428571427`, 
        0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[3, 14], 
         Rational[3, 7]}, {0.21428571428571427`, 0.21428571428571427`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[3, 14], Rational[3, 7]}, {
        0.21428571428571427`, 0.21428571428571427`, 
        0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[3, 14], 
         Rational[1, 2]}, {0.21428571428571427`, 0.21428571428571427`, 0.5}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[3, 14], Rational[1, 2]}, {
        0.21428571428571427`, 0.21428571428571427`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[2, 7], 
         Rational[1, 14]}, {0.21428571428571427`, 0.2857142857142857, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[2, 7], Rational[1, 14]}, {
        0.21428571428571427`, 0.2857142857142857, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[2, 7], 
         Rational[1, 7]}, {0.21428571428571427`, 0.2857142857142857, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[2, 7], Rational[1, 7]}, {
        0.21428571428571427`, 0.2857142857142857, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[2, 7], 
         Rational[3, 14]}, {0.21428571428571427`, 0.2857142857142857, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[2, 7], Rational[3, 14]}, {
        0.21428571428571427`, 0.2857142857142857, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[2, 7], 
         Rational[2, 7]}, {0.21428571428571427`, 0.2857142857142857, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[2, 7], Rational[2, 7]}, {
        0.21428571428571427`, 0.2857142857142857, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[2, 7], 
         Rational[5, 14]}, {0.21428571428571427`, 0.2857142857142857, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[2, 7], Rational[5, 14]}, {
        0.21428571428571427`, 0.2857142857142857, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[2, 7], 
         Rational[3, 7]}, {0.21428571428571427`, 0.2857142857142857, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[2, 7], Rational[3, 7]}, {
        0.21428571428571427`, 0.2857142857142857, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[2, 7], 
         Rational[1, 2]}, {0.21428571428571427`, 0.2857142857142857, 0.5}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[2, 7], Rational[1, 2]}, {
        0.21428571428571427`, 0.2857142857142857, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[5, 14], 
         Rational[1, 14]}, {0.21428571428571427`, 0.35714285714285715`, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[5, 14], Rational[1, 14]}, {
        0.21428571428571427`, 0.35714285714285715`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[5, 14], 
         Rational[1, 7]}, {0.21428571428571427`, 0.35714285714285715`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[5, 14], Rational[1, 7]}, {
        0.21428571428571427`, 0.35714285714285715`, 
        0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[5, 14], 
         Rational[3, 14]}, {0.21428571428571427`, 0.35714285714285715`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[5, 14], Rational[3, 14]}, {
        0.21428571428571427`, 0.35714285714285715`, 
        0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[5, 14], 
         Rational[2, 7]}, {0.21428571428571427`, 0.35714285714285715`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[5, 14], Rational[2, 7]}, {
        0.21428571428571427`, 0.35714285714285715`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[5, 14], 
         Rational[5, 14]}, {0.21428571428571427`, 0.35714285714285715`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[5, 14], Rational[5, 14]}, {
        0.21428571428571427`, 0.35714285714285715`, 
        0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[5, 14], 
         Rational[3, 7]}, {0.21428571428571427`, 0.35714285714285715`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[5, 14], Rational[3, 7]}, {
        0.21428571428571427`, 0.35714285714285715`, 
        0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[5, 14], 
         Rational[1, 2]}, {0.21428571428571427`, 0.35714285714285715`, 0.5}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[5, 14], Rational[1, 2]}, {
        0.21428571428571427`, 0.35714285714285715`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[3, 7], 
         Rational[1, 14]}, {0.21428571428571427`, 0.42857142857142855`, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[3, 7], Rational[1, 14]}, {
        0.21428571428571427`, 0.42857142857142855`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[3, 7], 
         Rational[1, 7]}, {0.21428571428571427`, 0.42857142857142855`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[3, 7], Rational[1, 7]}, {
        0.21428571428571427`, 0.42857142857142855`, 
        0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[3, 7], 
         Rational[3, 14]}, {0.21428571428571427`, 0.42857142857142855`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[3, 7], Rational[3, 14]}, {
        0.21428571428571427`, 0.42857142857142855`, 
        0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[3, 7], 
         Rational[2, 7]}, {0.21428571428571427`, 0.42857142857142855`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[3, 7], Rational[2, 7]}, {
        0.21428571428571427`, 0.42857142857142855`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[3, 7], 
         Rational[5, 14]}, {0.21428571428571427`, 0.42857142857142855`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[3, 7], Rational[5, 14]}, {
        0.21428571428571427`, 0.42857142857142855`, 
        0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[3, 7], 
         Rational[3, 7]}, {0.21428571428571427`, 0.42857142857142855`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[3, 7], Rational[3, 7]}, {
        0.21428571428571427`, 0.42857142857142855`, 
        0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[3, 7], 
         Rational[1, 2]}, {0.21428571428571427`, 0.42857142857142855`, 0.5}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[3, 7], Rational[1, 2]}, {
        0.21428571428571427`, 0.42857142857142855`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[1, 2], 
         Rational[1, 14]}, {0.21428571428571427`, 0.5, 0.07142857142857142}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[1, 2], Rational[1, 14]}, {
        0.21428571428571427`, 0.5, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[1, 2], 
         Rational[1, 7]}, {0.21428571428571427`, 0.5, 0.14285714285714285`}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[1, 2], Rational[1, 7]}, {
        0.21428571428571427`, 0.5, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[1, 2], 
         Rational[3, 14]}, {0.21428571428571427`, 0.5, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[1, 2], Rational[3, 14]}, {
        0.21428571428571427`, 0.5, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[1, 2], 
         Rational[2, 7]}, {0.21428571428571427`, 0.5, 0.2857142857142857}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[1, 2], Rational[2, 7]}, {
        0.21428571428571427`, 0.5, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[1, 2], 
         Rational[5, 14]}, {0.21428571428571427`, 0.5, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[1, 2], Rational[5, 14]}, {
        0.21428571428571427`, 0.5, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[1, 2], 
         Rational[3, 7]}, {0.21428571428571427`, 0.5, 0.42857142857142855`}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[1, 2], Rational[3, 7]}, {
        0.21428571428571427`, 0.5, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 14], 
         Rational[1, 2], 
         Rational[1, 2]}, {0.21428571428571427`, 0.5, 0.5}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 14], Rational[1, 2], Rational[1, 2]}, {
        0.21428571428571427`, 0.5, 0.5}]]}}}, {{
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 14], 
         Rational[1, 14]}, {0.2857142857142857, 0.07142857142857142, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 14], Rational[1, 14]}, {
        0.2857142857142857, 0.07142857142857142, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 14], 
         Rational[1, 7]}, {0.2857142857142857, 0.07142857142857142, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 14], Rational[1, 7]}, {
        0.2857142857142857, 0.07142857142857142, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 14], 
         Rational[3, 14]}, {0.2857142857142857, 0.07142857142857142, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 14], Rational[3, 14]}, {
        0.2857142857142857, 0.07142857142857142, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 14], 
         Rational[2, 7]}, {0.2857142857142857, 0.07142857142857142, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 14], Rational[2, 7]}, {
        0.2857142857142857, 0.07142857142857142, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 14], 
         Rational[5, 14]}, {0.2857142857142857, 0.07142857142857142, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 14], Rational[5, 14]}, {
        0.2857142857142857, 0.07142857142857142, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 14], 
         Rational[3, 7]}, {0.2857142857142857, 0.07142857142857142, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 14], Rational[3, 7]}, {
        0.2857142857142857, 0.07142857142857142, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 14], 
         Rational[1, 2]}, {0.2857142857142857, 0.07142857142857142, 0.5}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 14], Rational[1, 2]}, {
        0.2857142857142857, 0.07142857142857142, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 7], 
         Rational[1, 14]}, {0.2857142857142857, 0.14285714285714285`, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 7], Rational[1, 14]}, {
        0.2857142857142857, 0.14285714285714285`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 7], 
         Rational[1, 7]}, {0.2857142857142857, 0.14285714285714285`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 7], Rational[1, 7]}, {
        0.2857142857142857, 0.14285714285714285`, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 7], 
         Rational[3, 14]}, {0.2857142857142857, 0.14285714285714285`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 7], Rational[3, 14]}, {
        0.2857142857142857, 0.14285714285714285`, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 7], 
         Rational[2, 7]}, {0.2857142857142857, 0.14285714285714285`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 7], Rational[2, 7]}, {
        0.2857142857142857, 0.14285714285714285`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 7], 
         Rational[5, 14]}, {0.2857142857142857, 0.14285714285714285`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 7], Rational[5, 14]}, {
        0.2857142857142857, 0.14285714285714285`, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 7], 
         Rational[3, 7]}, {0.2857142857142857, 0.14285714285714285`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 7], Rational[3, 7]}, {
        0.2857142857142857, 0.14285714285714285`, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 7], 
         Rational[1, 2]}, {0.2857142857142857, 0.14285714285714285`, 0.5}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 7], Rational[1, 2]}, {
        0.2857142857142857, 0.14285714285714285`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[3, 14], 
         Rational[1, 14]}, {0.2857142857142857, 0.21428571428571427`, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[3, 14], Rational[1, 14]}, {
        0.2857142857142857, 0.21428571428571427`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[3, 14], 
         Rational[1, 7]}, {0.2857142857142857, 0.21428571428571427`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[3, 14], Rational[1, 7]}, {
        0.2857142857142857, 0.21428571428571427`, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[3, 14], 
         Rational[3, 14]}, {0.2857142857142857, 0.21428571428571427`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[3, 14], Rational[3, 14]}, {
        0.2857142857142857, 0.21428571428571427`, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[3, 14], 
         Rational[2, 7]}, {0.2857142857142857, 0.21428571428571427`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[3, 14], Rational[2, 7]}, {
        0.2857142857142857, 0.21428571428571427`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[3, 14], 
         Rational[5, 14]}, {0.2857142857142857, 0.21428571428571427`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[3, 14], Rational[5, 14]}, {
        0.2857142857142857, 0.21428571428571427`, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[3, 14], 
         Rational[3, 7]}, {0.2857142857142857, 0.21428571428571427`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[3, 14], Rational[3, 7]}, {
        0.2857142857142857, 0.21428571428571427`, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[3, 14], 
         Rational[1, 2]}, {0.2857142857142857, 0.21428571428571427`, 0.5}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[3, 14], Rational[1, 2]}, {
        0.2857142857142857, 0.21428571428571427`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[2, 7], 
         Rational[1, 14]}, {0.2857142857142857, 0.2857142857142857, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[2, 7], Rational[1, 14]}, {
        0.2857142857142857, 0.2857142857142857, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[2, 7], 
         Rational[1, 7]}, {0.2857142857142857, 0.2857142857142857, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[2, 7], Rational[1, 7]}, {
        0.2857142857142857, 0.2857142857142857, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[2, 7], 
         Rational[3, 14]}, {0.2857142857142857, 0.2857142857142857, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[2, 7], Rational[3, 14]}, {
        0.2857142857142857, 0.2857142857142857, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[2, 7], 
         Rational[2, 7]}, {0.2857142857142857, 0.2857142857142857, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[2, 7], Rational[2, 7]}, {
        0.2857142857142857, 0.2857142857142857, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[2, 7], 
         Rational[5, 14]}, {0.2857142857142857, 0.2857142857142857, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[2, 7], Rational[5, 14]}, {
        0.2857142857142857, 0.2857142857142857, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[2, 7], 
         Rational[3, 7]}, {0.2857142857142857, 0.2857142857142857, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[2, 7], Rational[3, 7]}, {
        0.2857142857142857, 0.2857142857142857, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[2, 7], 
         Rational[1, 2]}, {0.2857142857142857, 0.2857142857142857, 0.5}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[2, 7], Rational[1, 2]}, {
        0.2857142857142857, 0.2857142857142857, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[5, 14], 
         Rational[1, 14]}, {0.2857142857142857, 0.35714285714285715`, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[5, 14], Rational[1, 14]}, {
        0.2857142857142857, 0.35714285714285715`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[5, 14], 
         Rational[1, 7]}, {0.2857142857142857, 0.35714285714285715`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[5, 14], Rational[1, 7]}, {
        0.2857142857142857, 0.35714285714285715`, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[5, 14], 
         Rational[3, 14]}, {0.2857142857142857, 0.35714285714285715`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[5, 14], Rational[3, 14]}, {
        0.2857142857142857, 0.35714285714285715`, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[5, 14], 
         Rational[2, 7]}, {0.2857142857142857, 0.35714285714285715`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[5, 14], Rational[2, 7]}, {
        0.2857142857142857, 0.35714285714285715`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[5, 14], 
         Rational[5, 14]}, {0.2857142857142857, 0.35714285714285715`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[5, 14], Rational[5, 14]}, {
        0.2857142857142857, 0.35714285714285715`, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[5, 14], 
         Rational[3, 7]}, {0.2857142857142857, 0.35714285714285715`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[5, 14], Rational[3, 7]}, {
        0.2857142857142857, 0.35714285714285715`, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[5, 14], 
         Rational[1, 2]}, {0.2857142857142857, 0.35714285714285715`, 0.5}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[5, 14], Rational[1, 2]}, {
        0.2857142857142857, 0.35714285714285715`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[3, 7], 
         Rational[1, 14]}, {0.2857142857142857, 0.42857142857142855`, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[3, 7], Rational[1, 14]}, {
        0.2857142857142857, 0.42857142857142855`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[3, 7], 
         Rational[1, 7]}, {0.2857142857142857, 0.42857142857142855`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[3, 7], Rational[1, 7]}, {
        0.2857142857142857, 0.42857142857142855`, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[3, 7], 
         Rational[3, 14]}, {0.2857142857142857, 0.42857142857142855`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[3, 7], Rational[3, 14]}, {
        0.2857142857142857, 0.42857142857142855`, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[3, 7], 
         Rational[2, 7]}, {0.2857142857142857, 0.42857142857142855`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[3, 7], Rational[2, 7]}, {
        0.2857142857142857, 0.42857142857142855`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[3, 7], 
         Rational[5, 14]}, {0.2857142857142857, 0.42857142857142855`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[3, 7], Rational[5, 14]}, {
        0.2857142857142857, 0.42857142857142855`, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[3, 7], 
         Rational[3, 7]}, {0.2857142857142857, 0.42857142857142855`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[3, 7], Rational[3, 7]}, {
        0.2857142857142857, 0.42857142857142855`, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[3, 7], 
         Rational[1, 2]}, {0.2857142857142857, 0.42857142857142855`, 0.5}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[3, 7], Rational[1, 2]}, {
        0.2857142857142857, 0.42857142857142855`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 2], 
         Rational[1, 14]}, {0.2857142857142857, 0.5, 0.07142857142857142}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 2], Rational[1, 14]}, {
        0.2857142857142857, 0.5, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 2], 
         Rational[1, 7]}, {0.2857142857142857, 0.5, 0.14285714285714285`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 2], Rational[1, 7]}, {
        0.2857142857142857, 0.5, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 2], 
         Rational[3, 14]}, {0.2857142857142857, 0.5, 0.21428571428571427`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 2], Rational[3, 14]}, {
        0.2857142857142857, 0.5, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 2], 
         Rational[2, 7]}, {0.2857142857142857, 0.5, 0.2857142857142857}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 2], Rational[2, 7]}, {
        0.2857142857142857, 0.5, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 2], 
         Rational[5, 14]}, {0.2857142857142857, 0.5, 0.35714285714285715`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 2], Rational[5, 14]}, {
        0.2857142857142857, 0.5, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 2], 
         Rational[3, 7]}, {0.2857142857142857, 0.5, 0.42857142857142855`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 2], Rational[3, 7]}, {
        0.2857142857142857, 0.5, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[2, 7], 
         Rational[1, 2], 
         Rational[1, 2]}, {0.2857142857142857, 0.5, 0.5}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[2, 7], Rational[1, 2], Rational[1, 2]}, {
        0.2857142857142857, 0.5, 0.5}]]}}}, {{
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[1, 14], 
         Rational[1, 14]}, {0.35714285714285715`, 0.07142857142857142, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[1, 14], Rational[1, 14]}, {
        0.35714285714285715`, 0.07142857142857142, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[1, 14], 
         Rational[1, 7]}, {0.35714285714285715`, 0.07142857142857142, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[1, 14], Rational[1, 7]}, {
        0.35714285714285715`, 0.07142857142857142, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[1, 14], 
         Rational[3, 14]}, {0.35714285714285715`, 0.07142857142857142, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[1, 14], Rational[3, 14]}, {
        0.35714285714285715`, 0.07142857142857142, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[1, 14], 
         Rational[2, 7]}, {0.35714285714285715`, 0.07142857142857142, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[1, 14], Rational[2, 7]}, {
        0.35714285714285715`, 0.07142857142857142, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[1, 14], 
         Rational[5, 14]}, {0.35714285714285715`, 0.07142857142857142, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[1, 14], Rational[5, 14]}, {
        0.35714285714285715`, 0.07142857142857142, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[1, 14], 
         Rational[3, 7]}, {0.35714285714285715`, 0.07142857142857142, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[1, 14], Rational[3, 7]}, {
        0.35714285714285715`, 0.07142857142857142, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[1, 14], 
         Rational[1, 2]}, {0.35714285714285715`, 0.07142857142857142, 0.5}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[1, 14], Rational[1, 2]}, {
        0.35714285714285715`, 0.07142857142857142, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[1, 7], 
         Rational[1, 14]}, {0.35714285714285715`, 0.14285714285714285`, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[1, 7], Rational[1, 14]}, {
        0.35714285714285715`, 0.14285714285714285`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[1, 7], 
         Rational[1, 7]}, {0.35714285714285715`, 0.14285714285714285`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[1, 7], Rational[1, 7]}, {
        0.35714285714285715`, 0.14285714285714285`, 
        0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[1, 7], 
         Rational[3, 14]}, {0.35714285714285715`, 0.14285714285714285`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[1, 7], Rational[3, 14]}, {
        0.35714285714285715`, 0.14285714285714285`, 
        0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[1, 7], 
         Rational[2, 7]}, {0.35714285714285715`, 0.14285714285714285`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[1, 7], Rational[2, 7]}, {
        0.35714285714285715`, 0.14285714285714285`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[1, 7], 
         Rational[5, 14]}, {0.35714285714285715`, 0.14285714285714285`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[1, 7], Rational[5, 14]}, {
        0.35714285714285715`, 0.14285714285714285`, 
        0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[1, 7], 
         Rational[3, 7]}, {0.35714285714285715`, 0.14285714285714285`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[1, 7], Rational[3, 7]}, {
        0.35714285714285715`, 0.14285714285714285`, 
        0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[1, 7], 
         Rational[1, 2]}, {0.35714285714285715`, 0.14285714285714285`, 0.5}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[1, 7], Rational[1, 2]}, {
        0.35714285714285715`, 0.14285714285714285`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[3, 14], 
         Rational[1, 14]}, {0.35714285714285715`, 0.21428571428571427`, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[3, 14], Rational[1, 14]}, {
        0.35714285714285715`, 0.21428571428571427`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[3, 14], 
         Rational[1, 7]}, {0.35714285714285715`, 0.21428571428571427`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[3, 14], Rational[1, 7]}, {
        0.35714285714285715`, 0.21428571428571427`, 
        0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[3, 14], 
         Rational[3, 14]}, {0.35714285714285715`, 0.21428571428571427`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[3, 14], Rational[3, 14]}, {
        0.35714285714285715`, 0.21428571428571427`, 
        0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[3, 14], 
         Rational[2, 7]}, {0.35714285714285715`, 0.21428571428571427`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[3, 14], Rational[2, 7]}, {
        0.35714285714285715`, 0.21428571428571427`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[3, 14], 
         Rational[5, 14]}, {0.35714285714285715`, 0.21428571428571427`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[3, 14], Rational[5, 14]}, {
        0.35714285714285715`, 0.21428571428571427`, 
        0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[3, 14], 
         Rational[3, 7]}, {0.35714285714285715`, 0.21428571428571427`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[3, 14], Rational[3, 7]}, {
        0.35714285714285715`, 0.21428571428571427`, 
        0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[3, 14], 
         Rational[1, 2]}, {0.35714285714285715`, 0.21428571428571427`, 0.5}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[3, 14], Rational[1, 2]}, {
        0.35714285714285715`, 0.21428571428571427`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[2, 7], 
         Rational[1, 14]}, {0.35714285714285715`, 0.2857142857142857, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[2, 7], Rational[1, 14]}, {
        0.35714285714285715`, 0.2857142857142857, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[2, 7], 
         Rational[1, 7]}, {0.35714285714285715`, 0.2857142857142857, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[2, 7], Rational[1, 7]}, {
        0.35714285714285715`, 0.2857142857142857, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[2, 7], 
         Rational[3, 14]}, {0.35714285714285715`, 0.2857142857142857, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[2, 7], Rational[3, 14]}, {
        0.35714285714285715`, 0.2857142857142857, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[2, 7], 
         Rational[2, 7]}, {0.35714285714285715`, 0.2857142857142857, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[2, 7], Rational[2, 7]}, {
        0.35714285714285715`, 0.2857142857142857, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[2, 7], 
         Rational[5, 14]}, {0.35714285714285715`, 0.2857142857142857, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[2, 7], Rational[5, 14]}, {
        0.35714285714285715`, 0.2857142857142857, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[2, 7], 
         Rational[3, 7]}, {0.35714285714285715`, 0.2857142857142857, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[2, 7], Rational[3, 7]}, {
        0.35714285714285715`, 0.2857142857142857, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[2, 7], 
         Rational[1, 2]}, {0.35714285714285715`, 0.2857142857142857, 0.5}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[2, 7], Rational[1, 2]}, {
        0.35714285714285715`, 0.2857142857142857, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[5, 14], 
         Rational[1, 14]}, {0.35714285714285715`, 0.35714285714285715`, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[5, 14], Rational[1, 14]}, {
        0.35714285714285715`, 0.35714285714285715`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[5, 14], 
         Rational[1, 7]}, {0.35714285714285715`, 0.35714285714285715`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[5, 14], Rational[1, 7]}, {
        0.35714285714285715`, 0.35714285714285715`, 
        0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[5, 14], 
         Rational[3, 14]}, {0.35714285714285715`, 0.35714285714285715`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[5, 14], Rational[3, 14]}, {
        0.35714285714285715`, 0.35714285714285715`, 
        0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[5, 14], 
         Rational[2, 7]}, {0.35714285714285715`, 0.35714285714285715`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[5, 14], Rational[2, 7]}, {
        0.35714285714285715`, 0.35714285714285715`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[5, 14], 
         Rational[5, 14]}, {0.35714285714285715`, 0.35714285714285715`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[5, 14], Rational[5, 14]}, {
        0.35714285714285715`, 0.35714285714285715`, 
        0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[5, 14], 
         Rational[3, 7]}, {0.35714285714285715`, 0.35714285714285715`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[5, 14], Rational[3, 7]}, {
        0.35714285714285715`, 0.35714285714285715`, 
        0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[5, 14], 
         Rational[1, 2]}, {0.35714285714285715`, 0.35714285714285715`, 0.5}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[5, 14], Rational[1, 2]}, {
        0.35714285714285715`, 0.35714285714285715`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[3, 7], 
         Rational[1, 14]}, {0.35714285714285715`, 0.42857142857142855`, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[3, 7], Rational[1, 14]}, {
        0.35714285714285715`, 0.42857142857142855`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[3, 7], 
         Rational[1, 7]}, {0.35714285714285715`, 0.42857142857142855`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[3, 7], Rational[1, 7]}, {
        0.35714285714285715`, 0.42857142857142855`, 
        0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[3, 7], 
         Rational[3, 14]}, {0.35714285714285715`, 0.42857142857142855`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[3, 7], Rational[3, 14]}, {
        0.35714285714285715`, 0.42857142857142855`, 
        0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[3, 7], 
         Rational[2, 7]}, {0.35714285714285715`, 0.42857142857142855`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[3, 7], Rational[2, 7]}, {
        0.35714285714285715`, 0.42857142857142855`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[3, 7], 
         Rational[5, 14]}, {0.35714285714285715`, 0.42857142857142855`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[3, 7], Rational[5, 14]}, {
        0.35714285714285715`, 0.42857142857142855`, 
        0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[3, 7], 
         Rational[3, 7]}, {0.35714285714285715`, 0.42857142857142855`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[3, 7], Rational[3, 7]}, {
        0.35714285714285715`, 0.42857142857142855`, 
        0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[3, 7], 
         Rational[1, 2]}, {0.35714285714285715`, 0.42857142857142855`, 0.5}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[3, 7], Rational[1, 2]}, {
        0.35714285714285715`, 0.42857142857142855`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[1, 2], 
         Rational[1, 14]}, {0.35714285714285715`, 0.5, 0.07142857142857142}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[1, 2], Rational[1, 14]}, {
        0.35714285714285715`, 0.5, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[1, 2], 
         Rational[1, 7]}, {0.35714285714285715`, 0.5, 0.14285714285714285`}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[1, 2], Rational[1, 7]}, {
        0.35714285714285715`, 0.5, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[1, 2], 
         Rational[3, 14]}, {0.35714285714285715`, 0.5, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[1, 2], Rational[3, 14]}, {
        0.35714285714285715`, 0.5, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[1, 2], 
         Rational[2, 7]}, {0.35714285714285715`, 0.5, 0.2857142857142857}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[1, 2], Rational[2, 7]}, {
        0.35714285714285715`, 0.5, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[1, 2], 
         Rational[5, 14]}, {0.35714285714285715`, 0.5, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[1, 2], Rational[5, 14]}, {
        0.35714285714285715`, 0.5, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[1, 2], 
         Rational[3, 7]}, {0.35714285714285715`, 0.5, 0.42857142857142855`}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[1, 2], Rational[3, 7]}, {
        0.35714285714285715`, 0.5, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[5, 14], 
         Rational[1, 2], 
         Rational[1, 2]}, {0.35714285714285715`, 0.5, 0.5}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[5, 14], Rational[1, 2], Rational[1, 2]}, {
        0.35714285714285715`, 0.5, 0.5}]]}}}, {{
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 14], 
         Rational[1, 14]}, {0.42857142857142855`, 0.07142857142857142, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 14], Rational[1, 14]}, {
        0.42857142857142855`, 0.07142857142857142, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 14], 
         Rational[1, 7]}, {0.42857142857142855`, 0.07142857142857142, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 14], Rational[1, 7]}, {
        0.42857142857142855`, 0.07142857142857142, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 14], 
         Rational[3, 14]}, {0.42857142857142855`, 0.07142857142857142, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 14], Rational[3, 14]}, {
        0.42857142857142855`, 0.07142857142857142, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 14], 
         Rational[2, 7]}, {0.42857142857142855`, 0.07142857142857142, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 14], Rational[2, 7]}, {
        0.42857142857142855`, 0.07142857142857142, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 14], 
         Rational[5, 14]}, {0.42857142857142855`, 0.07142857142857142, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 14], Rational[5, 14]}, {
        0.42857142857142855`, 0.07142857142857142, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 14], 
         Rational[3, 7]}, {0.42857142857142855`, 0.07142857142857142, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 14], Rational[3, 7]}, {
        0.42857142857142855`, 0.07142857142857142, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 14], 
         Rational[1, 2]}, {0.42857142857142855`, 0.07142857142857142, 0.5}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 14], Rational[1, 2]}, {
        0.42857142857142855`, 0.07142857142857142, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 7], 
         Rational[1, 14]}, {0.42857142857142855`, 0.14285714285714285`, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 7], Rational[1, 14]}, {
        0.42857142857142855`, 0.14285714285714285`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 7], 
         Rational[1, 7]}, {0.42857142857142855`, 0.14285714285714285`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 7], Rational[1, 7]}, {
        0.42857142857142855`, 0.14285714285714285`, 
        0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 7], 
         Rational[3, 14]}, {0.42857142857142855`, 0.14285714285714285`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 7], Rational[3, 14]}, {
        0.42857142857142855`, 0.14285714285714285`, 
        0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 7], 
         Rational[2, 7]}, {0.42857142857142855`, 0.14285714285714285`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 7], Rational[2, 7]}, {
        0.42857142857142855`, 0.14285714285714285`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 7], 
         Rational[5, 14]}, {0.42857142857142855`, 0.14285714285714285`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 7], Rational[5, 14]}, {
        0.42857142857142855`, 0.14285714285714285`, 
        0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 7], 
         Rational[3, 7]}, {0.42857142857142855`, 0.14285714285714285`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 7], Rational[3, 7]}, {
        0.42857142857142855`, 0.14285714285714285`, 
        0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 7], 
         Rational[1, 2]}, {0.42857142857142855`, 0.14285714285714285`, 0.5}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 7], Rational[1, 2]}, {
        0.42857142857142855`, 0.14285714285714285`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[3, 14], 
         Rational[1, 14]}, {0.42857142857142855`, 0.21428571428571427`, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[3, 14], Rational[1, 14]}, {
        0.42857142857142855`, 0.21428571428571427`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[3, 14], 
         Rational[1, 7]}, {0.42857142857142855`, 0.21428571428571427`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[3, 14], Rational[1, 7]}, {
        0.42857142857142855`, 0.21428571428571427`, 
        0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[3, 14], 
         Rational[3, 14]}, {0.42857142857142855`, 0.21428571428571427`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[3, 14], Rational[3, 14]}, {
        0.42857142857142855`, 0.21428571428571427`, 
        0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[3, 14], 
         Rational[2, 7]}, {0.42857142857142855`, 0.21428571428571427`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[3, 14], Rational[2, 7]}, {
        0.42857142857142855`, 0.21428571428571427`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[3, 14], 
         Rational[5, 14]}, {0.42857142857142855`, 0.21428571428571427`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[3, 14], Rational[5, 14]}, {
        0.42857142857142855`, 0.21428571428571427`, 
        0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[3, 14], 
         Rational[3, 7]}, {0.42857142857142855`, 0.21428571428571427`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[3, 14], Rational[3, 7]}, {
        0.42857142857142855`, 0.21428571428571427`, 
        0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[3, 14], 
         Rational[1, 2]}, {0.42857142857142855`, 0.21428571428571427`, 0.5}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[3, 14], Rational[1, 2]}, {
        0.42857142857142855`, 0.21428571428571427`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[2, 7], 
         Rational[1, 14]}, {0.42857142857142855`, 0.2857142857142857, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[2, 7], Rational[1, 14]}, {
        0.42857142857142855`, 0.2857142857142857, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[2, 7], 
         Rational[1, 7]}, {0.42857142857142855`, 0.2857142857142857, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[2, 7], Rational[1, 7]}, {
        0.42857142857142855`, 0.2857142857142857, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[2, 7], 
         Rational[3, 14]}, {0.42857142857142855`, 0.2857142857142857, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[2, 7], Rational[3, 14]}, {
        0.42857142857142855`, 0.2857142857142857, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[2, 7], 
         Rational[2, 7]}, {0.42857142857142855`, 0.2857142857142857, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[2, 7], Rational[2, 7]}, {
        0.42857142857142855`, 0.2857142857142857, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[2, 7], 
         Rational[5, 14]}, {0.42857142857142855`, 0.2857142857142857, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[2, 7], Rational[5, 14]}, {
        0.42857142857142855`, 0.2857142857142857, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[2, 7], 
         Rational[3, 7]}, {0.42857142857142855`, 0.2857142857142857, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[2, 7], Rational[3, 7]}, {
        0.42857142857142855`, 0.2857142857142857, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[2, 7], 
         Rational[1, 2]}, {0.42857142857142855`, 0.2857142857142857, 0.5}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[2, 7], Rational[1, 2]}, {
        0.42857142857142855`, 0.2857142857142857, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[5, 14], 
         Rational[1, 14]}, {0.42857142857142855`, 0.35714285714285715`, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[5, 14], Rational[1, 14]}, {
        0.42857142857142855`, 0.35714285714285715`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[5, 14], 
         Rational[1, 7]}, {0.42857142857142855`, 0.35714285714285715`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[5, 14], Rational[1, 7]}, {
        0.42857142857142855`, 0.35714285714285715`, 
        0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[5, 14], 
         Rational[3, 14]}, {0.42857142857142855`, 0.35714285714285715`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[5, 14], Rational[3, 14]}, {
        0.42857142857142855`, 0.35714285714285715`, 
        0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[5, 14], 
         Rational[2, 7]}, {0.42857142857142855`, 0.35714285714285715`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[5, 14], Rational[2, 7]}, {
        0.42857142857142855`, 0.35714285714285715`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[5, 14], 
         Rational[5, 14]}, {0.42857142857142855`, 0.35714285714285715`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[5, 14], Rational[5, 14]}, {
        0.42857142857142855`, 0.35714285714285715`, 
        0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[5, 14], 
         Rational[3, 7]}, {0.42857142857142855`, 0.35714285714285715`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[5, 14], Rational[3, 7]}, {
        0.42857142857142855`, 0.35714285714285715`, 
        0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[5, 14], 
         Rational[1, 2]}, {0.42857142857142855`, 0.35714285714285715`, 0.5}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[5, 14], Rational[1, 2]}, {
        0.42857142857142855`, 0.35714285714285715`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[3, 7], 
         Rational[1, 14]}, {0.42857142857142855`, 0.42857142857142855`, 
        0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[3, 7], Rational[1, 14]}, {
        0.42857142857142855`, 0.42857142857142855`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[3, 7], 
         Rational[1, 7]}, {0.42857142857142855`, 0.42857142857142855`, 
        0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[3, 7], Rational[1, 7]}, {
        0.42857142857142855`, 0.42857142857142855`, 
        0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[3, 7], 
         Rational[3, 14]}, {0.42857142857142855`, 0.42857142857142855`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[3, 7], Rational[3, 14]}, {
        0.42857142857142855`, 0.42857142857142855`, 
        0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[3, 7], 
         Rational[2, 7]}, {0.42857142857142855`, 0.42857142857142855`, 
        0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[3, 7], Rational[2, 7]}, {
        0.42857142857142855`, 0.42857142857142855`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[3, 7], 
         Rational[5, 14]}, {0.42857142857142855`, 0.42857142857142855`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[3, 7], Rational[5, 14]}, {
        0.42857142857142855`, 0.42857142857142855`, 
        0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[3, 7], 
         Rational[3, 7]}, {0.42857142857142855`, 0.42857142857142855`, 
        0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[3, 7], Rational[3, 7]}, {
        0.42857142857142855`, 0.42857142857142855`, 
        0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[3, 7], 
         Rational[1, 2]}, {0.42857142857142855`, 0.42857142857142855`, 0.5}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[3, 7], Rational[1, 2]}, {
        0.42857142857142855`, 0.42857142857142855`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 2], 
         Rational[1, 14]}, {0.42857142857142855`, 0.5, 0.07142857142857142}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 2], Rational[1, 14]}, {
        0.42857142857142855`, 0.5, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 2], 
         Rational[1, 7]}, {0.42857142857142855`, 0.5, 0.14285714285714285`}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 2], Rational[1, 7]}, {
        0.42857142857142855`, 0.5, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 2], 
         Rational[3, 14]}, {0.42857142857142855`, 0.5, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 2], Rational[3, 14]}, {
        0.42857142857142855`, 0.5, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 2], 
         Rational[2, 7]}, {0.42857142857142855`, 0.5, 0.2857142857142857}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 2], Rational[2, 7]}, {
        0.42857142857142855`, 0.5, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 2], 
         Rational[5, 14]}, {0.42857142857142855`, 0.5, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 2], Rational[5, 14]}, {
        0.42857142857142855`, 0.5, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 2], 
         Rational[3, 7]}, {0.42857142857142855`, 0.5, 0.42857142857142855`}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 2], Rational[3, 7]}, {
        0.42857142857142855`, 0.5, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[3, 7], 
         Rational[1, 2], 
         Rational[1, 2]}, {0.42857142857142855`, 0.5, 0.5}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[3, 7], Rational[1, 2], Rational[1, 2]}, {
        0.42857142857142855`, 0.5, 0.5}]]}}}, {{
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[1, 14], 
         Rational[1, 14]}, {0.5, 0.07142857142857142, 0.07142857142857142}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[1, 14], Rational[1, 14]}, {0.5, 
        0.07142857142857142, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[1, 14], 
         Rational[1, 7]}, {0.5, 0.07142857142857142, 0.14285714285714285`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[1, 14], Rational[1, 7]}, {0.5, 
        0.07142857142857142, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[1, 14], 
         Rational[3, 14]}, {0.5, 0.07142857142857142, 0.21428571428571427`}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[1, 14], Rational[3, 14]}, {0.5, 
        0.07142857142857142, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[1, 14], 
         Rational[2, 7]}, {0.5, 0.07142857142857142, 0.2857142857142857}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[1, 14], Rational[2, 7]}, {0.5, 
        0.07142857142857142, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[1, 14], 
         Rational[5, 14]}, {0.5, 0.07142857142857142, 0.35714285714285715`}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[1, 14], Rational[5, 14]}, {0.5, 
        0.07142857142857142, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[1, 14], 
         Rational[3, 7]}, {0.5, 0.07142857142857142, 0.42857142857142855`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[1, 14], Rational[3, 7]}, {0.5, 
        0.07142857142857142, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[1, 14], 
         Rational[1, 2]}, {0.5, 0.07142857142857142, 0.5}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[1, 14], Rational[1, 2]}, {0.5, 
        0.07142857142857142, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[1, 7], 
         Rational[1, 14]}, {0.5, 0.14285714285714285`, 0.07142857142857142}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[1, 7], Rational[1, 14]}, {0.5, 
        0.14285714285714285`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[1, 7], 
         Rational[1, 7]}, {0.5, 0.14285714285714285`, 0.14285714285714285`}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[1, 7], Rational[1, 7]}, {0.5, 
        0.14285714285714285`, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[1, 7], 
         Rational[3, 14]}, {0.5, 0.14285714285714285`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[1, 7], Rational[3, 14]}, {0.5, 
        0.14285714285714285`, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[1, 7], 
         Rational[2, 7]}, {0.5, 0.14285714285714285`, 0.2857142857142857}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[1, 7], Rational[2, 7]}, {0.5, 
        0.14285714285714285`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[1, 7], 
         Rational[5, 14]}, {0.5, 0.14285714285714285`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[1, 7], Rational[5, 14]}, {0.5, 
        0.14285714285714285`, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[1, 7], 
         Rational[3, 7]}, {0.5, 0.14285714285714285`, 0.42857142857142855`}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[1, 7], Rational[3, 7]}, {0.5, 
        0.14285714285714285`, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[1, 7], 
         Rational[1, 2]}, {0.5, 0.14285714285714285`, 0.5}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[1, 7], Rational[1, 2]}, {0.5, 
        0.14285714285714285`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[3, 14], 
         Rational[1, 14]}, {0.5, 0.21428571428571427`, 0.07142857142857142}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[3, 14], Rational[1, 14]}, {0.5, 
        0.21428571428571427`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[3, 14], 
         Rational[1, 7]}, {0.5, 0.21428571428571427`, 0.14285714285714285`}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[3, 14], Rational[1, 7]}, {0.5, 
        0.21428571428571427`, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[3, 14], 
         Rational[3, 14]}, {0.5, 0.21428571428571427`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[3, 14], Rational[3, 14]}, {0.5, 
        0.21428571428571427`, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[3, 14], 
         Rational[2, 7]}, {0.5, 0.21428571428571427`, 0.2857142857142857}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[3, 14], Rational[2, 7]}, {0.5, 
        0.21428571428571427`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[3, 14], 
         Rational[5, 14]}, {0.5, 0.21428571428571427`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[3, 14], Rational[5, 14]}, {0.5, 
        0.21428571428571427`, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[3, 14], 
         Rational[3, 7]}, {0.5, 0.21428571428571427`, 0.42857142857142855`}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[3, 14], Rational[3, 7]}, {0.5, 
        0.21428571428571427`, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[3, 14], 
         Rational[1, 2]}, {0.5, 0.21428571428571427`, 0.5}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[3, 14], Rational[1, 2]}, {0.5, 
        0.21428571428571427`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[2, 7], 
         Rational[1, 14]}, {0.5, 0.2857142857142857, 0.07142857142857142}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[2, 7], Rational[1, 14]}, {0.5, 
        0.2857142857142857, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[2, 7], 
         Rational[1, 7]}, {0.5, 0.2857142857142857, 0.14285714285714285`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[2, 7], Rational[1, 7]}, {0.5, 
        0.2857142857142857, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[2, 7], 
         Rational[3, 14]}, {0.5, 0.2857142857142857, 0.21428571428571427`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[2, 7], Rational[3, 14]}, {0.5, 
        0.2857142857142857, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[2, 7], 
         Rational[2, 7]}, {0.5, 0.2857142857142857, 0.2857142857142857}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[2, 7], Rational[2, 7]}, {0.5, 
        0.2857142857142857, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[2, 7], 
         Rational[5, 14]}, {0.5, 0.2857142857142857, 0.35714285714285715`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[2, 7], Rational[5, 14]}, {0.5, 
        0.2857142857142857, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[2, 7], 
         Rational[3, 7]}, {0.5, 0.2857142857142857, 0.42857142857142855`}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[2, 7], Rational[3, 7]}, {0.5, 
        0.2857142857142857, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[2, 7], 
         Rational[1, 2]}, {0.5, 0.2857142857142857, 0.5}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[2, 7], Rational[1, 2]}, {0.5, 
        0.2857142857142857, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[5, 14], 
         Rational[1, 14]}, {0.5, 0.35714285714285715`, 0.07142857142857142}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[5, 14], Rational[1, 14]}, {0.5, 
        0.35714285714285715`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[5, 14], 
         Rational[1, 7]}, {0.5, 0.35714285714285715`, 0.14285714285714285`}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[5, 14], Rational[1, 7]}, {0.5, 
        0.35714285714285715`, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[5, 14], 
         Rational[3, 14]}, {0.5, 0.35714285714285715`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[5, 14], Rational[3, 14]}, {0.5, 
        0.35714285714285715`, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[5, 14], 
         Rational[2, 7]}, {0.5, 0.35714285714285715`, 0.2857142857142857}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[5, 14], Rational[2, 7]}, {0.5, 
        0.35714285714285715`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[5, 14], 
         Rational[5, 14]}, {0.5, 0.35714285714285715`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[5, 14], Rational[5, 14]}, {0.5, 
        0.35714285714285715`, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[5, 14], 
         Rational[3, 7]}, {0.5, 0.35714285714285715`, 0.42857142857142855`}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[5, 14], Rational[3, 7]}, {0.5, 
        0.35714285714285715`, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[5, 14], 
         Rational[1, 2]}, {0.5, 0.35714285714285715`, 0.5}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[5, 14], Rational[1, 2]}, {0.5, 
        0.35714285714285715`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[3, 7], 
         Rational[1, 14]}, {0.5, 0.42857142857142855`, 0.07142857142857142}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[3, 7], Rational[1, 14]}, {0.5, 
        0.42857142857142855`, 0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[3, 7], 
         Rational[1, 7]}, {0.5, 0.42857142857142855`, 0.14285714285714285`}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[3, 7], Rational[1, 7]}, {0.5, 
        0.42857142857142855`, 0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[3, 7], 
         Rational[3, 14]}, {0.5, 0.42857142857142855`, 
        0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[3, 7], Rational[3, 14]}, {0.5, 
        0.42857142857142855`, 0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[3, 7], 
         Rational[2, 7]}, {0.5, 0.42857142857142855`, 0.2857142857142857}]], 
      Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[3, 7], Rational[2, 7]}, {0.5, 
        0.42857142857142855`, 0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[3, 7], 
         Rational[5, 14]}, {0.5, 0.42857142857142855`, 
        0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[3, 7], Rational[5, 14]}, {0.5, 
        0.42857142857142855`, 0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[3, 7], 
         Rational[3, 7]}, {0.5, 0.42857142857142855`, 0.42857142857142855`}]],
       Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[3, 7], Rational[3, 7]}, {0.5, 
        0.42857142857142855`, 0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[3, 7], 
         Rational[1, 2]}, {0.5, 0.42857142857142855`, 0.5}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[3, 7], Rational[1, 2]}, {0.5, 
        0.42857142857142855`, 0.5}]]}}, {
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[1, 2], 
         Rational[1, 14]}, {0.5, 0.5, 0.07142857142857142}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[1, 2], Rational[1, 14]}, {0.5, 0.5, 
        0.07142857142857142}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[1, 2], 
         Rational[1, 7]}, {0.5, 0.5, 0.14285714285714285`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[1, 2], Rational[1, 7]}, {0.5, 0.5, 
        0.14285714285714285`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[1, 2], 
         Rational[3, 14]}, {0.5, 0.5, 0.21428571428571427`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[1, 2], Rational[3, 14]}, {0.5, 0.5, 
        0.21428571428571427`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[1, 2], 
         Rational[2, 7]}, {0.5, 0.5, 0.2857142857142857}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[1, 2], Rational[2, 7]}, {0.5, 0.5, 
        0.2857142857142857}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[1, 2], 
         Rational[5, 14]}, {0.5, 0.5, 0.35714285714285715`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[1, 2], Rational[5, 14]}, {0.5, 0.5, 
        0.35714285714285715`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[1, 2], 
         Rational[3, 7]}, {0.5, 0.5, 0.42857142857142855`}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[1, 2], Rational[3, 7]}, {0.5, 0.5, 
        0.42857142857142855`}]]}, 
     {RGBColor[
       NCache[{
         Rational[1, 2], 
         Rational[1, 2], 
         Rational[1, 2]}, {0.5, 0.5, 0.5}]], Opacity[0.5], 
      CuboidBox[
       NCache[{Rational[1, 2], Rational[1, 2], Rational[1, 2]}, {0.5, 0.5, 
        0.5}]]}}}},
  Boxed->False,
  ImageSize->200]], "Output",
 CellChangeTimes->{3.6949655983650293`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"l", ",", 
     RowBox[{"grid", "/.", 
      RowBox[{"ImageSize", "\[Rule]", "200"}]}]}], "}"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.694965477254704*^9, 3.694965531765801*^9}}],

Cell[BoxData[
 Graphics3DBox[{{
    GraphicsComplex3DBox[{{-1, -1, -1}, {-1, -1, 1}, {-1, 1, -1}, {-1, 1, 
     1}, {1, -1, -1}, {1, -1, 1}, {1, 1, -1}, {1, 1, 1}, {0, 0, 1}, {1, 0, 
     0}, {0, 1, 0}, {-1, 0, 0}, {0, 0, -1}, {0, -1, 0}}, {
      {Opacity[0.1], EdgeForm[GrayLevel[0.8]], 
       Polygon3DBox[{{8, 4, 2, 6}, {8, 6, 5, 7}, {8, 7, 3, 4}, {4, 3, 1, 2}, {
        1, 3, 7, 5}, {2, 1, 5, 6}}]}, 
      {GrayLevel[0.8], 
       Line3DBox[{{9, 8}, {9, 4}, {9, 2}, {9, 6}, {10, 8}, {10, 6}, {10, 5}, {
        10, 7}, {11, 8}, {11, 7}, {11, 3}, {11, 4}, {12, 4}, {12, 3}, {12, 
        1}, {12, 2}, {13, 1}, {13, 3}, {13, 7}, {13, 5}, {14, 2}, {14, 1}, {
        14, 5}, {14, 6}}]}}], 
    {GrayLevel[0], Specularity[
      GrayLevel[1], 5], SphereBox[{-1, -1, -1}, 0.06], 
     SphereBox[{-1, -1, 1}, 0.06], SphereBox[{-1, 1, -1}, 0.06], 
     SphereBox[{-1, 1, 1}, 0.06], SphereBox[{1, -1, -1}, 0.06], 
     SphereBox[{1, -1, 1}, 0.06], SphereBox[{1, 1, -1}, 0.06], 
     SphereBox[{1, 1, 1}, 0.06], SphereBox[{0, 0, 1}, 0.06], 
     SphereBox[{1, 0, 0}, 0.06], SphereBox[{0, 1, 0}, 0.06], 
     SphereBox[{-1, 0, 0}, 0.06], SphereBox[{0, 0, -1}, 0.06], 
     SphereBox[{0, -1, 0}, 0.06]}}, {{{
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[1, 14], 
          Rational[1, 14]}, {0.07142857142857142, 0.07142857142857142, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[1, 14], Rational[1, 14]}, {
         0.07142857142857142, 0.07142857142857142, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[1, 14], 
          Rational[1, 7]}, {0.07142857142857142, 0.07142857142857142, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[1, 14], Rational[1, 7]}, {
         0.07142857142857142, 0.07142857142857142, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[1, 14], 
          Rational[3, 14]}, {0.07142857142857142, 0.07142857142857142, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[1, 14], Rational[3, 14]}, {
         0.07142857142857142, 0.07142857142857142, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[1, 14], 
          Rational[2, 7]}, {0.07142857142857142, 0.07142857142857142, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[1, 14], Rational[2, 7]}, {
         0.07142857142857142, 0.07142857142857142, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[1, 14], 
          Rational[5, 14]}, {0.07142857142857142, 0.07142857142857142, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[1, 14], Rational[5, 14]}, {
         0.07142857142857142, 0.07142857142857142, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[1, 14], 
          Rational[3, 7]}, {0.07142857142857142, 0.07142857142857142, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[1, 14], Rational[3, 7]}, {
         0.07142857142857142, 0.07142857142857142, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[1, 14], 
          Rational[1, 2]}, {0.07142857142857142, 0.07142857142857142, 0.5}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[1, 14], Rational[1, 2]}, {
         0.07142857142857142, 0.07142857142857142, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[1, 7], 
          Rational[1, 14]}, {0.07142857142857142, 0.14285714285714285`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[1, 7], Rational[1, 14]}, {
         0.07142857142857142, 0.14285714285714285`, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[1, 7], 
          Rational[1, 7]}, {0.07142857142857142, 0.14285714285714285`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[1, 7], Rational[1, 7]}, {
         0.07142857142857142, 0.14285714285714285`, 
         0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[1, 7], 
          Rational[3, 14]}, {0.07142857142857142, 0.14285714285714285`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[1, 7], Rational[3, 14]}, {
         0.07142857142857142, 0.14285714285714285`, 
         0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[1, 7], 
          Rational[2, 7]}, {0.07142857142857142, 0.14285714285714285`, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[1, 7], Rational[2, 7]}, {
         0.07142857142857142, 0.14285714285714285`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[1, 7], 
          Rational[5, 14]}, {0.07142857142857142, 0.14285714285714285`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[1, 7], Rational[5, 14]}, {
         0.07142857142857142, 0.14285714285714285`, 
         0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[1, 7], 
          Rational[3, 7]}, {0.07142857142857142, 0.14285714285714285`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[1, 7], Rational[3, 7]}, {
         0.07142857142857142, 0.14285714285714285`, 
         0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[1, 7], 
          Rational[1, 2]}, {0.07142857142857142, 0.14285714285714285`, 0.5}]],
        Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[1, 7], Rational[1, 2]}, {
         0.07142857142857142, 0.14285714285714285`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[3, 14], 
          Rational[1, 14]}, {0.07142857142857142, 0.21428571428571427`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[3, 14], Rational[1, 14]}, {
         0.07142857142857142, 0.21428571428571427`, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[3, 14], 
          Rational[1, 7]}, {0.07142857142857142, 0.21428571428571427`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[3, 14], Rational[1, 7]}, {
         0.07142857142857142, 0.21428571428571427`, 
         0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[3, 14], 
          Rational[3, 14]}, {0.07142857142857142, 0.21428571428571427`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[3, 14], Rational[3, 14]}, {
         0.07142857142857142, 0.21428571428571427`, 
         0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[3, 14], 
          Rational[2, 7]}, {0.07142857142857142, 0.21428571428571427`, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[3, 14], Rational[2, 7]}, {
         0.07142857142857142, 0.21428571428571427`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[3, 14], 
          Rational[5, 14]}, {0.07142857142857142, 0.21428571428571427`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[3, 14], Rational[5, 14]}, {
         0.07142857142857142, 0.21428571428571427`, 
         0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[3, 14], 
          Rational[3, 7]}, {0.07142857142857142, 0.21428571428571427`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[3, 14], Rational[3, 7]}, {
         0.07142857142857142, 0.21428571428571427`, 
         0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[3, 14], 
          Rational[1, 2]}, {0.07142857142857142, 0.21428571428571427`, 0.5}]],
        Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[3, 14], Rational[1, 2]}, {
         0.07142857142857142, 0.21428571428571427`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[2, 7], 
          Rational[1, 14]}, {0.07142857142857142, 0.2857142857142857, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[2, 7], Rational[1, 14]}, {
         0.07142857142857142, 0.2857142857142857, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[2, 7], 
          Rational[1, 7]}, {0.07142857142857142, 0.2857142857142857, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[2, 7], Rational[1, 7]}, {
         0.07142857142857142, 0.2857142857142857, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[2, 7], 
          Rational[3, 14]}, {0.07142857142857142, 0.2857142857142857, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[2, 7], Rational[3, 14]}, {
         0.07142857142857142, 0.2857142857142857, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[2, 7], 
          Rational[2, 7]}, {0.07142857142857142, 0.2857142857142857, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[2, 7], Rational[2, 7]}, {
         0.07142857142857142, 0.2857142857142857, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[2, 7], 
          Rational[5, 14]}, {0.07142857142857142, 0.2857142857142857, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[2, 7], Rational[5, 14]}, {
         0.07142857142857142, 0.2857142857142857, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[2, 7], 
          Rational[3, 7]}, {0.07142857142857142, 0.2857142857142857, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[2, 7], Rational[3, 7]}, {
         0.07142857142857142, 0.2857142857142857, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[2, 7], 
          Rational[1, 2]}, {0.07142857142857142, 0.2857142857142857, 0.5}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[2, 7], Rational[1, 2]}, {
         0.07142857142857142, 0.2857142857142857, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[5, 14], 
          Rational[1, 14]}, {0.07142857142857142, 0.35714285714285715`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[5, 14], Rational[1, 14]}, {
         0.07142857142857142, 0.35714285714285715`, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[5, 14], 
          Rational[1, 7]}, {0.07142857142857142, 0.35714285714285715`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[5, 14], Rational[1, 7]}, {
         0.07142857142857142, 0.35714285714285715`, 
         0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[5, 14], 
          Rational[3, 14]}, {0.07142857142857142, 0.35714285714285715`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[5, 14], Rational[3, 14]}, {
         0.07142857142857142, 0.35714285714285715`, 
         0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[5, 14], 
          Rational[2, 7]}, {0.07142857142857142, 0.35714285714285715`, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[5, 14], Rational[2, 7]}, {
         0.07142857142857142, 0.35714285714285715`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[5, 14], 
          Rational[5, 14]}, {0.07142857142857142, 0.35714285714285715`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[5, 14], Rational[5, 14]}, {
         0.07142857142857142, 0.35714285714285715`, 
         0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[5, 14], 
          Rational[3, 7]}, {0.07142857142857142, 0.35714285714285715`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[5, 14], Rational[3, 7]}, {
         0.07142857142857142, 0.35714285714285715`, 
         0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[5, 14], 
          Rational[1, 2]}, {0.07142857142857142, 0.35714285714285715`, 0.5}]],
        Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[5, 14], Rational[1, 2]}, {
         0.07142857142857142, 0.35714285714285715`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[3, 7], 
          Rational[1, 14]}, {0.07142857142857142, 0.42857142857142855`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[3, 7], Rational[1, 14]}, {
         0.07142857142857142, 0.42857142857142855`, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[3, 7], 
          Rational[1, 7]}, {0.07142857142857142, 0.42857142857142855`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[3, 7], Rational[1, 7]}, {
         0.07142857142857142, 0.42857142857142855`, 
         0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[3, 7], 
          Rational[3, 14]}, {0.07142857142857142, 0.42857142857142855`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[3, 7], Rational[3, 14]}, {
         0.07142857142857142, 0.42857142857142855`, 
         0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[3, 7], 
          Rational[2, 7]}, {0.07142857142857142, 0.42857142857142855`, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[3, 7], Rational[2, 7]}, {
         0.07142857142857142, 0.42857142857142855`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[3, 7], 
          Rational[5, 14]}, {0.07142857142857142, 0.42857142857142855`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[3, 7], Rational[5, 14]}, {
         0.07142857142857142, 0.42857142857142855`, 
         0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[3, 7], 
          Rational[3, 7]}, {0.07142857142857142, 0.42857142857142855`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[3, 7], Rational[3, 7]}, {
         0.07142857142857142, 0.42857142857142855`, 
         0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[3, 7], 
          Rational[1, 2]}, {0.07142857142857142, 0.42857142857142855`, 0.5}]],
        Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[3, 7], Rational[1, 2]}, {
         0.07142857142857142, 0.42857142857142855`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[1, 2], 
          Rational[1, 14]}, {0.07142857142857142, 0.5, 0.07142857142857142}]],
        Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[1, 2], Rational[1, 14]}, {
         0.07142857142857142, 0.5, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[1, 2], 
          Rational[1, 7]}, {0.07142857142857142, 0.5, 0.14285714285714285`}]],
        Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[1, 2], Rational[1, 7]}, {
         0.07142857142857142, 0.5, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[1, 2], 
          Rational[3, 14]}, {0.07142857142857142, 0.5, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[1, 2], Rational[3, 14]}, {
         0.07142857142857142, 0.5, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[1, 2], 
          Rational[2, 7]}, {0.07142857142857142, 0.5, 0.2857142857142857}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[1, 2], Rational[2, 7]}, {
         0.07142857142857142, 0.5, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[1, 2], 
          Rational[5, 14]}, {0.07142857142857142, 0.5, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[1, 2], Rational[5, 14]}, {
         0.07142857142857142, 0.5, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[1, 2], 
          Rational[3, 7]}, {0.07142857142857142, 0.5, 0.42857142857142855`}]],
        Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[1, 2], Rational[3, 7]}, {
         0.07142857142857142, 0.5, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 14], 
          Rational[1, 2], 
          Rational[1, 2]}, {0.07142857142857142, 0.5, 0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 14], Rational[1, 2], Rational[1, 2]}, {
         0.07142857142857142, 0.5, 0.5}]]}}}, {{
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[1, 14], 
          Rational[1, 14]}, {0.14285714285714285`, 0.07142857142857142, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[1, 14], Rational[1, 14]}, {
         0.14285714285714285`, 0.07142857142857142, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[1, 14], 
          Rational[1, 7]}, {0.14285714285714285`, 0.07142857142857142, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[1, 14], Rational[1, 7]}, {
         0.14285714285714285`, 0.07142857142857142, 
         0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[1, 14], 
          Rational[3, 14]}, {0.14285714285714285`, 0.07142857142857142, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[1, 14], Rational[3, 14]}, {
         0.14285714285714285`, 0.07142857142857142, 
         0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[1, 14], 
          Rational[2, 7]}, {0.14285714285714285`, 0.07142857142857142, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[1, 14], Rational[2, 7]}, {
         0.14285714285714285`, 0.07142857142857142, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[1, 14], 
          Rational[5, 14]}, {0.14285714285714285`, 0.07142857142857142, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[1, 14], Rational[5, 14]}, {
         0.14285714285714285`, 0.07142857142857142, 
         0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[1, 14], 
          Rational[3, 7]}, {0.14285714285714285`, 0.07142857142857142, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[1, 14], Rational[3, 7]}, {
         0.14285714285714285`, 0.07142857142857142, 
         0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[1, 14], 
          Rational[1, 2]}, {0.14285714285714285`, 0.07142857142857142, 0.5}]],
        Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[1, 14], Rational[1, 2]}, {
         0.14285714285714285`, 0.07142857142857142, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[1, 7], 
          Rational[1, 14]}, {0.14285714285714285`, 0.14285714285714285`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[1, 7], Rational[1, 14]}, {
         0.14285714285714285`, 0.14285714285714285`, 
         0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[1, 7], 
          Rational[1, 7]}, {0.14285714285714285`, 0.14285714285714285`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[1, 7], Rational[1, 7]}, {
         0.14285714285714285`, 0.14285714285714285`, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[1, 7], 
          Rational[3, 14]}, {0.14285714285714285`, 0.14285714285714285`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[1, 7], Rational[3, 14]}, {
         0.14285714285714285`, 0.14285714285714285`, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[1, 7], 
          Rational[2, 7]}, {0.14285714285714285`, 0.14285714285714285`, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[1, 7], Rational[2, 7]}, {
         0.14285714285714285`, 0.14285714285714285`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[1, 7], 
          Rational[5, 14]}, {0.14285714285714285`, 0.14285714285714285`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[1, 7], Rational[5, 14]}, {
         0.14285714285714285`, 0.14285714285714285`, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[1, 7], 
          Rational[3, 7]}, {0.14285714285714285`, 0.14285714285714285`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[1, 7], Rational[3, 7]}, {
         0.14285714285714285`, 0.14285714285714285`, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[1, 7], 
          Rational[1, 2]}, {0.14285714285714285`, 0.14285714285714285`, 
         0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[1, 7], Rational[1, 2]}, {
         0.14285714285714285`, 0.14285714285714285`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[3, 14], 
          Rational[1, 14]}, {0.14285714285714285`, 0.21428571428571427`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[3, 14], Rational[1, 14]}, {
         0.14285714285714285`, 0.21428571428571427`, 
         0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[3, 14], 
          Rational[1, 7]}, {0.14285714285714285`, 0.21428571428571427`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[3, 14], Rational[1, 7]}, {
         0.14285714285714285`, 0.21428571428571427`, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[3, 14], 
          Rational[3, 14]}, {0.14285714285714285`, 0.21428571428571427`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[3, 14], Rational[3, 14]}, {
         0.14285714285714285`, 0.21428571428571427`, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[3, 14], 
          Rational[2, 7]}, {0.14285714285714285`, 0.21428571428571427`, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[3, 14], Rational[2, 7]}, {
         0.14285714285714285`, 0.21428571428571427`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[3, 14], 
          Rational[5, 14]}, {0.14285714285714285`, 0.21428571428571427`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[3, 14], Rational[5, 14]}, {
         0.14285714285714285`, 0.21428571428571427`, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[3, 14], 
          Rational[3, 7]}, {0.14285714285714285`, 0.21428571428571427`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[3, 14], Rational[3, 7]}, {
         0.14285714285714285`, 0.21428571428571427`, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[3, 14], 
          Rational[1, 2]}, {0.14285714285714285`, 0.21428571428571427`, 
         0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[3, 14], Rational[1, 2]}, {
         0.14285714285714285`, 0.21428571428571427`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[2, 7], 
          Rational[1, 14]}, {0.14285714285714285`, 0.2857142857142857, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[2, 7], Rational[1, 14]}, {
         0.14285714285714285`, 0.2857142857142857, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[2, 7], 
          Rational[1, 7]}, {0.14285714285714285`, 0.2857142857142857, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[2, 7], Rational[1, 7]}, {
         0.14285714285714285`, 0.2857142857142857, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[2, 7], 
          Rational[3, 14]}, {0.14285714285714285`, 0.2857142857142857, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[2, 7], Rational[3, 14]}, {
         0.14285714285714285`, 0.2857142857142857, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[2, 7], 
          Rational[2, 7]}, {0.14285714285714285`, 0.2857142857142857, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[2, 7], Rational[2, 7]}, {
         0.14285714285714285`, 0.2857142857142857, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[2, 7], 
          Rational[5, 14]}, {0.14285714285714285`, 0.2857142857142857, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[2, 7], Rational[5, 14]}, {
         0.14285714285714285`, 0.2857142857142857, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[2, 7], 
          Rational[3, 7]}, {0.14285714285714285`, 0.2857142857142857, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[2, 7], Rational[3, 7]}, {
         0.14285714285714285`, 0.2857142857142857, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[2, 7], 
          Rational[1, 2]}, {0.14285714285714285`, 0.2857142857142857, 0.5}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[2, 7], Rational[1, 2]}, {
         0.14285714285714285`, 0.2857142857142857, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[5, 14], 
          Rational[1, 14]}, {0.14285714285714285`, 0.35714285714285715`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[5, 14], Rational[1, 14]}, {
         0.14285714285714285`, 0.35714285714285715`, 
         0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[5, 14], 
          Rational[1, 7]}, {0.14285714285714285`, 0.35714285714285715`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[5, 14], Rational[1, 7]}, {
         0.14285714285714285`, 0.35714285714285715`, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[5, 14], 
          Rational[3, 14]}, {0.14285714285714285`, 0.35714285714285715`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[5, 14], Rational[3, 14]}, {
         0.14285714285714285`, 0.35714285714285715`, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[5, 14], 
          Rational[2, 7]}, {0.14285714285714285`, 0.35714285714285715`, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[5, 14], Rational[2, 7]}, {
         0.14285714285714285`, 0.35714285714285715`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[5, 14], 
          Rational[5, 14]}, {0.14285714285714285`, 0.35714285714285715`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[5, 14], Rational[5, 14]}, {
         0.14285714285714285`, 0.35714285714285715`, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[5, 14], 
          Rational[3, 7]}, {0.14285714285714285`, 0.35714285714285715`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[5, 14], Rational[3, 7]}, {
         0.14285714285714285`, 0.35714285714285715`, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[5, 14], 
          Rational[1, 2]}, {0.14285714285714285`, 0.35714285714285715`, 
         0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[5, 14], Rational[1, 2]}, {
         0.14285714285714285`, 0.35714285714285715`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[3, 7], 
          Rational[1, 14]}, {0.14285714285714285`, 0.42857142857142855`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[3, 7], Rational[1, 14]}, {
         0.14285714285714285`, 0.42857142857142855`, 
         0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[3, 7], 
          Rational[1, 7]}, {0.14285714285714285`, 0.42857142857142855`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[3, 7], Rational[1, 7]}, {
         0.14285714285714285`, 0.42857142857142855`, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[3, 7], 
          Rational[3, 14]}, {0.14285714285714285`, 0.42857142857142855`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[3, 7], Rational[3, 14]}, {
         0.14285714285714285`, 0.42857142857142855`, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[3, 7], 
          Rational[2, 7]}, {0.14285714285714285`, 0.42857142857142855`, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[3, 7], Rational[2, 7]}, {
         0.14285714285714285`, 0.42857142857142855`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[3, 7], 
          Rational[5, 14]}, {0.14285714285714285`, 0.42857142857142855`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[3, 7], Rational[5, 14]}, {
         0.14285714285714285`, 0.42857142857142855`, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[3, 7], 
          Rational[3, 7]}, {0.14285714285714285`, 0.42857142857142855`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[3, 7], Rational[3, 7]}, {
         0.14285714285714285`, 0.42857142857142855`, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[3, 7], 
          Rational[1, 2]}, {0.14285714285714285`, 0.42857142857142855`, 
         0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[3, 7], Rational[1, 2]}, {
         0.14285714285714285`, 0.42857142857142855`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[1, 2], 
          Rational[1, 14]}, {0.14285714285714285`, 0.5, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[1, 2], Rational[1, 14]}, {
         0.14285714285714285`, 0.5, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[1, 2], 
          Rational[1, 7]}, {0.14285714285714285`, 0.5, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[1, 2], Rational[1, 7]}, {
         0.14285714285714285`, 0.5, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[1, 2], 
          Rational[3, 14]}, {0.14285714285714285`, 0.5, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[1, 2], Rational[3, 14]}, {
         0.14285714285714285`, 0.5, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[1, 2], 
          Rational[2, 7]}, {0.14285714285714285`, 0.5, 0.2857142857142857}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[1, 2], Rational[2, 7]}, {
         0.14285714285714285`, 0.5, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[1, 2], 
          Rational[5, 14]}, {0.14285714285714285`, 0.5, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[1, 2], Rational[5, 14]}, {
         0.14285714285714285`, 0.5, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[1, 2], 
          Rational[3, 7]}, {0.14285714285714285`, 0.5, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[1, 2], Rational[3, 7]}, {
         0.14285714285714285`, 0.5, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 7], 
          Rational[1, 2], 
          Rational[1, 2]}, {0.14285714285714285`, 0.5, 0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 7], Rational[1, 2], Rational[1, 2]}, {
         0.14285714285714285`, 0.5, 0.5}]]}}}, {{
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[1, 14], 
          Rational[1, 14]}, {0.21428571428571427`, 0.07142857142857142, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[1, 14], Rational[1, 14]}, {
         0.21428571428571427`, 0.07142857142857142, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[1, 14], 
          Rational[1, 7]}, {0.21428571428571427`, 0.07142857142857142, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[1, 14], Rational[1, 7]}, {
         0.21428571428571427`, 0.07142857142857142, 
         0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[1, 14], 
          Rational[3, 14]}, {0.21428571428571427`, 0.07142857142857142, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[1, 14], Rational[3, 14]}, {
         0.21428571428571427`, 0.07142857142857142, 
         0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[1, 14], 
          Rational[2, 7]}, {0.21428571428571427`, 0.07142857142857142, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[1, 14], Rational[2, 7]}, {
         0.21428571428571427`, 0.07142857142857142, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[1, 14], 
          Rational[5, 14]}, {0.21428571428571427`, 0.07142857142857142, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[1, 14], Rational[5, 14]}, {
         0.21428571428571427`, 0.07142857142857142, 
         0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[1, 14], 
          Rational[3, 7]}, {0.21428571428571427`, 0.07142857142857142, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[1, 14], Rational[3, 7]}, {
         0.21428571428571427`, 0.07142857142857142, 
         0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[1, 14], 
          Rational[1, 2]}, {0.21428571428571427`, 0.07142857142857142, 0.5}]],
        Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[1, 14], Rational[1, 2]}, {
         0.21428571428571427`, 0.07142857142857142, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[1, 7], 
          Rational[1, 14]}, {0.21428571428571427`, 0.14285714285714285`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[1, 7], Rational[1, 14]}, {
         0.21428571428571427`, 0.14285714285714285`, 
         0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[1, 7], 
          Rational[1, 7]}, {0.21428571428571427`, 0.14285714285714285`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[1, 7], Rational[1, 7]}, {
         0.21428571428571427`, 0.14285714285714285`, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[1, 7], 
          Rational[3, 14]}, {0.21428571428571427`, 0.14285714285714285`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[1, 7], Rational[3, 14]}, {
         0.21428571428571427`, 0.14285714285714285`, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[1, 7], 
          Rational[2, 7]}, {0.21428571428571427`, 0.14285714285714285`, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[1, 7], Rational[2, 7]}, {
         0.21428571428571427`, 0.14285714285714285`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[1, 7], 
          Rational[5, 14]}, {0.21428571428571427`, 0.14285714285714285`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[1, 7], Rational[5, 14]}, {
         0.21428571428571427`, 0.14285714285714285`, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[1, 7], 
          Rational[3, 7]}, {0.21428571428571427`, 0.14285714285714285`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[1, 7], Rational[3, 7]}, {
         0.21428571428571427`, 0.14285714285714285`, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[1, 7], 
          Rational[1, 2]}, {0.21428571428571427`, 0.14285714285714285`, 
         0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[1, 7], Rational[1, 2]}, {
         0.21428571428571427`, 0.14285714285714285`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[3, 14], 
          Rational[1, 14]}, {0.21428571428571427`, 0.21428571428571427`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[3, 14], Rational[1, 14]}, {
         0.21428571428571427`, 0.21428571428571427`, 
         0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[3, 14], 
          Rational[1, 7]}, {0.21428571428571427`, 0.21428571428571427`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[3, 14], Rational[1, 7]}, {
         0.21428571428571427`, 0.21428571428571427`, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[3, 14], 
          Rational[3, 14]}, {0.21428571428571427`, 0.21428571428571427`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[3, 14], Rational[3, 14]}, {
         0.21428571428571427`, 0.21428571428571427`, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[3, 14], 
          Rational[2, 7]}, {0.21428571428571427`, 0.21428571428571427`, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[3, 14], Rational[2, 7]}, {
         0.21428571428571427`, 0.21428571428571427`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[3, 14], 
          Rational[5, 14]}, {0.21428571428571427`, 0.21428571428571427`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[3, 14], Rational[5, 14]}, {
         0.21428571428571427`, 0.21428571428571427`, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[3, 14], 
          Rational[3, 7]}, {0.21428571428571427`, 0.21428571428571427`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[3, 14], Rational[3, 7]}, {
         0.21428571428571427`, 0.21428571428571427`, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[3, 14], 
          Rational[1, 2]}, {0.21428571428571427`, 0.21428571428571427`, 
         0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[3, 14], Rational[1, 2]}, {
         0.21428571428571427`, 0.21428571428571427`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[2, 7], 
          Rational[1, 14]}, {0.21428571428571427`, 0.2857142857142857, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[2, 7], Rational[1, 14]}, {
         0.21428571428571427`, 0.2857142857142857, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[2, 7], 
          Rational[1, 7]}, {0.21428571428571427`, 0.2857142857142857, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[2, 7], Rational[1, 7]}, {
         0.21428571428571427`, 0.2857142857142857, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[2, 7], 
          Rational[3, 14]}, {0.21428571428571427`, 0.2857142857142857, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[2, 7], Rational[3, 14]}, {
         0.21428571428571427`, 0.2857142857142857, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[2, 7], 
          Rational[2, 7]}, {0.21428571428571427`, 0.2857142857142857, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[2, 7], Rational[2, 7]}, {
         0.21428571428571427`, 0.2857142857142857, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[2, 7], 
          Rational[5, 14]}, {0.21428571428571427`, 0.2857142857142857, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[2, 7], Rational[5, 14]}, {
         0.21428571428571427`, 0.2857142857142857, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[2, 7], 
          Rational[3, 7]}, {0.21428571428571427`, 0.2857142857142857, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[2, 7], Rational[3, 7]}, {
         0.21428571428571427`, 0.2857142857142857, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[2, 7], 
          Rational[1, 2]}, {0.21428571428571427`, 0.2857142857142857, 0.5}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[2, 7], Rational[1, 2]}, {
         0.21428571428571427`, 0.2857142857142857, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[5, 14], 
          Rational[1, 14]}, {0.21428571428571427`, 0.35714285714285715`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[5, 14], Rational[1, 14]}, {
         0.21428571428571427`, 0.35714285714285715`, 
         0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[5, 14], 
          Rational[1, 7]}, {0.21428571428571427`, 0.35714285714285715`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[5, 14], Rational[1, 7]}, {
         0.21428571428571427`, 0.35714285714285715`, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[5, 14], 
          Rational[3, 14]}, {0.21428571428571427`, 0.35714285714285715`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[5, 14], Rational[3, 14]}, {
         0.21428571428571427`, 0.35714285714285715`, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[5, 14], 
          Rational[2, 7]}, {0.21428571428571427`, 0.35714285714285715`, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[5, 14], Rational[2, 7]}, {
         0.21428571428571427`, 0.35714285714285715`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[5, 14], 
          Rational[5, 14]}, {0.21428571428571427`, 0.35714285714285715`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[5, 14], Rational[5, 14]}, {
         0.21428571428571427`, 0.35714285714285715`, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[5, 14], 
          Rational[3, 7]}, {0.21428571428571427`, 0.35714285714285715`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[5, 14], Rational[3, 7]}, {
         0.21428571428571427`, 0.35714285714285715`, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[5, 14], 
          Rational[1, 2]}, {0.21428571428571427`, 0.35714285714285715`, 
         0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[5, 14], Rational[1, 2]}, {
         0.21428571428571427`, 0.35714285714285715`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[3, 7], 
          Rational[1, 14]}, {0.21428571428571427`, 0.42857142857142855`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[3, 7], Rational[1, 14]}, {
         0.21428571428571427`, 0.42857142857142855`, 
         0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[3, 7], 
          Rational[1, 7]}, {0.21428571428571427`, 0.42857142857142855`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[3, 7], Rational[1, 7]}, {
         0.21428571428571427`, 0.42857142857142855`, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[3, 7], 
          Rational[3, 14]}, {0.21428571428571427`, 0.42857142857142855`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[3, 7], Rational[3, 14]}, {
         0.21428571428571427`, 0.42857142857142855`, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[3, 7], 
          Rational[2, 7]}, {0.21428571428571427`, 0.42857142857142855`, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[3, 7], Rational[2, 7]}, {
         0.21428571428571427`, 0.42857142857142855`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[3, 7], 
          Rational[5, 14]}, {0.21428571428571427`, 0.42857142857142855`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[3, 7], Rational[5, 14]}, {
         0.21428571428571427`, 0.42857142857142855`, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[3, 7], 
          Rational[3, 7]}, {0.21428571428571427`, 0.42857142857142855`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[3, 7], Rational[3, 7]}, {
         0.21428571428571427`, 0.42857142857142855`, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[3, 7], 
          Rational[1, 2]}, {0.21428571428571427`, 0.42857142857142855`, 
         0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[3, 7], Rational[1, 2]}, {
         0.21428571428571427`, 0.42857142857142855`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[1, 2], 
          Rational[1, 14]}, {0.21428571428571427`, 0.5, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[1, 2], Rational[1, 14]}, {
         0.21428571428571427`, 0.5, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[1, 2], 
          Rational[1, 7]}, {0.21428571428571427`, 0.5, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[1, 2], Rational[1, 7]}, {
         0.21428571428571427`, 0.5, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[1, 2], 
          Rational[3, 14]}, {0.21428571428571427`, 0.5, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[1, 2], Rational[3, 14]}, {
         0.21428571428571427`, 0.5, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[1, 2], 
          Rational[2, 7]}, {0.21428571428571427`, 0.5, 0.2857142857142857}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[1, 2], Rational[2, 7]}, {
         0.21428571428571427`, 0.5, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[1, 2], 
          Rational[5, 14]}, {0.21428571428571427`, 0.5, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[1, 2], Rational[5, 14]}, {
         0.21428571428571427`, 0.5, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[1, 2], 
          Rational[3, 7]}, {0.21428571428571427`, 0.5, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[1, 2], Rational[3, 7]}, {
         0.21428571428571427`, 0.5, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 14], 
          Rational[1, 2], 
          Rational[1, 2]}, {0.21428571428571427`, 0.5, 0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 14], Rational[1, 2], Rational[1, 2]}, {
         0.21428571428571427`, 0.5, 0.5}]]}}}, {{
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[1, 14], 
          Rational[1, 14]}, {0.2857142857142857, 0.07142857142857142, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[1, 14], Rational[1, 14]}, {
         0.2857142857142857, 0.07142857142857142, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[1, 14], 
          Rational[1, 7]}, {0.2857142857142857, 0.07142857142857142, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[1, 14], Rational[1, 7]}, {
         0.2857142857142857, 0.07142857142857142, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[1, 14], 
          Rational[3, 14]}, {0.2857142857142857, 0.07142857142857142, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[1, 14], Rational[3, 14]}, {
         0.2857142857142857, 0.07142857142857142, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[1, 14], 
          Rational[2, 7]}, {0.2857142857142857, 0.07142857142857142, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[1, 14], Rational[2, 7]}, {
         0.2857142857142857, 0.07142857142857142, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[1, 14], 
          Rational[5, 14]}, {0.2857142857142857, 0.07142857142857142, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[1, 14], Rational[5, 14]}, {
         0.2857142857142857, 0.07142857142857142, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[1, 14], 
          Rational[3, 7]}, {0.2857142857142857, 0.07142857142857142, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[1, 14], Rational[3, 7]}, {
         0.2857142857142857, 0.07142857142857142, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[1, 14], 
          Rational[1, 2]}, {0.2857142857142857, 0.07142857142857142, 0.5}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[1, 14], Rational[1, 2]}, {
         0.2857142857142857, 0.07142857142857142, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[1, 7], 
          Rational[1, 14]}, {0.2857142857142857, 0.14285714285714285`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[1, 7], Rational[1, 14]}, {
         0.2857142857142857, 0.14285714285714285`, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[1, 7], 
          Rational[1, 7]}, {0.2857142857142857, 0.14285714285714285`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[1, 7], Rational[1, 7]}, {
         0.2857142857142857, 0.14285714285714285`, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[1, 7], 
          Rational[3, 14]}, {0.2857142857142857, 0.14285714285714285`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[1, 7], Rational[3, 14]}, {
         0.2857142857142857, 0.14285714285714285`, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[1, 7], 
          Rational[2, 7]}, {0.2857142857142857, 0.14285714285714285`, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[1, 7], Rational[2, 7]}, {
         0.2857142857142857, 0.14285714285714285`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[1, 7], 
          Rational[5, 14]}, {0.2857142857142857, 0.14285714285714285`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[1, 7], Rational[5, 14]}, {
         0.2857142857142857, 0.14285714285714285`, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[1, 7], 
          Rational[3, 7]}, {0.2857142857142857, 0.14285714285714285`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[1, 7], Rational[3, 7]}, {
         0.2857142857142857, 0.14285714285714285`, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[1, 7], 
          Rational[1, 2]}, {0.2857142857142857, 0.14285714285714285`, 0.5}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[1, 7], Rational[1, 2]}, {
         0.2857142857142857, 0.14285714285714285`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[3, 14], 
          Rational[1, 14]}, {0.2857142857142857, 0.21428571428571427`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[3, 14], Rational[1, 14]}, {
         0.2857142857142857, 0.21428571428571427`, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[3, 14], 
          Rational[1, 7]}, {0.2857142857142857, 0.21428571428571427`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[3, 14], Rational[1, 7]}, {
         0.2857142857142857, 0.21428571428571427`, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[3, 14], 
          Rational[3, 14]}, {0.2857142857142857, 0.21428571428571427`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[3, 14], Rational[3, 14]}, {
         0.2857142857142857, 0.21428571428571427`, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[3, 14], 
          Rational[2, 7]}, {0.2857142857142857, 0.21428571428571427`, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[3, 14], Rational[2, 7]}, {
         0.2857142857142857, 0.21428571428571427`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[3, 14], 
          Rational[5, 14]}, {0.2857142857142857, 0.21428571428571427`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[3, 14], Rational[5, 14]}, {
         0.2857142857142857, 0.21428571428571427`, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[3, 14], 
          Rational[3, 7]}, {0.2857142857142857, 0.21428571428571427`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[3, 14], Rational[3, 7]}, {
         0.2857142857142857, 0.21428571428571427`, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[3, 14], 
          Rational[1, 2]}, {0.2857142857142857, 0.21428571428571427`, 0.5}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[3, 14], Rational[1, 2]}, {
         0.2857142857142857, 0.21428571428571427`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[2, 7], 
          Rational[1, 14]}, {0.2857142857142857, 0.2857142857142857, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[2, 7], Rational[1, 14]}, {
         0.2857142857142857, 0.2857142857142857, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[2, 7], 
          Rational[1, 7]}, {0.2857142857142857, 0.2857142857142857, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[2, 7], Rational[1, 7]}, {
         0.2857142857142857, 0.2857142857142857, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[2, 7], 
          Rational[3, 14]}, {0.2857142857142857, 0.2857142857142857, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[2, 7], Rational[3, 14]}, {
         0.2857142857142857, 0.2857142857142857, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[2, 7], 
          Rational[2, 7]}, {0.2857142857142857, 0.2857142857142857, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[2, 7], Rational[2, 7]}, {
         0.2857142857142857, 0.2857142857142857, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[2, 7], 
          Rational[5, 14]}, {0.2857142857142857, 0.2857142857142857, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[2, 7], Rational[5, 14]}, {
         0.2857142857142857, 0.2857142857142857, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[2, 7], 
          Rational[3, 7]}, {0.2857142857142857, 0.2857142857142857, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[2, 7], Rational[3, 7]}, {
         0.2857142857142857, 0.2857142857142857, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[2, 7], 
          Rational[1, 2]}, {0.2857142857142857, 0.2857142857142857, 0.5}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[2, 7], Rational[1, 2]}, {
         0.2857142857142857, 0.2857142857142857, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[5, 14], 
          Rational[1, 14]}, {0.2857142857142857, 0.35714285714285715`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[5, 14], Rational[1, 14]}, {
         0.2857142857142857, 0.35714285714285715`, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[5, 14], 
          Rational[1, 7]}, {0.2857142857142857, 0.35714285714285715`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[5, 14], Rational[1, 7]}, {
         0.2857142857142857, 0.35714285714285715`, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[5, 14], 
          Rational[3, 14]}, {0.2857142857142857, 0.35714285714285715`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[5, 14], Rational[3, 14]}, {
         0.2857142857142857, 0.35714285714285715`, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[5, 14], 
          Rational[2, 7]}, {0.2857142857142857, 0.35714285714285715`, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[5, 14], Rational[2, 7]}, {
         0.2857142857142857, 0.35714285714285715`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[5, 14], 
          Rational[5, 14]}, {0.2857142857142857, 0.35714285714285715`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[5, 14], Rational[5, 14]}, {
         0.2857142857142857, 0.35714285714285715`, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[5, 14], 
          Rational[3, 7]}, {0.2857142857142857, 0.35714285714285715`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[5, 14], Rational[3, 7]}, {
         0.2857142857142857, 0.35714285714285715`, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[5, 14], 
          Rational[1, 2]}, {0.2857142857142857, 0.35714285714285715`, 0.5}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[5, 14], Rational[1, 2]}, {
         0.2857142857142857, 0.35714285714285715`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[3, 7], 
          Rational[1, 14]}, {0.2857142857142857, 0.42857142857142855`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[3, 7], Rational[1, 14]}, {
         0.2857142857142857, 0.42857142857142855`, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[3, 7], 
          Rational[1, 7]}, {0.2857142857142857, 0.42857142857142855`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[3, 7], Rational[1, 7]}, {
         0.2857142857142857, 0.42857142857142855`, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[3, 7], 
          Rational[3, 14]}, {0.2857142857142857, 0.42857142857142855`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[3, 7], Rational[3, 14]}, {
         0.2857142857142857, 0.42857142857142855`, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[3, 7], 
          Rational[2, 7]}, {0.2857142857142857, 0.42857142857142855`, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[3, 7], Rational[2, 7]}, {
         0.2857142857142857, 0.42857142857142855`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[3, 7], 
          Rational[5, 14]}, {0.2857142857142857, 0.42857142857142855`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[3, 7], Rational[5, 14]}, {
         0.2857142857142857, 0.42857142857142855`, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[3, 7], 
          Rational[3, 7]}, {0.2857142857142857, 0.42857142857142855`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[3, 7], Rational[3, 7]}, {
         0.2857142857142857, 0.42857142857142855`, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[3, 7], 
          Rational[1, 2]}, {0.2857142857142857, 0.42857142857142855`, 0.5}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[3, 7], Rational[1, 2]}, {
         0.2857142857142857, 0.42857142857142855`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[1, 2], 
          Rational[1, 14]}, {0.2857142857142857, 0.5, 0.07142857142857142}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[1, 2], Rational[1, 14]}, {
         0.2857142857142857, 0.5, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[1, 2], 
          Rational[1, 7]}, {0.2857142857142857, 0.5, 0.14285714285714285`}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[1, 2], Rational[1, 7]}, {
         0.2857142857142857, 0.5, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[1, 2], 
          Rational[3, 14]}, {0.2857142857142857, 0.5, 0.21428571428571427`}]],
        Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[1, 2], Rational[3, 14]}, {
         0.2857142857142857, 0.5, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[1, 2], 
          Rational[2, 7]}, {0.2857142857142857, 0.5, 0.2857142857142857}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[1, 2], Rational[2, 7]}, {
         0.2857142857142857, 0.5, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[1, 2], 
          Rational[5, 14]}, {0.2857142857142857, 0.5, 0.35714285714285715`}]],
        Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[1, 2], Rational[5, 14]}, {
         0.2857142857142857, 0.5, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[1, 2], 
          Rational[3, 7]}, {0.2857142857142857, 0.5, 0.42857142857142855`}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[1, 2], Rational[3, 7]}, {
         0.2857142857142857, 0.5, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[2, 7], 
          Rational[1, 2], 
          Rational[1, 2]}, {0.2857142857142857, 0.5, 0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[2, 7], Rational[1, 2], Rational[1, 2]}, {
         0.2857142857142857, 0.5, 0.5}]]}}}, {{
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[1, 14], 
          Rational[1, 14]}, {0.35714285714285715`, 0.07142857142857142, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[1, 14], Rational[1, 14]}, {
         0.35714285714285715`, 0.07142857142857142, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[1, 14], 
          Rational[1, 7]}, {0.35714285714285715`, 0.07142857142857142, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[1, 14], Rational[1, 7]}, {
         0.35714285714285715`, 0.07142857142857142, 
         0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[1, 14], 
          Rational[3, 14]}, {0.35714285714285715`, 0.07142857142857142, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[1, 14], Rational[3, 14]}, {
         0.35714285714285715`, 0.07142857142857142, 
         0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[1, 14], 
          Rational[2, 7]}, {0.35714285714285715`, 0.07142857142857142, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[1, 14], Rational[2, 7]}, {
         0.35714285714285715`, 0.07142857142857142, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[1, 14], 
          Rational[5, 14]}, {0.35714285714285715`, 0.07142857142857142, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[1, 14], Rational[5, 14]}, {
         0.35714285714285715`, 0.07142857142857142, 
         0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[1, 14], 
          Rational[3, 7]}, {0.35714285714285715`, 0.07142857142857142, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[1, 14], Rational[3, 7]}, {
         0.35714285714285715`, 0.07142857142857142, 
         0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[1, 14], 
          Rational[1, 2]}, {0.35714285714285715`, 0.07142857142857142, 0.5}]],
        Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[1, 14], Rational[1, 2]}, {
         0.35714285714285715`, 0.07142857142857142, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[1, 7], 
          Rational[1, 14]}, {0.35714285714285715`, 0.14285714285714285`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[1, 7], Rational[1, 14]}, {
         0.35714285714285715`, 0.14285714285714285`, 
         0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[1, 7], 
          Rational[1, 7]}, {0.35714285714285715`, 0.14285714285714285`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[1, 7], Rational[1, 7]}, {
         0.35714285714285715`, 0.14285714285714285`, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[1, 7], 
          Rational[3, 14]}, {0.35714285714285715`, 0.14285714285714285`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[1, 7], Rational[3, 14]}, {
         0.35714285714285715`, 0.14285714285714285`, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[1, 7], 
          Rational[2, 7]}, {0.35714285714285715`, 0.14285714285714285`, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[1, 7], Rational[2, 7]}, {
         0.35714285714285715`, 0.14285714285714285`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[1, 7], 
          Rational[5, 14]}, {0.35714285714285715`, 0.14285714285714285`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[1, 7], Rational[5, 14]}, {
         0.35714285714285715`, 0.14285714285714285`, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[1, 7], 
          Rational[3, 7]}, {0.35714285714285715`, 0.14285714285714285`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[1, 7], Rational[3, 7]}, {
         0.35714285714285715`, 0.14285714285714285`, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[1, 7], 
          Rational[1, 2]}, {0.35714285714285715`, 0.14285714285714285`, 
         0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[1, 7], Rational[1, 2]}, {
         0.35714285714285715`, 0.14285714285714285`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[3, 14], 
          Rational[1, 14]}, {0.35714285714285715`, 0.21428571428571427`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[3, 14], Rational[1, 14]}, {
         0.35714285714285715`, 0.21428571428571427`, 
         0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[3, 14], 
          Rational[1, 7]}, {0.35714285714285715`, 0.21428571428571427`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[3, 14], Rational[1, 7]}, {
         0.35714285714285715`, 0.21428571428571427`, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[3, 14], 
          Rational[3, 14]}, {0.35714285714285715`, 0.21428571428571427`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[3, 14], Rational[3, 14]}, {
         0.35714285714285715`, 0.21428571428571427`, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[3, 14], 
          Rational[2, 7]}, {0.35714285714285715`, 0.21428571428571427`, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[3, 14], Rational[2, 7]}, {
         0.35714285714285715`, 0.21428571428571427`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[3, 14], 
          Rational[5, 14]}, {0.35714285714285715`, 0.21428571428571427`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[3, 14], Rational[5, 14]}, {
         0.35714285714285715`, 0.21428571428571427`, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[3, 14], 
          Rational[3, 7]}, {0.35714285714285715`, 0.21428571428571427`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[3, 14], Rational[3, 7]}, {
         0.35714285714285715`, 0.21428571428571427`, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[3, 14], 
          Rational[1, 2]}, {0.35714285714285715`, 0.21428571428571427`, 
         0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[3, 14], Rational[1, 2]}, {
         0.35714285714285715`, 0.21428571428571427`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[2, 7], 
          Rational[1, 14]}, {0.35714285714285715`, 0.2857142857142857, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[2, 7], Rational[1, 14]}, {
         0.35714285714285715`, 0.2857142857142857, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[2, 7], 
          Rational[1, 7]}, {0.35714285714285715`, 0.2857142857142857, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[2, 7], Rational[1, 7]}, {
         0.35714285714285715`, 0.2857142857142857, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[2, 7], 
          Rational[3, 14]}, {0.35714285714285715`, 0.2857142857142857, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[2, 7], Rational[3, 14]}, {
         0.35714285714285715`, 0.2857142857142857, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[2, 7], 
          Rational[2, 7]}, {0.35714285714285715`, 0.2857142857142857, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[2, 7], Rational[2, 7]}, {
         0.35714285714285715`, 0.2857142857142857, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[2, 7], 
          Rational[5, 14]}, {0.35714285714285715`, 0.2857142857142857, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[2, 7], Rational[5, 14]}, {
         0.35714285714285715`, 0.2857142857142857, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[2, 7], 
          Rational[3, 7]}, {0.35714285714285715`, 0.2857142857142857, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[2, 7], Rational[3, 7]}, {
         0.35714285714285715`, 0.2857142857142857, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[2, 7], 
          Rational[1, 2]}, {0.35714285714285715`, 0.2857142857142857, 0.5}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[2, 7], Rational[1, 2]}, {
         0.35714285714285715`, 0.2857142857142857, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[5, 14], 
          Rational[1, 14]}, {0.35714285714285715`, 0.35714285714285715`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[5, 14], Rational[1, 14]}, {
         0.35714285714285715`, 0.35714285714285715`, 
         0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[5, 14], 
          Rational[1, 7]}, {0.35714285714285715`, 0.35714285714285715`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[5, 14], Rational[1, 7]}, {
         0.35714285714285715`, 0.35714285714285715`, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[5, 14], 
          Rational[3, 14]}, {0.35714285714285715`, 0.35714285714285715`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[5, 14], Rational[3, 14]}, {
         0.35714285714285715`, 0.35714285714285715`, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[5, 14], 
          Rational[2, 7]}, {0.35714285714285715`, 0.35714285714285715`, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[5, 14], Rational[2, 7]}, {
         0.35714285714285715`, 0.35714285714285715`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[5, 14], 
          Rational[5, 14]}, {0.35714285714285715`, 0.35714285714285715`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[5, 14], Rational[5, 14]}, {
         0.35714285714285715`, 0.35714285714285715`, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[5, 14], 
          Rational[3, 7]}, {0.35714285714285715`, 0.35714285714285715`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[5, 14], Rational[3, 7]}, {
         0.35714285714285715`, 0.35714285714285715`, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[5, 14], 
          Rational[1, 2]}, {0.35714285714285715`, 0.35714285714285715`, 
         0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[5, 14], Rational[1, 2]}, {
         0.35714285714285715`, 0.35714285714285715`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[3, 7], 
          Rational[1, 14]}, {0.35714285714285715`, 0.42857142857142855`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[3, 7], Rational[1, 14]}, {
         0.35714285714285715`, 0.42857142857142855`, 
         0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[3, 7], 
          Rational[1, 7]}, {0.35714285714285715`, 0.42857142857142855`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[3, 7], Rational[1, 7]}, {
         0.35714285714285715`, 0.42857142857142855`, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[3, 7], 
          Rational[3, 14]}, {0.35714285714285715`, 0.42857142857142855`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[3, 7], Rational[3, 14]}, {
         0.35714285714285715`, 0.42857142857142855`, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[3, 7], 
          Rational[2, 7]}, {0.35714285714285715`, 0.42857142857142855`, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[3, 7], Rational[2, 7]}, {
         0.35714285714285715`, 0.42857142857142855`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[3, 7], 
          Rational[5, 14]}, {0.35714285714285715`, 0.42857142857142855`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[3, 7], Rational[5, 14]}, {
         0.35714285714285715`, 0.42857142857142855`, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[3, 7], 
          Rational[3, 7]}, {0.35714285714285715`, 0.42857142857142855`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[3, 7], Rational[3, 7]}, {
         0.35714285714285715`, 0.42857142857142855`, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[3, 7], 
          Rational[1, 2]}, {0.35714285714285715`, 0.42857142857142855`, 
         0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[3, 7], Rational[1, 2]}, {
         0.35714285714285715`, 0.42857142857142855`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[1, 2], 
          Rational[1, 14]}, {0.35714285714285715`, 0.5, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[1, 2], Rational[1, 14]}, {
         0.35714285714285715`, 0.5, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[1, 2], 
          Rational[1, 7]}, {0.35714285714285715`, 0.5, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[1, 2], Rational[1, 7]}, {
         0.35714285714285715`, 0.5, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[1, 2], 
          Rational[3, 14]}, {0.35714285714285715`, 0.5, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[1, 2], Rational[3, 14]}, {
         0.35714285714285715`, 0.5, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[1, 2], 
          Rational[2, 7]}, {0.35714285714285715`, 0.5, 0.2857142857142857}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[1, 2], Rational[2, 7]}, {
         0.35714285714285715`, 0.5, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[1, 2], 
          Rational[5, 14]}, {0.35714285714285715`, 0.5, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[1, 2], Rational[5, 14]}, {
         0.35714285714285715`, 0.5, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[1, 2], 
          Rational[3, 7]}, {0.35714285714285715`, 0.5, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[1, 2], Rational[3, 7]}, {
         0.35714285714285715`, 0.5, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[5, 14], 
          Rational[1, 2], 
          Rational[1, 2]}, {0.35714285714285715`, 0.5, 0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[5, 14], Rational[1, 2], Rational[1, 2]}, {
         0.35714285714285715`, 0.5, 0.5}]]}}}, {{
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[1, 14], 
          Rational[1, 14]}, {0.42857142857142855`, 0.07142857142857142, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[1, 14], Rational[1, 14]}, {
         0.42857142857142855`, 0.07142857142857142, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[1, 14], 
          Rational[1, 7]}, {0.42857142857142855`, 0.07142857142857142, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[1, 14], Rational[1, 7]}, {
         0.42857142857142855`, 0.07142857142857142, 
         0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[1, 14], 
          Rational[3, 14]}, {0.42857142857142855`, 0.07142857142857142, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[1, 14], Rational[3, 14]}, {
         0.42857142857142855`, 0.07142857142857142, 
         0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[1, 14], 
          Rational[2, 7]}, {0.42857142857142855`, 0.07142857142857142, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[1, 14], Rational[2, 7]}, {
         0.42857142857142855`, 0.07142857142857142, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[1, 14], 
          Rational[5, 14]}, {0.42857142857142855`, 0.07142857142857142, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[1, 14], Rational[5, 14]}, {
         0.42857142857142855`, 0.07142857142857142, 
         0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[1, 14], 
          Rational[3, 7]}, {0.42857142857142855`, 0.07142857142857142, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[1, 14], Rational[3, 7]}, {
         0.42857142857142855`, 0.07142857142857142, 
         0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[1, 14], 
          Rational[1, 2]}, {0.42857142857142855`, 0.07142857142857142, 0.5}]],
        Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[1, 14], Rational[1, 2]}, {
         0.42857142857142855`, 0.07142857142857142, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[1, 7], 
          Rational[1, 14]}, {0.42857142857142855`, 0.14285714285714285`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[1, 7], Rational[1, 14]}, {
         0.42857142857142855`, 0.14285714285714285`, 
         0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[1, 7], 
          Rational[1, 7]}, {0.42857142857142855`, 0.14285714285714285`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[1, 7], Rational[1, 7]}, {
         0.42857142857142855`, 0.14285714285714285`, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[1, 7], 
          Rational[3, 14]}, {0.42857142857142855`, 0.14285714285714285`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[1, 7], Rational[3, 14]}, {
         0.42857142857142855`, 0.14285714285714285`, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[1, 7], 
          Rational[2, 7]}, {0.42857142857142855`, 0.14285714285714285`, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[1, 7], Rational[2, 7]}, {
         0.42857142857142855`, 0.14285714285714285`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[1, 7], 
          Rational[5, 14]}, {0.42857142857142855`, 0.14285714285714285`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[1, 7], Rational[5, 14]}, {
         0.42857142857142855`, 0.14285714285714285`, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[1, 7], 
          Rational[3, 7]}, {0.42857142857142855`, 0.14285714285714285`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[1, 7], Rational[3, 7]}, {
         0.42857142857142855`, 0.14285714285714285`, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[1, 7], 
          Rational[1, 2]}, {0.42857142857142855`, 0.14285714285714285`, 
         0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[1, 7], Rational[1, 2]}, {
         0.42857142857142855`, 0.14285714285714285`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[3, 14], 
          Rational[1, 14]}, {0.42857142857142855`, 0.21428571428571427`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[3, 14], Rational[1, 14]}, {
         0.42857142857142855`, 0.21428571428571427`, 
         0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[3, 14], 
          Rational[1, 7]}, {0.42857142857142855`, 0.21428571428571427`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[3, 14], Rational[1, 7]}, {
         0.42857142857142855`, 0.21428571428571427`, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[3, 14], 
          Rational[3, 14]}, {0.42857142857142855`, 0.21428571428571427`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[3, 14], Rational[3, 14]}, {
         0.42857142857142855`, 0.21428571428571427`, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[3, 14], 
          Rational[2, 7]}, {0.42857142857142855`, 0.21428571428571427`, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[3, 14], Rational[2, 7]}, {
         0.42857142857142855`, 0.21428571428571427`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[3, 14], 
          Rational[5, 14]}, {0.42857142857142855`, 0.21428571428571427`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[3, 14], Rational[5, 14]}, {
         0.42857142857142855`, 0.21428571428571427`, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[3, 14], 
          Rational[3, 7]}, {0.42857142857142855`, 0.21428571428571427`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[3, 14], Rational[3, 7]}, {
         0.42857142857142855`, 0.21428571428571427`, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[3, 14], 
          Rational[1, 2]}, {0.42857142857142855`, 0.21428571428571427`, 
         0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[3, 14], Rational[1, 2]}, {
         0.42857142857142855`, 0.21428571428571427`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[2, 7], 
          Rational[1, 14]}, {0.42857142857142855`, 0.2857142857142857, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[2, 7], Rational[1, 14]}, {
         0.42857142857142855`, 0.2857142857142857, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[2, 7], 
          Rational[1, 7]}, {0.42857142857142855`, 0.2857142857142857, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[2, 7], Rational[1, 7]}, {
         0.42857142857142855`, 0.2857142857142857, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[2, 7], 
          Rational[3, 14]}, {0.42857142857142855`, 0.2857142857142857, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[2, 7], Rational[3, 14]}, {
         0.42857142857142855`, 0.2857142857142857, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[2, 7], 
          Rational[2, 7]}, {0.42857142857142855`, 0.2857142857142857, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[2, 7], Rational[2, 7]}, {
         0.42857142857142855`, 0.2857142857142857, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[2, 7], 
          Rational[5, 14]}, {0.42857142857142855`, 0.2857142857142857, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[2, 7], Rational[5, 14]}, {
         0.42857142857142855`, 0.2857142857142857, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[2, 7], 
          Rational[3, 7]}, {0.42857142857142855`, 0.2857142857142857, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[2, 7], Rational[3, 7]}, {
         0.42857142857142855`, 0.2857142857142857, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[2, 7], 
          Rational[1, 2]}, {0.42857142857142855`, 0.2857142857142857, 0.5}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[2, 7], Rational[1, 2]}, {
         0.42857142857142855`, 0.2857142857142857, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[5, 14], 
          Rational[1, 14]}, {0.42857142857142855`, 0.35714285714285715`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[5, 14], Rational[1, 14]}, {
         0.42857142857142855`, 0.35714285714285715`, 
         0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[5, 14], 
          Rational[1, 7]}, {0.42857142857142855`, 0.35714285714285715`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[5, 14], Rational[1, 7]}, {
         0.42857142857142855`, 0.35714285714285715`, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[5, 14], 
          Rational[3, 14]}, {0.42857142857142855`, 0.35714285714285715`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[5, 14], Rational[3, 14]}, {
         0.42857142857142855`, 0.35714285714285715`, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[5, 14], 
          Rational[2, 7]}, {0.42857142857142855`, 0.35714285714285715`, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[5, 14], Rational[2, 7]}, {
         0.42857142857142855`, 0.35714285714285715`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[5, 14], 
          Rational[5, 14]}, {0.42857142857142855`, 0.35714285714285715`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[5, 14], Rational[5, 14]}, {
         0.42857142857142855`, 0.35714285714285715`, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[5, 14], 
          Rational[3, 7]}, {0.42857142857142855`, 0.35714285714285715`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[5, 14], Rational[3, 7]}, {
         0.42857142857142855`, 0.35714285714285715`, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[5, 14], 
          Rational[1, 2]}, {0.42857142857142855`, 0.35714285714285715`, 
         0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[5, 14], Rational[1, 2]}, {
         0.42857142857142855`, 0.35714285714285715`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[3, 7], 
          Rational[1, 14]}, {0.42857142857142855`, 0.42857142857142855`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[3, 7], Rational[1, 14]}, {
         0.42857142857142855`, 0.42857142857142855`, 
         0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[3, 7], 
          Rational[1, 7]}, {0.42857142857142855`, 0.42857142857142855`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[3, 7], Rational[1, 7]}, {
         0.42857142857142855`, 0.42857142857142855`, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[3, 7], 
          Rational[3, 14]}, {0.42857142857142855`, 0.42857142857142855`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[3, 7], Rational[3, 14]}, {
         0.42857142857142855`, 0.42857142857142855`, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[3, 7], 
          Rational[2, 7]}, {0.42857142857142855`, 0.42857142857142855`, 
         0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[3, 7], Rational[2, 7]}, {
         0.42857142857142855`, 0.42857142857142855`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[3, 7], 
          Rational[5, 14]}, {0.42857142857142855`, 0.42857142857142855`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[3, 7], Rational[5, 14]}, {
         0.42857142857142855`, 0.42857142857142855`, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[3, 7], 
          Rational[3, 7]}, {0.42857142857142855`, 0.42857142857142855`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[3, 7], Rational[3, 7]}, {
         0.42857142857142855`, 0.42857142857142855`, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[3, 7], 
          Rational[1, 2]}, {0.42857142857142855`, 0.42857142857142855`, 
         0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[3, 7], Rational[1, 2]}, {
         0.42857142857142855`, 0.42857142857142855`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[1, 2], 
          Rational[1, 14]}, {0.42857142857142855`, 0.5, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[1, 2], Rational[1, 14]}, {
         0.42857142857142855`, 0.5, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[1, 2], 
          Rational[1, 7]}, {0.42857142857142855`, 0.5, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[1, 2], Rational[1, 7]}, {
         0.42857142857142855`, 0.5, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[1, 2], 
          Rational[3, 14]}, {0.42857142857142855`, 0.5, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[1, 2], Rational[3, 14]}, {
         0.42857142857142855`, 0.5, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[1, 2], 
          Rational[2, 7]}, {0.42857142857142855`, 0.5, 0.2857142857142857}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[1, 2], Rational[2, 7]}, {
         0.42857142857142855`, 0.5, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[1, 2], 
          Rational[5, 14]}, {0.42857142857142855`, 0.5, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[1, 2], Rational[5, 14]}, {
         0.42857142857142855`, 0.5, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[1, 2], 
          Rational[3, 7]}, {0.42857142857142855`, 0.5, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[1, 2], Rational[3, 7]}, {
         0.42857142857142855`, 0.5, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[3, 7], 
          Rational[1, 2], 
          Rational[1, 2]}, {0.42857142857142855`, 0.5, 0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[3, 7], Rational[1, 2], Rational[1, 2]}, {
         0.42857142857142855`, 0.5, 0.5}]]}}}, {{
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[1, 14], 
          Rational[1, 14]}, {0.5, 0.07142857142857142, 0.07142857142857142}]],
        Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[1, 14], Rational[1, 14]}, {0.5, 
         0.07142857142857142, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[1, 14], 
          Rational[1, 7]}, {0.5, 0.07142857142857142, 0.14285714285714285`}]],
        Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[1, 14], Rational[1, 7]}, {0.5, 
         0.07142857142857142, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[1, 14], 
          Rational[3, 14]}, {0.5, 0.07142857142857142, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[1, 14], Rational[3, 14]}, {0.5, 
         0.07142857142857142, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[1, 14], 
          Rational[2, 7]}, {0.5, 0.07142857142857142, 0.2857142857142857}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[1, 14], Rational[2, 7]}, {0.5, 
         0.07142857142857142, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[1, 14], 
          Rational[5, 14]}, {0.5, 0.07142857142857142, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[1, 14], Rational[5, 14]}, {0.5, 
         0.07142857142857142, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[1, 14], 
          Rational[3, 7]}, {0.5, 0.07142857142857142, 0.42857142857142855`}]],
        Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[1, 14], Rational[3, 7]}, {0.5, 
         0.07142857142857142, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[1, 14], 
          Rational[1, 2]}, {0.5, 0.07142857142857142, 0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[1, 14], Rational[1, 2]}, {0.5, 
         0.07142857142857142, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[1, 7], 
          Rational[1, 14]}, {0.5, 0.14285714285714285`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[1, 7], Rational[1, 14]}, {0.5, 
         0.14285714285714285`, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[1, 7], 
          Rational[1, 7]}, {0.5, 0.14285714285714285`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[1, 7], Rational[1, 7]}, {0.5, 
         0.14285714285714285`, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[1, 7], 
          Rational[3, 14]}, {0.5, 0.14285714285714285`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[1, 7], Rational[3, 14]}, {0.5, 
         0.14285714285714285`, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[1, 7], 
          Rational[2, 7]}, {0.5, 0.14285714285714285`, 0.2857142857142857}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[1, 7], Rational[2, 7]}, {0.5, 
         0.14285714285714285`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[1, 7], 
          Rational[5, 14]}, {0.5, 0.14285714285714285`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[1, 7], Rational[5, 14]}, {0.5, 
         0.14285714285714285`, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[1, 7], 
          Rational[3, 7]}, {0.5, 0.14285714285714285`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[1, 7], Rational[3, 7]}, {0.5, 
         0.14285714285714285`, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[1, 7], 
          Rational[1, 2]}, {0.5, 0.14285714285714285`, 0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[1, 7], Rational[1, 2]}, {0.5, 
         0.14285714285714285`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[3, 14], 
          Rational[1, 14]}, {0.5, 0.21428571428571427`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[3, 14], Rational[1, 14]}, {0.5, 
         0.21428571428571427`, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[3, 14], 
          Rational[1, 7]}, {0.5, 0.21428571428571427`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[3, 14], Rational[1, 7]}, {0.5, 
         0.21428571428571427`, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[3, 14], 
          Rational[3, 14]}, {0.5, 0.21428571428571427`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[3, 14], Rational[3, 14]}, {0.5, 
         0.21428571428571427`, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[3, 14], 
          Rational[2, 7]}, {0.5, 0.21428571428571427`, 0.2857142857142857}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[3, 14], Rational[2, 7]}, {0.5, 
         0.21428571428571427`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[3, 14], 
          Rational[5, 14]}, {0.5, 0.21428571428571427`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[3, 14], Rational[5, 14]}, {0.5, 
         0.21428571428571427`, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[3, 14], 
          Rational[3, 7]}, {0.5, 0.21428571428571427`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[3, 14], Rational[3, 7]}, {0.5, 
         0.21428571428571427`, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[3, 14], 
          Rational[1, 2]}, {0.5, 0.21428571428571427`, 0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[3, 14], Rational[1, 2]}, {0.5, 
         0.21428571428571427`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[2, 7], 
          Rational[1, 14]}, {0.5, 0.2857142857142857, 0.07142857142857142}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[2, 7], Rational[1, 14]}, {0.5, 
         0.2857142857142857, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[2, 7], 
          Rational[1, 7]}, {0.5, 0.2857142857142857, 0.14285714285714285`}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[2, 7], Rational[1, 7]}, {0.5, 
         0.2857142857142857, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[2, 7], 
          Rational[3, 14]}, {0.5, 0.2857142857142857, 0.21428571428571427`}]],
        Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[2, 7], Rational[3, 14]}, {0.5, 
         0.2857142857142857, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[2, 7], 
          Rational[2, 7]}, {0.5, 0.2857142857142857, 0.2857142857142857}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[2, 7], Rational[2, 7]}, {0.5, 
         0.2857142857142857, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[2, 7], 
          Rational[5, 14]}, {0.5, 0.2857142857142857, 0.35714285714285715`}]],
        Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[2, 7], Rational[5, 14]}, {0.5, 
         0.2857142857142857, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[2, 7], 
          Rational[3, 7]}, {0.5, 0.2857142857142857, 0.42857142857142855`}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[2, 7], Rational[3, 7]}, {0.5, 
         0.2857142857142857, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[2, 7], 
          Rational[1, 2]}, {0.5, 0.2857142857142857, 0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[2, 7], Rational[1, 2]}, {0.5, 
         0.2857142857142857, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[5, 14], 
          Rational[1, 14]}, {0.5, 0.35714285714285715`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[5, 14], Rational[1, 14]}, {0.5, 
         0.35714285714285715`, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[5, 14], 
          Rational[1, 7]}, {0.5, 0.35714285714285715`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[5, 14], Rational[1, 7]}, {0.5, 
         0.35714285714285715`, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[5, 14], 
          Rational[3, 14]}, {0.5, 0.35714285714285715`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[5, 14], Rational[3, 14]}, {0.5, 
         0.35714285714285715`, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[5, 14], 
          Rational[2, 7]}, {0.5, 0.35714285714285715`, 0.2857142857142857}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[5, 14], Rational[2, 7]}, {0.5, 
         0.35714285714285715`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[5, 14], 
          Rational[5, 14]}, {0.5, 0.35714285714285715`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[5, 14], Rational[5, 14]}, {0.5, 
         0.35714285714285715`, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[5, 14], 
          Rational[3, 7]}, {0.5, 0.35714285714285715`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[5, 14], Rational[3, 7]}, {0.5, 
         0.35714285714285715`, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[5, 14], 
          Rational[1, 2]}, {0.5, 0.35714285714285715`, 0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[5, 14], Rational[1, 2]}, {0.5, 
         0.35714285714285715`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[3, 7], 
          Rational[1, 14]}, {0.5, 0.42857142857142855`, 
         0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[3, 7], Rational[1, 14]}, {0.5, 
         0.42857142857142855`, 0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[3, 7], 
          Rational[1, 7]}, {0.5, 0.42857142857142855`, 
         0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[3, 7], Rational[1, 7]}, {0.5, 
         0.42857142857142855`, 0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[3, 7], 
          Rational[3, 14]}, {0.5, 0.42857142857142855`, 
         0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[3, 7], Rational[3, 14]}, {0.5, 
         0.42857142857142855`, 0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[3, 7], 
          Rational[2, 7]}, {0.5, 0.42857142857142855`, 0.2857142857142857}]], 
       Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[3, 7], Rational[2, 7]}, {0.5, 
         0.42857142857142855`, 0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[3, 7], 
          Rational[5, 14]}, {0.5, 0.42857142857142855`, 
         0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[3, 7], Rational[5, 14]}, {0.5, 
         0.42857142857142855`, 0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[3, 7], 
          Rational[3, 7]}, {0.5, 0.42857142857142855`, 
         0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[3, 7], Rational[3, 7]}, {0.5, 
         0.42857142857142855`, 0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[3, 7], 
          Rational[1, 2]}, {0.5, 0.42857142857142855`, 0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[3, 7], Rational[1, 2]}, {0.5, 
         0.42857142857142855`, 0.5}]]}}, {
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[1, 2], 
          Rational[1, 14]}, {0.5, 0.5, 0.07142857142857142}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[1, 2], Rational[1, 14]}, {0.5, 0.5, 
         0.07142857142857142}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[1, 2], 
          Rational[1, 7]}, {0.5, 0.5, 0.14285714285714285`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[1, 2], Rational[1, 7]}, {0.5, 0.5, 
         0.14285714285714285`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[1, 2], 
          Rational[3, 14]}, {0.5, 0.5, 0.21428571428571427`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[1, 2], Rational[3, 14]}, {0.5, 0.5, 
         0.21428571428571427`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[1, 2], 
          Rational[2, 7]}, {0.5, 0.5, 0.2857142857142857}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[1, 2], Rational[2, 7]}, {0.5, 0.5, 
         0.2857142857142857}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[1, 2], 
          Rational[5, 14]}, {0.5, 0.5, 0.35714285714285715`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[1, 2], Rational[5, 14]}, {0.5, 0.5, 
         0.35714285714285715`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[1, 2], 
          Rational[3, 7]}, {0.5, 0.5, 0.42857142857142855`}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[1, 2], Rational[3, 7]}, {0.5, 0.5, 
         0.42857142857142855`}]]}, 
      {RGBColor[
        NCache[{
          Rational[1, 2], 
          Rational[1, 2], 
          Rational[1, 2]}, {0.5, 0.5, 0.5}]], Opacity[0.5], 
       CuboidBox[
        NCache[{Rational[1, 2], Rational[1, 2], Rational[1, 2]}, {0.5, 0.5, 
         0.5}]]}}}}},
  Boxed->False,
  ImageSize->700,
  ViewPoint->{2.9887318592227907`, 3.0917492494044763`, 1.1341720461426106`},
  ViewVertical->{0.08009773424135916, 0.033514764515614755`, 
   0.9962234255069812}]], "Output",
 CellChangeTimes->{3.69496549544524*^9, 3.694965532510449*^9, 
  3.6949655649132137`*^9, 3.6949656038206377`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"l", ",", "grid"}], "}"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.694965308881919*^9, 3.694965320219965*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     Graphics3DBox[{
       GraphicsComplex3DBox[{{-1, -1, -1}, {-1, -1, 1}, {-1, 1, -1}, {-1, 1, 
        1}, {1, -1, -1}, {1, -1, 1}, {1, 1, -1}, {1, 1, 1}, {0, 0, 1}, {1, 0, 
        0}, {0, 1, 0}, {-1, 0, 0}, {0, 0, -1}, {0, -1, 0}}, {
         {Opacity[0.1], EdgeForm[GrayLevel[0.8]], 
          Polygon3DBox[{{8, 4, 2, 6}, {8, 6, 5, 7}, {8, 7, 3, 4}, {4, 3, 1, 
           2}, {1, 3, 7, 5}, {2, 1, 5, 6}}]}, 
         {GrayLevel[0.8], 
          Line3DBox[{{9, 8}, {9, 4}, {9, 2}, {9, 6}, {10, 8}, {10, 6}, {10, 
           5}, {10, 7}, {11, 8}, {11, 7}, {11, 3}, {11, 4}, {12, 4}, {12, 
           3}, {12, 1}, {12, 2}, {13, 1}, {13, 3}, {13, 7}, {13, 5}, {14, 
           2}, {14, 1}, {14, 5}, {14, 6}}]}}], 
       {GrayLevel[0], Specularity[
         GrayLevel[1], 5], SphereBox[{-1, -1, -1}, 0.06], 
        SphereBox[{-1, -1, 1}, 0.06], SphereBox[{-1, 1, -1}, 0.06], 
        SphereBox[{-1, 1, 1}, 0.06], SphereBox[{1, -1, -1}, 0.06], 
        SphereBox[{1, -1, 1}, 0.06], SphereBox[{1, 1, -1}, 0.06], 
        SphereBox[{1, 1, 1}, 0.06], SphereBox[{0, 0, 1}, 0.06], 
        SphereBox[{1, 0, 0}, 0.06], SphereBox[{0, 1, 0}, 0.06], 
        SphereBox[{-1, 0, 0}, 0.06], SphereBox[{0, 0, -1}, 0.06], 
        SphereBox[{0, -1, 0}, 0.06]}},
      Boxed->False,
      ImageSize->700,
      ViewPoint->NCache[{4, 
         Rational[5, 3], 1}, {4, 1.6666666666666667`, 1}]], {192., -189.}, 
     ImageScaled[{0.5, 0.5}], {360., 360.},
     ContentSelectable->True], InsetBox[
     Graphics3DBox[{{{
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[1, 5], 
             Rational[1, 5]}, {0.2, 0.2, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[1, 5], Rational[1, 5]}, {0.2, 0.2,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[1, 5], 
             Rational[2, 5]}, {0.2, 0.2, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[1, 5], Rational[2, 5]}, {0.2, 0.2,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[1, 5], 
             Rational[3, 5]}, {0.2, 0.2, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[1, 5], Rational[3, 5]}, {0.2, 0.2,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[1, 5], 
             Rational[4, 5]}, {0.2, 0.2, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[1, 5], Rational[4, 5]}, {0.2, 0.2,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[1, 5], 1}, {0.2, 0.2, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[1, 5], 1}, {0.2, 0.2, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[1, 5], 
             Rational[6, 5]}, {0.2, 0.2, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[1, 5], Rational[6, 5]}, {0.2, 0.2,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[1, 5], 
             Rational[7, 5]}, {0.2, 0.2, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[1, 5], Rational[7, 5]}, {0.2, 0.2,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[2, 5], 
             Rational[1, 5]}, {0.2, 0.4, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[2, 5], Rational[1, 5]}, {0.2, 0.4,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[2, 5], 
             Rational[2, 5]}, {0.2, 0.4, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[2, 5], Rational[2, 5]}, {0.2, 0.4,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[2, 5], 
             Rational[3, 5]}, {0.2, 0.4, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[2, 5], Rational[3, 5]}, {0.2, 0.4,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[2, 5], 
             Rational[4, 5]}, {0.2, 0.4, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[2, 5], Rational[4, 5]}, {0.2, 0.4,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[2, 5], 1}, {0.2, 0.4, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[2, 5], 1}, {0.2, 0.4, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[2, 5], 
             Rational[6, 5]}, {0.2, 0.4, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[2, 5], Rational[6, 5]}, {0.2, 0.4,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[2, 5], 
             Rational[7, 5]}, {0.2, 0.4, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[2, 5], Rational[7, 5]}, {0.2, 0.4,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[3, 5], 
             Rational[1, 5]}, {0.2, 0.6, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[3, 5], Rational[1, 5]}, {0.2, 0.6,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[3, 5], 
             Rational[2, 5]}, {0.2, 0.6, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[3, 5], Rational[2, 5]}, {0.2, 0.6,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[3, 5], 
             Rational[3, 5]}, {0.2, 0.6, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[3, 5], Rational[3, 5]}, {0.2, 0.6,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[3, 5], 
             Rational[4, 5]}, {0.2, 0.6, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[3, 5], Rational[4, 5]}, {0.2, 0.6,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[3, 5], 1}, {0.2, 0.6, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[3, 5], 1}, {0.2, 0.6, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[3, 5], 
             Rational[6, 5]}, {0.2, 0.6, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[3, 5], Rational[6, 5]}, {0.2, 0.6,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[3, 5], 
             Rational[7, 5]}, {0.2, 0.6, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[3, 5], Rational[7, 5]}, {0.2, 0.6,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[4, 5], 
             Rational[1, 5]}, {0.2, 0.8, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[4, 5], Rational[1, 5]}, {0.2, 0.8,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[4, 5], 
             Rational[2, 5]}, {0.2, 0.8, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[4, 5], Rational[2, 5]}, {0.2, 0.8,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[4, 5], 
             Rational[3, 5]}, {0.2, 0.8, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[4, 5], Rational[3, 5]}, {0.2, 0.8,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[4, 5], 
             Rational[4, 5]}, {0.2, 0.8, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[4, 5], Rational[4, 5]}, {0.2, 0.8,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[4, 5], 1}, {0.2, 0.8, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[4, 5], 1}, {0.2, 0.8, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[4, 5], 
             Rational[6, 5]}, {0.2, 0.8, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[4, 5], Rational[6, 5]}, {0.2, 0.8,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[4, 5], 
             Rational[7, 5]}, {0.2, 0.8, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[4, 5], Rational[7, 5]}, {0.2, 0.8,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[1, 5], 1, 
             Rational[1, 5]}, {0.2, 1, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], 1, Rational[1, 5]}, {0.2, 1, 0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 1, 
             Rational[2, 5]}, {0.2, 1, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], 1, Rational[2, 5]}, {0.2, 1, 0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 1, 
             Rational[3, 5]}, {0.2, 1, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], 1, Rational[3, 5]}, {0.2, 1, 0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 1, 
             Rational[4, 5]}, {0.2, 1, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], 1, Rational[4, 5]}, {0.2, 1, 0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 1, 1}, {0.2, 1, 1}]], Opacity[0.5], 
          CuboidBox[NCache[{Rational[1, 5], 1, 1}, {0.2, 1, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 1, 
             Rational[6, 5]}, {0.2, 1, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], 1, Rational[6, 5]}, {0.2, 1, 1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 1, 
             Rational[7, 5]}, {0.2, 1, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], 1, Rational[7, 5]}, {0.2, 1, 1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[6, 5], 
             Rational[1, 5]}, {0.2, 1.2, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[6, 5], Rational[1, 5]}, {0.2, 1.2,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[6, 5], 
             Rational[2, 5]}, {0.2, 1.2, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[6, 5], Rational[2, 5]}, {0.2, 1.2,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[6, 5], 
             Rational[3, 5]}, {0.2, 1.2, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[6, 5], Rational[3, 5]}, {0.2, 1.2,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[6, 5], 
             Rational[4, 5]}, {0.2, 1.2, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[6, 5], Rational[4, 5]}, {0.2, 1.2,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[6, 5], 1}, {0.2, 1.2, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[6, 5], 1}, {0.2, 1.2, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[6, 5], 
             Rational[6, 5]}, {0.2, 1.2, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[6, 5], Rational[6, 5]}, {0.2, 1.2,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[6, 5], 
             Rational[7, 5]}, {0.2, 1.2, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[6, 5], Rational[7, 5]}, {0.2, 1.2,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[7, 5], 
             Rational[1, 5]}, {0.2, 1.4, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[7, 5], Rational[1, 5]}, {0.2, 1.4,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[7, 5], 
             Rational[2, 5]}, {0.2, 1.4, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[7, 5], Rational[2, 5]}, {0.2, 1.4,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[7, 5], 
             Rational[3, 5]}, {0.2, 1.4, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[7, 5], Rational[3, 5]}, {0.2, 1.4,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[7, 5], 
             Rational[4, 5]}, {0.2, 1.4, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[7, 5], Rational[4, 5]}, {0.2, 1.4,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[7, 5], 1}, {0.2, 1.4, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[7, 5], 1}, {0.2, 1.4, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[7, 5], 
             Rational[6, 5]}, {0.2, 1.4, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[7, 5], Rational[6, 5]}, {0.2, 1.4,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[1, 5], 
             Rational[7, 5], 
             Rational[7, 5]}, {0.2, 1.4, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[1, 5], Rational[7, 5], Rational[7, 5]}, {0.2, 1.4,
             1.4}]]}}}, {{
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[1, 5], 
             Rational[1, 5]}, {0.4, 0.2, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[1, 5], Rational[1, 5]}, {0.4, 0.2,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[1, 5], 
             Rational[2, 5]}, {0.4, 0.2, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[1, 5], Rational[2, 5]}, {0.4, 0.2,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[1, 5], 
             Rational[3, 5]}, {0.4, 0.2, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[1, 5], Rational[3, 5]}, {0.4, 0.2,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[1, 5], 
             Rational[4, 5]}, {0.4, 0.2, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[1, 5], Rational[4, 5]}, {0.4, 0.2,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[1, 5], 1}, {0.4, 0.2, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[1, 5], 1}, {0.4, 0.2, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[1, 5], 
             Rational[6, 5]}, {0.4, 0.2, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[1, 5], Rational[6, 5]}, {0.4, 0.2,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[1, 5], 
             Rational[7, 5]}, {0.4, 0.2, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[1, 5], Rational[7, 5]}, {0.4, 0.2,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[2, 5], 
             Rational[1, 5]}, {0.4, 0.4, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[2, 5], Rational[1, 5]}, {0.4, 0.4,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[2, 5], 
             Rational[2, 5]}, {0.4, 0.4, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[2, 5], Rational[2, 5]}, {0.4, 0.4,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[2, 5], 
             Rational[3, 5]}, {0.4, 0.4, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[2, 5], Rational[3, 5]}, {0.4, 0.4,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[2, 5], 
             Rational[4, 5]}, {0.4, 0.4, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[2, 5], Rational[4, 5]}, {0.4, 0.4,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[2, 5], 1}, {0.4, 0.4, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[2, 5], 1}, {0.4, 0.4, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[2, 5], 
             Rational[6, 5]}, {0.4, 0.4, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[2, 5], Rational[6, 5]}, {0.4, 0.4,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[2, 5], 
             Rational[7, 5]}, {0.4, 0.4, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[2, 5], Rational[7, 5]}, {0.4, 0.4,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[3, 5], 
             Rational[1, 5]}, {0.4, 0.6, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[3, 5], Rational[1, 5]}, {0.4, 0.6,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[3, 5], 
             Rational[2, 5]}, {0.4, 0.6, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[3, 5], Rational[2, 5]}, {0.4, 0.6,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[3, 5], 
             Rational[3, 5]}, {0.4, 0.6, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[3, 5], Rational[3, 5]}, {0.4, 0.6,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[3, 5], 
             Rational[4, 5]}, {0.4, 0.6, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[3, 5], Rational[4, 5]}, {0.4, 0.6,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[3, 5], 1}, {0.4, 0.6, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[3, 5], 1}, {0.4, 0.6, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[3, 5], 
             Rational[6, 5]}, {0.4, 0.6, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[3, 5], Rational[6, 5]}, {0.4, 0.6,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[3, 5], 
             Rational[7, 5]}, {0.4, 0.6, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[3, 5], Rational[7, 5]}, {0.4, 0.6,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[4, 5], 
             Rational[1, 5]}, {0.4, 0.8, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[4, 5], Rational[1, 5]}, {0.4, 0.8,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[4, 5], 
             Rational[2, 5]}, {0.4, 0.8, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[4, 5], Rational[2, 5]}, {0.4, 0.8,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[4, 5], 
             Rational[3, 5]}, {0.4, 0.8, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[4, 5], Rational[3, 5]}, {0.4, 0.8,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[4, 5], 
             Rational[4, 5]}, {0.4, 0.8, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[4, 5], Rational[4, 5]}, {0.4, 0.8,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[4, 5], 1}, {0.4, 0.8, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[4, 5], 1}, {0.4, 0.8, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[4, 5], 
             Rational[6, 5]}, {0.4, 0.8, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[4, 5], Rational[6, 5]}, {0.4, 0.8,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[4, 5], 
             Rational[7, 5]}, {0.4, 0.8, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[4, 5], Rational[7, 5]}, {0.4, 0.8,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[2, 5], 1, 
             Rational[1, 5]}, {0.4, 1, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], 1, Rational[1, 5]}, {0.4, 1, 0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 1, 
             Rational[2, 5]}, {0.4, 1, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], 1, Rational[2, 5]}, {0.4, 1, 0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 1, 
             Rational[3, 5]}, {0.4, 1, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], 1, Rational[3, 5]}, {0.4, 1, 0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 1, 
             Rational[4, 5]}, {0.4, 1, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], 1, Rational[4, 5]}, {0.4, 1, 0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 1, 1}, {0.4, 1, 1}]], Opacity[0.5], 
          CuboidBox[NCache[{Rational[2, 5], 1, 1}, {0.4, 1, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 1, 
             Rational[6, 5]}, {0.4, 1, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], 1, Rational[6, 5]}, {0.4, 1, 1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 1, 
             Rational[7, 5]}, {0.4, 1, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], 1, Rational[7, 5]}, {0.4, 1, 1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[6, 5], 
             Rational[1, 5]}, {0.4, 1.2, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[6, 5], Rational[1, 5]}, {0.4, 1.2,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[6, 5], 
             Rational[2, 5]}, {0.4, 1.2, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[6, 5], Rational[2, 5]}, {0.4, 1.2,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[6, 5], 
             Rational[3, 5]}, {0.4, 1.2, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[6, 5], Rational[3, 5]}, {0.4, 1.2,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[6, 5], 
             Rational[4, 5]}, {0.4, 1.2, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[6, 5], Rational[4, 5]}, {0.4, 1.2,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[6, 5], 1}, {0.4, 1.2, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[6, 5], 1}, {0.4, 1.2, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[6, 5], 
             Rational[6, 5]}, {0.4, 1.2, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[6, 5], Rational[6, 5]}, {0.4, 1.2,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[6, 5], 
             Rational[7, 5]}, {0.4, 1.2, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[6, 5], Rational[7, 5]}, {0.4, 1.2,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[7, 5], 
             Rational[1, 5]}, {0.4, 1.4, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[7, 5], Rational[1, 5]}, {0.4, 1.4,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[7, 5], 
             Rational[2, 5]}, {0.4, 1.4, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[7, 5], Rational[2, 5]}, {0.4, 1.4,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[7, 5], 
             Rational[3, 5]}, {0.4, 1.4, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[7, 5], Rational[3, 5]}, {0.4, 1.4,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[7, 5], 
             Rational[4, 5]}, {0.4, 1.4, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[7, 5], Rational[4, 5]}, {0.4, 1.4,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[7, 5], 1}, {0.4, 1.4, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[7, 5], 1}, {0.4, 1.4, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[7, 5], 
             Rational[6, 5]}, {0.4, 1.4, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[7, 5], Rational[6, 5]}, {0.4, 1.4,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[2, 5], 
             Rational[7, 5], 
             Rational[7, 5]}, {0.4, 1.4, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[2, 5], Rational[7, 5], Rational[7, 5]}, {0.4, 1.4,
             1.4}]]}}}, {{
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[1, 5], 
             Rational[1, 5]}, {0.6, 0.2, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[1, 5], Rational[1, 5]}, {0.6, 0.2,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[1, 5], 
             Rational[2, 5]}, {0.6, 0.2, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[1, 5], Rational[2, 5]}, {0.6, 0.2,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[1, 5], 
             Rational[3, 5]}, {0.6, 0.2, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[1, 5], Rational[3, 5]}, {0.6, 0.2,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[1, 5], 
             Rational[4, 5]}, {0.6, 0.2, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[1, 5], Rational[4, 5]}, {0.6, 0.2,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[1, 5], 1}, {0.6, 0.2, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[1, 5], 1}, {0.6, 0.2, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[1, 5], 
             Rational[6, 5]}, {0.6, 0.2, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[1, 5], Rational[6, 5]}, {0.6, 0.2,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[1, 5], 
             Rational[7, 5]}, {0.6, 0.2, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[1, 5], Rational[7, 5]}, {0.6, 0.2,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[2, 5], 
             Rational[1, 5]}, {0.6, 0.4, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[2, 5], Rational[1, 5]}, {0.6, 0.4,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[2, 5], 
             Rational[2, 5]}, {0.6, 0.4, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[2, 5], Rational[2, 5]}, {0.6, 0.4,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[2, 5], 
             Rational[3, 5]}, {0.6, 0.4, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[2, 5], Rational[3, 5]}, {0.6, 0.4,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[2, 5], 
             Rational[4, 5]}, {0.6, 0.4, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[2, 5], Rational[4, 5]}, {0.6, 0.4,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[2, 5], 1}, {0.6, 0.4, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[2, 5], 1}, {0.6, 0.4, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[2, 5], 
             Rational[6, 5]}, {0.6, 0.4, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[2, 5], Rational[6, 5]}, {0.6, 0.4,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[2, 5], 
             Rational[7, 5]}, {0.6, 0.4, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[2, 5], Rational[7, 5]}, {0.6, 0.4,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[3, 5], 
             Rational[1, 5]}, {0.6, 0.6, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[3, 5], Rational[1, 5]}, {0.6, 0.6,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[3, 5], 
             Rational[2, 5]}, {0.6, 0.6, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[3, 5], Rational[2, 5]}, {0.6, 0.6,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[3, 5], 
             Rational[3, 5]}, {0.6, 0.6, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[3, 5], Rational[3, 5]}, {0.6, 0.6,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[3, 5], 
             Rational[4, 5]}, {0.6, 0.6, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[3, 5], Rational[4, 5]}, {0.6, 0.6,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[3, 5], 1}, {0.6, 0.6, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[3, 5], 1}, {0.6, 0.6, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[3, 5], 
             Rational[6, 5]}, {0.6, 0.6, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[3, 5], Rational[6, 5]}, {0.6, 0.6,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[3, 5], 
             Rational[7, 5]}, {0.6, 0.6, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[3, 5], Rational[7, 5]}, {0.6, 0.6,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[4, 5], 
             Rational[1, 5]}, {0.6, 0.8, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[4, 5], Rational[1, 5]}, {0.6, 0.8,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[4, 5], 
             Rational[2, 5]}, {0.6, 0.8, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[4, 5], Rational[2, 5]}, {0.6, 0.8,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[4, 5], 
             Rational[3, 5]}, {0.6, 0.8, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[4, 5], Rational[3, 5]}, {0.6, 0.8,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[4, 5], 
             Rational[4, 5]}, {0.6, 0.8, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[4, 5], Rational[4, 5]}, {0.6, 0.8,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[4, 5], 1}, {0.6, 0.8, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[4, 5], 1}, {0.6, 0.8, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[4, 5], 
             Rational[6, 5]}, {0.6, 0.8, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[4, 5], Rational[6, 5]}, {0.6, 0.8,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[4, 5], 
             Rational[7, 5]}, {0.6, 0.8, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[4, 5], Rational[7, 5]}, {0.6, 0.8,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[3, 5], 1, 
             Rational[1, 5]}, {0.6, 1, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], 1, Rational[1, 5]}, {0.6, 1, 0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 1, 
             Rational[2, 5]}, {0.6, 1, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], 1, Rational[2, 5]}, {0.6, 1, 0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 1, 
             Rational[3, 5]}, {0.6, 1, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], 1, Rational[3, 5]}, {0.6, 1, 0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 1, 
             Rational[4, 5]}, {0.6, 1, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], 1, Rational[4, 5]}, {0.6, 1, 0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 1, 1}, {0.6, 1, 1}]], Opacity[0.5], 
          CuboidBox[NCache[{Rational[3, 5], 1, 1}, {0.6, 1, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 1, 
             Rational[6, 5]}, {0.6, 1, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], 1, Rational[6, 5]}, {0.6, 1, 1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 1, 
             Rational[7, 5]}, {0.6, 1, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], 1, Rational[7, 5]}, {0.6, 1, 1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[6, 5], 
             Rational[1, 5]}, {0.6, 1.2, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[6, 5], Rational[1, 5]}, {0.6, 1.2,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[6, 5], 
             Rational[2, 5]}, {0.6, 1.2, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[6, 5], Rational[2, 5]}, {0.6, 1.2,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[6, 5], 
             Rational[3, 5]}, {0.6, 1.2, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[6, 5], Rational[3, 5]}, {0.6, 1.2,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[6, 5], 
             Rational[4, 5]}, {0.6, 1.2, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[6, 5], Rational[4, 5]}, {0.6, 1.2,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[6, 5], 1}, {0.6, 1.2, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[6, 5], 1}, {0.6, 1.2, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[6, 5], 
             Rational[6, 5]}, {0.6, 1.2, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[6, 5], Rational[6, 5]}, {0.6, 1.2,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[6, 5], 
             Rational[7, 5]}, {0.6, 1.2, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[6, 5], Rational[7, 5]}, {0.6, 1.2,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[7, 5], 
             Rational[1, 5]}, {0.6, 1.4, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[7, 5], Rational[1, 5]}, {0.6, 1.4,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[7, 5], 
             Rational[2, 5]}, {0.6, 1.4, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[7, 5], Rational[2, 5]}, {0.6, 1.4,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[7, 5], 
             Rational[3, 5]}, {0.6, 1.4, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[7, 5], Rational[3, 5]}, {0.6, 1.4,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[7, 5], 
             Rational[4, 5]}, {0.6, 1.4, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[7, 5], Rational[4, 5]}, {0.6, 1.4,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[7, 5], 1}, {0.6, 1.4, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[7, 5], 1}, {0.6, 1.4, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[7, 5], 
             Rational[6, 5]}, {0.6, 1.4, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[7, 5], Rational[6, 5]}, {0.6, 1.4,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[3, 5], 
             Rational[7, 5], 
             Rational[7, 5]}, {0.6, 1.4, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[3, 5], Rational[7, 5], Rational[7, 5]}, {0.6, 1.4,
             1.4}]]}}}, {{
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[1, 5], 
             Rational[1, 5]}, {0.8, 0.2, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[1, 5], Rational[1, 5]}, {0.8, 0.2,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[1, 5], 
             Rational[2, 5]}, {0.8, 0.2, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[1, 5], Rational[2, 5]}, {0.8, 0.2,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[1, 5], 
             Rational[3, 5]}, {0.8, 0.2, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[1, 5], Rational[3, 5]}, {0.8, 0.2,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[1, 5], 
             Rational[4, 5]}, {0.8, 0.2, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[1, 5], Rational[4, 5]}, {0.8, 0.2,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[1, 5], 1}, {0.8, 0.2, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[1, 5], 1}, {0.8, 0.2, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[1, 5], 
             Rational[6, 5]}, {0.8, 0.2, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[1, 5], Rational[6, 5]}, {0.8, 0.2,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[1, 5], 
             Rational[7, 5]}, {0.8, 0.2, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[1, 5], Rational[7, 5]}, {0.8, 0.2,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[2, 5], 
             Rational[1, 5]}, {0.8, 0.4, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[2, 5], Rational[1, 5]}, {0.8, 0.4,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[2, 5], 
             Rational[2, 5]}, {0.8, 0.4, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[2, 5], Rational[2, 5]}, {0.8, 0.4,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[2, 5], 
             Rational[3, 5]}, {0.8, 0.4, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[2, 5], Rational[3, 5]}, {0.8, 0.4,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[2, 5], 
             Rational[4, 5]}, {0.8, 0.4, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[2, 5], Rational[4, 5]}, {0.8, 0.4,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[2, 5], 1}, {0.8, 0.4, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[2, 5], 1}, {0.8, 0.4, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[2, 5], 
             Rational[6, 5]}, {0.8, 0.4, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[2, 5], Rational[6, 5]}, {0.8, 0.4,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[2, 5], 
             Rational[7, 5]}, {0.8, 0.4, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[2, 5], Rational[7, 5]}, {0.8, 0.4,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[3, 5], 
             Rational[1, 5]}, {0.8, 0.6, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[3, 5], Rational[1, 5]}, {0.8, 0.6,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[3, 5], 
             Rational[2, 5]}, {0.8, 0.6, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[3, 5], Rational[2, 5]}, {0.8, 0.6,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[3, 5], 
             Rational[3, 5]}, {0.8, 0.6, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[3, 5], Rational[3, 5]}, {0.8, 0.6,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[3, 5], 
             Rational[4, 5]}, {0.8, 0.6, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[3, 5], Rational[4, 5]}, {0.8, 0.6,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[3, 5], 1}, {0.8, 0.6, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[3, 5], 1}, {0.8, 0.6, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[3, 5], 
             Rational[6, 5]}, {0.8, 0.6, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[3, 5], Rational[6, 5]}, {0.8, 0.6,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[3, 5], 
             Rational[7, 5]}, {0.8, 0.6, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[3, 5], Rational[7, 5]}, {0.8, 0.6,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[4, 5], 
             Rational[1, 5]}, {0.8, 0.8, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[4, 5], Rational[1, 5]}, {0.8, 0.8,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[4, 5], 
             Rational[2, 5]}, {0.8, 0.8, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[4, 5], Rational[2, 5]}, {0.8, 0.8,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[4, 5], 
             Rational[3, 5]}, {0.8, 0.8, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[4, 5], Rational[3, 5]}, {0.8, 0.8,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[4, 5], 
             Rational[4, 5]}, {0.8, 0.8, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[4, 5], Rational[4, 5]}, {0.8, 0.8,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[4, 5], 1}, {0.8, 0.8, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[4, 5], 1}, {0.8, 0.8, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[4, 5], 
             Rational[6, 5]}, {0.8, 0.8, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[4, 5], Rational[6, 5]}, {0.8, 0.8,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[4, 5], 
             Rational[7, 5]}, {0.8, 0.8, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[4, 5], Rational[7, 5]}, {0.8, 0.8,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[4, 5], 1, 
             Rational[1, 5]}, {0.8, 1, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], 1, Rational[1, 5]}, {0.8, 1, 0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 1, 
             Rational[2, 5]}, {0.8, 1, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], 1, Rational[2, 5]}, {0.8, 1, 0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 1, 
             Rational[3, 5]}, {0.8, 1, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], 1, Rational[3, 5]}, {0.8, 1, 0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 1, 
             Rational[4, 5]}, {0.8, 1, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], 1, Rational[4, 5]}, {0.8, 1, 0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 1, 1}, {0.8, 1, 1}]], Opacity[0.5], 
          CuboidBox[NCache[{Rational[4, 5], 1, 1}, {0.8, 1, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 1, 
             Rational[6, 5]}, {0.8, 1, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], 1, Rational[6, 5]}, {0.8, 1, 1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 1, 
             Rational[7, 5]}, {0.8, 1, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], 1, Rational[7, 5]}, {0.8, 1, 1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[6, 5], 
             Rational[1, 5]}, {0.8, 1.2, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[6, 5], Rational[1, 5]}, {0.8, 1.2,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[6, 5], 
             Rational[2, 5]}, {0.8, 1.2, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[6, 5], Rational[2, 5]}, {0.8, 1.2,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[6, 5], 
             Rational[3, 5]}, {0.8, 1.2, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[6, 5], Rational[3, 5]}, {0.8, 1.2,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[6, 5], 
             Rational[4, 5]}, {0.8, 1.2, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[6, 5], Rational[4, 5]}, {0.8, 1.2,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[6, 5], 1}, {0.8, 1.2, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[6, 5], 1}, {0.8, 1.2, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[6, 5], 
             Rational[6, 5]}, {0.8, 1.2, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[6, 5], Rational[6, 5]}, {0.8, 1.2,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[6, 5], 
             Rational[7, 5]}, {0.8, 1.2, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[6, 5], Rational[7, 5]}, {0.8, 1.2,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[7, 5], 
             Rational[1, 5]}, {0.8, 1.4, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[7, 5], Rational[1, 5]}, {0.8, 1.4,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[7, 5], 
             Rational[2, 5]}, {0.8, 1.4, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[7, 5], Rational[2, 5]}, {0.8, 1.4,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[7, 5], 
             Rational[3, 5]}, {0.8, 1.4, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[7, 5], Rational[3, 5]}, {0.8, 1.4,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[7, 5], 
             Rational[4, 5]}, {0.8, 1.4, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[7, 5], Rational[4, 5]}, {0.8, 1.4,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[7, 5], 1}, {0.8, 1.4, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[7, 5], 1}, {0.8, 1.4, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[7, 5], 
             Rational[6, 5]}, {0.8, 1.4, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[7, 5], Rational[6, 5]}, {0.8, 1.4,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[4, 5], 
             Rational[7, 5], 
             Rational[7, 5]}, {0.8, 1.4, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[4, 5], Rational[7, 5], Rational[7, 5]}, {0.8, 1.4,
             1.4}]]}}}, {{
         {RGBColor[
           NCache[{1, 
             Rational[1, 5], 
             Rational[1, 5]}, {1, 0.2, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[1, 5], Rational[1, 5]}, {1, 0.2, 0.2}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[1, 5], 
             Rational[2, 5]}, {1, 0.2, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[1, 5], Rational[2, 5]}, {1, 0.2, 0.4}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[1, 5], 
             Rational[3, 5]}, {1, 0.2, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[1, 5], Rational[3, 5]}, {1, 0.2, 0.6}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[1, 5], 
             Rational[4, 5]}, {1, 0.2, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[1, 5], Rational[4, 5]}, {1, 0.2, 0.8}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[1, 5], 1}, {1, 0.2, 1}]], Opacity[0.5], 
          CuboidBox[NCache[{1, Rational[1, 5], 1}, {1, 0.2, 1}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[1, 5], 
             Rational[6, 5]}, {1, 0.2, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[1, 5], Rational[6, 5]}, {1, 0.2, 1.2}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[1, 5], 
             Rational[7, 5]}, {1, 0.2, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[1, 5], Rational[7, 5]}, {1, 0.2, 1.4}]]}}, {
         {RGBColor[
           NCache[{1, 
             Rational[2, 5], 
             Rational[1, 5]}, {1, 0.4, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[2, 5], Rational[1, 5]}, {1, 0.4, 0.2}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[2, 5], 
             Rational[2, 5]}, {1, 0.4, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[2, 5], Rational[2, 5]}, {1, 0.4, 0.4}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[2, 5], 
             Rational[3, 5]}, {1, 0.4, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[2, 5], Rational[3, 5]}, {1, 0.4, 0.6}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[2, 5], 
             Rational[4, 5]}, {1, 0.4, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[2, 5], Rational[4, 5]}, {1, 0.4, 0.8}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[2, 5], 1}, {1, 0.4, 1}]], Opacity[0.5], 
          CuboidBox[NCache[{1, Rational[2, 5], 1}, {1, 0.4, 1}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[2, 5], 
             Rational[6, 5]}, {1, 0.4, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[2, 5], Rational[6, 5]}, {1, 0.4, 1.2}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[2, 5], 
             Rational[7, 5]}, {1, 0.4, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[2, 5], Rational[7, 5]}, {1, 0.4, 1.4}]]}}, {
         {RGBColor[
           NCache[{1, 
             Rational[3, 5], 
             Rational[1, 5]}, {1, 0.6, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[3, 5], Rational[1, 5]}, {1, 0.6, 0.2}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[3, 5], 
             Rational[2, 5]}, {1, 0.6, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[3, 5], Rational[2, 5]}, {1, 0.6, 0.4}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[3, 5], 
             Rational[3, 5]}, {1, 0.6, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[3, 5], Rational[3, 5]}, {1, 0.6, 0.6}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[3, 5], 
             Rational[4, 5]}, {1, 0.6, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[3, 5], Rational[4, 5]}, {1, 0.6, 0.8}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[3, 5], 1}, {1, 0.6, 1}]], Opacity[0.5], 
          CuboidBox[NCache[{1, Rational[3, 5], 1}, {1, 0.6, 1}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[3, 5], 
             Rational[6, 5]}, {1, 0.6, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[3, 5], Rational[6, 5]}, {1, 0.6, 1.2}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[3, 5], 
             Rational[7, 5]}, {1, 0.6, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[3, 5], Rational[7, 5]}, {1, 0.6, 1.4}]]}}, {
         {RGBColor[
           NCache[{1, 
             Rational[4, 5], 
             Rational[1, 5]}, {1, 0.8, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[4, 5], Rational[1, 5]}, {1, 0.8, 0.2}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[4, 5], 
             Rational[2, 5]}, {1, 0.8, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[4, 5], Rational[2, 5]}, {1, 0.8, 0.4}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[4, 5], 
             Rational[3, 5]}, {1, 0.8, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[4, 5], Rational[3, 5]}, {1, 0.8, 0.6}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[4, 5], 
             Rational[4, 5]}, {1, 0.8, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[4, 5], Rational[4, 5]}, {1, 0.8, 0.8}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[4, 5], 1}, {1, 0.8, 1}]], Opacity[0.5], 
          CuboidBox[NCache[{1, Rational[4, 5], 1}, {1, 0.8, 1}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[4, 5], 
             Rational[6, 5]}, {1, 0.8, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[4, 5], Rational[6, 5]}, {1, 0.8, 1.2}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[4, 5], 
             Rational[7, 5]}, {1, 0.8, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[4, 5], Rational[7, 5]}, {1, 0.8, 1.4}]]}}, {
         {RGBColor[
           NCache[{1, 1, 
             Rational[1, 5]}, {1, 1, 0.2}]], Opacity[0.5], 
          CuboidBox[NCache[{1, 1, Rational[1, 5]}, {1, 1, 0.2}]]}, 
         {RGBColor[
           NCache[{1, 1, 
             Rational[2, 5]}, {1, 1, 0.4}]], Opacity[0.5], 
          CuboidBox[NCache[{1, 1, Rational[2, 5]}, {1, 1, 0.4}]]}, 
         {RGBColor[
           NCache[{1, 1, 
             Rational[3, 5]}, {1, 1, 0.6}]], Opacity[0.5], 
          CuboidBox[NCache[{1, 1, Rational[3, 5]}, {1, 1, 0.6}]]}, 
         {RGBColor[
           NCache[{1, 1, 
             Rational[4, 5]}, {1, 1, 0.8}]], Opacity[0.5], 
          CuboidBox[NCache[{1, 1, Rational[4, 5]}, {1, 1, 0.8}]]}, 
         {RGBColor[1, 1, 1], Opacity[0.5], CuboidBox[{1, 1, 1}]}, 
         {RGBColor[
           NCache[{1, 1, 
             Rational[6, 5]}, {1, 1, 1.2}]], Opacity[0.5], 
          CuboidBox[NCache[{1, 1, Rational[6, 5]}, {1, 1, 1.2}]]}, 
         {RGBColor[
           NCache[{1, 1, 
             Rational[7, 5]}, {1, 1, 1.4}]], Opacity[0.5], 
          CuboidBox[NCache[{1, 1, Rational[7, 5]}, {1, 1, 1.4}]]}}, {
         {RGBColor[
           NCache[{1, 
             Rational[6, 5], 
             Rational[1, 5]}, {1, 1.2, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[6, 5], Rational[1, 5]}, {1, 1.2, 0.2}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[6, 5], 
             Rational[2, 5]}, {1, 1.2, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[6, 5], Rational[2, 5]}, {1, 1.2, 0.4}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[6, 5], 
             Rational[3, 5]}, {1, 1.2, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[6, 5], Rational[3, 5]}, {1, 1.2, 0.6}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[6, 5], 
             Rational[4, 5]}, {1, 1.2, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[6, 5], Rational[4, 5]}, {1, 1.2, 0.8}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[6, 5], 1}, {1, 1.2, 1}]], Opacity[0.5], 
          CuboidBox[NCache[{1, Rational[6, 5], 1}, {1, 1.2, 1}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[6, 5], 
             Rational[6, 5]}, {1, 1.2, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[6, 5], Rational[6, 5]}, {1, 1.2, 1.2}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[6, 5], 
             Rational[7, 5]}, {1, 1.2, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[6, 5], Rational[7, 5]}, {1, 1.2, 1.4}]]}}, {
         {RGBColor[
           NCache[{1, 
             Rational[7, 5], 
             Rational[1, 5]}, {1, 1.4, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[7, 5], Rational[1, 5]}, {1, 1.4, 0.2}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[7, 5], 
             Rational[2, 5]}, {1, 1.4, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[7, 5], Rational[2, 5]}, {1, 1.4, 0.4}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[7, 5], 
             Rational[3, 5]}, {1, 1.4, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[7, 5], Rational[3, 5]}, {1, 1.4, 0.6}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[7, 5], 
             Rational[4, 5]}, {1, 1.4, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[7, 5], Rational[4, 5]}, {1, 1.4, 0.8}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[7, 5], 1}, {1, 1.4, 1}]], Opacity[0.5], 
          CuboidBox[NCache[{1, Rational[7, 5], 1}, {1, 1.4, 1}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[7, 5], 
             Rational[6, 5]}, {1, 1.4, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[7, 5], Rational[6, 5]}, {1, 1.4, 1.2}]]}, 
         {RGBColor[
           NCache[{1, 
             Rational[7, 5], 
             Rational[7, 5]}, {1, 1.4, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{1, Rational[7, 5], Rational[7, 5]}, {1, 1.4, 1.4}]]}}}, {{
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[1, 5], 
             Rational[1, 5]}, {1.2, 0.2, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[1, 5], Rational[1, 5]}, {1.2, 0.2,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[1, 5], 
             Rational[2, 5]}, {1.2, 0.2, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[1, 5], Rational[2, 5]}, {1.2, 0.2,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[1, 5], 
             Rational[3, 5]}, {1.2, 0.2, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[1, 5], Rational[3, 5]}, {1.2, 0.2,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[1, 5], 
             Rational[4, 5]}, {1.2, 0.2, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[1, 5], Rational[4, 5]}, {1.2, 0.2,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[1, 5], 1}, {1.2, 0.2, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[1, 5], 1}, {1.2, 0.2, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[1, 5], 
             Rational[6, 5]}, {1.2, 0.2, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[1, 5], Rational[6, 5]}, {1.2, 0.2,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[1, 5], 
             Rational[7, 5]}, {1.2, 0.2, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[1, 5], Rational[7, 5]}, {1.2, 0.2,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[2, 5], 
             Rational[1, 5]}, {1.2, 0.4, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[2, 5], Rational[1, 5]}, {1.2, 0.4,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[2, 5], 
             Rational[2, 5]}, {1.2, 0.4, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[2, 5], Rational[2, 5]}, {1.2, 0.4,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[2, 5], 
             Rational[3, 5]}, {1.2, 0.4, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[2, 5], Rational[3, 5]}, {1.2, 0.4,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[2, 5], 
             Rational[4, 5]}, {1.2, 0.4, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[2, 5], Rational[4, 5]}, {1.2, 0.4,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[2, 5], 1}, {1.2, 0.4, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[2, 5], 1}, {1.2, 0.4, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[2, 5], 
             Rational[6, 5]}, {1.2, 0.4, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[2, 5], Rational[6, 5]}, {1.2, 0.4,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[2, 5], 
             Rational[7, 5]}, {1.2, 0.4, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[2, 5], Rational[7, 5]}, {1.2, 0.4,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[3, 5], 
             Rational[1, 5]}, {1.2, 0.6, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[3, 5], Rational[1, 5]}, {1.2, 0.6,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[3, 5], 
             Rational[2, 5]}, {1.2, 0.6, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[3, 5], Rational[2, 5]}, {1.2, 0.6,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[3, 5], 
             Rational[3, 5]}, {1.2, 0.6, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[3, 5], Rational[3, 5]}, {1.2, 0.6,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[3, 5], 
             Rational[4, 5]}, {1.2, 0.6, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[3, 5], Rational[4, 5]}, {1.2, 0.6,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[3, 5], 1}, {1.2, 0.6, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[3, 5], 1}, {1.2, 0.6, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[3, 5], 
             Rational[6, 5]}, {1.2, 0.6, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[3, 5], Rational[6, 5]}, {1.2, 0.6,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[3, 5], 
             Rational[7, 5]}, {1.2, 0.6, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[3, 5], Rational[7, 5]}, {1.2, 0.6,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[4, 5], 
             Rational[1, 5]}, {1.2, 0.8, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[4, 5], Rational[1, 5]}, {1.2, 0.8,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[4, 5], 
             Rational[2, 5]}, {1.2, 0.8, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[4, 5], Rational[2, 5]}, {1.2, 0.8,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[4, 5], 
             Rational[3, 5]}, {1.2, 0.8, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[4, 5], Rational[3, 5]}, {1.2, 0.8,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[4, 5], 
             Rational[4, 5]}, {1.2, 0.8, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[4, 5], Rational[4, 5]}, {1.2, 0.8,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[4, 5], 1}, {1.2, 0.8, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[4, 5], 1}, {1.2, 0.8, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[4, 5], 
             Rational[6, 5]}, {1.2, 0.8, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[4, 5], Rational[6, 5]}, {1.2, 0.8,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[4, 5], 
             Rational[7, 5]}, {1.2, 0.8, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[4, 5], Rational[7, 5]}, {1.2, 0.8,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[6, 5], 1, 
             Rational[1, 5]}, {1.2, 1, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], 1, Rational[1, 5]}, {1.2, 1, 0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 1, 
             Rational[2, 5]}, {1.2, 1, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], 1, Rational[2, 5]}, {1.2, 1, 0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 1, 
             Rational[3, 5]}, {1.2, 1, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], 1, Rational[3, 5]}, {1.2, 1, 0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 1, 
             Rational[4, 5]}, {1.2, 1, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], 1, Rational[4, 5]}, {1.2, 1, 0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 1, 1}, {1.2, 1, 1}]], Opacity[0.5], 
          CuboidBox[NCache[{Rational[6, 5], 1, 1}, {1.2, 1, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 1, 
             Rational[6, 5]}, {1.2, 1, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], 1, Rational[6, 5]}, {1.2, 1, 1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 1, 
             Rational[7, 5]}, {1.2, 1, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], 1, Rational[7, 5]}, {1.2, 1, 1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[6, 5], 
             Rational[1, 5]}, {1.2, 1.2, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[6, 5], Rational[1, 5]}, {1.2, 1.2,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[6, 5], 
             Rational[2, 5]}, {1.2, 1.2, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[6, 5], Rational[2, 5]}, {1.2, 1.2,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[6, 5], 
             Rational[3, 5]}, {1.2, 1.2, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[6, 5], Rational[3, 5]}, {1.2, 1.2,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[6, 5], 
             Rational[4, 5]}, {1.2, 1.2, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[6, 5], Rational[4, 5]}, {1.2, 1.2,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[6, 5], 1}, {1.2, 1.2, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[6, 5], 1}, {1.2, 1.2, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[6, 5], 
             Rational[6, 5]}, {1.2, 1.2, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[6, 5], Rational[6, 5]}, {1.2, 1.2,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[6, 5], 
             Rational[7, 5]}, {1.2, 1.2, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[6, 5], Rational[7, 5]}, {1.2, 1.2,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[7, 5], 
             Rational[1, 5]}, {1.2, 1.4, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[7, 5], Rational[1, 5]}, {1.2, 1.4,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[7, 5], 
             Rational[2, 5]}, {1.2, 1.4, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[7, 5], Rational[2, 5]}, {1.2, 1.4,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[7, 5], 
             Rational[3, 5]}, {1.2, 1.4, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[7, 5], Rational[3, 5]}, {1.2, 1.4,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[7, 5], 
             Rational[4, 5]}, {1.2, 1.4, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[7, 5], Rational[4, 5]}, {1.2, 1.4,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[7, 5], 1}, {1.2, 1.4, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[7, 5], 1}, {1.2, 1.4, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[7, 5], 
             Rational[6, 5]}, {1.2, 1.4, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[7, 5], Rational[6, 5]}, {1.2, 1.4,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[6, 5], 
             Rational[7, 5], 
             Rational[7, 5]}, {1.2, 1.4, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[6, 5], Rational[7, 5], Rational[7, 5]}, {1.2, 1.4,
             1.4}]]}}}, {{
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[1, 5], 
             Rational[1, 5]}, {1.4, 0.2, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[1, 5], Rational[1, 5]}, {1.4, 0.2,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[1, 5], 
             Rational[2, 5]}, {1.4, 0.2, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[1, 5], Rational[2, 5]}, {1.4, 0.2,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[1, 5], 
             Rational[3, 5]}, {1.4, 0.2, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[1, 5], Rational[3, 5]}, {1.4, 0.2,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[1, 5], 
             Rational[4, 5]}, {1.4, 0.2, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[1, 5], Rational[4, 5]}, {1.4, 0.2,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[1, 5], 1}, {1.4, 0.2, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[1, 5], 1}, {1.4, 0.2, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[1, 5], 
             Rational[6, 5]}, {1.4, 0.2, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[1, 5], Rational[6, 5]}, {1.4, 0.2,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[1, 5], 
             Rational[7, 5]}, {1.4, 0.2, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[1, 5], Rational[7, 5]}, {1.4, 0.2,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[2, 5], 
             Rational[1, 5]}, {1.4, 0.4, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[2, 5], Rational[1, 5]}, {1.4, 0.4,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[2, 5], 
             Rational[2, 5]}, {1.4, 0.4, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[2, 5], Rational[2, 5]}, {1.4, 0.4,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[2, 5], 
             Rational[3, 5]}, {1.4, 0.4, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[2, 5], Rational[3, 5]}, {1.4, 0.4,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[2, 5], 
             Rational[4, 5]}, {1.4, 0.4, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[2, 5], Rational[4, 5]}, {1.4, 0.4,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[2, 5], 1}, {1.4, 0.4, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[2, 5], 1}, {1.4, 0.4, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[2, 5], 
             Rational[6, 5]}, {1.4, 0.4, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[2, 5], Rational[6, 5]}, {1.4, 0.4,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[2, 5], 
             Rational[7, 5]}, {1.4, 0.4, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[2, 5], Rational[7, 5]}, {1.4, 0.4,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[3, 5], 
             Rational[1, 5]}, {1.4, 0.6, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[3, 5], Rational[1, 5]}, {1.4, 0.6,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[3, 5], 
             Rational[2, 5]}, {1.4, 0.6, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[3, 5], Rational[2, 5]}, {1.4, 0.6,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[3, 5], 
             Rational[3, 5]}, {1.4, 0.6, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[3, 5], Rational[3, 5]}, {1.4, 0.6,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[3, 5], 
             Rational[4, 5]}, {1.4, 0.6, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[3, 5], Rational[4, 5]}, {1.4, 0.6,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[3, 5], 1}, {1.4, 0.6, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[3, 5], 1}, {1.4, 0.6, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[3, 5], 
             Rational[6, 5]}, {1.4, 0.6, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[3, 5], Rational[6, 5]}, {1.4, 0.6,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[3, 5], 
             Rational[7, 5]}, {1.4, 0.6, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[3, 5], Rational[7, 5]}, {1.4, 0.6,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[4, 5], 
             Rational[1, 5]}, {1.4, 0.8, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[4, 5], Rational[1, 5]}, {1.4, 0.8,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[4, 5], 
             Rational[2, 5]}, {1.4, 0.8, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[4, 5], Rational[2, 5]}, {1.4, 0.8,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[4, 5], 
             Rational[3, 5]}, {1.4, 0.8, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[4, 5], Rational[3, 5]}, {1.4, 0.8,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[4, 5], 
             Rational[4, 5]}, {1.4, 0.8, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[4, 5], Rational[4, 5]}, {1.4, 0.8,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[4, 5], 1}, {1.4, 0.8, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[4, 5], 1}, {1.4, 0.8, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[4, 5], 
             Rational[6, 5]}, {1.4, 0.8, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[4, 5], Rational[6, 5]}, {1.4, 0.8,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[4, 5], 
             Rational[7, 5]}, {1.4, 0.8, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[4, 5], Rational[7, 5]}, {1.4, 0.8,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[7, 5], 1, 
             Rational[1, 5]}, {1.4, 1, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], 1, Rational[1, 5]}, {1.4, 1, 0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 1, 
             Rational[2, 5]}, {1.4, 1, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], 1, Rational[2, 5]}, {1.4, 1, 0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 1, 
             Rational[3, 5]}, {1.4, 1, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], 1, Rational[3, 5]}, {1.4, 1, 0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 1, 
             Rational[4, 5]}, {1.4, 1, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], 1, Rational[4, 5]}, {1.4, 1, 0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 1, 1}, {1.4, 1, 1}]], Opacity[0.5], 
          CuboidBox[NCache[{Rational[7, 5], 1, 1}, {1.4, 1, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 1, 
             Rational[6, 5]}, {1.4, 1, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], 1, Rational[6, 5]}, {1.4, 1, 1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 1, 
             Rational[7, 5]}, {1.4, 1, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], 1, Rational[7, 5]}, {1.4, 1, 1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[6, 5], 
             Rational[1, 5]}, {1.4, 1.2, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[6, 5], Rational[1, 5]}, {1.4, 1.2,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[6, 5], 
             Rational[2, 5]}, {1.4, 1.2, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[6, 5], Rational[2, 5]}, {1.4, 1.2,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[6, 5], 
             Rational[3, 5]}, {1.4, 1.2, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[6, 5], Rational[3, 5]}, {1.4, 1.2,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[6, 5], 
             Rational[4, 5]}, {1.4, 1.2, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[6, 5], Rational[4, 5]}, {1.4, 1.2,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[6, 5], 1}, {1.4, 1.2, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[6, 5], 1}, {1.4, 1.2, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[6, 5], 
             Rational[6, 5]}, {1.4, 1.2, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[6, 5], Rational[6, 5]}, {1.4, 1.2,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[6, 5], 
             Rational[7, 5]}, {1.4, 1.2, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[6, 5], Rational[7, 5]}, {1.4, 1.2,
             1.4}]]}}, {
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[7, 5], 
             Rational[1, 5]}, {1.4, 1.4, 0.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[7, 5], Rational[1, 5]}, {1.4, 1.4,
             0.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[7, 5], 
             Rational[2, 5]}, {1.4, 1.4, 0.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[7, 5], Rational[2, 5]}, {1.4, 1.4,
             0.4}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[7, 5], 
             Rational[3, 5]}, {1.4, 1.4, 0.6}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[7, 5], Rational[3, 5]}, {1.4, 1.4,
             0.6}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[7, 5], 
             Rational[4, 5]}, {1.4, 1.4, 0.8}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[7, 5], Rational[4, 5]}, {1.4, 1.4,
             0.8}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[7, 5], 1}, {1.4, 1.4, 1}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[7, 5], 1}, {1.4, 1.4, 1}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[7, 5], 
             Rational[6, 5]}, {1.4, 1.4, 1.2}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[7, 5], Rational[6, 5]}, {1.4, 1.4,
             1.2}]]}, 
         {RGBColor[
           NCache[{
             Rational[7, 5], 
             Rational[7, 5], 
             Rational[7, 5]}, {1.4, 1.4, 1.4}]], Opacity[0.5], 
          CuboidBox[
           NCache[{Rational[7, 5], Rational[7, 5], Rational[7, 5]}, {1.4, 1.4,
             1.4}]]}}}},
      ImageSize->200,
      ViewPoint->{1.2009676000557128`, -2.8001627805717786`, 
       1.4719936229199322`},
      ViewVertical->{0.08429303726966539, -0.1611790939106798, 
       0.9833188615876273}], {576., -189.}, ImageScaled[{0.5, 0.5}], {360., 360.},
     
     ContentSelectable->True]}, {}},
  ContentSelectable->True,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.694965320910986*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{
   RowBox[{"Cuboid", "[", "]"}], ",", 
   RowBox[{"FaceGrids", "\[Rule]", "All"}], ",", 
   RowBox[{"FaceGridsStyle", "\[Rule]", "100"}], ",", 
   RowBox[{"FaceGridsStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Orange", ",", "Dashed", ",", "0.01"}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.694964586561769*^9, 3.6949646043617487`*^9}, {
  3.694964643258016*^9, 3.694964662889615*^9}, {3.694964767912434*^9, 
  3.694964785411158*^9}, {3.694964892297172*^9, 3.694964925215108*^9}}],

Cell[BoxData[
 Graphics3DBox[CuboidBox[{0, 0, 0}],
  FaceGrids->All,
  FaceGridsStyle->100,
  ImageSize->{326.20019158460735`, 324.29192015003616`},
  ViewPoint->{1.1477796148953694`, -2.5920238795357338`, 1.847705107301261},
  ViewVertical->{-0.04155441725081055, -0.08006201985571236, 
   0.9959233421220577}]], "Output",
 CellChangeTimes->{
  3.694964592102395*^9, {3.694964650929184*^9, 3.694964663403926*^9}, {
   3.694964771789939*^9, 3.694964785804735*^9}, {3.694964913020591*^9, 
   3.694964925600875*^9}}]
}, Open  ]]
},
WindowSize->{1440, 851},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 4811, 123, 285, "Input"],
Cell[CellGroupData[{
Cell[5394, 147, 734, 18, 96, "Input"],
Cell[6131, 167, 12614, 292, 378, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18782, 464, 780, 20, 96, "Input"],
Cell[19565, 486, 13655, 317, 374, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33257, 808, 754, 19, 96, "Input"],
Cell[34014, 829, 14423, 337, 374, "Output"]
}, Open  ]],
Cell[48452, 1169, 527, 13, 54, "Input"],
Cell[CellGroupData[{
Cell[49004, 1186, 192, 5, 54, "Input"],
Cell[49199, 1193, 12692, 298, 358, "Output"]
}, Open  ]],
Cell[61906, 1494, 753, 16, 54, "Input"],
Cell[CellGroupData[{
Cell[62684, 1514, 236, 6, 54, "Input"],
Cell[62923, 1522, 13333, 312, 374, "Output"]
}, Open  ]],
Cell[76271, 1837, 470, 12, 54, "Input"],
Cell[CellGroupData[{
Cell[76766, 1853, 192, 5, 54, "Input"],
Cell[76961, 1860, 131147, 2264, 370, 15788, 371, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[208123, 4127, 564, 14, 54, "Input"],
Cell[CellGroupData[{
Cell[208712, 4145, 234, 6, 54, "Input"],
Cell[208949, 4153, 133980, 2307, 371, 15974, 371, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[342944, 6463, 571, 14, 54, "Input"],
Cell[CellGroupData[{
Cell[343540, 6481, 258, 6, 54, "Input"],
Cell[343801, 6489, 17338, 405, 378, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[361176, 6899, 702, 19, 96, "Input"],
Cell[361881, 6920, 17008, 394, 364, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[378926, 7319, 681, 18, 96, "Input"],
Cell[379610, 7339, 14942, 350, 352, "Output"]
}, Open  ]],
Cell[394567, 7692, 565, 14, 54, "Input"],
Cell[CellGroupData[{
Cell[395157, 7710, 284, 7, 54, "Input"],
Cell[395444, 7719, 14460, 337, 368, "Output"]
}, Open  ]],
Cell[409919, 8059, 680, 15, 54, "Input"],
Cell[CellGroupData[{
Cell[410624, 8078, 192, 5, 54, "Input"],
Cell[410819, 8085, 10410, 245, 529, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421266, 8335, 192, 5, 54, "Input"],
Cell[421461, 8342, 11565, 270, 350, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[433063, 8617, 36, 0, 32, "Input"],
Cell[433102, 8619, 2733, 43, 327, "Output"]
}, Open  ]],
Cell[435850, 8665, 640, 18, 54, "Input"],
Cell[CellGroupData[{
Cell[436515, 8687, 331, 8, 32, "Input"],
Cell[436849, 8697, 628, 11, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[437514, 8713, 514, 10, 54, "Input"],
Cell[438031, 8725, 3204, 52, 264, "Output"],
Cell[441238, 8779, 13132, 241, 526, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[454407, 9025, 133, 2, 32, "Input"],
Cell[454543, 9029, 3330, 59, 285, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[457910, 9093, 341, 7, 54, "Input"],
Cell[458254, 9102, 32643, 577, 835, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[490934, 9684, 896, 25, 54, "Input"],
Cell[491833, 9711, 15769, 321, 159, "Output"],
Cell[507605, 10034, 9548, 188, 270, "Output"]
}, Open  ]],
Cell[517168, 10225, 663, 15, 54, "Input"],
Cell[CellGroupData[{
Cell[517856, 10244, 1660, 40, 138, "Input"],
Cell[519519, 10286, 5316, 84, 264, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[524872, 10375, 180, 3, 32, "Input"],
Cell[525055, 10380, 13900, 323, 504, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[538992, 10708, 327, 6, 54, "Input"],
Cell[539322, 10716, 2153, 36, 75, "Output"],
Cell[541478, 10754, 12125, 230, 271, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[553640, 10989, 378, 8, 54, "Input"],
Cell[554021, 10999, 1735, 34, 75, "Output"],
Cell[555759, 11035, 7136, 131, 292, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562932, 11171, 429, 9, 54, "Input"],
Cell[563364, 11182, 3265, 57, 117, "Output"],
Cell[566632, 11241, 12995, 236, 332, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[579664, 11482, 1812, 46, 117, "Input"],
Cell[581479, 11530, 655, 14, 32, "Output"],
Cell[582137, 11546, 1704, 30, 54, "Output"],
Cell[583844, 11578, 8242, 156, 485, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[592123, 11739, 183, 4, 32, "Input"],
Cell[592309, 11745, 335, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[592681, 11757, 187, 4, 32, "Input"],
Cell[592871, 11763, 1585, 29, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[594493, 11797, 185, 4, 32, "Input"],
Cell[594681, 11803, 255, 6, 24, "Message"],
Cell[594939, 11811, 851, 15, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[595827, 11831, 177, 3, 32, "Input"],
Cell[596007, 11836, 1522, 28, 373, "Output"]
}, Open  ]],
Cell[597544, 11867, 1083, 28, 96, "Input"],
Cell[CellGroupData[{
Cell[598652, 11899, 244, 5, 32, "Input"],
Cell[598899, 11906, 250, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[599186, 11916, 356, 8, 32, "Input"],
Cell[599545, 11926, 863, 15, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[600445, 11946, 349, 6, 32, "Input"],
Cell[600797, 11954, 18079, 306, 195, 3200, 61, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[618913, 12265, 325, 7, 32, "Input"],
Cell[619241, 12274, 507, 10, 24, "Message"],
Cell[619751, 12286, 422, 8, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[620210, 12299, 86, 2, 32, "Input"],
Cell[620299, 12303, 73, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[620409, 12309, 91, 2, 32, "Input"],
Cell[620503, 12313, 76, 1, 32, "Output"]
}, Open  ]],
Cell[620594, 12317, 94, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[620713, 12322, 1536, 38, 54, "Input"],
Cell[622252, 12362, 3445, 74, 304, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[625734, 12441, 2553, 60, 117, "Input"],
Cell[628290, 12503, 4825, 98, 313, "Output"]
}, Open  ]],
Cell[633130, 12604, 1319, 35, 54, "Input"],
Cell[CellGroupData[{
Cell[634474, 12643, 1489, 35, 75, "Input"],
Cell[635966, 12680, 3669, 74, 188, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[639672, 12759, 2681, 64, 117, "Input"],
Cell[642356, 12825, 5160, 110, 203, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[647553, 12940, 442, 9, 32, "Input"],
Cell[647998, 12951, 1463, 28, 684, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[649498, 12984, 1160, 31, 54, "Input"],
Cell[650661, 13017, 193900, 4254, 243, 112102, 2912, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[844598, 17276, 142, 4, 32, "Input"],
Cell[844743, 17282, 120993, 3136, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[965773, 20423, 271, 8, 32, "Input"],
Cell[966047, 20433, 125461, 3144, 663, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1091545, 23582, 206, 5, 32, "Input"],
Cell[1091754, 23589, 163043, 3653, 203, 92059, 2487, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1254834, 27247, 565, 12, 32, "Input"],
Cell[1255402, 27261, 514, 11, 339, "Output"]
}, Open  ]]
}
]
*)

