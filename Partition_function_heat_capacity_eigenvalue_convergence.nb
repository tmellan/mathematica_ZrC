(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    578939,      10576]
NotebookOptionsPosition[    577682,      10530]
NotebookOutlinePosition[    578039,      10546]
CellTagsIndexPosition[    577996,      10543]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"K2meV", "=", "0.086173324"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.5", "+", "x"}], ")"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "360"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"cOmega0", "=", "31.58754341976066`"}]}], "Input",
 CellChangeTimes->{
  3.683911697598062*^9, {3.683911743107267*^9, 3.683911776062777*^9}, {
   3.6839118216365547`*^9, 3.683911822045559*^9}, {3.68391236134354*^9, 
   3.683912362065997*^9}, {3.68391240815442*^9, 3.6839124254894133`*^9}}],

Cell[BoxData["0.086173324`"], "Output",
 CellChangeTimes->{3.683912426388072*^9, 3.684227031175976*^9, 
  3.684227092623474*^9}],

Cell[BoxData["31.58754341976066`"], "Output",
 CellChangeTimes->{3.683912426388072*^9, 3.684227031175976*^9, 
  3.684227092633752*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Define", " ", "a", " ", "function", " ", "that", " ", "calculates", " ", 
     "the", " ", "heat", " ", "capacity", " ", "using", " ", "from", " ", 
     "an", " ", "excitation", " ", "spectrum"}], " ", "-", " ", 
    RowBox[{"arguments", ":", " ", 
     RowBox[{"Temperature", " ", "-", " ", 
      RowBox[{
       RowBox[{"No", ".", " ", "of"}], " ", "eigenvalues", " ", "to", " ", 
       "include"}], " ", "-", " ", 
      RowBox[{"anharmonic", " ", "perturbation"}]}]}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ff", "[", 
     RowBox[{"T_", ",", "n_", ",", "h_"}], "]"}], ":=", 
    RowBox[{"SetPrecision", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "K2meV"}], "*", "1.5", "*", "T", "*", 
       RowBox[{"Log", "[", 
        RowBox[{"Total", "[", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], "*", "cOmega0", "*", " ", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.5", "+", "x", "+", "h"}], ")"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", "n"}], "}"}]}], "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"K2meV", "*", "T"}], ")"}]}]}], "]"}], "]"}], "]"}]}], 
      ",", "20"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6839119754598837`*^9, 3.683911986131475*^9}, {
   3.683912026486023*^9, 3.683912049317936*^9}, 3.683912406511106*^9, {
   3.683912447642001*^9, 3.683912464659404*^9}, {3.683914411653137*^9, 
   3.683914426982173*^9}, {3.683914611970333*^9, 3.68391464294005*^9}, 
   3.684227044879787*^9, {3.684227371202108*^9, 3.684227475067799*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Harmonic", " ", "heat", " ", "capacity", " ", "at", " ", "4000", "K", 
     " ", 
     RowBox[{"(", 
      RowBox[{"in", " ", 
       RowBox[{"meV", "/", "atom"}]}], ")"}]}], ",", " ", 
    RowBox[{"calculated", " ", "using", " ", "2000", " ", "eigenvalue", " ", 
     RowBox[{"(", 
      RowBox[{
      "to", " ", "use", " ", "a", " ", "reference", " ", "when", " ", 
       "working", " ", "out", " ", "the", " ", "percentage", " ", "error"}], 
      ")"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"hc", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "T"}], "*", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"ff", "[", 
           RowBox[{"T", ",", "2000", ",", "0"}], "]"}], ",", "T"}], "]"}], 
        ",", "T"}], "]"}]}], ")"}], "/.", 
    RowBox[{"T", "\[Rule]", "4000"}]}]}]}]], "Input",
 CellChangeTimes->{{3.684227229035841*^9, 3.684227303270831*^9}}],

Cell[BoxData["0.12889875932374675069439631101974229095`18.171385719863608"], \
"Output",
 CellChangeTimes->{{3.6842272930929203`*^9, 3.684227304997568*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Error", " ", "in", " ", "the", " ", "heat", " ", "capacity", " ", "at", 
     " ", "4000", "K", " ", "for", " ", "different", " ", "numbers", " ", 
     "of", " ", "eigenvalues"}], ",", " ", 
    RowBox[{
    "with", " ", "respect", " ", "to", " ", "2000", " ", "eigenvalue", " ", 
     "reference", " ", "calculation"}]}], "*)"}], 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "T"}], "*", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"ff", "[", 
                    RowBox[{"T", ",", "n", ",", "0"}], "]"}], ",", "T"}], 
                  "]"}], ",", "T"}], "]"}]}], ")"}], "/.", 
             RowBox[{"T", "\[Rule]", "4000"}]}], ")"}], "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T"}], "*", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"ff", "[", 
                  RowBox[{"T", ",", "2000", ",", "0"}], "]"}], ",", "T"}], 
                "]"}], ",", "T"}], "]"}]}], ")"}]}], "/.", 
          RowBox[{"T", "\[Rule]", "4000"}]}], ")"}], "*", 
        RowBox[{"100", "/", "hc"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "10", ",", "200", ",", "10"}], "}"}]}], "]"}], "//", 
   "TableForm"}]}]], "Input",
 CellChangeTimes->{{3.6839132946569653`*^9, 3.6839133337398567`*^9}, {
   3.683913368110568*^9, 3.68391338407474*^9}, {3.6839139082402887`*^9, 
   3.683913908270953*^9}, {3.683914194879067*^9, 3.683914253908633*^9}, {
   3.684227058840558*^9, 3.684227060414798*^9}, {3.68422713022827*^9, 
   3.684227139328383*^9}, 3.684227171778596*^9, {3.684227311424795*^9, 
   3.684227333927196*^9}, {3.684227490736474*^9, 3.684227505971354*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"10", 
     RowBox[{
     "-", "72.24344128725988928103343123689512674005`17.70211117047674"}]},
    {"20", 
     RowBox[{
     "-", "33.04037226161655275140369364611673594576`17.370076939754362"}]},
    {"30", 
     RowBox[{
     "-", "11.10757814280808640558399826515634590641`16.908499711424643"}]},
    {"40", 
     RowBox[{
     "-", "3.09030302810198670434054896608314020118`16.358259378515577"}]},
    {"50", 
     RowBox[{
     "-", "0.76419584489206783249470004520064028476`15.75307274791516"}]},
    {"60", 
     RowBox[{
     "-", "0.17485949357249208011917469452355632423`15.112944884240529"}]},
    {"70", 
     RowBox[{
     "-", "0.03789351777709221026091917684651297912`14.448902021271325"}]},
    {"80", 
     RowBox[{
     "-", "0.00788942760362810948369755445587876611`13.767398050646412"}]},
    {"90", 
     RowBox[{
     "-", "0.00159289386937816027298062722504090133`13.072542078280872"}]},
    {"100", 
     RowBox[{
     "-", "0.00031388865646260876537786641066844883`12.367131280958956"}]},
    {"110", 
     RowBox[{
     "-", "0.00006064677110786342449181313593102202`11.653163401611867"}]},
    {"120", 
     RowBox[{
     "-", "0.00001152819528310154801716683725638466`10.932117048898839"}]},
    {"130", 
     RowBox[{
     "-", "2.16153381611620201496035070045522`10.205117758685661*^-6"}]},
    {"140", 
     RowBox[{
     "-", "4.0057747740840738084326228813548`9.47304225159195*^-7"}]},
    {"150", 
     RowBox[{
     "-", "7.349047521081096684532499950252`8.736586779887347*^-8"}]},
    {"160", 
     RowBox[{"-", "1.33646556162317841422495018955`7.996313496434124*^-8"}]},
    {"170", 
     RowBox[{"-", "2.41172119453357546757041229726`7.252682824238636*^-9"}]},
    {"180", 
     RowBox[{"-", "4.3223595280496307547336407769`6.506076612280232*^-10"}]},
    {"190", 
     RowBox[{"-", "7.6994434208322680102360435`5.756815056125697*^-11"}]},
    {"200", 
     RowBox[{"-", "1.363997490686811205812743571`5.005169295559773*^-11"}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.68391333626359*^9, {3.683913377413732*^9, 3.68391338511224*^9}, 
   3.683913909131671*^9, {3.683914247909328*^9, 3.683914254879837*^9}, 
   3.684227033561637*^9, 3.684227093106698*^9, {3.68422713281383*^9, 
   3.6842271404599247`*^9}, 3.684227182440165*^9, 3.684227343104751*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Convergence", " ", "of", " ", "harmonic", " ", "heat", " ", "capcity", 
    " ", "up", " ", "to", " ", "4000", "K", " ", "as", " ", "a", " ", 
    "function", " ", "of", " ", "basis", " ", "size"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Harmonic", " ", "heat", " ", "capacity", " ", "as", " ", "as", " ", 
    "function", " ", "of", " ", "temperature", " ", "based", " ", "on", " ", 
    "a", " ", "partition", " ", "function", " ", "evaluated", " ", "at", " ", 
    "different", " ", "numbers", " ", "of", " ", "eigenvectors"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "T"}], "*", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"ff", "[", 
                 RowBox[{"T", ",", "n", ",", "0"}], "]"}], ",", "T"}], "]"}], 
              ",", "T"}], "]"}]}], ")"}], "/.", 
          RowBox[{"T", "\[Rule]", "4000"}]}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "T"}], "*", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"ff", "[", 
                 RowBox[{"T", ",", "n", ",", "0"}], "]"}], ",", "T"}], "]"}], 
              ",", "T"}], "]"}]}], ")"}], "/.", 
          RowBox[{"T", "\[Rule]", "t"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "10", ",", "100", ",", "10"}], "}"}]}], "]"}]}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "20", ",", "4000"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"SwatchLegend", "[", 
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "10", ",", "100", ",", "10"}], "}"}]}], "]"}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.683913499432186*^9, 3.683913791703911*^9}, {
  3.683913841794437*^9, 3.683913880874704*^9}, {3.683914110612689*^9, 
  3.683914189339252*^9}, {3.684227364890222*^9, 3.684227367861923*^9}, {
  3.684227545417207*^9, 3.684227587915184*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/a9tRxArg4nDvhPzD1cGLrJ3iWCMutjuC+e3mAWz
XmiPgPMnsq+YJ3YrDc73WjHxdWhcAZwfOXHqnHNmpXB+fHb++6yKKjh//+b2
CVYJ9XB+97ddL6dFNMH5daZTpy7/0gLnz1nd9+JicjucbyZVzNPH3gXn/91f
dj25rgfO5+m4u+bCiz6E+5ZMX/n88AQ4X1Uh4MLnPxPhfFuJuvseAZPh/MqF
d4sz506B872PnbktdmUqnB+dbqjDqzodzmdcohowIX4GnP80pj8mZstMOP/t
Mq13n5lmI/zbExosYT0Hzk9/93VBa+9cOP/ma9VD9Sfnwfn5Ve0Zrv/nw/kL
ndb/Xrl8AZx/beqjNeUuC+F8reUBlzLfIfgCjeG7HKcugvMPaqjxPDBYjIjP
Pv1Li24i+DqHGJh0ypcg4nNf1pdZgkvh/KUV/NF6OxH8PQw12h2hy+D8T27K
BWz/EfzPUZPkvOcuh/PbzGf1l1qsgPMtLt0pOfIAwd9q9fzwzdqVcH5gok67
sMYqRPoI4OI1Po/gl/Nu+CORvRrO7+uYkKAssgbOL7xoofdlI4L/9FHlvlU+
a+H8ik1fD7V+QfCv+Vsaqk9cB+envPecPPkFgv+pL+rrf/v1cD4AkWK47w==

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
WA5c3HyCCTN06/kVKMGtdr0dISZM+B93wS+m
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/a9tRxArg4nDht8S67Mlttm7RDBGXWz3hfNbzIJZ
L7RHwPkT2VfME7uVBud7rZj4OjSuAM6PnDh1zjmzUjg/Pjv/fVZFFZy/f3P7
BKuEeji/+9uul9MimuD8OtOpU5d/aYHz56zue3ExuR3ON5Mq5ulj74Lz/+4v
u55c1wPn83TcXXPhRR/CfUumr3x+eAKcr6oQcOHzn4lwvq1E3X2PgMlwfuXC
u8WZc6fA+d7HztwWuzIVzo9ON9ThVZ0O5zMuUQ2YED8Dzn8a0x8Ts2UmnP92
mda7z0yzEf7tCQ2WsJ4D56e/+7qgtXcunH/zteqh+pPz4Pz8qvYM1//z4fyF
Tut/r1y+AM6/NvXRmnKXhXC+1vKAS5nvEHyBxvBdjlMXwfkHNdR4HhgsRsRn
n/6lRTcRfJ1DDEw65UsQ8bkv68sswaVw/tIK/mi9nQj+HoYa7Y7QZXD+Jzfl
Arb/CP7nqEly3nOXw/lt5rP6Sy1WwPkWl+6UHHmA4G+1en74Zu1KOD8wUadd
WGMVIn0EcPEan0fwy3k3/JHIXg3n93VMSFAWWQPnF1600PuyEcF/+qhy3yqf
tXB+xaavh1q/IPjX/C0N1Seug/NT3ntOnvwCwf/UF/X1v/16OB8AKzmWmw==

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
BqrA5xVF8dxJQf8DFXaeFw==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/a9tRxArg4mD2bXHbEahe+1dIhijLrb7wvktZsGs
F9oj4PyJ7Cvmid1Kg/O9Vkx8HRpXAOdHTpw655xZKZwfn53/PquiCs7fv7l9
glVCPZzf/W3Xy2kRTXB+nenUqcu/tMD5c1b3vbiY3A7nm0kV8/Sxd8H5f/eX
XU+u64HzeTrurrnwog/hviXTVz4/PAHOV1UIuPD5z0Q431ai7r5HwGQ4v3Lh
3eLMuVPgfO9jZ26LXZkK50enG+rwqk6H8xmXqAZMiJ8B5z+N6Y+J2TITzn+7
TOvdZ6bZCP/2hAZLWM+B89PffV3Q2jsXzr/5WvVQ/cl5cH5+VXuG6//5cP5C
p/W/Vy5fAOdfm/poTbnLQjhfa3nApcx3CL5AY/gux6mL4PyDGmo8DwwWI+Kz
T//SopsIvs4hBiad8iWI+NyX9WWW4FI4f2kFf7TeTgR/D0ONdkfoMjj/k5ty
Adt/BP9z1CQ577nL4fw281n9pRYr4HyLS3dKjjxA8LdaPT98s3YlnB+YqNMu
rLEKkT4CuHiNzyP45bwb/khkr4bz+zomJCiLrIHzCy9a6H3ZiOA/fVS5b5XP
Wji/YtPXQ61fEPxr/paG6hPXwfkp7z0nT36B4H/qi/r63349nA8Ai9t/cw==

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
jpmR0f/V++gU
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/a9tRxArg4nDXlbVmSW/9tu7RDBGXWz3hfNbzIJZ
L7RHwPkT2VfME7uVBud7rZj4OjSuAM6PnDh1zjmzUjg/Pjv/fVZFFZy/f3P7
BKuEeji/+9uul9MimuD8OtOpU5d/aYHz56zue3ExuR3ON5Mq5ulj74Lz/+4v
u55c1wPn83TcXXPhRR/CfUumr3x+eAKcr6oQcOHzn4lwvq1E3X2PgMlwfuXC
u8WZc6fA+d7HztwWuzIVzo9ON9ThVZ0O5zMuUQ2YED8Dzn8a0x8Ts2UmnP92
mda7z0yzEf7tCQ2WsJ4D56e/+7qgtXcunH/zteqh+pPz4Pz8qvYM1//z4fyF
Tut/r1y+AM6/NvXRmnKXhXC+1vKAS5nvEHyBxvBdjlMXwfkHNdR4HhgsRsRn
n/6lRTcRfJ1DDEw65UsQ8bkv68sswaVw/tIK/mi9nQj+HoYa7Y7QZXD+Jzfl
Arb/CP7nqEly3nOXw/lt5rP6Sy1WwPkWl+6UHHmA4G+1en74Zu1KOD8wUadd
WGMVIn0EcPEan0fwy3k3/JHIXg3n93VMSFAWWQPnF1600PuyEcF/+qhy3yqf
tXB+xaavh1q/IPjX/C0N1Seug/NT3ntOnvwCwf/UF/X1v/16OB8AFoGXAw==

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
fqY7l7D/B6hlYfk=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/a9tRxArg4nD0vwrfFXxB+xdIhijLrb7wvktZsGs
F9oj4PyJ7Cvmid1Kg/O9Vkx8HRpXAOdHTpw655xZKZwfn53/PquiCs7fv7l9
glVCPZzf/W3Xy2kRTXB+nenUqcu/tMD5c1b3vbiY3A7nm0kV8/Sxd8H5f/eX
XU+u64HzeTrurrnwog/hviXTVz4/PAHOV1UIuPD5z0Q431ai7r5HwGQ4v3Lh
3eLMuVPgfO9jZ26LXZkK50enG+rwqk6H8xmXqAZMiJ8B5z+N6Y+J2TITzn+7
TOvdZ6bZCP/2hAZLWM+B89PffV3Q2jsXzr/5WvVQ/cl5cH5+VXuG6//5cP5C
p/W/Vy5fAOdfm/poTbnLQjhfa3nApcx3CL5AY/gux6mL4PyDGmo8DwwWI+Kz
T//SopsIvs4hBiad8iWI+NyX9WWW4FI4f2kFf7TeTgR/D0ONdkfoMjj/k5ty
Adt/BP9z1CQ577nL4fw281n9pRYr4HyLS3dKjjxA8LdaPT98s3YlnB+YqNMu
rLEKkT4CuHiNzyP45bwb/khkr4bz+zomJCiLrIHzCy9a6H3ZiOA/fVS5b5XP
Wji/YtPXQ61fEPxr/paG6hPXwfkp7z0nT36B4H/qi/r63349nA8AvlOQ6w==

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
/plo+WsVlQO/gujGQOz/AdAVns0=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/a9tRxArg4lDyLu7BXEVB+xdIhijLrb7wvktZsGs
F9oj4PyJ7Cvmid1Kg/O9Vkx8HRpXAOdHTpw655xZKZwfn53/PquiCs7fv7l9
glVCPZzf/W3Xy2kRTXB+nenUqcu/tMD5c1b3vbiY3A7nm0kV8/Sxd8H5f/eX
XU+u64HzeTrurrnwog/hviXTVz4/PAHOV1UIuPD5z0Q431ai7r5HwGQ4v3Lh
3eLMuVPgfO9jZ26LXZkK50enG+rwqk6H8xmXqAZMiJ8B5z+N6Y+J2TITzn+7
TOvdZ6bZCP/2hAZLWM+B89PffV3Q2jsXzr/5WvVQ/cl5cH5+VXuG6//5cP5C
p/W/Vy5fAOdfm/poTbnLQjhfa3nApcx3CL5AY/gux6mL4PyDGmo8DwwWI+Kz
T//SopsIvs4hBiad8iWI+NyX9WWW4FI4f2kFf7TeTgR/D0ONdkfoMjj/k5ty
Adt/BP9z1CQ577nL4fw281n9pRYr4HyLS3dKjjxA8LdaPT98s3YlnB+YqNMu
rLEKkT4CuHiNzyP45bwb/khkr4bz+zomJCiLrIHzCy9a6H3ZiOA/fVS5b5XP
Wji/YtPXQ61fEPxr/paG6hPXwfkp7z0nT36B4H/qi/r63349nA8A6GKvYw==

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
/Ch/PTNXGYOPKsfWCC8on5hkJWEQ5WFFZ4ObddaVNxYwEKEeYCIsHVpk91cN
A+ucy7sJW/CNl1zVxCBJ25idcDCV+f3iaQzGpe7+34WOakLOuhhsr+3bQ5hK
F+Q+rYcBmUlnF+H35Y31xoYYHGw8t50wo+bHbwPGGNh+pd0k9iP28YAsmGFw
VFDyG2GDONOAOxYYsFR9fEvYVzixS8IKA+khoRHCOY+pfyttMMj//r2XcKf7
bzhoj8E/d40awjPMEtFZDhh0pB1KI0xT7/KI2RmD3V1hfoQFDW4xRZ3HYFLF
9Szh019H9NddMXjgO6ZI2D2NMd3HHYNjjQ+5CKecQGOfPTGQ1VH58f94GfXb
53AZg74chSf/j5crmPWkD36e/26X/j8+2nnePvDH4C+T/On/x4elkaBKEP79
ryly/T8+1mJdb1/DoF2ne56Ixzql1f/KwjHYr4+uElakDK+HJeLr7ZcIIuLb
1mE76XcyBr8L+WUJh9GeiriUisEcd8oSkS8P1WsZ7LIwkINJc8JmA1EcSkUY
iGruZiLyLdCty7K5BIOAaw+biPy8xfQ9X7gcAxm5lf/n77ye/eF9NRiMXqnL
NsXtM6IosdqMwZGJkDUi/9vHgxjP3cbgycmNZMKbL7vmH7djUCeyjY9w/Pyp
3OJu/P/uqVcm6knJCtCceYDB7XwLSwPcH39HTLc9wvODfvcUUY/EN+/d5h/E
wLDjjAXhO/Sabr+GMVi3MTxD1LNhTp3R0ik8/2i99ukS+cCbiO16hcFTGblo
HdzWh57EBszi8eIYskzUww/H9JX15/H4pI3pPk3sT8G4Ym0Rg7c3PRWI+ilm
beVvuIXB5rV/bUQ99rbPN+qirYfQJ+fXiXrd7vRK9Ch9PWzoq54irOZh92ad
sR6cpU06iHpvHeKoXcVeD/M2A+lEP4gvcuP9e7QewvM9H0sT+y2rW3UVroeH
P/rfnyD2W704PCpaD73hsX+liPrd6BVVI1kPJgFqQkQ/aqf6LJmerIcgy0Qb
ol99mA/qq9Orh7TIXi0BIj5Hk0R1Deuh8Bjp8BHcTncLc74Y18Obc5VrRH98
XXz3krBlPXz5JVB0iOh3tjv5qhzr4bD7wH2i3w5O5IWV+tfDToF3gUR/ZnxY
twhB9eDh6HCYFbdWW4/l3LV60Khre7gL9/3MOUm+CHy/je8ZiP7eYyQ8V5CE
n3dQyYUed8PgHcgrqQf+a2tRa/j8sNT5GFMor4e8e3F/iPlCtPYV92Ql/rzO
nMdP3NVxW984yfVAtfmiRcwnJRqnSzPb6qHCWXViEXdm3wRt6mA9+H+Qt3qN
O7Dl572Y1XoYHMr/QsxLy9QG7bVf9TDMsb6Pgtv5meuw+596iKv2Ve8l5pul
ly8N/9XD7nQsvRO34LG+bzyMDfAm7ThzC+7nN2MPNexvgIWy2z7EfCYUsS94
Qq0BNjaNGSJwF6Q+39LWbABFzGwyFDd7UQIeOA2g7mRZEYJ7s2sjrUSvAQKa
rOQCcY+uvql2t2iAIA9lmcvEPHaxZvyfWwNE36IU2hLzp+HJE0LpDcDSf1RY
jrh/TCdrPrMBLO7/pyON+5mV9e/CnAY4d3XKVRL3gPO1Xo6CBghxZMsTwd0V
0KtDV90AnVnfHx/EXVis6jTb0wAR4p6+23G7fNXJzPzcAI92nh4ewedph6vW
vwwWG4D1iYTvMG67P+5WTMsNYJvJwf4Et8W2ZL6IlQagzxvX7Cfm/X3D5Ev/
GsB0G8v1dtxiyKRfh6MRuD31RfJxC/c7CW3f1wjGvonJObgFda4kUnka4fxC
y2IG7gOmWUYKfI0QEXO3MAk3q+vEjKBoI1S33X4egptp6SOaE2+ExzfF9wbh
ZvD5XXZLshG2cmKN/XDTXON2Y5drhMzjM3e9cG9uCT8dUmgElsvjK264/0Sf
lExQaoRPPNjhC7h/7dTN0FBphDe058444f6RYv1zCzVC8PqStz3u/wHineyv

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/a9tRxArg4lDQ/bcXPW6A/YuEYxRF9t94fwWs2DW
C+0RcP5E9hXzxG6lwfleKya+Do0rgPMjJ06dc86sFM6Pz85/n1VRBefv39w+
wSqhHs7v/rbr5bSIJji/znTq1OVfWuD8Oav7XlxMbofzzaSKefrYu+D8v/vL
rifX9cD5PB1311x40Ydw35LpK58fngDnqyoEXPj8ZyKcbytRd98jYDKcX7nw
bnHm3ClwvvexM7fFrkyF86PTDXV4VafD+YxLVAMmxM+A85/G9MfEbJkJ579d
pvXuM9NshH97QoMlrOfA+envvi5o7Z0L5998rXqo/uQ8OD+/qj3D9f98OH+h
0/rfK5cvgPOvTX20ptxlIZyvtTzgUuY7BF+gMXyX49RFcP5BDTWeBwaLEfHZ
p39p0U0EX+cQA5NO+RJEfO7L+jJLcCmcv7SCP1pvJ4K/h6FGuyN0GZz/yU25
gO0/gv85apKc99zlcH6b+az+UosVcL7FpTslRx4g+Futnh++WbsSzg9M1GkX
1liFSB8BXLzG5xH8ct4NfySyV8P5fR0TEpRF1sD5hRct9L5sRPCfPqrct8pn
LZxfsenrodYvCP41f0tD9Ynr4PyU956TJ79A8D/1RX39b78ezgcAQAyGJw==

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
tQz5nXQ//vPPGMtfK1CGSafvuEiQ/h9ywp9U
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/a9tRxArg4mDcGfI7ez6A/YuEYxRF9t94fwWs2DW
C+0RcP5E9hXzxG6lwfleKya+Do0rgPMjJ06dc86sFM6Pz85/n1VRBefv39w+
wSqhHs7v/rbr5bSIJji/znTq1OVfWuD8Oav7XlxMbofzzaSKefrYu+D8v/vL
rifX9cD5PB1311x40Ydw35LpK58fngDnqyoEXPj8ZyKcbytRd98jYDKcX7nw
bnHm3ClwvvexM7fFrkyF86PTDXV4VafD+YxLVAMmxM+A85/G9MfEbJkJ579d
pvXuM9NshH97QoMlrOfA+envvi5o7Z0L5998rXqo/uQ8OD+/qj3D9f98OH+h
0/rfK5cvgPOvTX20ptxlIZyvtTzgUuY7BF+gMXyX49RFcP5BDTWeBwaLEfHZ
p39p0U0EX+cQA5NO+RJEfO7L+jJLcCmcv7SCP1pvJ4K/h6FGuyN0GZz/yU25
gO0/gv85apKc99zlcH6b+az+UosVcL7FpTslRx4g+Futnh++WbsSzg9M1GkX
1liFSB8BXLzG5xH8ct4NfySyV8P5fR0TEpRF1sD5hRct9L5sRPCfPqrct8pn
LZxfsenrodYvCP41f0tD9Ynr4PyU956TJ79A8D/1RX39b78ezgcAxkiLow==

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/a9tRxArg4nDL7/FH9bXH7B3iWCMutjuC+e3mAWz
XmiPgPMnsq+YJ3YrDc73WjHxdWhcAZwfOXHqnHNmpXB+fHb++6yKKjh//+b2
CVYJ9XB+97ddL6dFNMH5daZTpy7/0gLnz1nd9+JicjucbyZVzNPH3gXn/91f
dj25rgfO5+m4u+bCiz6E+5ZMX/n88AQ4X1Uh4MLnPxPhfFuJuvseAZPh/MqF
d4sz506B872PnbktdmUqnB+dbqjDqzodzmdcohowIX4GnP80pj8mZstMOP/t
Mq13n5lmI/zbExosYT0Hzk9/93VBa+9cOP/ma9VD9Sfnwfn5Ve0Zrv/nw/kL
ndb/Xrl8AZx/beqjNeUuC+F8reUBlzLfIfgCjeG7HKcugvMPaqjxPDBYjIjP
Pv1Li24i+DqHGJh0ypcg4nNf1pdZgkvh/KUV/NF6OxH8PQw12h2hy+D8T27K
BWz/EfzPUZPkvOcuh/PbzGf1l1qsgPMtLt0pOfIAwd9q9fzwzdqVcH5gok67
sMYqRPoI4OI1Po/gl/Nu+CORvRrO7+uYkKAssgbOL7xoofdlI4L/9FHlvlU+
a+H8ik1fD7V+QfCv+Vsaqk9cB+envPecPPkFgv+pL+rrf/v1cD4ArrDQsw==

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwV0mc81Y/fBvBDRhEhhAalQmaZKefzISlCMrNnycwpKxkhW7aoiGwlMzLP
+Yafll1ZIZEWfyojotznfnS93g+v13XtdbhseIGRRCKJMpBI/5//IusNmUkK
GPSKd52VtEdNZ6hVLUxFEbfOV57VmjypliHRJb7hpYQSXznfMDlcVvsUMLg9
sFQZb2ixLInsSlWT6/z4b+WjCrKulSVTm2vUAnfPfvMRUkXD9IRLnJ19ai88
l9/+MjyGLh4VXNIBs2q8BIm4HHccT1ow/jKOZyLbc7M/mm1TQ9+1NNdq/p3k
cge+2y7rZFw11zFWDZIj/x1OxKtCiLdFIscDajXI+Yx8dVV1iBRunWDHH0Zk
bcm7kj8M1bE/bjIeBZzIP4yEH8jMqyPXq7TybSeukm8HFvB7xGmg/5G/e62K
QsnHCyXiH4mdwOn16FEJzkTyZFc5w/e2E3jyeXXeLpO75OhleT9xO03kKdxa
WZpRSJYRbpi9uK6JF1fHRlykqshvT5EdCjNPopR4zG+e5EZygFfb4JSCFr7t
J2+MsraTRe6c1tvXp4VdnMRO19AucsezrlY7j1MozDuqeEnzHdn9u6FKzpbT
2HJpePUbxzh5+/ahx2OFp3Gmgsx5cfgTufGYteguDW08a8L9Tc9rlmznNJlp
Ma6Nt8b+dlzdsUBmueXMeSdABx3njtanaKySy2pnwwf5z+BHqy/J89dJYDhO
WeWrOYMf4F4dicwMKyy/PY3P6mKfsqrHh63scF828FPKjC52NLJ9cdvMDZrn
GSz6ovTw3IqLip8qH3y/Edmzbb8+rn6qMDOUF4KkUvaT+oQ+jt2kfHRnFgGl
/qTGeKuzuPdtTeG8uyiM/uGTe71yFmMMC4+RrMXgWXJX/00dA6Ropp9umZQE
3oNJHAWZBhhiSdOlRciBc6Ph6bbPBnj07Oom2yvy0KjPFz6pcA7ZxHdLk6hK
wDE12MIQfg7zb0Qftb2sCnZ+d1dE+s6h86pagtgtMtSwW8ujsCEuxq26LSao
A0uusKethyHG/93kw8KrCeYKkyXBTYbY8/aH8JchLSh7UTCVvcUIdxjn3cmY
0AajnxLmo4VG+O38UdNP9gZQFDGburZghHOvQu7oGxrCH8GKbiENY5z5rPqE
4mIMeuWULapJxqi1Y/82zxJTyNVQ0DQfN8ZhwQ5ePS5zWBhYDvaXMsEz7EWu
pDxL0HJraMgIMMGwhKeW9jY2MJtKlh3gN8VY/s5sNmkHAHEG1yUnU8yI/bX7
bJcjpDS3FfDWmKKq068QkZsXQGX6tJDRWTM8PKZrsUPJBeKusZtcyTZDiU9Z
Z3wOu8E4R3di8owZjvqUpPWd8ICbSkbMvVHnUcSoKLFpwAs+S8gHhI6eR004
uMCy6wpo794+f+SwOY7c4fzxyPMqcDK9GUofMcfCbPmJW8d8IbPPsMxS2hJL
j4naHLkcCH/aj+zlCLPEi/11r9eFgsG6nuc2dcAS/y7RYor7Q2BfTn/I3htW
uNIwXHWyOhTK3A2NvvRb485vrtVyERHAaXfkRaaYDc4ZChUlRkYCxYhHTSfQ
BqvSRQZK46NASbX/4OMDtujUWK/nVBQDE5skgo4et8OARqYiafYEcO0rMdhI
sMfcqR7jPw2psPO1APv5Bnu82DhVaWOaBp3t0f9VTtnjVb6Jm68X0kC2/pKq
g4oD3nF0YKAcvg2L98X3//fRARVrTvz7WJsJwe4lv2MVnHDzkZweyttsSGYt
uc8/chH9x5lCvm8qgLrFmIVcBmfslnp7IEa/AEY+up2WlHBG+QChsenMAtjX
LPsL/J1xdK1ppFuqEKq9np504b+ES0uKYjvPFUH/cMdsk6EL1psopg7GlABP
2bSq/Ws3PDTlUOdWXQZKd54nzvxyw/JT/sqhP8vAIrL0k4+QO97cJ6kiJfcY
8uw8EmJd3FFYS2CTRtljOMK39LGG1QO9H7JxuuaUg1EwUwyLpid+m7koM6JS
CTolyTMmNl6o9G59ZWGqCuaemnQ/pXghF2VKN2C9ClKeC1YJRngh85ulS328
1fD+8wPfsUdeaMDUy7igWQ3uB6oZLqx6oXbMPnn2/GpIyOvf4Z1Gwa/PC2u7
TGvgSPXtP++KKbgsqq4f6l4DA88sxpSbKNgpoyLBFlYDwh8n89Y+UnABRN5l
ldVApfCCdLjsFRRUtzDr3qiB/qztmimvruDY3/NjBfefgG/Z4MHFsStYkX3U
qLfqCQg139ti+vMK+kwMdb9rfwKO70V7BAWu4vGsHGav709gUVDB4sGFqzhx
QrX0m3wt8GcYe1WSvHFo/FbJEaIWzJPTs7qVfHBmcw3BRdRB68oEx7szPhgE
ESp6vXVwyE4q5L2dD57zn7nkPFEHf2Ta7L/G+uApT2sVJdJTuNv54yDjBx9s
0CcbaJGfwgirbpVilC+u12Qqez95ChqXM/Ydz/JFdt/3S5WtT+HhwGSqRpUv
NilaKfb2PoWAwmu+Z9/74mh4rtHT2aew80TxMRdZP6TYyD6UFa0Hq2DGjqxB
P5QTD0nfFFcP7dN6yvmzfhgXEWYYnVEPUnp3SkoZ/PG3GmPdQn49rO+Ui6uT
9McVG0unkOZ6yG6wNugN8cevYd1fvWbrYXyxfmST+DVkbGJgmD/VALZul+dd
/QPQziRSunuuAW50LkizxQdgdAF1YfZ3A+RJ+7uX5gSgbZmz9RqpEabnb3z7
0hGAx34uPvzC0whu3ilTTnzX8UyGHjujUiP4BdUO2lRfR63a6ceW1xohMXGN
ZjgbiN5svDduLDVC5Y+Qfz83AjH0MaP5m/VG6D/HpJa8PQi/s0w3CTI1AR8v
R2OPahDOJjjGhPI0wb3MPU90Y4IwZ91CiJBpguIH6iVaB4PxfZY4w7YLTUCr
iUpStQtB6myeYcbLJihwT7UO9gnBF02Fhlt6myD2QM6h1tgQ9CnK4PYaaALj
jLp27doQvBSdJbtrqgl8Wq4ESjHfwBe14ek/15qA7cGDymMWNzDbqzqmULIZ
FC9tCFgwhWLxWofBq/BmKNGM2FjjDEVe0c9fNqKbQWgv++dswVBsYPT7LpXQ
DKQR/pqPMqFow8kZ4JHZDK/OyOi5mIfi7hCJ6tiyZrCTtQ71Lw/FwvldFM03
zRC33Pjt9vkwtBZNOrp/ZwtE2rpKsTqGYYF6zQkj4RYIeyF42c8jDFcUmL5f
F22BgLv+i2ZhYfjM3VytUbIFXMlKGwJlYcgjHWs2e6wFTkdW8d7bCMMjOaWt
cpYtwMRfAjlF4RiQaHMiOr0FSCFmYduqwlGHUV2A4U4LrH9h+S+kKRzzmgq/
eGe1wELDBR273nDMCA28p5ffApPWoiZ7/4Tjg0mKeXtlCzwrvO+ar3cTHRzl
1rtftUCwYnp68eJNHMTN1qlrLWC68yPZ6d9NLP6XrKPzrwVkGaS/imyOwCO7
A6l/SVSY6GxXvbszAs++jTKwYKGChtPih3iNCAz6ltT8nYsKLKlGh64kReDE
9O5ojwNUuPWDm3ZcKhLzfE9bCetS4eKA9aVVxUjcw8/nS9GnArm5lLsOIlFN
7G4jYUCFuSh1J1mjSPw93f3O1IQKBsKULfsCIvHPAnOfvQ0VePV7jVhfRCLZ
gz93+TIVsh4lfO1zjMJh1kxxlWQqmKrtGbbzjMJ6PoU2h1QqcPc8fjnvH4XR
NFpubDoVIn91PuRIiMKarlql/jtUuHyU3UO7PgpfLyTpqOfR+zyP+klsjcZT
4S+H8qqp8G3yxp+K2miUruHmTuqjQoE31wyZiEZtr/dibm+oYMOS+77rVTQ+
OiHFqPmOCv0StOaZD9GY3xCwbX6ICs1ef4PF2GJQMnHxf4cmqJD079qmHJsY
zK/hKj8+RwUloatbE1hjMb0dk8c306BLPMfRhTsWU/kHT1qz0cBJ+XWj5s5Y
rN4nbzvCToMUY1GXNZlYFFQ7/bKHkwbzCW/+u2Qai9ritg3FvDQo2aQQcqIw
Fl0bEn9wiNBA6H+LP1c04lDWOUu5VZEGVWsi2m9143CKuTSXW5kGp9n0citM
4/B/BfMVtio08BUr1L/oGocXp6+9+K1Kgzf2Jo/eJMfh/iEGXgGkQfxArVP5
RBy+nBbLEdKhwV+a76BjcDzu82LQlLemwR7LzliO6HhUFsr9Y2xDA/LyXvLT
5Hgcc5vN8LGlQbBUVwFbYTyeGZKIr7Gnwb9M0StVr+Ox8u5G6L6LNCBd6d26
IXALzfR1+rs8acC0/5DG3Zpb+JlTabtjCA22Ro+V9X5NQLb6/eavsmnA2eNb
rLuQgN2ovNJ6nwZc/Fx5L/4moESbakFjDg14CzQyCJ5EvMm6Ilb8gAa7ieLQ
yuOJqO7PT/IppIHMCsU0KSkR+btZ1j6V0UBcYRNJfFcSFmSt/d3dRAOdgozS
L21JyHAOx6Tf0UA18sjI6xdJqJB7S2SabolLXWyVXUlYadX/4t4ADTZLbXL3
H0zC88LLOqxDNOio8ZTZMpOE1DYb8cERGqi3naw5xJOMDXO+IxYTNFCZXGj2
sEtGdo6h8OXvNDggYtC7sJ6MUltHwnL+0YBlKH6/OmMKDoYpn1PfoMHnxJf+
Cawp2DrUkDZJd9GGxl4JnhTU1e6jJpMIEP+geMVGLAWztzN79zAQIHl/J+/L
cylI/U/fkMxEwOFdX8zuF6Vgxc+R8ZnNBKgJBH84bZCKe8tEGNK5CXC43WMf
ZJKKPNpyke/ojuTd+6nKIhW13ngM8fEQ0MvV/lXoQioKOGpNp9PttIXt1+y1
VJyiiBelbicg/k86U3J+Ki4sl/2M4CPg/ehjieHlVLQ/eJHtlCAB1x6MXXXJ
TsMVUzejkyIEbLUJktDMS8NElZOsfnTnCu3+sKc4DQNFuzNL6O5ItdJ5W5mG
yzddTdj3EsAb+V4E2tPwIU1epYfuctfhLt6ZNCyefk41ECVgUv6dGKGSjkFO
m3OOHSTgTEfne/636fhJI6y5TpIAS+fDUhwHMtCr9YegjBIBDAUHDJJsM9Fy
sBSukwmYtkq0snpyBz0Zug1ktQj4X9GhuQXGe6gruSFdrktAXLyJkcCxLGwu
STu0eI4A57ml3Ihb2Rjm8IB7yZSA4ZkDrSEv7+Nn7/9CuSwJuBwQdenkRg6G
Wo1eLbAh4IFGxVppcS5+MlPVE3AgYCB9ssxP8wH28yhFrDgRcKjYoN9l7gHS
DG7btjkTwBVq1qienodLreMUFVcCnokf3Dohl4/rrz/X6rgTkJwg2583nI/y
u/KnjTwJkGolMUr5FeCRo91fOLwIMKe6Lt7lLkTjrmizuxQCCv23Wco0FKJC
0PS46FUCmkmBktEmRRj5fIeztzcBv7REvVg2ijBfd8qvzYeABYuUPWeyi5E/
u9Zgypf+B+W7iT4qJag4pHL5qx8BKv2j3u0TJZiZqugw509AreqXtuGgUjwz
qfm89xoB5+yloraLP8S+DrGTTwIICDZg45DveYgsfecUwq8T4MdRuS7g9gjN
ha+PKgUSkBCdZCfKW4YzO+ZOzdJN6VORWawqQ4uAMxyxQfR9Jq9RH+o+xgzh
jzlCwQT4Vy+1Riw+xg6ufd/K6B44e/SwWHI5VkcpbZcKIaD/rXbaZGo5/kw9
oyxDd4+5xe/s2+V4zbTOQo7uF47XW3izypEl/laOAt2Nfi3ajMXleDRJa68a
3dk56g5jzeUYBwzM+nQ7zWunpn4tx/094fqX6bbztljWnylHy9hkawrd1quu
5mxz5Wghuup2lW7TTfHCoQvlmOEyEOlH9+kd3Y88/5VjZ07nkxC6JcGwXZu3
Ank2nv1MpFu83UGMeUcFZjy7vpxM937tq7GEYAWeheQ/qXTvMkozUBauwIfj
PaRMujmdB0b3H6rA1Y77zLl0s81+hgmpCrwedJQ5j25Wyu+8e7IVGNcrx1RA
N+m6gAuPYgX6NSqSSuhe3xDv7FKuwJmoE39L6V69eVQ2RrUCbWzLVx/RvbxF
J0VTrQJbLH2XHtP9K8FiaQMq8GvGvR8VdP8f6veYrQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/a9tRxArg4lD30G2o3vrD9i7RDBGXWz3hfNbzIJZ
L7RHwPkT2VfME7uVBud7rZj4OjSuAM6PnDh1zjmzUjg/Pjv/fVZFFZy/f3P7
BKuEeji/+9uul9MimuD8OtOpU5d/aYHz56zue3ExuR3ON5Mq5ulj74Lz/+4v
u55c1wPn83TcXXPhRR/CfUumr3x+eAKcr6oQcOHzn4lwvq1E3X2PgMlwfuXC
u8WZc6fA+d7HztwWuzIVzo9ON9ThVZ0O5zMuUQ2YED8Dzn8a0x8Ts2UmnP92
mda7z0yzEf7tCQ2WsJ4D56e/+7qgtXcunH/zteqh+pPz4Pz8qvYM1//z4fyF
Tut/r1y+AM6/NvXRmnKXhXC+1vKAS5nvEHyBxvBdjlMXwfkHNdR4HhgsRsRn
n/6lRTcRfJ1DDEw65UsQ8bkv68sswaVw/tIK/mi9nQj+HoYa7Y7QZXD+Jzfl
Arb/CP7nqEly3nOXw/lt5rP6Sy1WwPkWl+6UHHmA4G+1en74Zu1KOD8wUadd
WGMVIn0EcPEan0fwy3k3/JHIXg3n93VMSFAWWQPnF1600PuyEcF/+qhy3yqf
tXB+xaavh1q/IPjX/C0N1Seug/NT3ntOnvwCwf/UF/X1v/16OB8AzPusVw==

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 2.664546080376224*^-14}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "10", "20", "30", "40", "50", "60", "70", "80", "90", "100"}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.915, 0.3325, 0.2125]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.40082222609352647, 0.5220066643438841, \
0.85]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.9728288904374106, 0.621644452187053, \
0.07336199581899142]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.736782672705901, 0.358, 0.5030266573755369]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.28026441037696703, 0.715, \
0.4292089322474965]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.683913815642908*^9, 3.683913884765538*^9}, 
   3.683914137240006*^9, 3.684227034871368*^9, 3.684227094051794*^9, 
   3.684227519377877*^9, 3.684227553271533*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Error", " ", "in", " ", "the", " ", "ANHARMONIC", " ", "heat", " ", 
    "capacity", " ", "at", " ", "4000", "K", " ", "for", " ", "different", 
    " ", "numbers", " ", "of", " ", "eigenvalues"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"ANHARMONIC", " ", "spectrum"}], " ", "->", " ", 
    RowBox[{"0.5", " ", "+", " ", "x", " ", "+", " ", 
     RowBox[{
      RowBox[{"x", "^", "2"}], "/", "250"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "T"}], "*", 
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"D", "[", 
                   RowBox[{
                    RowBox[{"ff", "[", 
                    RowBox[{"T", ",", "n", ",", 
                    RowBox[{"x", "*", 
                    RowBox[{"x", "/", "250"}]}]}], "]"}], ",", "T"}], "]"}], 
                  ",", "T"}], "]"}]}], ")"}], "/.", 
              RowBox[{"T", "\[Rule]", "4000"}]}], ")"}], "-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "T"}], "*", 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"ff", "[", 
                   RowBox[{"T", ",", "2000", ",", 
                    RowBox[{"x", "*", 
                    RowBox[{"x", "/", "250"}]}]}], "]"}], ",", "T"}], "]"}], 
                ",", "T"}], "]"}]}], ")"}]}], "/.", 
           RowBox[{"T", "\[Rule]", "4000"}]}], ")"}], "*", 
         RowBox[{"100", "/", "hc"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "10", ",", "400", ",", "10"}], "}"}]}], "]"}], "//", 
    "TableForm"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "T"}], "*", 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"ff", "[", 
                   RowBox[{"T", ",", "n", ",", 
                    RowBox[{"x", "*", 
                    RowBox[{"x", "/", "250"}]}]}], "]"}], ",", "T"}], "]"}], 
                ",", "T"}], "]"}]}], ")"}], "/.", 
            RowBox[{"T", "\[Rule]", "4000"}]}], ")"}], "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "T"}], "*", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"ff", "[", 
                 RowBox[{"T", ",", "2000", ",", 
                  RowBox[{"x", "*", 
                   RowBox[{"x", "/", "250"}]}]}], "]"}], ",", "T"}], "]"}], 
              ",", "T"}], "]"}]}], ")"}]}], "/.", 
         RowBox[{"T", "\[Rule]", "4000"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "10", ",", "400", ",", "10"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"ANHARMONIC", " ", "spectrum"}], " ", "->", " ", 
     RowBox[{"0.5", " ", "+", " ", "x", " ", "+", " ", 
      RowBox[{
       RowBox[{"x", "^", "2"}], "/", "750"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "T"}], "*", 
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"D", "[", 
                   RowBox[{
                    RowBox[{"ff", "[", 
                    RowBox[{"T", ",", "n", ",", 
                    RowBox[{"x", "*", 
                    RowBox[{"x", "/", "250"}]}]}], "]"}], ",", "T"}], "]"}], 
                  ",", "T"}], "]"}]}], ")"}], "/.", 
              RowBox[{"T", "\[Rule]", "4000"}]}], ")"}], "-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "T"}], "*", 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"ff", "[", 
                   RowBox[{"T", ",", "2000", ",", 
                    RowBox[{"x", "*", 
                    RowBox[{"x", "/", "250"}]}]}], "]"}], ",", "T"}], "]"}], 
                ",", "T"}], "]"}]}], ")"}]}], "/.", 
           RowBox[{"T", "\[Rule]", "4000"}]}], ")"}], "*", 
         RowBox[{"100", "/", "hc"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "10", ",", "400", ",", "10"}], "}"}]}], "]"}], "//", 
    "TableForm"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "T"}], "*", 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"ff", "[", 
                   RowBox[{"T", ",", "n", ",", 
                    RowBox[{"x", "*", 
                    RowBox[{"x", "/", "250"}]}]}], "]"}], ",", "T"}], "]"}], 
                ",", "T"}], "]"}]}], ")"}], "/.", 
            RowBox[{"T", "\[Rule]", "4000"}]}], ")"}], "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "T"}], "*", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"ff", "[", 
                 RowBox[{"T", ",", "2000", ",", 
                  RowBox[{"x", "*", 
                   RowBox[{"x", "/", "250"}]}]}], "]"}], ",", "T"}], "]"}], 
              ",", "T"}], "]"}]}], ")"}]}], "/.", 
         RowBox[{"T", "\[Rule]", "4000"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "10", ",", "400", ",", "10"}], "}"}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.68391444146469*^9, 3.683914481988228*^9}, {
  3.683914574510241*^9, 3.683914585497754*^9}, {3.6839146756812153`*^9, 
  3.683914689615518*^9}, {3.683914908061591*^9, 3.683914912806828*^9}, {
  3.6839151257195463`*^9, 3.6839151545387897`*^9}, {3.684227071263754*^9, 
  3.6842270762175837`*^9}, {3.684227604548586*^9, 3.684227716300563*^9}, {
  3.684227784818686*^9, 3.684227791318972*^9}, {3.68422788915102*^9, 
  3.68422790252418*^9}, {3.6842279424170647`*^9, 3.684227944664259*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"10", 
     RowBox[{
     "-", "64.10833685251946764310118055815272148999`17.68132270730393"}]},
    {"20", 
     RowBox[{
     "-", "24.21452625594134045224476850659121400735`17.270739703025107"}]},
    {"30", 
     RowBox[{
     "-", "5.71721534095435400170393897868224847605`16.656219842954467"}]},
    {"40", 
     RowBox[{
     "-", "0.9576773128696940203957086405753614472`15.883940045452633"}]},
    {"50", 
     RowBox[{
     "-", "0.12294592557484660577878803684508015989`14.993058442080352"}]},
    {"60", 
     RowBox[{
     "-", "0.01261493470803294428151989064213094296`14.004301277435177"}]},
    {"70", 
     RowBox[{
     "-", "0.00105918125896128560765786260576690797`12.928392561917308"}]},
    {"80", 
     RowBox[{
     "-", "0.00007381903023967738125528803993902667`11.771590965439655"}]},
    {"90", 
     RowBox[{
     "-", "4.31021063986234261540413153316902`10.537921137210759*^-6"}]},
    {"100", 
     RowBox[{"-", "2.1218419965068061031291085396076`9.230135683447015*^-7"}]},
    {"110", 
     RowBox[{"-", "8.84664516248566992863690096004`7.850201250618534*^-9"}]},
    {"120", 
     RowBox[{
     "-", "3.1343539665265829523773634747`6.3995706827987275*^-10"}]},
    {"130", 
     RowBox[{"-", "9.45998318767583575872430343`4.879313007047944*^-12"}]},
    {"140", 
     RowBox[{"-", "2.4290857083421983113770945`3.288865481283707*^-13"}]},
    {"150", 
     RowBox[{"-", "4.50862481683624638144914`1.5574667396678865*^-15"}]},
    {"160", "7.6020497702150307756322`0.7843533510547746*^-16"},
    {"170", "8.5983968111545147624748`0.8378401261639672*^-16"},
    {"180", "8.6145359660024544195814`0.8386545310115033*^-16"},
    {"190", "8.6147601096535257663458`0.8386658308754551*^-16"},
    {"200", "8.614762780716098136865`0.8386659655312724*^-16"},
    {"210", "8.6147628080460023260773`0.8386659669090493*^-16"},
    {"220", "8.6147628082862402091232`0.83866596692116*^-16"},
    {"230", "8.6147628082880370274414`0.8386659669212476*^-16"},
    {"240", "8.6147628082880731407264`0.838665966921252*^-16"},
    {"250", "0``15.903422642475537"},
    {"260", "0``15.903422642475542"},
    {"270", "0``15.903422642475538"},
    {"280", "0``15.903422642475542"},
    {"290", "0``15.903422642475537"},
    {"300", "0``15.903422642475537"},
    {"310", "0``15.903422642475538"},
    {"320", "0``15.903422642475537"},
    {"330", "0``15.903422642475537"},
    {"340", "0``15.903422642475537"},
    {"350", "0``15.903422642475537"},
    {"360", "0``15.903422642475537"},
    {"370", "0``15.903422642475538"},
    {"380", "0``15.903422642475538"},
    {"390", "0``15.903422642475537"},
    {"400", "0``15.903422642475538"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.683914472257559*^9, 3.683914492542975*^9}, 
   3.683914587103045*^9, {3.6839146506434317`*^9, 3.683914691670939*^9}, 
   3.683914914863969*^9, {3.683915128986986*^9, 3.683915156473501*^9}, 
   3.684227037764398*^9, 3.6842270960031357`*^9, {3.684227662435789*^9, 
   3.684227674871175*^9}, 3.684227736027576*^9, 3.6842278087297077`*^9, 
   3.6842279209772263`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEqDq+3nNvbp751P4Rv4hDt9fixxLf5UL6dg+aO
1a2p+nVQvovDkim6s6ZbhkD5ng4Ju+a1TjiqAuX7ORxVTl35hOfjPjC3IdDh
xjTtJ6efb4PwGUIcJi1ZmHWiqxIqH+ZQ1mT1Yc0dc6h8pMOCh0tlmk9/2guR
j3YoW8Uxs0B4JYTPEOdwZPcUV+G8GAjfIcHBIW1lun0pN1R9osOPdydfnuzf
tgfMP5DksHWCxRqRs1EQPkOKQ+S2g1I5wkY2EP2pDu+e3nr+vNAEwm9IcwhW
OX1rVzWUfyDdYWV20om7MD5DpkNC5gejezC+Q5aDQAu7CZzfkO2g9IMTwT+Q
43D1DxKfIc/hLTLfId+BARk4FKDyH6DxGwpR+QpFqPwDaPyEYlQ+QwkqfwEa
36EUzX40fkMZmv3laPaj8RMq0OyvhPMBeSaNwg==
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 400.}, {-3.413178754478509*^-6, 1.110432237856689*^-18}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.683914472257559*^9, 3.683914492542975*^9}, 
   3.683914587103045*^9, {3.6839146506434317`*^9, 3.683914691670939*^9}, 
   3.683914914863969*^9, {3.683915128986986*^9, 3.683915156473501*^9}, 
   3.684227037764398*^9, 3.6842270960031357`*^9, {3.684227662435789*^9, 
   3.684227674871175*^9}, 3.684227736027576*^9, 3.6842278087297077`*^9, 
   3.684227938344078*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"10", 
     RowBox[{
     "-", "64.10833685251946764310118055815272148999`17.68132270730393"}]},
    {"20", 
     RowBox[{
     "-", "24.21452625594134045224476850659121400735`17.270739703025107"}]},
    {"30", 
     RowBox[{
     "-", "5.71721534095435400170393897868224847605`16.656219842954467"}]},
    {"40", 
     RowBox[{
     "-", "0.9576773128696940203957086405753614472`15.883940045452633"}]},
    {"50", 
     RowBox[{
     "-", "0.12294592557484660577878803684508015989`14.993058442080352"}]},
    {"60", 
     RowBox[{
     "-", "0.01261493470803294428151989064213094296`14.004301277435177"}]},
    {"70", 
     RowBox[{
     "-", "0.00105918125896128560765786260576690797`12.928392561917308"}]},
    {"80", 
     RowBox[{
     "-", "0.00007381903023967738125528803993902667`11.771590965439655"}]},
    {"90", 
     RowBox[{
     "-", "4.31021063986234261540413153316902`10.537921137210759*^-6"}]},
    {"100", 
     RowBox[{"-", "2.1218419965068061031291085396076`9.230135683447015*^-7"}]},
    {"110", 
     RowBox[{"-", "8.84664516248566992863690096004`7.850201250618534*^-9"}]},
    {"120", 
     RowBox[{
     "-", "3.1343539665265829523773634747`6.3995706827987275*^-10"}]},
    {"130", 
     RowBox[{"-", "9.45998318767583575872430343`4.879313007047944*^-12"}]},
    {"140", 
     RowBox[{"-", "2.4290857083421983113770945`3.288865481283707*^-13"}]},
    {"150", 
     RowBox[{"-", "4.50862481683624638144914`1.5574667396678865*^-15"}]},
    {"160", "7.6020497702150307756322`0.7843533510547746*^-16"},
    {"170", "8.5983968111545147624748`0.8378401261639672*^-16"},
    {"180", "8.6145359660024544195814`0.8386545310115033*^-16"},
    {"190", "8.6147601096535257663458`0.8386658308754551*^-16"},
    {"200", "8.614762780716098136865`0.8386659655312724*^-16"},
    {"210", "8.6147628080460023260773`0.8386659669090493*^-16"},
    {"220", "8.6147628082862402091232`0.83866596692116*^-16"},
    {"230", "8.6147628082880370274414`0.8386659669212476*^-16"},
    {"240", "8.6147628082880731407264`0.838665966921252*^-16"},
    {"250", "0``15.903422642475537"},
    {"260", "0``15.903422642475542"},
    {"270", "0``15.903422642475538"},
    {"280", "0``15.903422642475542"},
    {"290", "0``15.903422642475537"},
    {"300", "0``15.903422642475537"},
    {"310", "0``15.903422642475538"},
    {"320", "0``15.903422642475537"},
    {"330", "0``15.903422642475537"},
    {"340", "0``15.903422642475537"},
    {"350", "0``15.903422642475537"},
    {"360", "0``15.903422642475537"},
    {"370", "0``15.903422642475538"},
    {"380", "0``15.903422642475538"},
    {"390", "0``15.903422642475537"},
    {"400", "0``15.903422642475538"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.683914472257559*^9, 3.683914492542975*^9}, 
   3.683914587103045*^9, {3.6839146506434317`*^9, 3.683914691670939*^9}, 
   3.683914914863969*^9, {3.683915128986986*^9, 3.683915156473501*^9}, 
   3.684227037764398*^9, 3.6842270960031357`*^9, {3.684227662435789*^9, 
   3.684227674871175*^9}, 3.684227736027576*^9, 3.6842278087297077`*^9, 
   3.684227959298678*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEqDq+3nNvbp751P4Rv4hDt9fixxLf5UL6dg+aO
1a2p+nVQvovDkim6s6ZbhkD5ng4Ju+a1TjiqAuX7ORxVTl35hOfjPjC3IdDh
xjTtJ6efb4PwGUIcJi1ZmHWiqxIqH+ZQ1mT1Yc0dc6h8pMOCh0tlmk9/2guR
j3YoW8Uxs0B4JYTPEOdwZPcUV+G8GAjfIcHBIW1lun0pN1R9osOPdydfnuzf
tgfMP5DksHWCxRqRs1EQPkOKQ+S2g1I5wkY2EP2pDu+e3nr+vNAEwm9IcwhW
OX1rVzWUfyDdYWV20om7MD5DpkNC5gejezC+Q5aDQAu7CZzfkO2g9IMTwT+Q
43D1DxKfIc/hLTLfId+BARk4FKDyH6DxGwpR+QpFqPwDaPyEYlQ+QwkqfwEa
36EUzX40fkMZmv3laPaj8RMq0OyvhPMBeSaNwg==
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 400.}, {-3.413178754478509*^-6, 1.110432237856689*^-18}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.683914472257559*^9, 3.683914492542975*^9}, 
   3.683914587103045*^9, {3.6839146506434317`*^9, 3.683914691670939*^9}, 
   3.683914914863969*^9, {3.683915128986986*^9, 3.683915156473501*^9}, 
   3.684227037764398*^9, 3.6842270960031357`*^9, {3.684227662435789*^9, 
   3.684227674871175*^9}, 3.684227736027576*^9, 3.6842278087297077`*^9, 
   3.684227976853709*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "ANHarmonic", " ", "heat", " ", "capacity", " ", "as", " ", "as", " ", 
    "function", " ", "of", " ", "temperature", " ", "based", " ", "on", " ", 
    "a", " ", "partition", " ", "function", " ", "evaluated", " ", "at", " ", 
    "different", " ", "numbers", " ", "of", " ", "eigenvectors"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "T"}], "*", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"ff", "[", 
                RowBox[{"T", ",", "n", ",", 
                 RowBox[{"x", "*", 
                  RowBox[{"x", "/", "250"}]}]}], "]"}], ",", "T"}], "]"}], 
             ",", "T"}], "]"}]}], ")"}], "/.", 
         RowBox[{"T", "\[Rule]", "t"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "10", ",", "300", ",", "20"}], "}"}]}], "]"}]}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "20", ",", "4000"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"SwatchLegend", "[", 
      RowBox[{"Flatten", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", "i", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "10", ",", "300", ",", "20"}], "}"}]}], "]"}]}], 
      "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6839147440634317`*^9, 3.683914757497518*^9}, {
  3.6839147959892893`*^9, 3.683914840170554*^9}, {3.684227083089611*^9, 
  3.684227085075247*^9}, {3.6842279804708357`*^9, 3.684228067726487*^9}, {
  3.684228431800942*^9, 3.684228444135708*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
HL4vQw2Sfvo2Fesw4H+z+wWc
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
29zy3nCKgqbdnCTTU1RUsfhOITIwCi7knbt1+AwVidE+e1NWEgUk4oPKEEkq
EuTX6lxai4Jtl99q0spSEf1gmIDCtmj4FX7k4D3sr5GtbhEM0TAU22w1iJ2z
qXhYhD0a7DL1TIvlcDwjko43j0WDkKvfXm1ERcfT+DhataPBcKpm2VuRik7v
n7qWlhMNOYtfC7xVqYi992jRTCEed6t59hH7Z6gpzfnyaFBJ6BKQUqOiF6tD
eT310ZDIvdA6iy3x8f2/nV3R4HOZJUfnMhVJEV8kO61GQ9c47GPUpCI5bq8R
Va0YoCdnCAvoUpF5fIeZp34MqG/XmrPHDuA4PFluFAOVq0LaZOxOtqZvvFYx
8JE0P6+nR0WWjEw/Zx/FwLZC1VRvfSoKW4nbEfU8BsinFNgar1HRx+FikaHl
GOD9j5GezpiKaG5sFrKsxcB+otIZFWyBIS0xRdpY0CluYwjEvt+3dKaQORYC
wsTLGEyoaFv7eVlP/liQ7Pi4ueMmrjdqs+Zh9VgwKK/6On+Lih5lfnKySY0F
9h/6fMEWVLTrpqeI0rNYYOjZaUnCzuA9MHIwNxa6q7TuzmO/iTFW7y2LBZXS
+DI9SyriCPjIj5piIdymRHS/FRWV3B1q45iJhdIqEmP6bSoaP9t37JV0HPgH
NzG52lCRy4LzJ6IcvtyaV7tlYu8s5ohxUYyDh6rOhe+xxYX0NkSvxIEMu6jp
kbtU9Ji7pzfuVhwEnFLb9R8253qnr21AHGTfnE3ZY0dFl9+8/8jZGwd/Vj1p
XO7j/BqyVhkNxUFtn7NnCrbezNWItM9xUOYtQGrENmbrAaHpOEglEL33PKCi
e0ZD2ZIbcWAwckmwADty7ssDPeF4sK2dO9BpT0U9nJvbox/Hg72Hm+qCIxUZ
5sOnPt94yD3YYcPmREXDF/yqeQLjYaiDpHsKe9KUziYzKh4M5o/5PcD+XcDc
XpYTD80ZtZoz2FyIO7GjMx48Or52DTpT0Y07p0+wCCbAVJNQW5grFWlKv5b+
I5IABD3PoixsYNRWHhNLgE6GYlMStlCh/c0q6QTQEhNUncFemCslmFxJgBv/
rnBdekhFT13Ffhc7JYB+cXLvMrbrJQptolsCxOa93rPLjYpsuDVZ/TwTgMw9
KXgYW7Pu3jGDwASgG87sUcfm2Si6vkFMAAu1KNUU7BL/4xTNhgRYua5aKfUI
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwd13c81d8bAHBUZlRIaNgzoyJE7nmSBiGZEWV+i1I22XuPa3Ovla1kZnNv
IWkY2UJJGiIZTSO/4/fXfb1fn9f93HOe+zznPI+A1R09WzoaGpp3tDQ0W5//
whr0dtDIg+8LznUGmkOqmqNtqkFKx2FVCR6LJINqmkS3+KajAmy40KwQWG+p
zniNcPiUKoLc8LnYZoYE1SOv3v/7814JWDMKPnJXVKn6HJyfdeNVhua/wLvI
0KfadfvX4LKeCrzLok8lds2qcj6meXwn+iQ8jT05+7SSjmC5h+XBfLsqhH+4
YexF4SaUW+1NtVsnwDeHZdMqVRnCxlg8uPACSF120XykeIqQT7e3rqoO4Gwu
l7W4nR5B4zDp8KLeKXgmI3nwQaYVYVGf757M91Og8b39neWMEyHVp4DLIVoN
PqfNPTdyDCCcLJSIeSB2GlKNIllMN2MI093ltF/bT8N2ucali4XphIhfch7i
FuowI89iznOqgCDD1zj/37o6MK+aRKQLVxIGzxGsCtPPwAFvnoPpOxoJXo7t
Ix/kz0K+iZJmzac2An/GeW3B12fhpDtbKvvMS0Lnk+42C4dz8DH+lCSP0CDh
1lc9pRym8yB/aPVhccAEgYNj9OFk4XnQT4EJ9+4PhCYVc6EDahqQmkyM6do5
R7CwmU43fasBgavpImKyywT62OtsGV6a0LBPgOPMvj+Estr54BGuC7CJYqTP
e28S9N46/d1bcwEYtHWf/9XZjv7Q/75tcFELKoI0zHfOMKFsWZ+ZxDktUFxy
GebU243UL9Oavg7Xhlf3O689MONEXwPCencJ64C1/floFnEeRCxlOaPzWAdK
C9CZlJeHkEI/sSnG7CIMSW1/1VchiCZW9x55+eci7O4Rln/oJ4qeJHT3h2jq
gqGw5fS5d5KIU5TIWpCuC9ayBV1P38qi601659s/6YL3aU+OE0+PoSadvcHT
8pegcYkyN/D7OGL9MNJKG3wJsh1Sbk7GnkAWHqQ//K8vgbfMqORSrCqqYTGX
Az496Fr4/eH8JiD6XL7b1xz04D8+vZu7XE4jE/npEr9mPZjhOfHIVuQsKusq
+JDFpA8KxKFcTR4NpL8kYTJRqA/J1qnTh15fREWh80lrK/qwL2//8WPdl9Aq
T0UPr5oB1BjnuXwf0Ufa5U5MykQDyOLa1TjLZIRy1eTVTd4aQKS8koi0zWW0
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
gA==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
XyLdQDQiR0qq4ykidC6J00y4gSTt9WV1ulr0nv5C9bEwd3h47PSjIK9apH43
TVg50x3ktuSjAsNr0cOhqST1ancgmA6NW6XWIq/Ce+4XP7iD+ucA1u7qWsR3
qviknZwHZMWMaut8rkVmfjRtmcMecOWoB/th7Tr0YlZbIX/BA5be0hE8TOqQ
jHZGSSm1J9DEurQU2NahTb5DUU8PeEJbhNNSjW8dyqo31+319wQR2uGL5eV1
aPxH3fsdkvegr/lJpQJdPbp26+53e08vaO2XeXCotB4FdK4e3B3tBWPMvgc5
HtWjvIOet0tzvCAgs9N8rqEezX4PmPvc5gVNl4qVLDvr0S3XxGkbDm/Ijnvf
mrhYjzx8nwxffeQNJEXGFd5DDSgu7g9Fb8EHDs7cU8ouaUBVS/7/lrd84I9v
0N5aUgPqu7RTJYHNFz6+E7zb+rQBcbAzNfQo+cKqiSzUvmhAxHT+xxcifOHL
/JffTJMNqPiBWskZcT/4t36zJYa9EVFqwuKVLPzh1rCdqZdbIyq4nWTu5+YP
+Z3fv1Z4N6JIsRzplkhsqmHVocBGZJD29IXWE39IUVBJpo1tRG7Nzj4ytAGg
3pKR87GwEe1+8KDqpGkA5DvnUfL7G9Gxm1vcpjsDgbqgMvKLRBMq0QjZ+rM3
EJJpNi9MyjQhXiHGT1k8gXBAa8K/53ATonrPWfNRNhAsyMn+ySeb0Ovzstp2
JoHAmis51KDThCzkzAM9KwPhD7dOV5hLE4paa5hLNQ6C302fqBJrm1DoNXsZ
eusgoD/Ssnm/sQkFtfPc9XAIgnvv1zOcKE3Ii+D543JQEAQ05n9VeNWE7FWP
b3GXB8FA5WMVr6EmpBlazU7cCoKg+0S2ydUmtJOzBOUUBUNOn4y2n3QzovK/
HLSvOhiKpOLrGw82o83PdC/9G4PhdFqW2I9DzWi13vacRW8wBNMoCRspNKMp
cxFDoY1gMCl2IU2cakbPC7Pt87Xvw6pX+ydms2bkdywlpfjHfch5/5+aeEQz
MuL7qGrz7z6UTYubFUU1Iznqg18Ed4XA39QFapHYZjTZ+UKJwBcCNhmUnaxJ
zUjd5sdEtHoIzIi7h77KbEZ0SfrSzvEhEPDmxYUUUjOKWWKhKMuEwuX+rXOT
fc3o+pD5zd/HQiFVwopvc6AZqTaVsjxFobAzlcTLMdyMFsPUbOT0Q0HUhb5O
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ZJg=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
auQ=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ZFA=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwd13k8lF8XAHBUJCn72i9LdqKkSJl7SEVFsoUoRIUUWbNT9m3szNiyy05l
nykKlS1ZsoQsSSRbJSXv9f41n+/nzjxz7n3OvfccIcu7utZ0NDQ0Y7Q0NFuf
/4JqdHfQKID3G46/DDT7Vc59aFIJUDoK60rwXDQeVJIkOyQ2HY7BhhPNCoH5
tsqUxwC7V6EiHOk/G1nPEKNyqP3Tv7VPSsCckjPNU1ah4vXf/KwLnzLU/wa+
RYZulbY7P3uXdU/AWBp9IrFtVoXjOc3zu+En4VXkydlX5XQEC1amovlmFQie
vHXZg8JDKLXkTLT5S4Bv9ssmFSqyhI3BaHDiA5Axcjr3RFGVkE3H+aziGcCZ
TK7rEja6BE1pkvSiriq0ykr9V5RqSVjUE3gk+10VNL83j1lMORISvXK47MPV
YCZp7rWhgx/hZK5kRJH4KUg0DGUy2YwgTHSU0n5tPgXbj9QuXcxNJoT8POIm
Ya4OUwpMZryqOQRZgdr5G3/VYde6cUiySDmh9yzBMjf5NOzz5P0veUctwcOh
eWBS4QxkGyudq/rcRBBM0dASfncGTrruSWSbektoedHRZG5/FqajVaV4D/QS
bn/VVcpg1ACF/esl+X4jBHb2DyUfczVALwFGXDsmCXUnzA7sU9OExHhiRNvu
OYK51USyyagm+K8ni4rLLRPoI2/uSfE4BzXcQuynudcIxU/nHwxwnYdNFHFQ
w3OToDvq+Juz6jwwaOm8/q29Ha3R/7qjf/EClAVomu2eYkTpcl5TsXMXQHHJ
qZ9DlwWpG9GavAvWgvbHLdeKTDnQV7+grr0i2nDdViOcSYIXEQuZTms/14bC
HHQ64e1+dKyHWBdhehH6ZLa3d5cJo5F1zkNv1y4CS6eIQomPGHoR09Hz8JwO
GIhYTJwdk0IcYkTmnGQduC6X0/ZqVA7drNPVaP6sA56n3NmPv5JHddqcDyYU
LkHtEmXu/a+jiHlyoJH2wSVIt0+w+xh5HJm7kdYE310CT9kPUkuRKqiKyewI
COhC28KvSY1NQPSZAneu2evCDQFdu71Op5CxwkSBT70uTPEef2ItegYVt+VM
pjHqwTFiX+Y5Xk2ktyRpPJKrB/HXEyf2v7uI8gLn4/6s6AF3Fv9R+Y5LaJ23
rJNPTR+qLmc5fR/QQ1qljozKRH1I49pbO8toiDLVFNSNR/UhVEFJ9KCVEVrp
/+njLmMAtF84yaUzJuiMXW1tkocBKA19EzyfYIbm4why/VyGsLHTum+mxgIh
CVrbH1aGIHtUO/ePznUU29Ccw1FlCNObmUTTTSukNK3Bp3fxMlzZxmpBybiF
wu8zGdxLuww+2fKZGzG2aJS5Mzpm7jKU1ZhIMJBvo4fH9HZ0BxsBv/jSq3p3
B/RZ8oiH/4gRzN3k2Fta44g0/2P/Ln/YGO65o+WJHU5oz/b3HxKGjMGol/tV
fqsLSn6nW3zl4BXoOqDqbDDlidZfygsxB1yB1Pf5k6fDvJFZDVsipf8KVKtl
fdpz0hcJZ/T4CvmZgve5NM29Fv6o+Lau3kyPGQxzP/jLKxGI9pjLtyWLX4Vb
AuIXA8SCkKMem8o5r6tQu8erIF8yGB1T7hErEb0GxOcai74qoWh8m6T38ZPm
cDAnP6ssMRLZvivQ2YyygNuZxZ1k5zjE/5aHyajWAk6rZFML98aj9pchr8on
LWDump9pc1E8kqu5pWypZAkh+qxC7Z8T0Gq6hMirT5ZwbvRSvdSNZORzu+BX
mIIVXEP5dw96pqEYhoJ0rqEbsI+xcbSuMxs9Ww1dyaS9CSp7fu+c4MlBQ5/s
NKQlb0KFsPS/VsscJNwgt4zcb0LnF7+wVz9yUKVD9Wkbrlswkoq81XjyUM9g
y3y9rg0Q4yMfu2sVILbiaWWLt3bQpU//7cTdYnQspTV6btkOIkMSX0+XFCOT
oMIpF77bULr0V1l0vhhlmdtHhdncBgPXs/xWN0uQPOePT1UM9nDeGvWNGpUi
PZ/tofTqd6CLL/vsDHs5OlcQM2dw1QEsul0+ZdZXoIVqg85qRwfgsbf5uPS+
AsW28lbwBjoAx5lfcezzFWj48yPXj0UOcHhe+fgb/kp0W7SS1vq3A8zHa/Ux
3a9EUVk93M7xjqCDkO1+6SokX5m43pfvCMeekV6QoQr1vzD5qFjvCMZ0Zy4s
GFQhgU8TWX8+OYJtWpgUh18VKhdYOfhA7h6kv/O8atdThXpS2dVj39yDD5aH
I8LuPkGuxQNiqx/vgQqn2YBPwBPE10BmNFy6B7lLQXxaCU/Q9eEDXbw8TjCk
8rjave4JWuVVMHlk7QTD4yyhHNueIq4kfYdyGmdYj40Py4h8ioxjElI7j7mA
ShTJ/nfoM9S0Ns7cd94FFm8fCVxLeYakzGV8h81dgLn/7vm+wmdoXbbZ4kuY
C4iEZkhKvn6GSO2LYnRjLiCx48aSGn01GmK4UHE02BUeHz1dGeBRjdTuJgmf
THUFuU2FcP+QavS4fyJOrcIVSCb9o5aJ1cgj977rxWFXUJvxY+usqEb8p/JP
2Mi5QVrkiJb2TDUy9aFrSR1wgytH3DgOa9Wgl9NaitnzbrD4jp7kZlyDZLRS
Cgpp3YEuyqkpx7oG/eU/FP5M2h1aQh0Xq7xrUFqtmU63rzsc2DFwsbi4Bo2u
1gxtk7gPPY1PSxXpa9E1u7vfbd09oPm9zKNDhbXIr33l4K4ID/jI4n2Qs7IW
ZR10v12Y4QF+qe1ms3W1aPq73+xMiwc0XMpXtmivRXbOsZNWnJ6QHj3UHLtQ
i9y8nw5crfSEMiWmZb5DdSg6+g9Vd94LDk7dV04vqEPli77/lja94I93wJ7q
sjrUc2m7Sgy7N3z6IHi3+Vkd4uRgrutS9oYVY1moflmHyMn7n1wI9YYvc19+
M4/XofxHqgVnxHzg39qtpkiOekStCiYqm/uC3YCNiYdLPcq5HWfm4+IL2e3f
v5Z41qMw0QyppjBsmgFCv3890k969lLzqS8kKKrE74iqRy6N97xkdviBWlNK
xqfcerTr0aPyEyZ+kH0vi5r9vh4dvbXJY7LdH2hzSsO+iDegAvXAzT97/CGe
7u+FcZkGxCfE9DmN1x+kNcd8uw43IJohrqpPsv5gTon3jT/RgN6cl9WyMfYH
tkyJ/jrtBmQuZ+bvXuoPf3i0O4KdGlD4z7rZRKMA+N3wmSa2ugEFXbOVYbge
AAzyTX8f1jeggDbeu272AXB/aC3FkdqAPEjuq5cDAsCvPvurYmsDsiUc2+Qp
DoDe0icqHv0NSCOogoO8GQABD8ns4ysNaDtXAcrIewAZPTJaPlKNiMb3csDe
igeQJ0msrT/YiP7O0L/yrX8Ap5PSRFcPNaKVWutz5t0P4AGdsrChYiOaMDtg
ILT+AIzzncrGTjWiF7npttlaD2HFo+0zi2kj8jmakJC/+hAyhv5TFQttRIb8
nwhW/x5C0aSYaV54I5KjPfhFcGcgbCTO0x6IakTj7S+VSfyBYJVC3c4W14jU
rFbHItQCYUrMNag1tRHRx+lJ3SMGgt/blxcSyhpR5CIr9aRMEFx+v3luvKcR
3eg3u/X7aBAkilvy/+1tRISGQtZnKAi2J5bxcQ40ooVgVSs5vSAQcWKoIQw3
Ih0BR0ZhjyDYuyN/1mGyEXFod+sxtAVB5LPeef2VRpRaFPXl3fVguFdUt6jI
SkGGKvsHze8Ew+BZm5MS7BTE2lXy+rt7MJxle9HFyUlBQcvtj5mjgsGv1Hns
Cw8F3T3OZK9ZEwyqZ2QE7gpSkFpr8NLz3SHw2mL79KYsBc1O+K2XPQ2Bk6yE
Te1zFJTjzDJHeB4CBn9rTBbPU9BV+szhjjch4Fl/3Cdai4J6JKkNc2Mh4Mxg
Jt2qQ0ENDhs+4rtCoZdF2HffZQoi/ru/LeNqKBzJfP3P4joFHeNz2h3FEIbP
8+CCOx4U1CGRcd2GNQxMO16uV3tSkJXi2zp1/jDYJxfwdNOLgmL1D9j8kQ2D
I1oB9mG+FPQ96v2rW4ZhELn/q2jkQwoq2Kbgeyo3DCTcXdM1oyiI79vq0ppa
OITceSFUkklBFX8ENXsvhEP9P8601kcUpLFLK7PMMBw6h440jWdRkKt4rvYN
23B4Z8LJujeXgt5bGBS9jwkHW423K1cKKSii/6lV6Xg4DJ84bFhTQUEbVNeB
6z4REDTsph78goL2X2kPYw6JgByCfKBLEwURfgoRqmMiYL/5eJllMwX5yHTk
7MqNgG9ny9qOv6Kgf8kH7lW8jYCNxueyw20URHOve/cmTyQwf1hen+uioO0i
Umqkqkg4z7GZov2RgkSovj9ONUZCwIkfeftGKUjdpK/gW0skjIeWtcxiBxL9
9qoORQK9ANMp/3EKot/oH5mhiQL6A8cu5k5S0M7+B25HtaNgvOlBadMsBe0O
+Vjc/SUKus6H/zX+QUF7ulzzL6xEAbehcyb/Twpi4WLJatuIwv3DiP4INkeO
WtJztmjQcmNaNVmjoP+e5/uXn4yG75dDDmr9oSDZNUdDIjEa7D6IxNPTUpGE
wjYaiX1EKPtjtquPiYoKBy5uWAsRQbEH/fLYTUVSnqnr2WLYyiI8gsxUJNN0
9IfAYSIY7fzx++YeKjqkc+sr9xkiHFi0NF5goaLjtzt6GRyIoCz59Vo/JxWd
y0kqnGkmwleR89v5BKhIOUh+6G0bEZ7TEVvSsSVvdewq7yBCoOXjRWFBKtop
s+22+wAROhJZfCWFqKil6o4s4xwReCxPJ8kdoCLV5tNVUmwxUJ5oc1ZQnIqU
JlYa7M1jwE8wkDFZFs/nZdS3S9Yx8C/MeBuTHBVx50nuP2YbAxcCxty9sX/a
XPP95xQDIi/UB80PUVHV0hvV6OAYMK2V8hWSpyJZ2qyW8lL8/Ya8obCjVCQq
qNO98jcGDl6de0h7koroP0SIqNLFgjaEG9hjf45+7R7FEAsqFffTP2DnbaoJ
SbLFwv57T8glKjiesaP3rorHQsZrov4lREXS6fwcry/FwrpwurqfGhUd3jdz
OT0vFox87/P6aVARW++B4rmiWND7UcY+gr0cbk5zvCIWdg6dSFbUpKLKP4MF
7+tjIfWopdo3bIXh9t8738WCMIuYpN55KlIkVZKd/sSC+Xf5ckZtKlLh8RnT
0ImDKAbBTRE9KrJM7LLwNoiDt9m7XztiB3EITVWYxMH1+SOHKNjdLC+/8FnH
wYDFwICBPhVZMe5anr8fB+Wq/Ul+BlQUsZ6wPSY7Dr6VCym8vExFwyMlkoM/
46CCzBBNb0pFNFc2i5j/xkGYn2/TWWyRQR1ZNdp42Pf0ekYI9p2+Ffkipnig
zx0wZDSjIrrO4ye9BeOhU+FAC/1VnG/UV9pC5+JBdm/E8tI1Krr/6KOTTVo8
eBV96wy/TkW7r3pLqmfFw6MH1cJU7Ey+/8b258fDQyWCwjJ2S5zpud7yeDA1
84y5bEVFHEHDguhlPIQJupwQsKaiUtvBDo65eDjzMSgg6wYVTRzpE3+ulACm
/4zcPWyoyGXR+SNJJQFqZ81/5WLvLOGIc1FLgHSTOyfeYcuJ6f+TupAAefL3
2MVtqciL531vwrUEUHf8s7Mbm2uj298uCDfH46DEfZuKzre0D3P1JgDdey1m
rzt4fY32PDUZTIAqTZa8bGz9uYtR6aMJsCPtK81bbFOW9yA2mwB91gMbPHep
yN5kMPfovwTIXefkr8SOXpi+qy+RCLcqb3ENOlDRe67NbbFeibCDvyn1zz0q
MiqEj33+iTDAue0LvxMVjZwIeMYbnAgxM+Z/T2BPme+weRSTCIZSp/w9sX88
Zuosz0sEEdoztGvY3Ignuas7EbKWc+hnnKnoys3DMsyiSaD3Ffmku1KRttIL
pV+SSbDz6GbiM2xgvHT6k2wSrPooBnZiixU5XH2qlARr/HkTG9iLC2VEswtJ
gHzdc03cqOihq+yPEqckyLG9ZrvbnYpcz1Jok92T4PWV1DkhbBse7T0B3kkw
khSproitXWcvbhicBG7tXD4W2Lz/io3/kZLgirs/+xPs0kBpinZTEgS+OjR9
6T7OB8P6N0qtSeB/KHbJCjtO/PyAcHsSmJZTB9yw3V/bLv7sS4KiMzTyadin
mB8LZ8wmwWduktBn7A/xEsHfWZKhVWNwp6MHFdHmiOoQryVDlMetTjtPvH7n
LvtNWiVDi4ZboCd221JI+THbZNBgEOcIxyaieZaPzsnw03G9phB7/3DlO8mw
ZEjQMxeZxlZmA73mJ8kgwC32SN8Lj9c6PuCqS4azij8nLLBpzbOrbKjJ4BFG
+ncHu62EnoPlTTLoRc40h2Abanb0mo4lg1SkalgdtpOfieFPxhTo1f0pzO2N
x8UjgjT3poCyWyGrMLZyZ+OzVI4UCPuNRmSw6fYJcZ8SSAFpxcQdatjE6pmB
aIUUmFQ0KbbFdr7Ku3PyeAqoD5C9nbEv7zivdAylwKHGemkf7P16pckjmilw
7harQAx28YKzseS1FIhNs7V+uvW8hLxQL6sUcK/6IUjBdjr5obbLJgWili/V
tWzFE3aCz9U5BQJ2/wgawG4TpRtuCk2BmUnB8F/Y06bRpqZPUqBzMdDosA8V
7XnTV5dYmwIPL4qNK2IfU9zH+46SAu+0YzQI2EGshX2nX6fA52+HGs5hi7U0
acuN4nFhl8OW2NpHGEtsJlNg4Klm001s18yLTDlfUmCqsVbBHrvFY6SVZyUF
UHEPxQ37ptxPoNtJgom5MttwbGLqyYyTzCRwaJFgImLXMD7YcGUjwf0HDFHx
2Dun9tbN7SMBI53JiTTsQ5cMecSESfBSYdP6EbYRJdXVXJwEVBl7p1zsgmTJ
I32HSSB+aodiCXb3DoeYvYr496zm38qx1+49+655kgRs26aDnmBraJ0qppwh
wWhRx/V67FlaM9GCKyQQ0a1ubcVmu5v9YMKcBLelaElvsJVHZj/tu0GCLJcj
Oh3YYc9c02McSGDXW3qrB7vyQOPfty4kKLkh9rYXe4i47Qq9Jwl8bSZZB7Cl
7IjcnoEkKH4VemEYW/dDv8vTMBIEz2bCR2yP0//1fo8mwS52Y94x7KzK6/JS
CST4972tfxz7jcBjohWJBCw8DPcnsJcjFhfSM0ggyixFM4XNt35MazCHBLtP
aNyexla76V3E/pgEMmtujZ+x7XqbGbXLSEAf2LUygx2vuutWyBMSNOy23juL
3VCq09JUS4KZHG2Wr9hT/EkiGxQSbGhl/dzy7tCPAYovSTC77NI0h63w88An
x9d4vjZjTvPYptdtUXEnCTicVnd9w37YXZ72+T0JpOrfBG+5WOXXH8FBEix8
cPu65d7HKiZXRklA0mY9soD9l/thTcIkCeZDiy22LBL4hqv7Cwm6Jq+6bvnC
MovLrgUSDGeqOG7Z+drl9+orJGBYMtPdcmp72mHfNfy+Fnt5t/zy+FR07QYJ
AvKqW7f+71ue1MIKHRmK6PlN/x+fLtW3l4EMQwLt41vx8/3TY326mwyR9+9e
3HJ54ZesBFYyGM9wFmzN94yBt4IrFxk+H+z+urUeIzRsLYb8ZBDdVsa9Zafi
vMuKgmT4yNwsu7Weu4xOzHKLkuHi532HvmBnbuv2WJMkQwFnB//W+h8rs9o9
KEuGZq6ppa331WHyO632CBlKDe5Vbr3P9QrhFx4qZFBbPbryaWu/mFXrXlEj
Q+JkuNNWPogzXpg6cZYMs3Kk0VFsfXMXhg0dMvSZC7ps5ddXpl0pHw3I4GBZ
kzmI7V+dLkUxwfH+0ajeysfSPW1avlZkCCHG5b7HVq8zHbtmQ4ao4/be77CH
rZcc4A4ZTvf4QNfWfmzki6d1J8Pb2JCQrf2QfqtMdMKLDFO/MpjbsI9yqFc3
+ZMht/WgzytsSzv7oQfhZCgO/yr0fCu/eJ8L0meQQWEh0WVr/+m+0q/8nI3n
f4nFqGJr/znMnmotIENbmIdYKTZXG9vNkEoc71Oz4HxsB1frkl0tZBhNob2S
gk0vvE6Ye0OGkcqc9ATstI6o7rddZDhELeuM2dovIjUrEYN4/LzSauhWPr3f
pbz3GxnKch8b3seu88l4+32JDBEHRDedsS9JKZh1/yQDxc8z3gHbx9/ML4Ym
FUY+rQZunW8f5Mpb2DlSoaIzL1AfOzzCQI/nRCpcoVPfLr11XuyJ2GkJqRCk
cpNRFJsU3dRYdDoVOOxYf+/fOp9i5SSQTirkuKJktq3zMZlxw9o6FQZaxgfW
tu6P3Ma8quhUECWu2b7ADhNbvbIRnwp/+j0F67BZC6RYz5JSQf9a7ItKbMGi
JM+hnFRQO1zXko1NqHDUoa1LhcSHNaMPse83iq5rT+HnHTTTO4VNg0zLkmdT
Ifh53Gtl7JDnsVYTC6nA9dVERh47sXmz0+V3KiRYfKgWxH7yejA7dU8aXA5Q
/vIX34eLfZFaX5XSQL6wub4C++bCj8zAyDRoPX4nnhnbtNQj1CU2DSR4jO5t
w9a9s+lonZQGt3um4Te+nwkLO0+dfpQGtx7ylk9hcy3wT29/mgYzPjwf6rBf
flOVfDiSBtmfmYyssAW/RVYESKdDSHSJZTGuFwbnRJt8X6fDYwuBUTZcT3Dc
o34w7EwHTudDXjuwtdeMvh98nw6esfPMa7h+adoesW9kJB2+nQnZ/RG7+L9l
V6XFdKiyOOmWh+1zkSK9xJUBIcfXGLfqIZEqwwRLqwxQkna8ehHXU3c9gm+d
3swAXlKe11UXKnqkVvanMD8TZh4t1qbh+rA/YaLYTf0RmK6tS5Ls8Pmer9Nj
s/AIVOXXB7NxPczif7lONSELxoxW4w1xvf1CQmz3+KFsSFziLxAwpqKYKLme
rMFs+PFHmsCuu9X/0dDJuOWAkpmBMOB+w5hiu0pizYUiK7NxM3UqynXfe0W2
Nhfsro/OP8P9UAONl3SIQR5ErqdY3cH91PKZAw70m3lAb3Hs3c2DVLRiErv/
fFo+yDsS7bpE8X2uSIp2USoAzztiBM39uL/rGXF+OV4Ax5l+jDNzUdFT5Znm
Qe9CeP0uLvYS7j8vWcgEs0s8hslfSapTO/B66exiPtL1GE44vWxK2KAgN+by
vzx2RUA/Sezqxv1zVAjR/ABHMYxxHsgw/0ZBju+UZFcrisGS/eQFn2kKmp64
T3l8oQTSTDgeNeN+3r3yR1PgagkI8ldrWPZRUP/F44fFY0oha4/DTGwHBfX0
asZPxJVCD5re44DdZWzyKy2xFN4qZhzTwm677tnIkVoKv5snghiw69waNeny
S4FOuULKq52C0jJULT82lALZvtLX+i0FWX3XjIv7UgrS/k4WSq8pyNzZ5Kf2
XCnEMf0Xy4lt9tvWeNdCKdCf5WxebqMgw20RAv4rpaC8bUW0BFuDu7Pozr9S
eDJt910IWxrpvtTkKAMdp4QYplYK7o8txXdwl8HjBK3WLy0UJKLpFPactwxs
9htvvMLepxevoyhQBk1hdrZ+2Htu9o+ISJXB8nCgxo9XFLRr/jMalymDXPTJ
rwebwfFXFlmuDBgNYmvLsGk8eWzYjpZBavVPaVvsv5sS7R2KZVCR8Nj6LPbv
h8flQpXL4P7Zpxki2D8Zz8Wqq5TBCgf3EC32cpTJj01UBr9Od3OMvaSg/wHs
H2dr
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
l2d2
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
l2d2
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
l2d2
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
l2d2
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
J2d0
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
J2d0
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
J2d0
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 2.664546080376224*^-14}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 700, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "10", "30", "50", "70", "90", "110", "130", "150", "170", "190", "210", 
       "230", "250", "270", "290"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.915, 0.3325, 0.2125]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.40082222609352647, 0.5220066643438841, \
0.85]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.9728288904374106, 0.621644452187053, \
0.07336199581899142]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.736782672705901, 0.358, 0.5030266573755369]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.28026441037696703, 0.715, \
0.4292089322474965]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.683914763653388*^9, {3.6839148083769093`*^9, 3.68391484487811*^9}, 
   3.68422704332339*^9, 3.684227104221665*^9, {3.6842280410361347`*^9, 
   3.684228056387084*^9}, 3.6842280963437567`*^9, 3.684228470390387*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "ANHarmonic", " ", "heat", " ", "capacity", " ", "as", " ", "as", " ", 
    "function", " ", "of", " ", "temperature", " ", "based", " ", "on", " ", 
    "a", " ", "partition", " ", "function", " ", "evaluated", " ", "at", " ", 
    "different", " ", "numbers", " ", "of", " ", "eigenvectors"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "T"}], "*", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"ff", "[", 
                RowBox[{"T", ",", "n", ",", 
                 RowBox[{
                  RowBox[{"-", "x"}], "*", 
                  RowBox[{"x", "/", "250"}]}]}], "]"}], ",", "T"}], "]"}], 
             ",", "T"}], "]"}]}], ")"}], "/.", 
         RowBox[{"T", "\[Rule]", "t"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "10", ",", "200", ",", "10"}], "}"}]}], "]"}]}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "20", ",", "4000"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"SwatchLegend", "[", 
      RowBox[{"Flatten", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", "i", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "10", ",", "200", ",", "10"}], "}"}]}], "]"}]}], 
      "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.683914949668063*^9, 3.683914985278171*^9}, {
  3.683915261709638*^9, 3.6839152666901693`*^9}, {3.684227086755596*^9, 
  3.684227088788048*^9}, {3.684228132714732*^9, 3.6842281917540483`*^9}, {
  3.684228232803846*^9, 3.684228292260508*^9}, {3.684228386641674*^9, 
  3.684228386698118*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
kQRWzyi2SlLIyDf3k7tdZhJQLbI//ZCGvW/mD0RUnyRBh6+zGks6GeVw8nw5
XpgEIsc68q5hfpV4U2OoKgn4qy6GdGJmixjnRS+S4K/tsf7SDDKqsB/rZVtI
Aj0KiRqnLDKalh4WIssnQ6ujvVVrLhl5rnh8SlNKhphg6fFlzHTlbImeysnA
m8LLwPeEjCRO6e2IXk2GRq1LUeGY/Y8NDiXfSobP7G9Z1J+SEft2f7BDRDJs
PNyv1JFHRpqvesbZh5JBsz7kmX8hVl8jZpLJWDJY6dw2Ksast3A9NutzMvg+
3Hw6jPnmoUE49T0ZhqbYz54pIiNHk7H8czvJsCAdJTyKOW5p1llPOAUG5xXd
eEqw/QULqRPPpEDqb9ZoVcxEVju+ibMpcJbcoeGAOUd+cei2UgpcHnFsq8dc
HbJ63l0nBcy2bnteLSWjQfbdfQn+KVAR8o/NpoyMjIrh03BwCtyR8E6KwDxx
IaSOIzIFpjQ+NxZinrHYb5cbnwJeA+c25jH/KmF8V1WQAqVz1tJ3ysnoKDpG
7OtPAYLCwxqdCjLKeG/syvohBWqO1T9ywsxrna5hOJ4CdjKT+6MwCz86vv15
NgXkBGYW2zGfHxSwWtpMgeEMWg+hSjIyvSMlxiRIgI08S+NZzFryz+V/ixBg
3TuBahMz0N+4NCVOgGS1p6bMVWR0qtTFnCRPgHF7aR5ZzCtLlXizqwRgWqud
CMY83Y4yr9wgwL/ZqH1JmIfxfcVSBgSQPv1lLB9z09nljv0WBBBMeJfUhTnM
S/xXuTsWb91VmaGajLyutFESfQhAFz7xlQOz3TEt5pAHBAjPtJIRwazV5Chk
EIl5DD99GTPHTpnxThoBznbyuQVgPtCnaDufTYCbTezR0Zh3snvcBvIIoFz2
UoeIeebiYnRBBQHkSgSWqjBXhJ9u0+ogQGRBqu5nzDkGzW/lXxMgevLo1Dzm
RCHNEb4eAnznWOVew+zzxn5lY5gAainR2TQ1ZOSQtvlv8iMBotyk5w5iNneI
ou/+QoDlILrxY5hVmEr4sr9j99sZ+0Qwy34+L/FoiQDmb/neSWEWrnxzwX0N
W79F/v55zMw3vutd2SbAR0fpL1cwU/D5WkpREYHiGmWKFua1VTonLloiNOjn
bOphHk0Sjlw+RASuaIFeC8xvbRoSx44QwYB/TcEWc6usWk4nJxEcW2wMHDBX
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
T8uQ0P8AkAc7VQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwl13k0Vd8XAHAkZS5JIpmnCCWSeGcbUiTJlCFCKMmYOZmHIjOZefchMyEp
PN6LopKxKNHXmAaZkgyV333r99ddn/XeOmefffY9Z19he3cjRwY6Orpaejo6
2vNf9BOj7XTH4P9PMXW998/Uw1WU4L3txTI+RV31DOk3UlseyrBZY2ma/dpT
fTpweE9Q2XG4fHrTM9MzXV2he+Lf2oQK5IY8OyvJ8lg9SGDuqw+fKhBfLxsf
pA6qd7mtvl02OgnLHfPnj9xcUOem0FHc49SA/v31G6P3mQh2u1kr5trVwdLW
rTe3RIBQbb/3vvMfAjRm73NR2DxC+PshEW7yAXy5NvFH0kSbUMiw93HtY9yl
GaHfMkwJujLZMotGGnBuUmtwptaRsGgsiMktaECS7jdhlxZvwv2gIh7XOE0g
OIXc2vUznKBWLH2vQlILHidxO7BiSYTJN9X039q1YCQkLeKkSC7hzqqin5St
NoxVlKdUMJYQ5ASfzjn90QbFD/dM5rTrCG9PE+yLM0/BpNXCFfKxFkKgR/vw
1DEdeFkvuU1E9TlBKOvMOZF+HRA2ezPrqtxLeEF988zW9TTEBuSVd/gMEW58
M1IpYD4DnwpeNcU+/I+wZ8/7qrHiM2CnZhZs+HOG0HTSWvSApi7EqxWZvJv5
QbB1mMy0/KQLU9f2sMixrhCY4q9yZAXqgaKhbYh80AahsmEuYpjnLBSM8kTs
0aJHRp881/fWnwV5c8fkoeNMaI3pt5vJeX3QO5ET8UyTDeXLB02nfNeHz70X
xVJf7Eba5vSW/THnYPi9OGuUMA/6FhrdyylmAA+X953x1+VHSWWspwwoBhDD
cKXkSoUQUh5Iarp36TwsHX0/bnNEDI1u7FV4vXYeKBEjTY+1pBA1+c1ApJ4h
WDQEEykLsohbIom9KNMQ5glJWRHCR9DVJqMz7Z8NIS50xjxL/BhqMtgbMXns
AoxeLmhciz2O2KeGyfQRF2DH13pTD/OTyNYve02o/wJsHvzF3pyGUD2rtSII
GoE3ySZLVVQTMREF3S67GgGn+2155iZtZHFssjS42QjWF2D9a/JpVNlVNJXH
bAwyHuPi41V6yHhJ2mK02BjGDUNlGz8ZogdRc6mbP40h0lmoTuajEdrYX9PD
p2kCx8ijf9f+maBz1Z7MqkkmcEDI6ZD62YuIqHlM2+KTCfQ1pz77R7FAP4dW
g/1lTcHlbAmjrN0lpOPy9GlGoCn0nLx+MVv2MppLJcgP8ZjBfuZzPTuL7BGS
or/+y8EM4IikU6G+A0ppaS/irjeD5w86+1nYnJDKzBk+4/MXYfZjnNBkrzOK
C2A19cq7CPpKb0Ii37qgT+w9icnfL4KzS9QJi0VXFKlsvL0vxhySzPeEtCl7
os/SioFho+bgV/pW2T/MC+kK7Fk4esQCVq9L3MA+3EQcjIPv00csQKmr3KKr
1hdl9htVWh22AsuT7n21f4LQRsdRYfZwK8jdvOHtXB2MrJ9w3W8dsgJHueZo
RuVQJFIwECIcegm6nWaDfjKGo8obRsazA9bAu/nRZHoqCnHYHu3KlLSBkdy6
U1pfopGnMZe6XpANaJWdqbBaikHKqgMSVeKXwYqNTYx1dywa3yZ9+4SaLRh8
eOSYFpaArveXGm4l2AEvQxijL10a4n/Ny2r+1A7C9IrVlPPTUHfHnecPp+xg
P+j3baqlI/kn11TtVezh/hlmO93b99FKvpTY8wl7oOqsUKeZslDwjdLfsccc
4OTut3HH5fNR8o7SfJ4RJ9geVvNXQLUIPV65+5NIfxXWvHcSVaKK0MiEyxkZ
6avAfe1B6a6+IiTSIr+M/K+C3fbPTvMOxajOo/GUM881UPv22VUg7gEa+PBi
rtnIGfxSA4bvdpYirsoZVbvXLuA8tvrh3O9KpJzVmfh92QWsdRZuvFOuQpbR
ZdM+fDcg4/ED/2WfKkSydU2Idb4BllbehnPLVejo3l8T9TtcwV7GInt0thoZ
BzPeZdJ2g9+33dZHbR4ivdLk76Y2HsD9N94jjb0OzTea9jR6esAjO8I+E4k6
lNK5v3Z/lAdIsI9mTRPq0MfPmO9YhQfYvBhVC3CvQzfE6+gd1z3ATU7D27+n
DiWQBvZ5p3mC65LZPFtkPTpad3/jXYknyA9XiG1m1aMhquXY8WZPWF13rWut
qUeCE5OkzQlPeE+l39Y5Uo8eCv48HCHvBe3nY19Oyz1CA7l7tFNeecGJn7Z1
Gb2PkG/lsMTKmBc8iGDl3Jp8hPhacpjNlryA6a9oFKw+Qlc+ivbu570JLOY2
340ONKCV/ccsMcebIL53eJDs1IB4Mkw8HtJ5w6xlf//cSgOySE7P7VH2AV+J
c3GFa4/Rs7Vx9ndnfWBNaJexKHMjOmQrG/LR1gcmu2E6dH8j2pBrt/sS6wNa
1ksPhk40ouzuRQmG/3ygJaLH8Zd/IxrZoV+rFOML9/roXLWWGpGme4aIWq4v
pF9579ax1YjKhyZTNWt94dI/+y1JjicosDjA9/xHXwjaZzibcegJ4tcqOeks
7wc9E3zXReyfoEvBDC9yh/1gyvPn7IHuJ6hj5tzxwjk/2FGtUfb5/RMkey6r
tIzeHxS+pfNnzDxBf/gV4h7L+EMsdzxT1b8nKO+ptWFfiD+8iMi4VS//FH1a
eTKyTSoAus5dU7COf4ouu7gvXPcPBFaR6sQslSYU2v3zMMu9QEiy5W9c12hC
pMP+N8oKAuHqR58Y3bNNaGYh9Ovsi0B4FB9T98S6Cbl4p0w57L0FhBQltg9h
TcjvdsOwTd0tuNvx9S7qbEKJiZttRnNB8FT/oXrY6Wb0cDHk39JWEEx8j2Dk
Od+MBi4wqifvuQ06tk/N882a0V5u9qZe1dvQr7XGFevYjHIyDz7Sv3sbFjdS
i/rCm1EJplGqIxEM0sXtggrNzaitPiZJ1TYEvBSYiz+KtqCiG6nWwT4h0Ck8
H5B+qAXFihccehYbAu1U713aR1qQScbjDt2GEBBQypkJIbQgH7JXkOz2UNg+
Mfje27wFsWDYw5OWoZD5d8b6WmwLUrq2xWvJGAY7pzPX2GdbUKl21NYmRxi0
6X+ujptrQXzCrJ/z9ofBd8XKAbrlFkQ3wlM/IRcGeXYN5f1/WtCrs3LnnC3C
4M7LqDhOLjKylbcO868OgwojunWWk2QUt9r09b55OFy5WBLtHkNG0Zevy+64
Eg4TuTPZM3FkFN61393PNRzAcM850yQyCsz2X7kYHg78tx3JwllkdJ2gvMVb
GQ4kaoaERzkZnYmu5c7ZCoeOLwMRP16TESNPKSp4EAG7VRxPPmFpRXQhF8M5
ayNgLvw/I3+OVvRnlul5SHME5Pwoc1LkakU/nzrq2fZF4P3H09Ls/a1o0lrU
VHgjAngqf2XKSbUianH+9cJzkZDvmLN2U7sVBSulp5esRML0TTFCTUArMuOf
IDj8i4RMH93R0qBWJE9/+IvQzigo2hPDUBDSisa7O1Sz+aNAZPPqv9CoVqTp
sPLfPc0oOEzYNDqQ3IqYUo0PeSVFwfCalXZDSSuKX9zdpiYbDXtQFjVtoBU5
DVlfW1eKhqcCo8+l37UiQkvZ7scoGsoy21abh1vRfIyGg7xxNJA5PRaHR1uR
oaAns0hgNKjxdbbNf25F3AZ9xju6okHAUiw9Z6MV5VYkfOm/EgM2X79WcQi1
ITP1gx9s3WLg8PZOgXCRNrS7t+rlgn8MWN/jHFwWa0PRy93l7AkxMKy6Kdgt
3YbcT7C66j6Jga7bc202im1IszNmicJ2B06FDo3v0GlDXydDN2oa7sAir8nx
aOc2pMx3ky1hRywkRi3obZW1oTdSBVecd8eC5J4A7FlFG3I4/rpJmz8WMq0d
LkdWtaEUE1HnTblYuCHtxbettg0tJAw+v2YWC59VObp/NLah0m3HQrSKYyFH
9/v2wOdtiO/HytKaZhzUJ0paBf3Xhv62+Q5fCb4HAYoSG107KOigVXcs+517
oHFxue/WTgoirAoTGpPvgVFlyAE5ZgoKln1TxFJ8D/jHq7iTWSjoX6aoV+3r
e+Dl9CrXkJ2C6Lz62LZ44yHYj6XoMRcFMYod0syuj4cenUZeUQEKYrszVtn3
JQEMlLL68hUoiKPXt0T/ZwIkHf/lAEcoaBfPLlLX3wRg3J4QNoGbu0gzg8KV
CHr6X0xFFClIgFIS9lAtEdy6pYLylShIbs3TLCkpEYo16LTCVClI6tg2OqkD
ScBsrFCxokVBekUZZbPtSXC/81dljSkFiQsZ9v38kwwBFi3O6CYFqfMG/3fG
MBUwil2FXCIFBWBjN53z0qBErY3NsYSCzr7o/sjzNh1S8mqtq5spyOrqEVl2
8QxwjH7Bm95LQfRF4oZJlzNhTJRtymmcgmYuJV669CgLBKc2+wYWKejHg0Pz
PxlygH7GxF9oi4Li7pka857MBTGWzn1dLFTExXFvpz3kgs3aq5lV3NmJz8gV
p3KBf1k2VZyVikpT5KWQYS5k5k/FheN+kcn819ExF5LpmFZU2aiIoZj8oD4x
F0DH+H4xOxUFkMU3DKZzwfIa/Ue7XVR0df4XMSo+D2KNXdi891LRperAuz4p
eRDHWfsuA7eR25anY0YeTPTIhjbjJszv1DqF5cHOOaI/Aw8V8czzzzA25EE3
g89qAu6OHxrSkaN5UCuQIEDaR0VCP+Jrw2XyQSmCafjhfvz/VVzZXgr5EGj5
5FEfbjbXjHB7pXw4+s7daxH37zmisSbKByr/y3h5Pirqmav/RW+cD3OOPFqV
uIPmPpwIC8yHcpnCggJ+KvrwXfxZyMt8EL4fNeoqQEXcXm3vzXryYd3uyYG7
uA3WzBcOD+bD3lhG9SLczxjvHRgdxS3VITCCu1Jg2VdlMR/SxP6z0T5IRcHn
W2WWeArA0Md/mEuQisTqzdLtHQrgMv0XuwwhKrI5sVhxwrkA/gb5p1bjzmq7
+2yXWwFcTfxT+Bw3R3fLQqtfATz/2mT3E/fvaRE9/rgCcHux6/w5YSp6xbPw
b7C2AG4HS37dwO0eGHPt1FYB8FTc+qgmSkXnXOz6NRmIsPR42vsC7iv7Q+Yn
GYlgnMf12RF3gk+TlCgLEYx0E88n4J45fCSvkJsIrxa61cdwp+QfjC6SJkI8
/fXbN8Xw+tBXK9SWJUKxfnd8FG7yhgVlWo4IJ3kIPhm4v5ilb4gdI0KuhujL
JtyIk829mECEwPimiC3ccyHrFx8YE2Fkylo1TByvJ7l9PjpmRJCTvP04Cfe+
0WMpn82J8GD3xk4ibk0Vj24JGyJQl8YVWnFnLX6GkmtE4HZSiFvDrWP3Vrr0
NhEY2g1tHSXweuNc1jkTSoQz7HLqXri9yJwOX8KJ8Mu0eSEYd97+s/lSd4gw
vr/5XQbulX4qV1kKEc7Tixd14sY0azbLSohANr+sIShJRfOc3kcFyonAoSjf
KYVbdUzFOamSCHXBqZJHcb/1ezbkW0sE3qrfftq4d1a9q9VqJkKZiJbZVdym
gdlfHpPxfEi+rnHHTTp9WfAQhQjfEoum/HCfnPxyb9dzIlwzPjQSg9tt35+r
Yz1ESNubTf8Ad/M0Jd+wHx8/5rlsFW38uqh37YNEuGRDd/QRbTx9Tq3y90T4
lxLxior7XZjIQb9JIkjbjh79iFvk/KzJt2kiDMsWHJ6gjX+gMs56lggDtxUY
ZmnjNSqta80R4WtKvsoybrW5M293rRLh+vuuD0xSVHT3KTtr5BoRHq8Kklhx
D0UPaPzeIALbf9u1d+F2F75UM7ZFhHexNtz7cbfMC302ZMCgIZOqKYB7Z8vM
gQ5GDFK3p+kJ4yaZuceWM2Nw/cXVz1K4F0SPUQXYMHgUZxEoi1ttae13EgcG
hSk5s/K0+eLCHf32YCAcvHROGbeoxencb3sxuLv5S+cEbg8JtkFrXgyOzMns
V8PNTE0HbQEM1hPZdTVwmyVY+jUKYkDHWP5Aiza/lWD1IREMpFwtxk7R5pea
ns4TwyBXhfvHadr8q6X8uyUxwN4PvNOlrb/d1ShSGgP/jviMs7R4ko7e/S2D
Qbu/+tFztHhsfrddl8NAzm+k2IAWj0zL6pgCBrE61svncZPXQg9fUMTgk1fr
vgu4WV6ccuhQwiAufnWvES2+VJac4yoY0B/+N0dzoW1vf7kqHu+PN7nGuBcP
p+08qI5BmpuNuAktvk1zlIww4DIvjab5bpeAL6MmBmymRRSah9InK/20MXDn
OTtIM7+Bv4/gaQxsODibabZl4iB06mKwaBHvTfOD1kImd30MTCktW7T5vvue
6OU5j8HZXWmXaFaQ781ovYDBmCBLHC0+31kHWycTDB53742jrae5YEOK4yIG
m5tVlwxx05knLTVYYHA+++UWLR86uySarC9hMJ1z2ZuWr7iu5vDtlzHI/OPU
RMtnX+iFs1V2eD7bhvpp+eY5MbvH1AGD4MXiJtp+WC0Fjf5xwsAVe+1N2y9i
GVdxkTMGv+YIdLT9lOEjKK+4YUCZ+harTsv/wOC/HE8MjL/tjlXF/TjWuVPL
GwMRzSuWx3HDZpp5agAe/5KdmwLu6PpDwieDMNg29beWVn+vXShfJ4MxmDTH
XtDq02z0e+DRSAwmrEbthXDnpIVpjURjUEK1/8aPe1x/H1v4XQxUrXs09+F2
IWvm9Sfg+ScoOrHjDs3PavPIwuu5+LTvb/z9em4mf4c3F4PBYNbIJdwsnM8N
Kfn4+t097b/jTg9ZnOAswkCrkCH5E+5y29OMNdUYrNibPnqGe5F3rNusFt/P
QW2dZtxK/V7p/+oxEDiVXlqPm6KRL2HwFINR9ROfCmnngcivMz/aMZh6U8MW
jpvvY+zu9Bd4PZq/FArAbZsqNKL2EgPBccbtHri/bdN3udeDwd+tZ+rWuOlm
SPEyH/D3STzKXQn3oRLDAed53Mt334zi52XKs8Uj25cwKGi05+3HvT6WlEz8
iQFnYvGx57i7uPsNh9cwqAGDiUrcV8Mv9GpvI4HYXzeWQNxF1kbdgrwkGJwV
uc+Kmy1gWaaZjwTqVrdX/uDn+820lDgzARJYPX0vOk+7D14P6MWLkIDAEvCr
F/e4ivHLDVkSPMipvZKMW4Db5MU7Dfz3nHInVtyR8ivintok8Ow4MrBOu3/0
0qLYTpPAf86c4wvulrC32lr6JNAX8Vhrx225YNL+0IwEt6xFUgNw339lSolz
IcGrqPqxj/h9uCvsYpNGOgkUJ4+QgkSoqKY5X/FhBgnSaqWqnXAbrM5UHswm
wUtpsyRD3HEu3gWb+SQIe3VqWBQ3k1lyZEMpCcQVOdy78Pv6z6HXBtItJDiv
w9bOjPvLW8LUrikS3J2znL6B9wsxnNGXQmZIsDdT9eEF3BJ6b979mCUBPd/U
BWXcV9qsul7NkSCxIJxnC+83PpX5V0WukoCPr6woAffb4Dq/NeZCYGrlHijG
+xOqlATbuEIhXLN6afMI73fMDQj7IhQLwVWnTyAZ9+JNMxEJ5UJ4o9xb7or7
YFu0yo2ThaDHXS4ngfuW6azD2qlC+H3izlga3j8phZeSd1kVwtBsybtreL9V
9vGQu0ZUIdz0sBP8jvdvQK8VOB1TCMUsTzKpuN9LWEXFxBZCr2fbfxm4mbzi
ct4kFoKC8MiQFu4rO+c6LbIL4a/pHucsvD8UUKoS8qophCZ90wMnuakoOUF+
gPShEAYWlhrMd+P1Ozi/yjtaCN0HXnHJ4pbjreZP/FQIM98rtbbwfvQVJut4
a6oQYp8nCRfjZmyQXjP+UQhqRzvfzHNSkf9H0YPb6Yvgkl39bAAH3o9J8V6/
KlUEu3+zCrvj/a/sMzoGWb8iUFNIbn7HiMdz/RU5PaAIwgYHjxXg5uBKC9i6
VQQjvIsR13Av2EkuDYQWwZh4U+HGNiqqozcYD4gtAqPhhq8HcB/XyGntzCuC
iaMuSRb0eD1TlG5d6SiC8h2bRvV/Kcii9fpK9u5icDB7u+vrLwoq9ue0knta
DKO5kVefT1JQC12QzB3TB3C2hnTnWA8FLeuIejBtPYA3zLEcrA0U9NMy5eDZ
vBKg7DHYsZJNQdHHsxN9VErh7Wvrl2whFKQyMOrdMV4KehUaqYY2FNSgOtv+
4XYZnL3qmJemTkEX7GRj9kiVw4dVz/Kpffj3lyELu2JvOZxWtm7Jm2hDfuwP
//C6VMDvR08P6Ke3oYQ7Sbai3JXgKNMTII3akGe/itxKbSUIH6l98d/3VjQz
GdBarl8FQqcu1OE3CfKv+/UsaqUKLiRYyyurtqKh8yeOSCZXw8yTIcXP42Q0
8FY3bTK1GhbfN98y/o+Mei0sf+fdr4ac6B8kyhgZdV25RebOrYYUj4TE7BEy
avIj6zKUVEP/W9lp/bdklFegYT/WUg02HnQJFZ1k5LCgm5r6pRrGs7WCLlST
ka235arB92oY/ro53FRJRtbr1y1Y5quBXNm4V6yCjMy23RMM+1kN9dqJx1dL
yOjMvp4Kt3/VcJe8d18WRkYyyKhDl7sGPkhKm39IIyOpDnvJ7ftqgOEV3ydI
JSMx3ZuxlP010P3Q4XRpMhkdME4zPC5YA2aTph2+CWTEcXVoVOxQDeiv/HHm
ukNGLHOf0bhsDcisb7EFRJPRDs/fpBz5Gjizvi3tv0gyorvF68ylVAP1C/YG
lWFk9GdLqvvN8RpgGpsN4wolo/XIE/J3VWvAup6a5R9MRqvMeina6nh89tvv
fwoio+UEy19bqAZ6hzp9tW+R0f8ANeXJIg==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
65WXPvcO//+Jsf6xgkpA2Pz793bs/wFvrmub
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
QJ8xtuxNz8QYzm9AER6z7X/Suun/AYMRrRo=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwl1Xc0FY7/BnAkspoIDVuSqMyM+34bFUVkj+ia2Ss72SN7Z6SkyN5733tT
6ZMyKqMoFBoiIxnF1+/8/nrO6zz/Puc8vJauOjY0VFRU1NRUVP+Xm5FNOjup
JPH/U0Dx4jBFMVRWCoeJhsVcEuqKGcdfCW+5SeNGpYl+9kt3xS/+QwcCimXw
2oUN90z3dMVTPRObqxOymBNEuXSMsUEx4MjsNy8uOXzwclH3KPmNYrfLyttF
HXlc7JrTOn1jXpGVREVyjVVA6mEHp9E7dASLfUyls08U0YTo0ptTeIRQYcl2
x/4vARuzDzqe2jhN+DeSiDe4EL/aTfw9pqdKeETD1lDdsO2ijODvGfoE9RPZ
J37pKKHmpMqbqWobwi9d7jyxeSVMUv/O69jmSbgTkM/uHKuMBNugm3uXQgkK
BcfjSo+pYEMSqzVTXhJh8lUF9fcnKvg+KC1Mni+HcHtFwkeYqIpjpSUppbSF
BDHu5lnbv6ooMRKnN6taQ3h7gWBZkHkOJ03nrdol2wj+bk+GPkuexxe1x3bw
yT0l8GSpafL1n0deg1czztK9hGfkVxSi8wWM8btX0uU1SHD6riOby6CGH3P/
a4mp+kQ4cGC4fKxADS0UDAK1l6YILfJm/IeV1TFeIV/v3dRPAtF6MtPkozp+
tjvAKMa0TKCLv747y/8iSmgTg8QD1gll9bNhQ+yXMHeUPeyACjXofHRfY6u9
hOJGNsmDMnSwSvfHRU9LAy+evRtGUWaG++IBX1J+aOB0r6FA6rN9oGpEbdIf
pYlDw4JMEbzs8D04snePwGWsWjyo5qt+CJKKmc5dJl3GKBqrQqtSHpAeSGqJ
u6qFC2eGx81PC8DoOtupl6taSAp739KgIgzk5FcD4Re10bg+8AFpXhRYhZJY
8jO1cY6QlBXGexqut+ioPZnWxtjgKaMsQUloucwWNil5BUev5TauxsgAy+eh
duqwK0j/rVbfzUgeiD7Zqzz9V3Dj6G+W1jSAWiYzCeTWQc+H5lly/MpA94Db
5ZqzDu5xvSXO0KIKxpKTRYGtOrg2j2vfki9AWXf+53sMunjCbVxwvPwi6C4c
Nx4t0MVx7WDRxo/a8DhiNnVjSRfD7XlqTnzQgXXOytdcynoo2T76b3VTDzQr
3BnkkvTwMI+tiOIlQ3igLKlq/FEP+1pTKZskY1gaXAn0FdVHx0uFtKIWV+G8
Y3Nzhr8+vpZ3MMwWvQazqQTxQXYD5GTQfL0r3xJAmNrht7UB4uljto80rCGl
7Uk+a60BPn38vJ+R2RZkp9S4dLUMceZDLM9krz3E+jHpe9wzRA2pV0Hhbx3h
I8vrxOQfhmjvGHHW+JczhEvr7uyLMsIkowNBndLuMH1cwj9k1Ah9it5K+4Z4
gPqRA/NnThvjioOQU97IDdhN+2Y4/b0xSnWXGHdXe0Nmv06Z6UlTNJF37av+
GwDrXWd4WUJNMWfDydO+IhDMmvbf6Rg0RRux1kha6WDgyx0I4g2+ij22MwFL
tKFQ5qSjOzNghhwbH/S+fI6A3cQz3ZnHzPF9Ts05la+R4K67X/FigDmqFKuV
mi5EgbTcgFC54DU0ZWYWYNoXA+M7jt86q0DEyyN1NmkhCeDQX6S9lWCBHDQh
tN5UaXDoJQeTUbMFhlwsUJC+nwY9XbefVn22QE7U6NtQSAfxJjs5S1lLvKPG
YKF+6w4s3xcWeDphieTzy+QvdFkQ6FT0J0bSGuX3vY2VEb8PyfRF99nf2+LO
kMp/R+TyoWE5eukB9XVc9dz1QDYiH95POKqdOH4dWe0eF+3tywe+NvFF8L2O
FjunbeesC6DGrfGcPbsdKnyfdj4S+xgGRp7NturYo0+q31D08yLYXzYlZ/HS
Ee3HVkY0/5SBdNbzxB+Ljmh2ft7pnXQ5mEQWf/HicsKMhse+i17l8JDonBBj
74Qmpp7as4vlcIbt90QtvTNanjDOHp2pAN1A2mg6VRf8c8tlbdS8Ci4WJf/Q
N3dD1n/xbmksNTDXqP+60d0N6ywIB/WEaiDlOWc1Z4QbCrGMZn0h1MCH6Tzv
sVI3NH82quDnWgNOgjXUNmtu6CKm5On7ugYSHg4c9ExzR+cFgznm8Fo4U3Nn
/V2hO4oPlQpsZNXCINlkTKbVHVfWnGs6KmuBe2Ly4caEOw6TqXc8f18LVdxL
J8PEPfCJVsyLL2J1MJBzQDXlPw88u0SsyeitA++yIaHlMQ98HMa0Z2uyDrja
7jIYLHgg3T/+CFypA6sP/L2cHDeQ0cj8h87heljmlDTJs7mBgmxDb9pt64E9
Q8+tisoTZ0z6+2eX68E4OT3ntbQXegtpxj5abQDK6jjLu0teuMqzV5efoRFE
iKJBH4heONmDX4I5G2Fd7InF1xgvVDFbeDx4thGye34J0Xzywraw1za/fRvh
Pb1GtVSUN8b1UTmrLDSCsmsGn0KON6ZbDbt0bTVCyeBkqnK1N17dtNw6trsJ
/Av8vLU+eGPAQe2ZDJEmOKRSKG8v7oOvJ7gc+Cyb4GogzbOcIR/87L40c7in
CbqmNGUezfogfYVS8fRwE4hqZhUVU/viqe/phzKmmuDvoVOxDSd8MYY1nq58
swnuNZtp9wX54rOwjJu14s3wcbnp/Q5hP+zWtDtlFt8M1xxd5x18/ZGJryIx
S7YFgnuWTjLG+WMS8VDjmlILPDzp61Sc64/XP3hFqV9qgan54G8zz/yxLj6q
psmsBRw9Uz5bs91EQooU80hIC/jcqh8yr7mJ0V3fouF5CyQmbnTqzAYgSaNK
MeRCK1T9Ctpc2ArAqR9htOxarTBwhVYx+cAt1CQ2G903aAU2VpaWXrlbOKSy
uj/GphXuZh6t04i+hX/WU/P7QluhME+p6LxQICoVPOE+1doKnbVRSXLEIHx/
iqHgA38b5DulmgV6BaEi35xfukgbxAjmilBigvAcxXOv6uk20Mto6FKvD8Im
qbtTQYQ28Gr3CBDdGYxfJt4Mexq1AWNeXpW8STC6bU2Z2cW0gZTdFocJbQhm
/MhcZZlpgyLViK2N3SFIpT9dETvbBly8TNP3OENwVKFsgGqxDajes9dOiIWg
pFN9Sf/fNvjvkpimvXEISg9HxO7Z3w5EcbMQ34oQdHWhWmOUb4fYlZZvd4xC
cXddYaRrVDtEXnMQpbcKRWuq6eyp2HYI7eZ09XEORdrWA5r6Se3gn+27bBga
iht/bNp5s9rBgSC9xVEWiu1WmUJuJe2gFlnNendr25tvwn6+bAda9iLIfRyG
SYp28k2MHUAVZBi6pzoMM5ondXx3d8DfGbqnQa1haGBUbiuxvwOWmm0uEvvC
cCuxvSibswMmzfj1ede3+/T1TDHhDiAX3Hd4pBmOSfho9YZqBwRKpacXLodj
cJEModKvAwwOTRCsN8Nxf5HZaFFAB4hTn/zKsysCObRzaHKDOmC8p0su+1DE
9p6DNoMjOkDZevlTnHIE7npzUPdwcgfQpeqKeCRFIBVtpGp9YQfE/9rXqSAa
iVcuLJDTBjrAdtDMbk0qcvs/ZJ8df9cBhLbifQ0QiTxj3H9ahzpgLkrJWlw3
EstVR34NjXaANrc7A59/JApFqJLmpjuA9XKfLn13JL5Vf5d+d70DckoTvvZb
RSGdFVbu5ukEA8WjI0SXKPxYL8odytcJ+3rLX8z7RuHavoi3iwKdELnYU8KS
EIVMpim8Pcc7wfUsk7N6UxQmqvSSzSU6Qfl51AKJ+TY22/t+pj/fCd8mg9cr
62+jhPoVhUj7TpDmusGcQB+DkU68plvFnfBKONfKfl8Mxo1J1FBKO8Fa5mWL
6qEY5OAucwsv74QUPX77DbEYFA4bF91R3QnzCW+e2hnE4FTG1vjPxk4o2iEZ
pFIQg99j3vH4P+0Erp/LC6vKsejv9SYy4FMn/Ov0HrIKjMMukb/iL+hJcNS0
J4bldhyqEWV3BewiAWGFl9CYHIdfYgn6YgwkCBR9lc9YEIfo7aedzEiCzUx+
j+qXcSg+xvNJm4UEVB59zFsc8Rjdav+7YT8JaAVElLNr45HGIzGZ/wgJmG+P
lfV9TcDDFZ6vc0+RYHevd6HGUgJyfaS2VzpNgr3sex92/0tA2V8/Yye3zZqv
nEHan4hHYg2d+SVIcIRUGFKlkIgUJqfKXCkSiK26GyQlJWJOo0l9qBwJhCV3
UAkfTsLMlwMdKyokuJifUTzzJAmZ/yR01eqTQJBHu2/pbzKO5/bs0rhBAkWO
wE9q2qmod6ukUyeRBH55Yzfs76XhcwVZ+vZCElx61vOB/W06mnK2t1q3kcD0
+mlRFsEMrGu4EL2jnwTU+YLaSdcykfGaJN3yJAmmriZevVqXhXspgo1qv0nw
87HI3BLNXezaMq6xoyNDbJy+Lod8DiZoHeXrZiPD9bnfDyLi76FqksXUgiAZ
Rn4IUoJe3MdxxcqkckkyuPpH2Z3bykWW8QHNcWUy5ClXbhQXPsCp1fVH7Dpk
GEyfLPNRzcP+88ynRYlkECnUHrCfy0OtjRQNC1cy7A0xbFFKf4gJImkzlwPJ
QBYWYh4/9QhtP7ofPB9HhuQE8YGHI48w3qdUIeQuGUQpVDSiPvlIZqMffVdM
BuMOh+XsfQV43+x7wY4mMhT47jEVay5AmwcFScnPydBGFXDitv5jTI+pj1Ya
JMPieX43uq3HSCOxt9FimgxLJilHL90rxNucyjKPfpMhUiY70Uu2CIVvhnN1
01JAdmDUs2u8CAvS7Pc7sFGgXm7mycitYnT77G3OLUiBKxaiUQeES1Dx+Lsu
PWkKBGozskj0luBxk/F66wsU8GGp+svhWIoM31JCXQ0pkHA7icjPWoYLVaJD
83YUcO+XFVuuLkP13oGdRn4UmJr06yjRKEetmxHgFU0B35rflIjlcpRSlnw7
l02BQa2zp48lV+C/+NH8U6UUGHirnjaZWoEx3SN7/Lbda2zy596dCgzlp/cj
b7vb6mY7a04FWi1PntMpo0CLT7s6TWEFnpiVeHGjnAL3cpUsx9oq8JjAuEdD
JQWs59VTU79WYPWylYxcHQWIniYrl39U4FTWAjF022ZrDsaMcxUoMiBx+79t
G+yI4w5ZqsDnV5/1mtRTQO3g61KXzQp8adqgfLOBAidAp0udtRLfrOjWtTZR
QLjL8tjOg5Vo8UavcUczBQTUb8SQOCvxVcDLxkvbPqybpi3DXYkdLozVH7a9
+/rgqIBIJV6WJ4ZvtFCAcXYaxkUr0XPugYdKKwXo3f88vCteiQl9Muax26a6
yWG/X6oSNS8YnTzURoG/W8I9r2Qq8ebPkb1W214LPyseLVeJ0VN5CyXbXmG4
mKKqWIkT0mW9i9teTDD5vQWVKPp1uUSunQL/A1zuqJU=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwl1Xc0FY7/BnDKx1YpyahsST5URuZ9v40KUbIyUnb2yk72qGuHjJSUvUf2
uvdS6ZOyyopCoSEykhVfv/P76zmv8/z7nPPwWbrq2uyioqKipqai+r/ciqzX
/YdKCv8/BZU0hyhKobLSOGR+pZBLUkMp9fgbkW03GdwoNzHIeO2u9MV/8EBA
4Rm8fn7DPc09Relk18TW6oQsZgZRLhxjrFUKODL7zYtLHh+/XtQ7Su5X6nRZ
ebeoq4CLHXOXTt2cV2IjUZFcoxWResjBafQ+LcGClal4tl0JTcxdujPzjxDK
LA/et98kYF3GIceTG6cIf4fj8SYX4le7ic1j+mqEp7sO1lbW7rggNfh7qgFB
40TGiV+6yqg9qdo/VWlD+KXHky0+r4wJGt/5HJs9CfcDctido1WQYBt0a99S
KEEx93hM8TFVrE1gs2bKTiBMvimj/t6uiiNByWEK/JmEOyuSPiLmajhWXHSv
mCafIM7TMGu7qYaSwzH6s2pVhHfnCZa5aWdx0nTeqkWqmeDv1j74Weocvqo+
tptf/jmBN11dm7/3HPIZvplxlukmvCC/oZg7n0ei38OiDq8BgtN3XdksBnX8
mPVfI7HiE+HAgaHSsVx1tFA0DNRZmiI0KpgJHFbRwFjFHP33Uz8J5taTaSYf
NfCz3QFGcaZlAm3sjT3p/pooqWMeJBGwTiipmQ0bZL+AWaPsYQdUqUH3o/va
weoLKGFkkzhwhhZWaf+46F/SQk25B2EUFWZ4JBHw5d4PLZzuviKY9IIV1Iyo
TXqjtHFwSIgpgo8dvgdHdu8VvIgVi4fUfTW4IaGQ6exF0kWM2mWVb1XMCzJ9
CY0xVy/hwumh8WunBGF0/eDJ16uXkBQ20lirKgLkxDd94Zo6aFwT+Jg0LwZs
wgksOWk6OEdISA/jOwU3GnXV26d1MDp4yihdSAoaLx4Mm5S6jKPXs+pWiWeA
5fNgC3XYZaT7Vm3gZqQA5j4Zq7y9l3Hj6G+WpmSAaiYzSeTRRc8n19LlBVSA
9jGPy3VnXdzreluCoVENjKUmCwKbdHFtHte+JZ6Hks6czw8Z9PCE27jQeKkm
6C0cNx7N1cNxnWCxuo86kBcxm7SxpIfh9rxVJz7owjpn+VsuFX2Uahn9u7ql
D9pl7gzyCfp4mNdWVOnCFXisIqVm/FEfe5qSKFskY1gaWAn0FTNAxwv5NGIW
V+GcY0NDqr8BvlVwuJIhdh1mkwgSA+yGyMmg/ZY+xxJAhNrht7Uh4qljtk+1
rOFec3sOW7UhPs972cvIbAuyU+pcepeu4MyHaN7JbnuI9mMy8Hh4BbWk3wSF
v3OEjyxv4xN/XEF7xwg541/OEC6j909PlBEmGB0IapNxh+njkv4ho0boU/BO
xjfEAzSOHJg/fcoYVxyEnbKHb8Iemv6hlBFjlO4sMu6s9Ia0Xt0S039N0UTB
tadyMwDWO07zsYSaYuaGk6d9WSCY1e+/3zpgijbiTZE0MsHAn9UXxBd8Fbts
ZwKWaEKhxElXb6bPDDk2Puh/+RwBe8xPd6Ydu4YjmVVnVb9GgrvefiXNgGuo
WqhebLoQBTLyfcKlQtfRlJlZkImVCOO7j9+WUzTHi8PPbJJD4sCht0BnO84C
OXaF0HhTJQP3aw4mowYLDNHMVZR5lAxdHXeeV3y2QE7U6tlQTAGJejt5S1lL
vK/OYKFx+z4sPxIRfD5hieRzy+QvtOkQ6FTwhyhljQqs76LPSDyCRLqCR+wj
tvhPSPnfI/I5ULt8d+kx9Q1c9aR/LBuRAyMTjuonjt9ANru8gn09OcDfLLEI
vjfQ4p9p2znrXKhyqztrz26Hit+nnY9E50Hf8IvZJl179EnyG7z7sgD2l0zJ
W7x2RPuxlWHtPyUgk/4y/seiI5qdm3d6L1MKJpGFX7y4nDC1Ns930asUnpg7
xxHtndDE1FNndrEUTh/8PVFN54yWJ4wzRmfKQC+Q5i6tmgv+ue2yNnqtAjQL
En8YXHNDtr+xbsksVTBXZ/C2zt0Nn1kQDukLV8G9l5yVnBFuKMwymv6FUAUf
prO9x4rd8NqLUUU/1ypwEqqitllzQxdxZU/ft1UQ96TvkGeyOzovGM4xh1fD
6ar76+/z3VFisFhwI70aBsgmY2ea3HFlzbmqtbwaeCYmn2xMuOMQmXr3y5Fq
qOBZ+jdMwgPbLxFffRF/Bn2ZB9Tu/eeBckvmVandz8C7ZFB4ecwD88KY9m5P
PgOu5gcMhgseSPtXIAJXnoHVB4FuTo6byGh07Yfu4RpY5pQyyba5iUIHB/tb
bGuAPVXfrYLKE2dMentnl2vAODEl862MF3oLa0c/Xa0Fyuo4y/sLXrjKu09P
gKEORM3Fgj6Ye+FkF34J5qyDdfF2i69EL1Q1W8gbkKuDjK5fwrs+eWFz2Fub
3751MEKnVSkd5Y0xPVTOqgt1oOKayq+Y6Y0pVkMuHdt1UDQwmaRS6Y1Xtyy3
j+2pB/9cP+9LH7wx4JDOTKpoPXCr5ivYS/jg2wkuB37LergauOtF5qAPfnZf
mjncVQ8dU9pnns76IF2ZcuH0UD2IaacXFFL74snvKdypU/WwyX0yuvaELxLZ
YmlLt+rhYYOZTk+QL74IS71VLdEAH5frR3aL+GGntt1Js9gGuO7oOu/g649M
/GXx6bKNENy19C9jjD8mmHPXrSk3wpN/fZ0Ks/zxxgevKI0LjTA1H/xt5oU/
PouNqqo3awRHz3ufrQ/eQsI9aebhkEbwuV0zeK3qFt7t+HYXXjZCfPxGm+5s
AJK0KpRCzjdBxa+grYXtAJz6EUbDfqkJ+i7TKCUeuI3a5g1Gjwyb4CAbS2O3
/G0cVF3dT7RpggdpR59p3b2Nf9aTcnpCmyA/W7ngnHAgKue285xsaoK26qgE
efMgHDnJkPtBoBlynJLMAr2CUIl/zi9FtBmIQlmiFGIQnqV47lM71Qz6qbUd
GjVBWC/9YCqI0AxeLR4BYv8E45eJ/iFPo2ZgzM6uUDAJRrftKTM7YjNI221z
mNCEYOqPtFWWmWYoUIvY3tgTglQG02XRs83Axcc0/ZAzBEcVS/qoFpuBaoS9
ekI8BKWcaop6N5vhvwvi2vbGISgzFBG9d38LmEuYhfiWhaCrC9Uao0ILRK80
frtvFIp7nuVHuka1QOR1BzE6q1C0pprOmIpugdBOTlcf51CkaTqgbZDQAv4Z
vstXQkNx449NC196CzgQZLY5SkKxxSpN2K2oBdQjK9kebO94qz/s5+sWoGEv
gKy8MExQslOoZ2wFqqAroXsrwzC1YVLXd08rbM7QPg9qCkNDo1Jbyf2tsNRg
o2neE4bb8S0FGZytMGkmYMC3vtOnrKeJi7QCOfeRw1PtcEzAp6s31VohUDol
JX85HIMLzhDK/VrBkHuCYL0VjvsLzEYLAlpBgvrfr7z0Ecihk7krK6gVxrs6
5DO4I3b2HLQVHNEKKtbLn2JUIpC+/5De4cRWoE3SE/VIiEAqmki1mvxWiP3F
2qYoFomXzy+Qk/tawXbAzG5NOnLnP2RfHH/fCoTmQtZaiETeMZ4/TYOtMBel
bC2hF4mlasO/BkdbQYfHnYHfPxKFI9RIc9OtwHaxR4+uMxLfabxPebDeCpnF
cV97raKQ1grL9/C2gaHS0WFzlyj8WCPGE8rfBqzdpa/mfaNwjTXi3aJgG0Qu
dhWxxEUhk+k9vq7jbeAqx+SsUR+F8ard5GuSbaDyMmqBxHwHG+x9P9Oda4Nv
k8Hr5TV3UFLjsmKkfRvIcN1kjqMjYqQTn+l2YRu8EcmysmclYsyYZBWluA2s
z7xuVOMmIgdPiVt4aRvc0xew3xAnokjYuNjuyjaYj+t/bmdIxKnU7fGfdW1Q
sFsqSDWXiN+J73n9n7cB18/lhVWVaPT36o8M+NQGf9u8B60CY7BDdFPiFR0J
jpp2EVnuxKC6uSx9AD0JCCt8hLrEGPwSTTAQZyBBoNibHMbcGERvP51ERhJs
pQl4VL6OQYkx3k86LCSg8uhh3uaIxbtN9r9r95OARlBUJaM6Fmk94hMFjpCA
+c5YSc/XOBQo83ybdZIEe7q987WW4pD/I7W98ikS7GPf96Tzbxyq/foZPblj
thyVVNL+eBSJvuIsIEmCI6T8kArFeOxhcirPkiaB+Kq7YUJCPFbUmdSEypNA
RGo3lcjhBGx/3de6okoCzZzUwpn2BBz+E9dRbUACIV6dnqXNRJQs6qLXukkC
JY7AT+o6Sei0UNSmG08Cv+yxm/YPk/FjtwJdSz4JLrzo+sD+LgVlUnqarJtJ
YHrjlBiLUCp+Ei2+u7uXBNQ5QjoJ19MwXbSWbnmSBFNX469efZaONMHtzeq/
SfAzT3RuadcDJMUSOuxoyRAdY6DHoZCJikebLnceJMONud+PI2IfYpWnsuWi
EBmGfwhRgl49wl4Zs5IyKTK4+kfZnd3OQnOWxKxJFTJkq5RvFOY/Rr1C71vc
umQYSJks8VHLRiv1Gm1pczKI5uv02c9lY1nQBw8PVzLsC7nSqJzyBKUsMi47
B5KBLCLMPH7yKQosfqf3jSFDYpxE35Php0ivbXy//wEZxChUu8R8cjCYGMls
UEQG41aH5QzWXBTukRMh15Mh13evqXhDLuo2S2eVdpKhmSrgxB2DPAw6DFwD
g2RYPCfgRrudh9YRl8/mfiXDksm9oxce5qOLdY9FyyoZIs9kxHvJFiD9C63U
OXoKyPaNenaMFyCnj204FTcFauRn2odvF+JsOVOshRgFLluIRR0QKcKcN56k
HqBAoA4ji2R3EbqW8NUR9Sjgw1KxyeFYjAXCV1dibCkQdyfBXICtBG0KX0uN
3KKAe6+s+HJlCTb3x7TbJVBgatKvtUirFJ8krTtL5VLAt+o3JWK5FPVZlbyC
mikwcEnu1LHEMtSJ334820eBvncayZNJZTjbkq2u20+BbmOTPw/vl2FLU9zf
uh13Wt1qYcssw4OvzseHvaNAo0+Lxq78MpQ8IabLPUCBh1nKlmPNZSg3Y2ug
PUwB63mNpKSvZciz1/di0ycKmHuarFz8UYaCJ5884h+ngNmagzHjXBnO7Kff
vLtjw90xPCFLZUhfGP7RaIIC6ofeFrtsleG4o4TKn0kKnADdDg22cuysrQ2T
maaASIflsX8OleP9xov5j3YsqHGTSOIsx5CyQ0O0MxQ4rJesc4anHPlt5CwG
d7znxsCooGg5dtzJY/X7RgHG2WkYFyvHjNSKRxM7pnP/8+SBRDlmmkzJan6n
ANUtDvv90uXIUfM6mfsHBTa3RbrenClHuae3DMN3vBYuJ3FXvhxzF3WFfu54
hUHznppSOcq80qE2nKXAYpzJ720oxxhNz++tO/4fqwipnw==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwl1Xc0FY7/BnDKh8wUCQ1bQlRmxn2/jQpRsjJSdmb2TK6tkC0jkiJkhWyu
e12VPsksW6HQ8CEjkeLb7/z+es7rPP8+5zwCNu4G9jtoaGhoaWlo/i+3ohsM
/qGRxf9PYVWd4XbVcEU5HLa6VMIro62acfSN2LaHPG5Wmhtnv/ZU/RQ0xBFc
ooBXz256Znqmqx7vmtpan1LEHGL7uSNMdarBh+a/+PIq4YPXy4aHKQOqndfX
3i4bKONyx8KFE96LqpxkGrJ7nArSDju7jt+lJ1jvYS6dp6qiudX1npyiQ4QK
m313nX4TsD57v8vxzROEPyOJ6M2L+Nlx6vcRI03Cox376qrq/ro4I/RrhjFB
WyJb4ruBGupNawzMVNkTvhvy5UstqmGS9lcBlxYfwt3gAi63OHUkOBBvsK+E
E1QKj8aXHtHAuiROO+b8JML0mwrar1QNHCWmRSgL5hBurcn4i1lp4kTpk5RS
uiKCFF/jvMNvTZQZiTea16wmvD1LsCnMPI3TFou2rbIthCAP6tBH2TP4qubI
TkGl5wT+LC09wb4zKGDyZs5NvofwgvKm3crtLMYG5j7p8B0kuH41UMxj1ML3
ef82xT79QODgGC6fKNRCaxWTEP2VGUKTsqXQQXVtvKNSYPRu5j+Cld10pvl7
bfzoyMEkxbxKoL9zjS0rSAdl9K2I0sG/CGW18xFDXOcwb5wrgkODFgzee27s
qzmH0qb2yYMK9LBO//O60QVd1Dl1L6JdnQXuSwd/Svmmi7M9l4RTX+wBTVNa
874YPRwaFmGOEuCCr6HRPbuFz+PT5f1aAdoHIKmE+fR58nmM2WFbZFvKD/L9
SU3xly/g0snhySsnhGH8177jr9cvIDlitKlOQwwoyW/6I3X00aw25AF5URI4
RZNYCzL1cYGQlBUhcAKuNRloUWf1MS50xjRLRBaazu+LmJa9iONX8+rXYxWA
9eNQK23ERWT4UmPsYaoMVv7Z6/x9F3Hz8A/W5jSAGmZLGeQzQJ+HV7KUhNSB
/gHf9atuBrjb/aY0Y5MmmMlOF4c0G+DGIm58ST4LZZ0FH3MZDVHCY1JkslwH
DJeOmo0XGuKkfqhk/Xt9eBw1n7q5YoiRTvzVEmMG8IunsptX3QhlW8f/rG8Z
gV6FJ6NSkhEe5HcQVz13CR6oy2qavTfC3ubU9i2yGawMroUESBqjy7kiOknr
y3DGpbExI8gYu5WdL2VLXoX5VIL0IJcJ8jDqde8qsAEQo3X+YWeCeOKIwyNd
O0hpoRZw1pjg88cv+5hYHEBxRovX8MIlnBuL45/ucYK4QGZjr9xLqCv3hhj5
1gXes3YnJn+7hE4uUafMvrtBpLzhP70xpphkykFsk/eE2aMyQWHjpuhf/FY+
IMwLtA9xLJ48YYZrzqKu+SPewEY3MJw+aoZynU/MOqv8ILPPoMzimAWaK7v3
Vv0Ohl8dJwVYwy0wZ9PVx6kiBCwb9t4lDVqgvVRzNJ18KAjm9RMFQi9jl8Nc
8ApdOJS5GhjO9Vsi9+aY0aePUcBmdbIz88gVHM2pPq3xORo8Dfeq6gRfQY0S
rVKLpRiQV+oXLRe5ihYsLMLMe2JhcufRm6dUrPD8yDP7tLAEcO4r1t9OsEbu
HWF0fjRpcOA1N7NpozWG6RSqyN9Pg66OW8+ffrRGHtTt3VRJB+kGRyUbRRu8
q8VorX3zLqzeFxN+PmWDlDOrlE/0WRDiWvwzVtYOlfe8jVOQvg/JDMX3uUYd
8J+wyj+HlAqgbvX2ygPaa7jus+uBYlQBjE65aEkcvYacjo+L2XsLQLBFehkC
rqH1P7MOC3aFUO1Rf9qJyxFVvs66HYp7DP0jL+abDZzQPzVw6PbLYthbNqNk
/doFnSbWRvR+loF81svEb8suaHlm0fWdfDmYR5d88uV1xYy6xwHLvuXw0Mot
IdbJFc0tfPTnl8vh5L4fUzUMbmgjYZY9PlcBhiF0t+k1r+PPm9c3xq88BZ3i
5G/GVzyQ888djzTWalioN+6u9/TAZ9aE/Uai1ZDykqeKJ8oDRVnHsz4RqmFs
Nt9votQDr7wYVwl0rwZXkWpa+w0PvC6l5hPQXQ0JD/v3+6R5otuSyQJLZA2c
rL77612RJ0oPlQpvZtXAIMV8QqHZE9c23KpJlTXANzX9cHPKE4cptDtfjtbA
U76VYxHSXki9EPvqk9Qz6M/h0Ez51wtPrVhVZ/Q8A7+yIdHVCS98HMG8e3v6
GfC23GM0WfJC+j9CUbj2DGzHhHp4uL2RyfTKN4ODtbDKI2ueb++NIvuGBlod
aoErw8jjKY0Pzpn39c2v1oJZcnpOt7wv+onqxT1ar4P29UnWd+d8cZ2f3VCI
sR7ErSSJY1a+ON2Fn0J56uGXFNX6c6wvalguPR48VQ/ZXd9Fd3zwxZaIbvsf
AfUwyqBbJRfjh/G9NG4aS/Wg7p4hqJLjh+m2w9c7tuvhyeB0qnqVH17estk+
wtYAQYWBfhfG/DB4v/5chngDHNAoUnaS9sfuKV5nQZsGuByy40XOkD9+9FyZ
O9jVAB0zegqP5v2RoUKtZHa4AST1sopLaAPw+Nf0AxkzDfD7wPG4OokAjOW8
Q1++1QC5jZb6vcQAfBGRcaNGuhHerzaM7hQLxE49x+OWdxrhqov7onNAEDIL
ViRmKTZBaNfKMab4IEyyOlC/odYED48FuJbkBeG1Md8Y7XNNMLMY+mXuRRA+
uxNT3WDZBC4+KR/t9t1AQoocy0hYE/jfrB26Un0Db3d8uQ0vmyAxcbPNYD4Y
ybpPVcPONsPT78Stpe1gnPkWQcd1oRn6L9KpJnPcRD2rRtP7Js2wj5O1qUfp
Jg5prO+NtW+Ge5mHn+nevok/f6UW9IY3Q1G+WvEZ0RBUK6TyHW9uhraamCQl
KyKOHmcsHBNqgQLXVMsQXyKqCi4Epou3QKxInnh7LBFPt/uwa55oAaOMug7t
WiI2yN2bIRJawLfVK1jyn1D8NDUw7GPaAkz5+U+VzUPRY3vG0jG2BeQct7nN
6cIw41vmOutcCxRrRm1vsoUhjfFsRdx8C/AKMM/m8oThuEpZP81yC9CMctVM
SYWhrGvtk77fLfDvOSk9J7MwlB+Oitu9txWspC3DAirC0P06zQaTcivErTV9
uWsajmzPiqLdY1oh+qqzJINtONrRzGbPxLVCeCePu79bONI1c+gZJ7VCUHbA
6qXwcNz8ad8qkNUKzgT5be6ycGy1zRT1eNIKWtFVnPe2/3prIOK/161Ax1UM
eY8jMEnVUbmBiQQ0xEvhu6siMKNx2iCAjQS/5+ifE5sj0MS03EFmLwlWGu11
rHojcDuxtTibhwTTlkLGAr/+9um/MqXESEApvO/8SC8Sk/DRurcmCULk0tOL
ViMxtFiBUBlIApMDUwS7rUjcW2w5XhxMAmnaY5/5d0Uht37OjjwiCSa7OpSy
D0T93TNxKzSKBOp2qx/i1aNw18B+w4PJJKBPNRT3SopCGrpozdoiEtz5vqdN
RTIaL55doqT1k8Bh0NJxQy76738ovjj6jgSElpI9dRCN/BN8P5uHSLAQo2Yn
bRiN5Zoj34fGSaDP58koGBSNolGa5IVZEnCe7zVk6IzGIe136fd+kSCnNOFz
n20M0ttiJRt/G5ioHh6xuh6DU7WSfOGCbbCnp/zVYkAMbuyJerss3AbRy11P
WBNikM0iRaDraBu4n2J2026IwUSNHsoVmTZQfxmzRGa5hS1OAR8ZzrTBl+nQ
X5W1txC0L6pEO7WBPK83SwJDLL53FbDYLmmDN2J5tk57YnFlQqa6vbQN7BRe
N2keiEUiX5lHZHkbpBgJOW1KxeL9iEnJnVVtsJgw8NzRJBa9M7cn/6tvg+Kd
skSNwljsinvHH/S8DXj/W11aV4/DUP+B6OAPbfCnzW/INiQey6V/S79iIMNh
i65Y1lvx6GavuCt4FxkIawKE+uR4VEsmGEsxkiFE8k0BU2E8igYH6iczkWEr
U8ir6nU8wif+D/qsZKDx6mXZ5r6DD587/ajbSwY6YXH17Jo7qBidmCx0iAws
tybKej8noPO6T3fecTKw9fgV6a4kYK7EDie1E2Rg52J/2PknAVnUFuKm/5qz
QD2DvDcRWT9echOSIcMhclHYU5VELPF2rcyTI4PUuqdJUlIifj1rURuuRAYx
2Z00YgeTUGZ8gLSmQQadgoySOWoSTt5I6agxJoMIv37vyu9kjLaf3aXrTQZV
7pAPWvqpOP5Fn2yQSIbA/Alvp9w0rJ5xZGotIsO5F11jXG/TUUst5qVdCxks
rp2QZBXJQIcBcvXOPjLQFojoJ13NRJdl5+DVaTLMXE68fPlZFibmOGxp/yDD
f4/FF1Z23MN5E6NBF3oKxMUbG3Ir5+BPv8XR7n0UuLbw40HUnVz8FpctSiNK
gZFvIu3EV/dRnU6qoFOWAu5BMY6nt/NQ99+ZPHYNCuSrV26WFD3A2pv+Y64G
FBhMny7z18xHQY5AuSYrCogX6fc7LeRjh4R8wTkPCrCHXWpSS3+I91RrHMhE
ClDERFkmjz/C5+KJY84JFEhOkO5/OPIIFelGGJ7dp4BkO80OSf8CFOf8nHul
ggJmJOfV7D2F2LG2e1uDRIHCgN0WUo2FSLR4/lmllwItNMESt4wf4+2Hac5v
piiwfEbIg377Mdp52KUN/6DAinnK4XO5RSjLXiGSz9gO0QrZib6KxXg6bSlW
+HA7KPaP+3RMFqPLDOvQc7l2qFWao47cLEFa1XufVfTa4aK1ZAyH2BMk7RZb
NHRshxB9JlaZnifoOpGY2BDZDv6sT39zu5Qid2ZvxdyDdki4lWQlxFmG2a30
Y9co7eDZpyi1WlWGXo1TpY+m2mFmOpD0RLcc3Ra1Fdh3UiGg+kd71Go5Smn7
SDkdpcLghVMnjiRXoFPd0VLJC1Tof6udNp1agSa8u4tG/rrHzPxn7t0KvPhB
81W0PhU6bW+0cuZUYGhJfujURSo0+bdq7yiqQPZOvuZMIyrk5qnZTLRU4Luo
/VfZzKlgt6idmvq5AlfJ7NZc9lSw8jFfO/+tAgWtHol2/rXlhrMZ00IFSmsH
7w1yoILJzni+sJUKdJbZuvz+GhW09neXXt+qwBbSsdZiZypIgEGHNmclCvhH
lGh6UEGsw+bIP/srUeb+gYH1vxbW9o4l81Ti2cvzguWeVDhomKavwFeJVAcZ
OS5vKrBdGxwXFq/ETz8Uhb/6UoFpfhYmJSvxsqo/Mc+PCgyePx/ek65EPZ4Z
GmN/KtDc4HbaK1eJo3k6fuQAKvzeFut6o1CJHR3g7BdIhY3IU9K3lSqxyutq
pGQQFdYYdVI0VSsxx7S4Y/qvlxPMf2xDJZry8Uhk3aDC/wC5A5/q
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
AA==
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 3.552728107168299*^-14}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 700, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "10", "20", "30", "40", "50", "60", "70", "80", "90", "100", "110", 
       "120", "130", "140", "150", "160", "170", "180", "190", "200"}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #17}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #18}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #19}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #20}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.915, 0.3325, 0.2125]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.40082222609352647, 0.5220066643438841, \
0.85]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.9728288904374106, 0.621644452187053, \
0.07336199581899142]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.736782672705901, 0.358, 0.5030266573755369]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.28026441037696703, 0.715, \
0.4292089322474965]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16, ",", #17, ",", #18, ",", #19, 
               ",", #20}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.683914956298818*^9, 3.683914988907814*^9, 3.6839152708619537`*^9, 
   3.684227044487174*^9, 3.684227108357333*^9, 3.6842281987219467`*^9, {
   3.684228240537463*^9, 3.6842282567118692`*^9}, {3.68422829298378*^9, 
   3.684228316225593*^9}, 3.684228404290037*^9, 3.684228498599668*^9}]
}, Open  ]]
},
WindowSize->{720, 851},
WindowMargins->{{Automatic, -269}, {Automatic, 181}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 615, 15, 75, "Input"],
Cell[1198, 39, 128, 2, 32, "Output"],
Cell[1329, 43, 134, 2, 32, "Output"]
}, Open  ]],
Cell[1478, 48, 1775, 42, 96, "Input"],
Cell[CellGroupData[{
Cell[3278, 94, 1024, 29, 54, "Input"],
Cell[4305, 125, 156, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4498, 132, 2135, 53, 75, "Input"],
Cell[6636, 187, 2782, 74, 388, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9455, 266, 2410, 62, 96, "Input"],
Cell[11868, 330, 150549, 2708, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162454, 3043, 6993, 187, 495, "Input"],
Cell[169450, 3232, 3539, 85, 858, "Output"],
Cell[172992, 3319, 2215, 47, 211, "Output"],
Cell[175210, 3368, 3537, 85, 800, "Output"],
Cell[178750, 3455, 2215, 47, 211, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181002, 3507, 1891, 48, 138, "Input"],
Cell[182896, 3557, 197838, 3454, 446, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[380771, 7016, 1972, 50, 138, "Input"],
Cell[382746, 7068, 194920, 3459, 446, "Output"]
}, Open  ]]
}
]
*)

