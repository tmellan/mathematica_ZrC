(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    313431,       6613]
NotebookOptionsPosition[    307359,       6420]
NotebookOutlinePosition[    307712,       6436]
CellTagsIndexPosition[    307669,       6433]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Kramers-Kr\[ODoubleDot]nig Hilbert transform", "Section",
 CellChangeTimes->{{3.7035877190062017`*^9, 3.703587738426964*^9}}],

Cell[CellGroupData[{

Cell["\<\
Definition:
\[OpenCurlyDoubleQuote]f(x)=(-2/Pi)PV Int[x*g[y]/(y^2-x^2)]dy\
\[CloseCurlyDoubleQuote];\
\>", "Subsubsection",
 CellChangeTimes->{{3.703587747996338*^9, 3.703587755584009*^9}}],

Cell["\<\
Define the KKT as a function of analytic integration on the region 0 to \
2\[Pi]:\
\>", "Text",
 CellChangeTimes->{{3.703587774964087*^9, 3.703587797162189*^9}, {
  3.7035879254218082`*^9, 3.703587956299375*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Note - this is the imaginary to real transform!!!! not the real to imaginary\
\>", "Subsubsection",
 CellChangeTimes->{{3.7035995556708813`*^9, 3.703599576858892*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"analyticHT", "[", 
   RowBox[{"fun_", ",", "y_", ",", "upperBound_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "y"}], ")"}], "/", "Pi"}], ")"}], "*", 
      RowBox[{
       RowBox[{"fun", "[", "x", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "^", "2"}], "-", 
         RowBox[{"y", "^", "2"}]}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "upperBound"}], "}"}], ",", 
     RowBox[{"PrincipalValue", "\[Rule]", "True"}]}], "]"}], "//", 
   "N"}]}]], "Input",
 CellChangeTimes->{
  3.703595822389688*^9, {3.703599501005674*^9, 3.703599501093419*^9}}],

Cell["Define a numerical integration version for comparison :", "Text",
 CellChangeTimes->{{3.703587803754951*^9, 3.703587816521397*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"numericalHT", "[", 
   RowBox[{
   "fun_", ",", "y_", ",", "upperBound_", ",", "singularPointRad_", ",", 
    "maxRecursions_", ",", "workingPrec_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "y"}], ")"}], "/", "Pi"}], ")"}], "*", 
      RowBox[{
       RowBox[{"fun", "[", "x", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "^", "2"}], "-", 
         RowBox[{"y", "^", "2"}]}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "upperBound"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<PrincipalValue\>\"", ",", 
        RowBox[{
        "\"\<SingularPointIntegrationRadius\>\"", "\[Rule]", 
         "singularPointRad"}]}], "}"}]}], ",", 
     RowBox[{"MaxRecursion", "\[Rule]", "maxRecursions"}], ",", 
     RowBox[{"Exclusions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "^", "2"}], ")"}], "-", 
          RowBox[{"(", 
           RowBox[{"y", "^", "2"}], ")"}]}], ")"}], "\[Equal]", "0"}], 
       "}"}]}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "workingPrec"}]}], "]"}], "//", 
   "N"}]}]], "Input",
 CellChangeTimes->{{3.703587875065229*^9, 3.703587883871846*^9}, 
   3.703595817634905*^9, {3.70359958973487*^9, 3.703599589818984*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Test on a simple function with known KKT, eg, cosine function:;\
\>", "Subsubsection",
 CellChangeTimes->{{3.703587829012645*^9, 3.703587849540238*^9}}],

Cell["\<\
Note major instability issues wrt working precision and max recursions\
\>", "Text",
 CellChangeTimes->{3.703588214551282*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Off", "[", 
  RowBox[{
   RowBox[{"NIntegrate", "::", "slwcon"}], ",", 
   RowBox[{"NIntegrate", "::", "ncvb"}], ",", 
   RowBox[{"NIntegrate", "::", "par"}], ",", 
   RowBox[{"NIntegrate", "::", "zeroregion"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"analyticHT", "[", 
  RowBox[{"Cos", ",", "2", ",", 
   RowBox[{"2", "Pi"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"numericalHT", "[", 
  RowBox[{"Cos", ",", "2", ",", 
   RowBox[{"2", "Pi"}], ",", 
   RowBox[{"10", "^", 
    RowBox[{"-", "10"}]}], ",", "200", ",", "55"}], "]"}]}], "Input",
 CellChangeTimes->{{3.703587868320764*^9, 3.703587913350672*^9}, {
  3.703587976461461*^9, 3.703588218905723*^9}}],

Cell[BoxData["0.835679035993153`"], "Output",
 CellChangeTimes->{
  3.703587915902051*^9, {3.703587983962728*^9, 3.703588044880275*^9}, {
   3.703588077818667*^9, 3.703588157619814*^9}, 3.7035882249715357`*^9, 
   3.703597073830471*^9}],

Cell[BoxData["0.8356790036500054`"], "Output",
 CellChangeTimes->{
  3.703587915902051*^9, {3.703587983962728*^9, 3.703588044880275*^9}, {
   3.703588077818667*^9, 3.703588157619814*^9}, 3.7035882249715357`*^9, 
   3.703597074232436*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Plot to check that the cosine function KKTs to the sine function\
\>", "Subsubsection",
 CellChangeTimes->{{3.7035882569323673`*^9, 3.7035882726977043`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Off", "[", 
  RowBox[{
   RowBox[{"NIntegrate", "::", "slwcon"}], ",", 
   RowBox[{"NIntegrate", "::", "ncvb"}], ",", 
   RowBox[{"NIntegrate", "::", "par"}], ",", 
   RowBox[{"NIntegrate", "::", "zeroregion"}], ",", 
   RowBox[{"NIntegrate", "::", "precw"}], ",", 
   RowBox[{"NIntegrate", "::", "inumri"}], ",", 
   RowBox[{"General", "::", "stop"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "y", "]"}], ",", 
     RowBox[{"analyticHT", "[", 
      RowBox[{"Cos", ",", "y", ",", 
       RowBox[{"2", "Pi"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0.05", ",", "6", ",", ".25"}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SwatchLegend", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<Sin\>\"", ",", "\"\<H[Cos]\>\""}], "}"}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7035880608970127`*^9, 3.703588061037077*^9}, {
   3.703588245922288*^9, 3.703588249387891*^9}, {3.7035884096919613`*^9, 
   3.703588436516425*^9}, 3.703593104218343*^9, {3.703595388048902*^9, 
   3.703595394391238*^9}, {3.703595444891341*^9, 3.703595453406213*^9}, {
   3.703595527077917*^9, 3.703595527327031*^9}, {3.703595620432777*^9, 
   3.7035956224479923`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], {{
          Directive[
           Opacity[0.2], 
           PointSize[0.011000000000000001`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], {
           
           PolygonBox[{{0.05, 0.04997916927067833}, {0.3, 
             0.29552020666133955`}, {0.55, 0.5226872289306592}, {0.8, 
             0.7173560908995228}, {1.05, 0.867423225594017}, {1.3, 
             0.963558185417193}, {1.55, 0.999783764189357}, {1.8, 
             0.9738476308781951}, {2.05, 0.8873623686333755}, {2.3, 
             0.7457052121767203}, {2.55, 0.557683717391417}, {2.8, 
             0.3349881501559051}, {3.05, 0.0914646422324372}, {
             3.1417544628792546`, 0.}, {3.1417544628792546`, 0.}, {3.05, 0}, {
             2.8, 0}, {2.55, 0}, {2.3, 0}, {2.05, 0}, {1.8, 0}, {1.55, 0}, {
             1.3, 0}, {1.05, 0}, {0.8, 0}, {0.55, 0}, {0.3, 0}, {0.05, 0}}, 
            VertexColors -> None]}}, {
          Directive[
           Opacity[0.2], 
           PointSize[0.011000000000000001`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], {
           
           PolygonBox[{{3.1417544628792546`, 0.}, {
             3.3, -0.1577456941432482}, {3.55, -0.3971481672859598}, {
             3.8, -0.6118578909427189}, {4.05, -0.788525254426195}, {
             4.3, -0.9161659367494549}, {4.55, -0.9868438585032365}, {
             4.8, -0.9961646088358407}, {5.05, -0.9435486686359066}, {
             5.3, -0.8322674422239013}, {5.55, -0.669239857276262}, {
             5.8, -0.46460217941375737`}, {5.8, 0}, {5.55, 0}, {5.3, 0}, {
             5.05, 0}, {4.8, 0}, {4.55, 0}, {4.3, 0}, {4.05, 0}, {3.8, 0}, {
             3.55, 0}, {3.3, 0}, {3.1417544628792546`, 0.}}, VertexColors -> 
            None]}}}}, {
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], {{
          Directive[
           Opacity[0.2], 
           PointSize[0.011000000000000001`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], {
           
           PolygonBox[{{0.05, 0.05018641572650465}, {0.3, 
             0.29676802156570037`}, {0.55, 0.5249943646304426}, {0.8, 
             0.720757641703896}, {1.05, 0.8719719395787914}, {1.3, 
             0.9693264919129433}, {1.55, 1.0068666654141547`}, {1.8, 
             0.9823666802415736}, {2.05, 0.8974710612362963}, {2.3, 
             0.7575962615975185}, {2.55, 0.571598913656638}, {2.8, 
             0.3512318310372892}, {3.05, 0.11042233922101954`}, {
             3.162216292420454, 0.}, {3.162216292420454, 0.}, {3.05, 0}, {
             2.8, 0}, {2.55, 0}, {2.3, 0}, {2.05, 0}, {1.8, 0}, {1.55, 0}, {
             1.3, 0}, {1.05, 0}, {0.8, 0}, {0.55, 0}, {0.3, 0}, {0.05, 0}}, 
            VertexColors -> None]}}, {
          Directive[
           Opacity[0.2], 
           PointSize[0.011000000000000001`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], {
           
           PolygonBox[{{3.162216292420454, 0.}, {
             3.3, -0.13558101920238763`}, {3.55, -0.37113845428543885`}, {
             3.8, -0.5811645798861218}, {4.05, -0.752025412222122}, {
             4.3, -0.872320779877896}, {4.55, -0.9334836797747389}, {
             4.8, -0.9301176897538089}, {5.05, -0.8599554043481407}, {
             5.3, -0.723189539065418}, {5.55, -0.5204390356043515}, {
             5.8, -0.24632573530185936`}, {5.8, 0}, {5.55, 0}, {5.3, 0}, {
             5.05, 0}, {4.8, 0}, {4.55, 0}, {4.3, 0}, {4.05, 0}, {3.8, 0}, {
             3.55, 0}, {3.3, 0}, {3.162216292420454, 0.}}, VertexColors -> 
            None]}}}}}, {{{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], {
          LineBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4lkzQWClvU3K/0X3pq20NwaDy/bGu3ZNPfvy
kj1E/qH9lQzPibd2PoDyX9qf/bf/0JQvz+zPngGBD/YHP5lFvTv4Gsr/Yu8t
d/Rn+dV3UP4P+4xqj1arf++h/D/2H0T3Nh7SfG+fBgYMDn/T5Y+4pr6B8pkc
VPQjdC/eeQ7lszgsXfattfvGQyifzeHE01jlooKrUD6Hw773CvxWWduhfC6H
dp7tp5gMj+yH8HkcLph2qT7Iugnl8znMPfDmf9iUx/sh/hVw0J5SFTDT+iWU
L+ig2sVoZR34FsoXcuj9EjDJcsp7KF/YgcGOZ9aUBzC+iMNJc/tfPYbvoHxR
B2uhPSHvF76C8sUcLp9p3ZKZ9RTKF3e4cb/vONeeu/sBaU+46g==
           "]], 
          Null, {}, {}}}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], {
          LineBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4lkzQWClfWpS/RqOTSvtjcHgsr3dk+M+9v8u
2UPkH9rnN4b+PnDmAZT/0v79rryQIoHn9mfPgMAH+90rCjYZPn8N5X8BmrP3
7w6W91D+D/uJemUWCjIfoPw/9jpaXfY9+e/t08CAweH4DmVr0R1voHwmByPn
J81Wdi+gfBYHv81C5zq9HkH5bA7Ni58LTa26BuVzOCzaszl/scseKJ/LoSN+
O+uOqIP7IXweh42Zdxp2H7gO5fM5cHWzlT2b8Wg/xL8CDpkaL2ZMF3gB5Qs6
MPksc+F99RrKF3JozqvXkrz/FsoXdrjYF6vTdhjGF3H4amRmdLAFpl7UYTJP
cnKcynMoX8whuWD94fzlD6B8cQeu/CUcs9rP7wcAvfKvZQ==
           "]], 
          Null, {}, {}}}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True,
      AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05]}, 
     PlotRange -> {{0, 5.8}, {-0.9961646088358407, 1.0068666654141547`}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Sin\"", "\"H[Cos]\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.703588259126116*^9, 3.703588453777876*^9, 
  3.703593115234639*^9, 3.70359546051435*^9, 3.70359560471517*^9, 
  3.703595839299594*^9, 3.703599516376728*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "y", "]"}], ",", 
     RowBox[{"numericalHT", "[", 
      RowBox[{"Cos", ",", "y", ",", 
       RowBox[{"2", "Pi"}], ",", 
       RowBox[{"10", "^", 
        RowBox[{"-", "10"}]}], ",", "200", ",", "55"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0.05", ",", "6", ",", ".25"}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SwatchLegend", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<Sin\>\"", ",", "\"\<H[Cos]\>\""}], "}"}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.70359545869007*^9, 3.703595519747497*^9}, {
  3.703595624701229*^9, 3.703595625517747*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], {{
          Directive[
           Opacity[0.2], 
           PointSize[0.011000000000000001`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], {
           
           PolygonBox[{{0.05, 0.04997916927067833}, {0.3, 
             0.29552020666133955`}, {0.55, 0.5226872289306592}, {0.8, 
             0.7173560908995228}, {1.05, 0.867423225594017}, {1.3, 
             0.963558185417193}, {1.55, 0.999783764189357}, {1.8, 
             0.9738476308781951}, {2.05, 0.8873623686333755}, {2.3, 
             0.7457052121767203}, {2.55, 0.557683717391417}, {2.8, 
             0.3349881501559051}, {3.05, 0.0914646422324372}, {
             3.1417544628792546`, 0.}, {3.1417544628792546`, 0.}, {3.05, 0}, {
             2.8, 0}, {2.55, 0}, {2.3, 0}, {2.05, 0}, {1.8, 0}, {1.55, 0}, {
             1.3, 0}, {1.05, 0}, {0.8, 0}, {0.55, 0}, {0.3, 0}, {0.05, 0}}, 
            VertexColors -> None]}}, {
          Directive[
           Opacity[0.2], 
           PointSize[0.011000000000000001`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], {
           
           PolygonBox[{{3.1417544628792546`, 0.}, {
             3.3, -0.1577456941432482}, {3.55, -0.3971481672859598}, {
             3.8, -0.6118578909427189}, {4.05, -0.788525254426195}, {
             4.3, -0.9161659367494549}, {4.55, -0.9868438585032365}, {
             4.8, -0.9961646088358407}, {5.05, -0.9435486686359066}, {
             5.3, -0.8322674422239013}, {5.55, -0.669239857276262}, {
             5.8, -0.46460217941375737`}, {5.8, 0}, {5.55, 0}, {5.3, 0}, {
             5.05, 0}, {4.8, 0}, {4.55, 0}, {4.3, 0}, {4.05, 0}, {3.8, 0}, {
             3.55, 0}, {3.3, 0}, {3.1417544628792546`, 0.}}, VertexColors -> 
            None]}}}}, {
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], {{
          Directive[
           Opacity[0.2], 
           PointSize[0.011000000000000001`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], {
           
           PolygonBox[{{0.55, 0.5249944461007914}, {0.8, 
             0.7207577292907275}, {1.05, 0.8719716119599239}, {1.3, 
             0.9693265126062951}, {1.55, 1.0068666666501624`}, {1.8, 
             0.9823666598842699}, {2.05, 0.8974709992254065}, {2.3, 
             0.7575962400054173}, {2.55, 0.5715988717264328}, {2.8, 
             0.35123176147414187`}, {3.05, 0.11042231295006005`}, {
             3.162216257215229, 0.}, {3.162216257215229, 0.}, {3.05, 0}, {
             2.8, 0}, {2.55, 0}, {2.3, 0}, {2.05, 0}, {1.8, 0}, {1.55, 0}, {
             1.3, 0}, {1.05, 0}, {0.8, 0}, {0.55, 0}}, VertexColors -> 
            None]}}, {
          Directive[
           Opacity[0.2], 
           PointSize[0.011000000000000001`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], {
           
           PolygonBox[{{3.162216257215229, 0.}, {
             3.3, -0.13558106412361906`}, {3.55, -0.37113845348152547`}, {
             3.8, -0.5811646085020536}, {4.05, -0.7520254261554292}, {
             4.3, -0.8723207753325302}, {4.55, -0.933483681181556}, {
             4.8, -0.9301176914498184}, {5.05, -0.8599554042182476}, {
             5.3, -0.7231895298550597}, {5.55, -0.5204390617515137}, {
             5.8, -0.2463257289603259}, {5.8, 0}, {5.55, 0}, {5.3, 0}, {
             5.05, 0}, {4.8, 0}, {4.55, 0}, {4.3, 0}, {4.05, 0}, {3.8, 0}, {
             3.55, 0}, {3.3, 0}, {3.162216257215229, 0.}}, VertexColors -> 
            None]}}}}}, {{{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], {
          LineBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4lkzQWClvU3K/0X3pq20NwaDy/bGu3ZNPfvy
kj1E/qH9lQzPibd2PoDyX9qf/bf/0JQvz+zPngGBD/YHP5lFvTv4Gsr/Yu8t
d/Rn+dV3UP4P+4xqj1arf++h/D/2H0T3Nh7SfG+fBgYMDn/T5Y+4pr6B8pkc
VPQjdC/eeQ7lszgsXfattfvGQyifzeHE01jlooKrUD6Hw773CvxWWduhfC6H
dp7tp5gMj+yH8HkcLph2qT7Iugnl8znMPfDmf9iUx/sh/hVw0J5SFTDT+iWU
L+ig2sVoZR34FsoXcuj9EjDJcsp7KF/YgcGOZ9aUBzC+iMNJc/tfPYbvoHxR
B2uhPSHvF76C8sUcLp9p3ZKZ9RTKF3e4cb/vONeeu/sBaU+46g==
           "]], 
          Null, {}, {}}}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], {
          LineBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4lkzQeChfcMWIfWDZx7YQ/gv7WdNKmkuEnhu
f/YMCHywnyHQy2T4/DWU/8X+lOtNjp0s76H8H/ZL5U5bKMh8gPL/2Fu6zzHp
yX9vnwYGDA79TDclRXe8gfKZHNas8qmwsnsB5bM4xN7u397p9QjKZ3MwdDE7
MaXqGpTP4fCm6d6/RS57oHwuh4si+mk7og7uh/B5HALz/9fvPnAdyudzWFST
3PpsxqP9xmAg4CCsnLxgusALKF/QQWuaqRPvq9dQvpBD7QkHbcn7b6F8YYcb
y9102w7D+CIOByJUjA62wNSLOjzTL4yLU3kO5Ys53BfeeTF/+QMoX9yhR5nt
98z28/sB3yOgEw==
           "]], Null, {}, {}}}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True,
      AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05]}, 
     PlotRange -> {{0, 5.8}, {-0.9961646088358407, 1.0068666666501624`}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Sin\"", "\"H[Cos]\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.703595598150217*^9, 3.703595928819964*^9, 
  3.703599701656006*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Note - changing the integration upper bound to inifinty makes the Hilbert \
transform better at high values, but not so much at low values\
\>", "Subsubsection",
 CellChangeTimes->{{3.703596107538904*^9, 3.70359614655057*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "y", "]"}], ",", 
     RowBox[{"analyticHT", "[", 
      RowBox[{"Cos", ",", "y", ",", "Infinity"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0.05", ",", "6", ",", ".25"}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SwatchLegend", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<Sin\>\"", ",", "\"\<H[Cos]\>\""}], "}"}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.703596036274941*^9, 3.703596065305996*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], {{
          Directive[
           Opacity[0.2], 
           PointSize[0.011000000000000001`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], {
           
           PolygonBox[{{0.05, 0.04997916927067833}, {0.3, 
             0.29552020666133955`}, {0.55, 0.5226872289306592}, {0.8, 
             0.7173560908995228}, {1.05, 0.867423225594017}, {1.3, 
             0.963558185417193}, {1.55, 0.999783764189357}, {1.8, 
             0.9738476308781951}, {2.05, 0.8873623686333755}, {2.3, 
             0.7457052121767203}, {2.55, 0.557683717391417}, {2.8, 
             0.3349881501559051}, {3.05, 0.0914646422324372}, {
             3.1417544628792546`, 0.}, {3.1417544628792546`, 0.}, {3.05, 0}, {
             2.8, 0}, {2.55, 0}, {2.3, 0}, {2.05, 0}, {1.8, 0}, {1.55, 0}, {
             1.3, 0}, {1.05, 0}, {0.8, 0}, {0.55, 0}, {0.3, 0}, {0.05, 0}}, 
            VertexColors -> None]}}, {
          Directive[
           Opacity[0.2], 
           PointSize[0.011000000000000001`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], {
           
           PolygonBox[{{3.1417544628792546`, 0.}, {
             3.3, -0.1577456941432482}, {3.55, -0.3971481672859598}, {
             3.8, -0.6118578909427189}, {4.05, -0.788525254426195}, {
             4.3, -0.9161659367494549}, {4.55, -0.9868438585032365}, {
             4.8, -0.9961646088358407}, {5.05, -0.9435486686359066}, {
             5.3, -0.8322674422239013}, {5.55, -0.669239857276262}, {
             5.8, -0.46460217941375737`}, {5.8, 0}, {5.55, 0}, {5.3, 0}, {
             5.05, 0}, {4.8, 0}, {4.55, 0}, {4.3, 0}, {4.05, 0}, {3.8, 0}, {
             3.55, 0}, {3.3, 0}, {3.1417544628792546`, 0.}}, VertexColors -> 
            None]}}}}, {
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], {{
          Directive[
           Opacity[0.2], 
           PointSize[0.011000000000000001`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], {
           
           PolygonBox[{{0.05, 0.04997916927067834}, {0.3, 
             0.2955202066613396}, {0.55, 0.5226872289306592}, {0.8, 
             0.7173560908995228}, {1.05, 0.867423225594017}, {1.3, 
             0.963558185417193}, {1.55, 0.9997837641893571}, {1.8, 
             0.9738476308781954}, {2.05, 0.8873623686333756}, {2.3, 
             0.7457052121767203}, {2.55, 0.5576837173914171}, {2.8, 
             0.33498815015590516`}, {3.05, 0.09146464223243721}, {
             3.141754462879254, 0.}, {3.141754462879254, 0.}, {3.05, 0}, {
             2.8, 0}, {2.55, 0}, {2.3, 0}, {2.05, 0}, {1.8, 0}, {1.55, 0}, {
             1.3, 0}, {1.05, 0}, {0.8, 0}, {0.55, 0}, {0.3, 0}, {0.05, 0}}, 
            VertexColors -> None]}}, {
          Directive[
           Opacity[0.2], 
           PointSize[0.011000000000000001`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], {
           
           PolygonBox[{{3.141754462879254, 0.}, {
             3.3, -0.15774569414324818`}, {3.55, -0.39714816728595986`}, {
             3.8, -0.611857890942719}, {4.05, -0.788525254426195}, {
             4.3, -0.9161659367494547}, {4.55, -0.9868438585032365}, {
             4.8, -0.9961646088358409}, {5.05, -0.9435486686359066}, {
             5.3, -0.8322674422239014}, {5.55, -0.669239857276262}, {
             5.8, -0.46460217941375737`}, {5.8, 0}, {5.55, 0}, {5.3, 0}, {
             5.05, 0}, {4.8, 0}, {4.55, 0}, {4.3, 0}, {4.05, 0}, {3.8, 0}, {
             3.55, 0}, {3.3, 0}, {3.141754462879254, 0.}}, VertexColors -> 
            None]}}}}}, {{{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], {
          LineBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4lkzQWClvU3K/0X3pq20NwaDy/bGu3ZNPfvy
kj1E/qH9lQzPibd2PoDyX9qf/bf/0JQvz+zPngGBD/YHP5lFvTv4Gsr/Yu8t
d/Rn+dV3UP4P+4xqj1arf++h/D/2H0T3Nh7SfG+fBgYMDn/T5Y+4pr6B8pkc
VPQjdC/eeQ7lszgsXfattfvGQyifzeHE01jlooKrUD6Hw773CvxWWduhfC6H
dp7tp5gMj+yH8HkcLph2qT7Iugnl8znMPfDmf9iUx/sh/hVw0J5SFTDT+iWU
L+ig2sVoZR34FsoXcuj9EjDJcsp7KF/YgcGOZ9aUBzC+iMNJc/tfPYbvoHxR
B2uhPSHvF76C8sUcLp9p3ZKZ9RTKF3e4cb/vONeeu/sBaU+46g==
           "]], 
          Null, {}, {}}}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], {
          LineBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4lkzQWClvW3K/0X3pq20NwaDy/Ymu3ZNPfvy
kj1E/qH9lQzPibd2PoDyX9qf/bf/0JQvz+zPngGBD/YHP5lFvTv4Gsr/Yu8t
d/Rn+dV3UP4P+8xqj1arf++h/D/2n0T3Nh7SfG+fBgYMDv/S5Y+4pr6B8pkc
VPQjdC/eeQ7lszgsW/attfvGQyifzeHk01jlooKrUD6Hw/73CvxWWduhfC6H
Np7tp5gMj+yH8HkcLpp2qT7Iugnl8znMO/Dmf9iUx/sh/hVw0J5SFTDT+iWU
L+ig3MVoZR34FsoXcuj9EjDJcsp7KF/YgcmOZ9aUBzC+iMNJc/tfPYbvoHxR
BxuhPSHvF76C8sUcLp9p3ZKZ9RTKF3e4cb/vONeeu/sBcwe49Q==
           "]], 
          Null, {}, {}}}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True,
      AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05]}, 
     PlotRange -> {{0, 5.8}, {-0.9961646088358409, 0.9997837641893571}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Sin\"", "\"H[Cos]\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7035960460625896`*^9, 3.7035960837741413`*^9}, 
   3.703599614441743*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Check on a more realistic function, such as a cosine fitted on 20 points;\
\>", "Subsubsection",
 CellChangeTimes->{{3.703595284525567*^9, 3.703595303227281*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cosData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"i", "*", "2", 
        RowBox[{"Pi", "/", "20"}]}], ",", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"i", "*", "2", 
          RowBox[{"Pi", "/", "20"}]}], "]"}], "//", "N"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "20"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cosDataInter", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"x", ">", "0"}], "&&", 
     RowBox[{"x", "<", 
      RowBox[{"2", "Pi"}]}]}], ",", 
    RowBox[{
     RowBox[{"Interpolation", "[", "cosData", "]"}], "[", "x", "]"}], ",", 
    "0"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7035953113976917`*^9, 3.7035953173663263`*^9}}],

Cell[BoxData[
 RowBox[{"Off", "[", 
  RowBox[{
   RowBox[{"NIntegrate", "::", "eincr"}], ",", 
   RowBox[{"General", "::", "stop"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.703597471011875*^9, 3.703597498847002*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"sList", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"i", "/", "2"}], "]"}], "//", "N"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "12"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"hList", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"numericalHT", "[", 
     RowBox[{"cosDataInter", ",", 
      RowBox[{"i", "/", "2"}], ",", "Infinity", ",", 
      RowBox[{"10", "^", 
       RowBox[{"-", "10"}]}], ",", "200", ",", "55"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "12"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.703597355525525*^9, 3.7035973640556173`*^9}, {
  3.703597418538413*^9, 3.703597460908337*^9}, {3.703597580428968*^9, 
  3.703597605188818*^9}, {3.703597725671064*^9, 3.7035977278976507`*^9}, {
  3.7035996564062653`*^9, 3.703599656869423*^9}, {3.703599720810425*^9, 
  3.703599724716771*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.479425538604203`", ",", "0.8414709848078965`", ",", 
   "0.9974949866040544`", ",", "0.9092974268256817`", ",", 
   "0.5984721441039565`", ",", "0.1411200080598672`", ",", 
   RowBox[{"-", "0.35078322768961984`"}], ",", 
   RowBox[{"-", "0.7568024953079282`"}], ",", 
   RowBox[{"-", "0.977530117665097`"}], ",", 
   RowBox[{"-", "0.9589242746631385`"}], ",", 
   RowBox[{"-", "0.7055403255703919`"}], ",", 
   RowBox[{"-", "0.27941549819892586`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.703597364260735*^9, 3.703597461970935*^9, 
  3.703597615713073*^9, 3.703597739879713*^9, 3.70359972519514*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.4815886437024191`", ",", "0.8457845905744715`", ",", 
   "1.0041991556717924`", ",", "0.9189562589633196`", ",", 
   "0.611931140703792`", ",", "0.15951532755223424`", ",", 
   RowBox[{"-", "0.3256271089468418`"}], ",", 
   RowBox[{"-", "0.7214069290615853`"}], ",", 
   RowBox[{"-", "0.9261731598379469`"}], ",", 
   RowBox[{"-", "0.8792457900100955`"}], ",", 
   RowBox[{"-", "0.5663069809272157`"}], ",", "0.048169169621607694`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.703597364260735*^9, 3.703597461970935*^9, 
  3.703597615713073*^9, 3.703597739879713*^9, 3.7035998176773443`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nice!", "Subsubsection",
 CellChangeTimes->{{3.703599831478704*^9, 3.703599832177492*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"{", 
   RowBox[{"sList", ",", "hList"}], "}"}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 0.479425538604203}, {2., 0.8414709848078965}, {3., 
      0.9974949866040544}, {4., 0.9092974268256817}, {5., 
      0.5984721441039565}, {6., 0.1411200080598672}, {
      7., -0.35078322768961984`}, {8., -0.7568024953079282}, {
      9., -0.977530117665097}, {10., -0.9589242746631385}, {
      11., -0.7055403255703919}, {12., -0.27941549819892586`}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 0.4815886437024191}, {2., 0.8457845905744715}, {3., 
      1.0041991556717924`}, {4., 0.9189562589633196}, {5., 
      0.611931140703792}, {6., 0.15951532755223424`}, {
      7., -0.3256271089468418}, {8., -0.7214069290615853}, {
      9., -0.9261731598379469}, {10., -0.8792457900100955}, {
      11., -0.5663069809272157}, {12., 
      0.048169169621607694`}}]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 12.}, {-0.977530117665097, 1.0041991556717924`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.703598240547244*^9, 3.703599823172996*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Realistic example", "Section",
 CellChangeTimes->{{3.703598875984058*^9, 3.703598879587344*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Volumes/MicroSD/Dropbox/PostDoc_SD/Conductivity_ZrC/Band_life_\
broadened\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phononSE", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{
    "\"\<se.all.Gamma.Gamma-X.X.X-W.W.W-K.K.K-Gamma.Gamma-L.L\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
      "Number", ",", " ", "Number", ",", "Number", ",", " ", "Number", ",", 
       "Number", ",", " ", "Number", ",", "Number", ",", " ", "Number", ",", 
       "Number", ",", " ", "Number", ",", "Number"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"path", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"0.5", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5", ",", "0.5"}], "}"}]}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.5", ",", "0.5"}], "}"}], ",", 
    RowBox[{"0.5", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5", ",", "0.5"}], "}"}], "+", 
       RowBox[{"{", 
        RowBox[{"0.25", ",", "0.75", ",", "0.5"}], "}"}]}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"0.25", ",", "0.75", ",", "0.5"}], "}"}], ",", 
    RowBox[{"0.5", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.25", ",", "0.75", ",", "0.5"}], "}"}], "+", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"3", "/", "8"}], ",", 
         RowBox[{"3", "/", "4"}], ",", 
         RowBox[{"3", "/", "8"}]}], "}"}]}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "/", "8"}], ",", 
      RowBox[{"3", "/", "4"}], ",", 
      RowBox[{"3", "/", "8"}]}], "}"}], ",", 
    RowBox[{"0.5", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"3", "/", "8"}], ",", 
         RowBox[{"3", "/", "4"}], ",", 
         RowBox[{"3", "/", "8"}]}], "}"}], "+", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"0.5", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", "2"}], ",", 
         RowBox[{"1", "/", "2"}], ",", 
         RowBox[{"1", "/", "2"}]}], "}"}]}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "2"}], ",", 
      RowBox[{"1", "/", "2"}], ",", 
      RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"pathNorm", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Norm", "[", 
     RowBox[{
      RowBox[{"path", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "-", 
      RowBox[{"path", "[", 
       RowBox[{"[", 
        RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "2", ",", "12"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"pathD", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Total", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"pathNorm", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "j"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "11"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pList", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"pathD", "[", 
        RowBox[{"[", "j", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "201"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "11"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gammaData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", "phononSE", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"pList", "[", 
         RowBox[{"[", "j", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", "phononSE", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"j", "+", "1"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.703598941656126*^9, 3.703598989232436*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.25`", ",", "0.25`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0.5`", ",", "0.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.125`", ",", "0.625`", ",", "0.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.25`", ",", "0.75`", ",", "0.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3125`", ",", "0.75`", ",", "0.4375`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "8"], ",", 
     FractionBox["3", "4"], ",", 
     FractionBox["3", "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1875`", ",", "0.375`", ",", "0.1875`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.25`", ",", "0.25`", ",", "0.25`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7035989423228703`*^9, 3.703598993281723*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0.3535533905932738`", ",", "0.3535533905932738`", ",", 
   "0.1767766952966369`", ",", "0.1767766952966369`", ",", 
   "0.08838834764831845`", ",", "0.08838834764831845`", ",", 
   "0.4592793267718459`", ",", "0.4592793267718459`", ",", 
   "0.4330127018922193`", ",", "0.4330127018922193`"}], "}"}]], "Output",
 CellChangeTimes->{3.7035989423228703`*^9, 3.703598993297056*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0.3535533905932738`", ",", "0.7071067811865476`", ",", 
   "0.8838834764831844`", ",", "1.0606601717798214`", ",", 
   "1.1490485194281397`", ",", "1.2374368670764582`", ",", 
   "1.6967161938483042`", ",", "2.1559955206201504`", ",", 
   "2.589008222512369`", ",", "3.022020924404589`"}], "}"}]], "Output",
 CellChangeTimes->{3.7035989423228703`*^9, 3.703598993308176*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"im", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"0", "\[LessEqual]", " ", "x", "\[LessEqual]", 
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"gammaData", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"gammaData", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"gammaData", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}], "]"}], "[", "x", 
     "]"}], ",", "0"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"imP", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"im", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "50"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.703599005250079*^9, 3.703599005452784*^9}, {
  3.7035992435442543`*^9, 3.703599244245482*^9}, {3.703599846496874*^9, 
  3.703599846563876*^9}, {3.703600352313362*^9, 3.703600352392906*^9}, {
  3.7036012516817627`*^9, 3.703601256048324*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAWIQbZa2rSLB3MWBAQpkbp9aZG2N4OcfdGLVs0fwZ2yp
M1N3RPAPLd+VruCM4Iv0GZ0Sckfwd0Up9X/3Q/DZvjBKHoxD8H9smNH3JAHB
f52rz8KRjOBfeB7z3i8dwZ91e/vRO/kIvt7h3KIfDQh+2KSbp/UXI/jLDTbW
zXuO4GsmrfL7m+sK59/23Lkp9DWCf2lxla59sRvCfZsDbZQ+Ifj/dxRtbctz
h/O9Ddxca74i+Mdj9TOziz3gfKHkjN1zSxH8uIyFvBfKEfxvRcKbTGoQfJWO
77/+tiD4DZv290yYhuBbsQds2LoTwW/j6WR6sRvBvyh4KERqH4KfIWPys+4Q
gj/dUMLJ4zSC/yX6weVbdxB8h0RJNd77CH53WlCF/UMEX6nwiMySpwh+YNuK
1Nx3CP6c7ofb539A8F9MkOK69AnJP7N71pl9R/DPLDjKkPkTwRdf9i9o9m8E
P2m1+dKzfxH8dRsKvv//j+ADAGAiolw=
       "]]}, {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.703599006671867*^9, 3.703599246964065*^9, 
  3.703599847657475*^9, 3.703600368858984*^9, 3.703601257252507*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"imH", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"numericalHT", "[", 
       RowBox[{"im", ",", "i", ",", "Infinity", ",", 
        RowBox[{"10", "^", 
         RowBox[{"-", "10"}]}], ",", "200", ",", "55"}], "]"}]}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "50"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7035990355133123`*^9, 3.703599080064124*^9}, {
  3.7035996694057703`*^9, 3.70359967044357*^9}, {3.703599844423347*^9, 
  3.703599844482036*^9}, {3.703599968045246*^9, 3.703599970865756*^9}, {
  3.703600397478541*^9, 3.703600416057383*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "0.0035547475831989527`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"-", "0.0073305330676194675`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"-", "0.011012723360752104`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"-", "0.015845921599019912`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"-", "0.022213370303828042`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", 
     RowBox[{"-", "0.03464813911219476`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", 
     RowBox[{"-", "0.03980612975250572`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", 
     RowBox[{"-", "0.04025956796974785`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", 
     RowBox[{"-", "0.06991386555659064`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", 
     RowBox[{"-", "0.043872157043375944`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "0.039869518527770244`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "0.013543486981103834`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", 
     RowBox[{"-", "0.008636921033018654`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "0.04077973654069093`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", 
     RowBox[{"-", "0.002240559391778634`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", 
     RowBox[{"-", "0.020885394252186072`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", 
     RowBox[{"-", "0.035707388697160176`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", 
     RowBox[{"-", "0.0497212901918564`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", 
     RowBox[{"-", "0.0651012027166568`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", 
     RowBox[{"-", "0.08354436261571392`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", 
     RowBox[{"-", "0.10818901736487106`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", 
     RowBox[{"-", "0.027187236909150047`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "0.06520334624433473`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", 
     RowBox[{"-", "0.028014377236451532`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "0.06881546163133198`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "0.20157313335149507`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "0.12285366282300568`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "0.11580935240093035`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29", ",", "0.09372867953612561`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "0.07904311275166276`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"31", ",", "0.06540171395726029`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32", ",", "0.05745940218698478`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"33", ",", "0.05140490373090091`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34", ",", "0.04754609798130472`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"35", ",", "0.04752636725277396`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36", ",", "0.04309139443354041`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"37", ",", "0.03999276923568347`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"38", ",", "0.03756751332882469`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"39", ",", "0.035511596045707965`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40", ",", "0.0337229156962829`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"41", ",", "0.032142816346870225`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42", ",", "0.030731707445572645`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"43", ",", "0.029460734577768006`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"44", ",", "0.028307914093890187`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"45", ",", "0.027255999612338558`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"46", ",", "0.02629117093436477`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"47", ",", "0.02540216952639881`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"48", ",", "0.024579700034821128`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"49", ",", "0.023816001019112097`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50", ",", "0.02310452861083166`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7035992171810713`*^9, 3.703599920397648*^9, 
  3.7036001271836157`*^9, 3.703600396161549*^9, 3.7036007646645393`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListPlot", "[", "imH", "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Interpolation", "[", "imH", "]"}], "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "50"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Brown"}]}], "]"}], ",", "imP"}], 
    "}"}], ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7035992340731583`*^9, 3.703599260613882*^9}, {
  3.7036001376431704`*^9, 3.703600324290107*^9}, {3.703601157618041*^9, 
  3.703601195654055*^9}, {3.703601240479958*^9, 3.7036012632274837`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.0010214285714285716`\\\", \
\\\"}\\\"}]\\) lies outside the range of data in the interpolating function. \
Extrapolation will be used.\"",2,114,109,29424017263191301066,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.703600238796896*^9, 3.7036002947981*^9}, 
   3.7036003248430147`*^9, 3.703600764803608*^9, {3.703601159465728*^9, 
   3.7036011964048357`*^9}, {3.703601232416272*^9, 3.7036012639153748`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw10H1I00Ecx/FZcww0MlM0ldDRJLcYqWU+TPdxD24uci3QJEJ0YjCsLMoy
ih7I/Ccr2bJymw+ztZyibWPLoPSXZEU0/5DApAgKWVhEWjpLElex7w6O43Xv
gzsuTdewr24Ni8XK+jf/r6ExL1ngu4zTm48wtAFemWmli3OezMU4u847da2F
HIMon9D3Ja+NHAePZTEqiblFToRI6+05NGIlp8CnnIttqrGRU+FeuDH32RI2
D6WFSZyPfhd5C5Yteo3+lJ2cjrr8quiXepsk5K3Ieidd53xylSyA2R/8WuC8
ROe3oULW5o/7FD4vwvHTwYzXB3TUt+PF++T4P7p2ciYiEg7yC1W95Cxs+mG0
b2h0kLMxIOiYb+p3kndgMCV7MqPWS96Jt+VVl0vcj8k5qJ02tP+eMpN3IdDq
7Ra4nPSeXMy2ZHInHlio5yHnsODDTKeLej7YZibIn3hFLoBmnH2s4gRDFoPD
5V0ZujdCLsSF9WV7TKvD5CJwY4qqhWIPWYI351qHBKPh+4Hm3WdN2vrBkC8C
bsdY5ai2n3oxrLZnmqX9fdSLoRhLlFaXk1lSBJodso0xdupSqDNn7n8/E/5v
GWoqlYZo8V3qMjBKdYNR1EtdDjU/XpUmt1KXo8YT+TOysYe6AmzF8HJaUzd1
BRR7U44uCrqol+CXLCLArFiol+Cme1IYnDVTV8L3qLIz9puJuhJL0SdHOGvJ
LBWepoqYemEHdRXSr68+z629Q70UyYaEgYd9tyV/AfjS5H0=
       
       "]]}, {}}, {}, {}, {{}, {}}}, {{{}, {}, 
     {RGBColor[0.6, 0.4, 0.2], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
       
       "]]}}, {}, {}}, {{{{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAWIQbZa2rSLB3MWBAQpkbp9aZG2N4OcfdGLVs0fwZ2yp
M1N3RPAPLd+VruCM4Iv0GZ0Sckfwd0Up9X/3Q/DZvjBKHoxD8H9smNH3JAHB
f52rz8KRjOBfeB7z3i8dwZ91e/vRO/kIvt7h3KIfDQh+2KSbp/UXI/jLDTbW
zXuO4GsmrfL7m+sK59/23Lkp9DWCf2lxla59sRvCfZsDbZQ+Ifj/dxRtbctz
h/O9Ddxca74i+Mdj9TOziz3gfKHkjN1zSxH8uIyFvBfKEfxvRcKbTGoQfJWO
77/+tiD4DZv290yYhuBbsQds2LoTwW/j6WR6sRvBvyh4KERqH4KfIWPys+4Q
gj/dUMLJ4zSC/yX6weVbdxB8h0RJNd77CH53WlCF/UMEX6nwiMySpwh+YNuK
1Nx3CP6c7ofb539A8F9MkOK69AnJP7N71pl9R/DPLDjKkPkTwRdf9i9o9m8E
P2m1+dKzfxH8dRsKvv//j+ADAGAiolw=
        "]]}, {}}, {{}, {}, {}}}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->800,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.703599261315419*^9, 3.703599920542355*^9, {3.703600127285308*^9, 
   3.703600294871767*^9}, 3.703600324909853*^9, 3.703600764905265*^9, {
   3.7036011596476192`*^9, 3.70360119656289*^9}, {3.703601232546506*^9, 
   3.7036012640620003`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.703601202203384*^9, 3.7036012032092323`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.70360044544133*^9, 3.703600447590603*^9}, {
  3.703601149122775*^9, 3.703601153220443*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["BREAK", "Section",
 CellChangeTimes->{{3.703597511059417*^9, 3.7035975114166927`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"analyticHTmod", "[", 
   RowBox[{"fun_", ",", "y_", ",", "upperBound_", ",", "lowerBound_"}], "]"}],
   ":=", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "x"}], ")"}], "/", "Pi"}], ")"}], "*", 
      RowBox[{
       RowBox[{"fun", "[", "x", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "^", "2"}], "-", 
         RowBox[{"y", "^", "2"}]}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "lowerBound", ",", "upperBound"}], "}"}], ",", 
     RowBox[{"PrincipalValue", "\[Rule]", "True"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
        RowBox[{"2", "Pi"}]}], "}"}]}]}], "]"}], "//", "N"}]}]], "Input",
 CellChangeTimes->{{3.703596228008256*^9, 3.703596228092926*^9}, {
   3.703596289260439*^9, 3.703596299966617*^9}, {3.703596402935885*^9, 
   3.703596419653111*^9}, {3.703596454074162*^9, 3.7035964550309153`*^9}, {
   3.703596560691264*^9, 3.703596567535674*^9}, 3.703596882432111*^9, {
   3.703598547885591*^9, 3.703598585971304*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"analyticHTmod", "[", 
  RowBox[{"cosDataInter", ",", "2", ",", "Infinity", ",", "0"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7035968598665867`*^9, 3.703596869741674*^9}}],

Cell[BoxData["3.58432948802744`"], "Output",
 CellChangeTimes->{{3.70359857851616*^9, 3.703598588703269*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sin", "[", "2", "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.703598572299087*^9, 3.703598576406057*^9}}],

Cell[BoxData["0.9092974268256817`"], "Output",
 CellChangeTimes->{{3.703596867280402*^9, 3.703596884922099*^9}, {
  3.703598564783926*^9, 3.703598590662037*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DiscretePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sin", "[", "y", "]"}], ",", 
      RowBox[{"analyticHTmod", "[", 
       RowBox[{"cosDataInter", ",", "y", ",", "Infinity", ",", 
        RowBox[{"-", "Infinity"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0.05", ",", "3", ",", ".25"}], "}"}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"SwatchLegend", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Sin\>\"", ",", "\"\<H[Cos]\>\""}], "}"}], "]"}]}]}], 
   "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.703596170885707*^9, 3.7035961727711554`*^9}, {
   3.703596231036627*^9, 3.703596231116934*^9}, {3.703596575132159*^9, 
   3.70359657569444*^9}, {3.703596640047435*^9, 3.703596640285018*^9}, {
   3.7035966779059763`*^9, 3.7035966837582903`*^9}, 3.703596804654224*^9, {
   3.703596899855603*^9, 3.703596920441461*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,13,53,29424017263191301066,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.703596581906721*^9, 3.703596685682272*^9, 3.703596805735836*^9, {
   3.7035968881891823`*^9, 3.703596921666457*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"x\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"x\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.05030968729227719`\\\", \\\
\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"4.979529335260989`\\\"}]\\) and \\!\\(\\*RowBox[{\\\"3.637691311934441`\\\
\"}]\\) for the integral and error estimates.\"",2,13,54,29424017263191301066,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.703596581906721*^9, 3.703596685682272*^9, 3.703596805735836*^9, {
   3.7035968881891823`*^9, 3.703596921761085*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"x\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"x\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"0.2998970257140879`15.954589770191005\\\", \\\"}\\\"}]\\). NIntegrate \
obtained \\!\\(\\*RowBox[{\\\"0.5405550135761364`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.4259295910288088`\\\"}]\\) for the integral and error \
estimates.\"",2,13,55,29424017263191301066,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.703596581906721*^9, 3.703596685682272*^9, 3.703596805735836*^9, {
   3.7035968881891823`*^9, 3.7035969221992083`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"x\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"x\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.550387424142999`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"81.48245119392395`\\\
\"}]\\) and \\!\\(\\*RowBox[{\\\"81.747263298456`\\\"}]\\) for the integral \
and error estimates.\"",2,13,56,29424017263191301066,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.703596581906721*^9, 3.703596685682272*^9, 3.703596805735836*^9, {
   3.7035968881891823`*^9, 3.70359692252195*^9}}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,13,57,29424017263191301066,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.703596581906721*^9, 3.703596685682272*^9, 3.703596805735836*^9, {
   3.7035968881891823`*^9, 3.703596922543243*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,13,58,29424017263191301066,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.703596581906721*^9, 3.703596685682272*^9, 3.703596805735836*^9, {
   3.7035968881891823`*^9, 3.70359692290793*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,13,59,29424017263191301066,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.703596581906721*^9, 3.703596685682272*^9, 3.703596805735836*^9, {
   3.7035968881891823`*^9, 3.7035969236475573`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,13,60,29424017263191301066,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.703596581906721*^9, 3.703596685682272*^9, 3.703596805735836*^9, {
   3.7035968881891823`*^9, 3.703596923668705*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], {{
          Directive[
           Opacity[0.2], 
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], {
           
           PolygonBox[{{0.05, 0.04997916927067833}, {0.3, 
             0.29552020666133955`}, {0.55, 0.5226872289306592}, {0.8, 
             0.7173560908995228}, {1.05, 0.867423225594017}, {1.3, 
             0.963558185417193}, {1.55, 0.999783764189357}, {1.8, 
             0.9738476308781951}, {2.05, 0.8873623686333755}, {2.3, 
             0.7457052121767203}, {2.55, 0.557683717391417}, {2.8, 
             0.3349881501559051}, {2.8, 0}, {2.55, 0}, {2.3, 0}, {2.05, 0}, {
             1.8, 0}, {1.55, 0}, {1.3, 0}, {1.05, 0}, {0.8, 0}, {0.55, 0}, {
             0.3, 0}, {0.05, 0}}, VertexColors -> None]}}, {
          Directive[
           Opacity[0.2], 
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], {}}}}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], {{
          Directive[
           Opacity[0.2], 
           PointSize[0.012833333333333334`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], {
           
           PolygonBox[{{0.27551871586482135`, -6.754093068193538*^-16}, {0.3, 
             0.5405550135761364}, {0.55, 81.48245119392395}, {0.8, 
             1.2059350321737354`}, {1.05, 6.6722381747505395`}, {1.3, 
             1.1256838294192644`}, {1.55, 0.8523057034676521}, {1.8, 
             0.7312528231023991}, {2.05, 0.9545924791053448}, {2.3, 
             0.5024043372014447}, {2.55, 1.4045633438021035`}, {2.8, 
             0.23469114845364555`}, {2.8, 0}, {2.55, 0}, {2.3, 0}, {
             2.05, 0}, {1.8, 0}, {1.55, 0}, {1.3, 0}, {1.05, 0}, {0.8, 0}, {
             0.55, 0}, {0.3, 0}, {
             0.27551871586482135`, -6.754093068193538*^-16}}, VertexColors -> 
            None]}}, {
          Directive[
           Opacity[0.2], 
           PointSize[0.012833333333333334`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], {
           
           PolygonBox[{{0.05, -4.979529335260989}, {
             0.27551871586482135`, -6.754093068193538*^-16}, {0.05, 0}, {
             0.27551871586482135`, -6.754093068193538*^-16}}, VertexColors -> 
            None]}}}}}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], {
          
          LineBox[{{{0.05, 0.04997916927067833}, {0.3, 
           0.29552020666133955`}, {0.55, 0.5226872289306592}, {0.8, 
           0.7173560908995228}, {1.05, 0.867423225594017}, {1.3, 
           0.963558185417193}, {1.55, 0.999783764189357}, {1.8, 
           0.9738476308781951}, {2.05, 0.8873623686333755}, {2.3, 
           0.7457052121767203}, {2.55, 0.557683717391417}, {2.8, 
           0.3349881501559051}}}], Null, {}, {}}}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], {
          
          LineBox[{{{0.05, -4.979529335260989}, {0.3, 0.5405550135761364}, {
           0.55, 81.48245119392395}, {0.8, 1.2059350321737354`}, {1.05, 
           6.6722381747505395`}, {1.3, 1.1256838294192644`}, {1.55, 
           0.8523057034676521}, {1.8, 0.7312528231023991}, {2.05, 
           0.9545924791053448}, {2.3, 0.5024043372014447}, {2.55, 
           1.4045633438021035`}, {2.8, 0.23469114845364555`}}}], 
          Null, {}, {}}}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True,
      AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05]}, 
     PlotRange -> {{0, 2.8}, {-0.8510553687391338, 2.311727348314303}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Sin\"", "\"H[Cos]\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7035967185678062`*^9, 3.703596837284713*^9, {3.703596892108038*^9, 
   3.703596925752798*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"DiscretePlot", "[", 
   RowBox[{
    RowBox[{"analyticHT", "[", 
     RowBox[{"Cos", ",", "y", ",", "Infinity"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0.05", ",", "5.5", ",", ".25"}], "}"}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.703587863592993*^9}],

Cell[BoxData[
 RowBox[{"Off", "[", 
  RowBox[{
   RowBox[{"NIntegrate", "::", "slwcon"}], ",", 
   RowBox[{"NIntegrate", "::", "ncvb"}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.703581084437091*^9, 3.70358109830171*^9}, {
   3.703582998930806*^9, 3.703582999958034*^9}, 3.703595307096841*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "10"], ",", "0.9510565162951535`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "5"], ",", "0.8090169943749475`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "10"], ",", "0.5877852522924731`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "\[Pi]"}], "5"], ",", "0.30901699437494745`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "2"], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "5"], ",", 
     RowBox[{"-", "0.30901699437494745`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"7", " ", "\[Pi]"}], "10"], ",", 
     RowBox[{"-", "0.5877852522924731`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"4", " ", "\[Pi]"}], "5"], ",", 
     RowBox[{"-", "0.8090169943749475`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"9", " ", "\[Pi]"}], "10"], ",", 
     RowBox[{"-", "0.9510565162951535`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Pi]", ",", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"11", " ", "\[Pi]"}], "10"], ",", 
     RowBox[{"-", "0.9510565162951535`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"6", " ", "\[Pi]"}], "5"], ",", 
     RowBox[{"-", "0.8090169943749475`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"13", " ", "\[Pi]"}], "10"], ",", 
     RowBox[{"-", "0.5877852522924731`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"7", " ", "\[Pi]"}], "5"], ",", 
     RowBox[{"-", "0.30901699437494745`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "2"], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"8", " ", "\[Pi]"}], "5"], ",", "0.30901699437494745`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"17", " ", "\[Pi]"}], "10"], ",", "0.5877852522924731`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"9", " ", "\[Pi]"}], "5"], ",", "0.8090169943749475`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"19", " ", "\[Pi]"}], "10"], ",", "0.9510565162951535`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", "\[Pi]"}], ",", "1.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.703581100731676*^9, {3.7035816571596613`*^9, 3.703581673708165*^9}, 
   3.70358300079673*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"cosDataInter", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"x", ">", "0"}], "&&", 
     RowBox[{"x", "<", 
      RowBox[{"2", "Pi"}]}]}], ",", 
    RowBox[{
     RowBox[{"Interpolation", "[", "cosData", "]"}], "[", "x", "]"}], ",", 
    "0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7035811145022306`*^9, 3.703581123871084*^9}, {
   3.7035816895506353`*^9, 3.70358169376318*^9}, {3.7035819265443487`*^9, 
   3.703581926696395*^9}, 3.70358295197766*^9, {3.703583693363093*^9, 
   3.7035837362208014`*^9}, {3.7035838356038733`*^9, 3.703583846405493*^9}, {
   3.703584210625243*^9, 3.703584210766369*^9}, {3.7035857778047*^9, 
   3.703585785916127*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cos", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"x", ">", "0"}], "&&", 
     RowBox[{"x", "<", 
      RowBox[{"2", "Pi"}]}]}], ",", 
    RowBox[{
     RowBox[{"Interpolation", "[", "cosData", "]"}], "[", "x", "]"}], ",", 
    "0"}], "]"}]}]], "Input",
 CellChangeTimes->{3.7035875339308367`*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.703583377772883*^9, 3.703583442674912*^9}, 
   3.703587764501801*^9}],

Cell[BoxData["\"\<Assumptions\[Rule]x>0&&y>0&&x\[Element]Reals&&y\[Element]\
Reals\>\""], "Input",
 CellChangeTimes->{{3.70358490436131*^9, 3.703584906119182*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"analyticHT", "[", 
   RowBox[{"fun_", ",", "y_", ",", "upperBound_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "x"}], ")"}], "/", "Pi"}], ")"}], "*", 
      RowBox[{
       RowBox[{"fun", "[", "x", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "^", "2"}], "-", 
         RowBox[{"y", "^", "2"}]}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "upperBound"}], "}"}], ",", 
     RowBox[{"PrincipalValue", "\[Rule]", "True"}]}], "]"}], "//", 
   "N"}]}]], "Input",
 CellChangeTimes->{{3.7035872122636213`*^9, 3.703587220232609*^9}, {
   3.703587265234864*^9, 3.703587288615924*^9}, 3.703587335199621*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.703586150758357*^9, 3.703586158415409*^9}, {
   3.703586252678967*^9, 3.703586295027528*^9}, {3.7035863833545*^9, 
   3.703586431658929*^9}, {3.703586504387896*^9, 3.7035865997614927`*^9}, {
   3.703586671525302*^9, 3.703586672754443*^9}, {3.703587021078589*^9, 
   3.703587040241489*^9}, 3.703587331273095*^9, 3.703587820553331*^9}],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.703587457822825*^9, 3.7035874644440928`*^9}, 
   3.7035878532783012`*^9}],

Cell[BoxData[
 RowBox[{"-", "0.8172770289092521`"}]], "Output",
 CellChangeTimes->{3.703587466724821*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     PolygonBox[{{0.05, 1.5365579827065021`}, {0.3, 0.33865919141177064`}, {
       0.4813326655566973, 0.}, {3.093465272456238, 0.}, {3.3, 
       0.20110569864000427`}, {3.55, 0.43567555904801153`}, {3.8, 
       0.6463058620032833}, {4.05, 0.8194990959408478}, {4.3, 
       0.9441576336930824}, {4.55, 1.0122573814641573`}, {4.8, 
       1.019334708781046}, {5.05, 0.9647550485400065}, {5.3, 
       0.8517455835951009}, {5.3, 0}, {5.05, 0}, {4.8, 0}, {4.55, 0}, {
       4.3, 0}, {4.05, 0}, {3.8, 0}, {3.55, 0}, {3.3, 0}, {3.093465272456238, 
       0.}, {0.4813326655566973, 0.}, {0.3, 0}, {0.05, 0}},
      VertexColors->None]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     PolygonBox[{{0.4813326655566973, 0.}, {0.55, -0.1282439867498635}, {
       0.8, -0.44054703001471507`}, {1.05, -0.6603697902251968}, {
       1.3, -0.8021708187293821}, {1.55, -0.8702300179486608}, {
       1.8, -0.8674884421750312}, {2.05, -0.7984742470381778}, {
       2.3, -0.6703251647146652}, {2.55, -0.4929714105802781}, {
       2.8, -0.27885035940968744`}, {3.05, -0.042322732297104336`}, {
       3.093465272456238, 0.}, {3.093465272456238, 0.}, {3.05, 0}, {2.8, 0}, {
       2.55, 0}, {2.3, 0}, {2.05, 0}, {1.8, 0}, {1.55, 0}, {1.3, 0}, {
       1.05, 0}, {0.8, 0}, {0.55, 0}, {0.4813326655566973, 0.}},
      VertexColors->None]}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4lkzQWClfYjsoUt7p/6wNwaDy/b5c5/NnL7m
qj1E/qH9wZf1HT5ZB/ZD+C/t1a5P0H5jeGf/2TMg8MHeSbjz8n7Fp1D+F/tp
H9mVk1a/hPJ/2C86kTT/zY3XUP4f+9bpkvLlh17vTwMDBgczV/O7kr0voXwm
h8SQlkO+xU+hfBaHg52Tv17vuQ/lszl8le3UXX/jIpTP4dB9Vd8uePVSKJ/L
YUtk5P0re0/aQ/g8Dq7HCvdKP7oN5fM5XOmZsLBz3ROofwUcLGNYtcMsX0H5
gg59CfcFu8zeQflCDlfjTpw2MfoA5Qs7HHGLe2noD+OLOBzROvLL9T5MvahD
ylbHL/WOr+0B/3mq6Q==
     "]], {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 5.3}, {-0.8702300179486608, 1.5365579827065021`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.703587482015547*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"analyticHT", "[", 
  RowBox[{"Cos", ",", "2", ",", 
   RowBox[{"2", "Pi"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"analyticHT", "[", 
    RowBox[{"Cos", ",", "y", ",", 
     RowBox[{"2", "Pi"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0.05", ",", "5.5", ",", ".25"}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.703587296739915*^9, 3.7035873414416656`*^9}, {
  3.703587416037134*^9, 3.70358742452687*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.835679035993153`"}]], "Output",
 CellChangeTimes->{{3.7035873153887463`*^9, 3.7035873483265142`*^9}, 
   3.703587430281691*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     PolygonBox[{{0.05, 1.5221932151771629`}, {0.3, 0.32421705125862327`}, {
       0.47352920106645846`, 0.}, {3.120843328297151, 0.}, {3.3, 
       0.17239059217969083`}, {3.55, 0.4034285205941714}, {3.8, 
       0.609666642493153}, {4.05, 0.7773250146487805}, {4.3, 
       0.8948918898131738}, {4.55, 0.9537137966067087}, {4.8, 
       0.9483264780138434}, {5.05, 0.8764087237078184}, {5.3, 
       0.7381101461819626}, {5.3, 0}, {5.05, 0}, {4.8, 0}, {4.55, 0}, {
       4.3, 0}, {4.05, 0}, {3.8, 0}, {3.55, 0}, {3.3, 0}, {3.120843328297151, 
       0.}, {0.47352920106645846`, 0.}, {0.3, 0}, {0.05, 0}},
      VertexColors->None]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     PolygonBox[{{0.47352920106645846`, 0.}, {0.55, -0.14287587786523956`}, {
       0.8, -0.4554857589001668}, {1.05, -0.6757402048695363}, {
       1.3, -0.8181089943536514}, {1.55, -0.8868873442743054}, {
       1.8, -0.8850366008801903}, {2.05, -0.8171114415020524}, {
       2.3, -0.6902841051441974}, {2.55, -0.514529772569684}, {
       2.8, -0.3023447666685141}, {3.05, -0.06816783991936509}, {
       3.120843328297151, 0.}, {3.120843328297151, 0.}, {3.05, 0}, {2.8, 0}, {
       2.55, 0}, {2.3, 0}, {2.05, 0}, {1.8, 0}, {1.55, 0}, {1.3, 0}, {
       1.05, 0}, {0.8, 0}, {0.55, 0}, {0.47352920106645846`, 0.}},
      VertexColors->None]}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4lkzQWClfYbANdfnUT/sjcHgsv3itr/3f+y/
Yg+Rf2iffSRj90HPQ/sh/Jf2v90m7l2rdnf/2TMg8ME+1FLgzcr5T6H8L/bs
/1++/KT7Csr/YW86P2ZiYuIbKP+P/fZkQXeLoDf708CAwUGC69yTY6qvoHwm
h/vxghvPiT2D8lkc7mk6qLCXP4Dy2Rz0A2zvzo28DOVzOLBsF59cVLwRyudy
CEs8JvlU4Jg9hM/jsLmg7/bRizehfD4HZp74eclNj6H+FXCoet+x9cb9F1C+
oMPBBrbAL4veQPlCDqL5R09fankH5Qs7LGBSOLohAsYXcbBTOuHXxQ1TL+oQ
FRCmPXPec3sAst6nKQ==
     "]], {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 5.3}, {-0.8868873442743054, 1.5221932151771629`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7035873153887463`*^9, 3.7035873483265142`*^9}, 
   3.703587436584757*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"numericalHT", "[", 
  RowBox[{"Cos", ",", "0.00000000000005", ",", "200", ",", 
   RowBox[{"2", "Pi"}], ",", "60", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.703586816605413*^9, 3.703586825414151*^9}, {
  3.703587050411551*^9, 3.703587106788204*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  "0.8398844442188545179595227389409570261443929595145718519222157317534712749\
5593`60."}]], "Output",
 CellChangeTimes->{{3.7035868171496897`*^9, 3.703586826109824*^9}, {
  3.703587066629706*^9, 3.703587107388479*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"numericalHT", "[", 
    RowBox[{"Cos", ",", 
     RowBox[{"10", "^", 
      RowBox[{"-", "10"}]}], ",", "200", ",", 
     RowBox[{"2", "Pi"}], ",", "60", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0.05", ",", "5.5", ",", ".25"}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.70358643872412*^9, 3.703586492864078*^9}, {
  3.703586542150715*^9, 3.7035865738681107`*^9}, {3.703586676798985*^9, 
  3.7035868506111507`*^9}, {3.70358711438721*^9, 3.703587114776943*^9}, {
  3.703587155098453*^9, 3.7035871587965727`*^9}, {3.7035873668013144`*^9, 
  3.703587367784795*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","precw",
   "\"The precision of the argument function (\\!\\(\\*FractionBox[RowBox[{\\\
\"2\\\", \\\" \\\", \\\"x\\\", \\\" \\\", RowBox[{\\\"Cos\\\", \\\"[\\\", \
\\\"x\\\", \\\"]\\\"}]}], RowBox[{\\\"\[Pi]\\\", \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0025000000000000005`\\\"}], \\\"+\\\", SuperscriptBox[\\\"x\\\", \
\\\"2\\\"]}], \\\")\\\"}]}]]\\)) is less than WorkingPrecision \
(\\!\\(\\*RowBox[{\\\"60.`\\\"}]\\)).\"",2,497,430,29423918985163992039,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.703586791202248*^9, 3.703586851149632*^9}, 
   3.703587115178754*^9, 3.703587159402141*^9, 3.7035873683104467`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","precw",
   "\"The precision of the argument function (\\!\\(\\*FractionBox[RowBox[{\\\
\"2\\\", \\\" \\\", \\\"x\\\", \\\" \\\", RowBox[{\\\"Cos\\\", \\\"[\\\", \
\\\"x\\\", \\\"]\\\"}]}], RowBox[{\\\"\[Pi]\\\", \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.09`\\\"}], \\\"+\\\", \
SuperscriptBox[\\\"x\\\", \\\"2\\\"]}], \\\")\\\"}]}]]\\)) is less than \
WorkingPrecision (\\!\\(\\*RowBox[{\\\"60.`\\\"}]\\)).\"",2,497,431,
   29423918985163992039,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.703586791202248*^9, 3.703586851149632*^9}, 
   3.703587115178754*^9, 3.703587159402141*^9, 3.703587368705217*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","precw",
   "\"The precision of the argument function (\\!\\(\\*FractionBox[RowBox[{\\\
\"2\\\", \\\" \\\", \\\"x\\\", \\\" \\\", RowBox[{\\\"Cos\\\", \\\"[\\\", \
\\\"x\\\", \\\"]\\\"}]}], RowBox[{\\\"\[Pi]\\\", \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.30250000000000005`\\\"}], \
\\\"+\\\", SuperscriptBox[\\\"x\\\", \\\"2\\\"]}], \\\")\\\"}]}]]\\)) is less \
than WorkingPrecision (\\!\\(\\*RowBox[{\\\"60.`\\\"}]\\)).\"",2,497,432,
   29423918985163992039,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.703586791202248*^9, 3.703586851149632*^9}, 
   3.703587115178754*^9, 3.703587159402141*^9, 3.703587369087678*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"precw\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,497,433,29423918985163992039,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.703586791202248*^9, 3.703586851149632*^9}, 
   3.703587115178754*^9, 3.703587159402141*^9, 3.703587369112275*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","zeroregion",
   "\"Integration region \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1.55000000000000009741311699936857080835885489936551498216447`60.\
\\\", \\\",\\\", \
\\\"1.55000000000000009741311699936857080835885489936551498216448`60.\\\"}], \
\\\"}\\\"}], \\\"}\\\"}]\\) cannot be further subdivided at the specified \
working precision. NIntegrate assumes zero integral there and on any further \
indivisible regions.\"",2,497,434,29423918985163992039,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.703586791202248*^9, 3.703586851149632*^9}, 
   3.703587115178754*^9, 3.703587159402141*^9, 3.703587370194413*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","zeroregion",
   "\"Integration region \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1.80000000000000005921189464667501451535800350680451609659629`60.\
\\\", \\\",\\\", \
\\\"1.80000000000000005921189464667501451535800350680451609659629`60.\\\"}], \
\\\"}\\\"}], \\\"}\\\"}]\\) cannot be further subdivided at the specified \
working precision. NIntegrate assumes zero integral there and on any further \
indivisible regions.\"",2,497,435,29423918985163992039,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.703586791202248*^9, 3.703586851149632*^9}, 
   3.703587115178754*^9, 3.703587159402141*^9, 3.7035873704884253`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","zeroregion",
   "\"Integration region \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"2.04999999999999992201360217267192933563800817257642179958229`60.\
\\\", \\\",\\\", \
\\\"2.04999999999999992201360217267192933563800817257642179958229`60.\\\"}], \
\\\"}\\\"}], \\\"}\\\"}]\\) cannot be further subdivided at the specified \
working precision. NIntegrate assumes zero integral there and on any further \
indivisible regions.\"",2,497,436,29423918985163992039,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.703586791202248*^9, 3.703586851149632*^9}, 
   3.703587115178754*^9, 3.703587159402141*^9, 3.7035873707787952`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"zeroregion\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,497,437,29423918985163992039,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.703586791202248*^9, 3.703586851149632*^9}, 
   3.703587115178754*^9, 3.703587159402141*^9, 3.703587370800769*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     PolygonBox[{{0.05, 1.3292088010488043`}, {0.3, 0.2993109818470343}, {
       0.46106426285265006`, 9.512510593156949*^-17}, {
       3.122595910494229, -3.4567994001911734`*^-16}, {3.3, 
       0.17689346478302007`}, {3.55, 0.39972094446849393`}, {3.8, 
       0.606057414836992}, {4.05, 0.7784681471258543}, {4.3, 
       0.8956067450579569}, {4.55, 0.9534871278566271}, {4.8, 
       0.948066119592161}, {5.05, 0.8775927624974964}, {5.3, 
       0.7374533662886243}, {5.3, 0}, {5.05, 0}, {4.8, 0}, {4.55, 0}, {
       4.3, 0}, {4.05, 0}, {3.8, 0}, {3.55, 0}, {3.3, 0}, {
       3.122595910494229, -3.4567994001911734`*^-16}, {0.46106426285265006`, 
       9.512510593156949*^-17}, {0.3, 0}, {0.05, 0}},
      VertexColors->None]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     PolygonBox[{{0.46106426285265006`, 9.512510593156949*^-17}, {
       0.55, -0.16527218599209614`}, {0.8, -0.4608658918504507}, {
       1.05, -0.6697478848791018}, {1.3, -0.8204640302095518}, {
       1.55, -0.886978933973599}, {1.8, -0.884360130304753}, {
       2.05, -0.821074701264946}, {2.3, -0.6924267972253286}, {
       2.55, -0.5196802924947488}, {2.8, -0.29490978627013636`}, {
       3.05, -0.0723869566489591}, {
       3.122595910494229, -3.4567994001911734`*^-16}, {
       3.122595910494229, -3.4567994001911734`*^-16}, {3.05, 0}, {2.8, 0}, {
       2.55, 0}, {2.3, 0}, {2.05, 0}, {1.8, 0}, {1.55, 0}, {1.3, 0}, {
       1.05, 0}, {0.8, 0}, {0.55, 0}, {0.46106426285265006`, 
       9.512510593156949*^-17}},
      VertexColors->None]}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4lkzQWCl/eavC4oKXL7aG4PBZfuU8un2L9Uv
20PkH9rbKD2eslj96H4I/6V9yO7Q5Zfr7u4/ewYEPth33jssOznvKZT/xX5S
tuYJW8dXUP4P+xVcpksVk95A+X/sk4o2zl3r82Z/GhgwOBQYbCi2c3sF5TM5
GMyTs4vReAblszh4NUyZYLHwAZTP5nDa5rL32fuXoHwOB/abZbM/t2+C8rkc
Xjryvy9ccswewudx2KDLqME+9SaUz+cQrsLeeinlMdS/Ag5rnGU4zF6+gPIF
HW5bMVedX/EGyhdy8F38Mv970zsoX9hhI6Pzob4wGF/E4ZHjkSxbUZh6UYe1
MoFnzWc+twcADf2jqw==
     "]], {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 5.3}, {-0.886978933973599, 1.3292088010488043`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.703586457707932*^9, 3.70358658191546*^9}, {
   3.7035866783936577`*^9, 3.703586728134137*^9}, {3.703586759849269*^9, 
   3.703586853525259*^9}, 3.703587121100102*^9, 3.7035871668377857`*^9, 
   3.70358737419948*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cosDataInter", "[", "w", "]"}], ",", 
     RowBox[{"realCosHTnumerical", "[", "w", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "0.05", ",", "5.5", ",", ".25"}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.703585946135106*^9, 3.703585947413704*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      PolygonBox[{{0.05, 0.999010543486747}, {0.3, 0.9553700257622127}, {0.55,
         0.8523789224964108}, {0.8, 0.696548598776341}, {1.05, 
        0.49747772826407066`}, {1.3, 0.2674806753035455}, {1.55, 
        0.020788190773914795`}, {1.5709591757989714`, 0.}, {
        4.712215385524962, -5.213072661838554*^-16}, {4.8, 
        0.08747356402237472}, {5.05, 0.3312091886370967}, {5.3, 
        0.5543288140736209}, {5.3, 0}, {5.05, 0}, {4.8, 0}, {
        4.712215385524962, -5.213072661838554*^-16}, {1.5709591757989714`, 
        0.}, {1.55, 0}, {1.3, 0}, {1.05, 0}, {0.8, 0}, {0.55, 0}, {0.3, 0}, {
        0.05, 0}},
       VertexColors->None]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      PolygonBox[{{1.5709591757989714`, 0.}, {1.8, -0.22717230840438568`}, {
        2.05, -0.46096986582557253`}, {2.3, -0.6661399511690984}, {
        2.55, -0.8299766518221392}, {2.8, -0.9421621382647435}, {
        3.05, -0.995626768802847}, {3.3, -0.9872561525068837}, {
        3.55, -0.9175869999622625}, {3.8, -0.7909149941102289}, {
        4.05, -0.6149461238247161}, {4.3, -0.4007142052936761}, {
        4.55, -0.16164060178411804`}, {
        4.712215385524962, -5.213072661838554*^-16}, {
        4.712215385524962, -5.213072661838554*^-16}, {4.55, 0}, {4.3, 0}, {
        4.05, 0}, {3.8, 0}, {3.55, 0}, {3.3, 0}, {3.05, 0}, {2.8, 0}, {
        2.55, 0}, {2.3, 0}, {2.05, 0}, {1.8, 0}, {1.5709591757989714`, 0.}},
       VertexColors->None]}}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      PolygonBox[{{0.05, 1.1140524638163027`}, {0.07660432604597078, 0.}, {
        0.5212232812379961, 0.}, {0.55, 1.2168543063913033`}, {
        0.7594657515550818, 0.}, {1.0114625312860868`, 0.}, {1.05, 
        0.04291384643213614}, {1.0620526858829882`, 
        4.1982654606881807`*^-16}, {2.45977659413794, 0.}, {2.55, 
        0.33464810571945636`}, {2.6234293702147493`, 0.}, {
        3.5526171590417657`, 0.}, {3.8, 2.6309691952394685`}, {4.05, 
        0.8918285398276693}, {4.3, 1.2263089436576768`}, {4.55, 
        0.9779381095424906}, {4.8, 0.975409439741199}, {5.05, 
        1.288198474717914}, {5.164070582149612, 0.}, {5.164070582149612, 
        0.}, {5.05, 0}, {4.8, 0}, {4.55, 0}, {4.3, 0}, {4.05, 0}, {3.8, 0}, {
        3.5526171590417657`, 0.}, {2.6234293702147493`, 0.}, {2.55, 0}, {
        2.45977659413794, 0.}, {1.0620526858829882`, 
        4.1982654606881807`*^-16}, {1.05, 0}, {1.0114625312860868`, 0.}, {
        0.7594657515550818, 0.}, {0.55, 0}, {0.5212232812379961, 0.}, {
        0.05, 0}, {0.07660432604597078, 0.}},
       VertexColors->None]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      PolygonBox[{{0.07660432604597078, 0.}, {0.3, -9.354662867397904}, {
        0.5212232812379961, 0.}, {0.7594657515550818, 0.}, {
        0.8, -0.23547656077591927`}, {1.0114625312860868`, 0.}, {
        1.0620526858829882`, 4.1982654606881807`*^-16}, {
        1.3, -0.847216512243913}, {1.55, -1.1063638662562165`}, {
        1.8, -0.7628705338095783}, {2.05, -0.17836099449294107`}, {
        2.3, -0.5926281994753719}, {2.45977659413794, 0.}, {
        2.6234293702147493`, 0.}, {2.8, -0.804705618617115}, {
        3.05, -2.049999687151325}, {3.3, -2.558617736008661}, {
        3.55, -0.027834043748779624`}, {3.5526171590417657`, 0.}, {
        5.164070582149612, 0.}, {5.3, -1.535050189491479}, {5.3, 0}, {
        5.164070582149612, 0.}, {3.5526171590417657`, 0.}, {3.55, 0}, {
        3.3, 0}, {3.05, 0}, {2.8, 0}, {2.6234293702147493`, 0.}, {
        2.45977659413794, 0.}, {2.3, 0}, {2.05, 0}, {1.8, 0}, {1.55, 0}, {
        1.3, 0}, {1.0620526858829882`, 4.1982654606881807`*^-16}, {
        1.0114625312860868`, 0.}, {0.8, 0}, {0.7594657515550818, 0.}, {
        0.5212232812379961, 0.}, {0.3, 0}, {0.07660432604597078, 0.}},
       VertexColors->None]}}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4lkzQWCl/V//KV+ffH9vbwwGl+23urFrpkx6
Zw+Rf2ifWV+rucHtNZT/0j7UtMpTweuZ/dkzIPDB/lp1xOU11+5D+V/sGTP0
XdLlLkL5P+xjEwXv1XtOhfL/2Jutnlz4W/js/jQwYHC4kNx1oL3hLpTP5PBh
otRulsCnUD6Lg8xCBiPt/ldQPptDIE+OmaHaOyifw+Hhj4TVOnfeQ/lcDvfC
fprNmg7j8zgEBjdl3o95C+XzOay6ZPxNx//lfoh/BRyOKobULV77GMoXdFhw
a6Oh79KbUL6QQ5uO/tLFG45A+cIODHP2PliVsg0aXiIOLfqhbB1GV6F8UQeH
5V+P8+99aA8AMsuk5g==
      "]], {}, {}}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4lkzQWClfc4LxbUalz/aG4PBZfv9GoLx07Yq
HYDIP7SfqTHfwqbisz2E/9J+wcsD/RIq5/afPQMCH+wTSj7uPftjqT2E/8U+
hGH62VSZ11D5H/b79n2YsWrzRyj/j71ElmV5fuaL/WlgwODAEi5b3nHlGJTP
5MD15G3m+W+PoHwWB48PeY/vZ121h/DZHPyPRf9XPfASKs/hEMWQaQM05wCE
z+WQ9TtiMk8FC5TP49BgU87X3jAHqp7PQWzTpcmWPKwOEP8KOBQltDHe6XwD
9b+gg8zVGoVv8z5D+UIOH57vv+Pi/R7KF3Zo2Ftzu9cMxhdxKN/1i6Fszhco
X9RBKWrmyQn9P/YDAB70phc=
      "]], {}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 5.3}, {-3.818519505273657, 2.6309691952394685`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.70358593942731*^9, 3.7035859528827457`*^9}, {
  3.703586167944723*^9, 3.7035862241241293`*^9}, {3.7035863644122133`*^9, 
  3.703586379416819*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cosDataInter", "[", "w", "]"}], ",", 
     RowBox[{"realCosHTanalyticInf2", "[", "w", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "0.05", ",", "5.5", ",", ".25"}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7035854161322308`*^9, 3.703585420829342*^9}, {
   3.703585576570672*^9, 3.703585577524456*^9}, 3.703585657863353*^9, 
   3.703585740413249*^9}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      PolygonBox[{{0.05, 0.999010543486747}, {0.3, 0.9553700257622127}, {0.55,
         0.8523789224964108}, {0.8, 0.696548598776341}, {1.05, 
        0.49747772826407066`}, {1.3, 0.2674806753035455}, {1.55, 
        0.020788190773914795`}, {1.5709591757989714`, 0.}, {
        4.712215385524962, -5.213072661838554*^-16}, {4.8, 
        0.08747356402237472}, {5.05, 0.3312091886370967}, {5.3, 
        0.5543288140736209}, {5.3, 0}, {5.05, 0}, {4.8, 0}, {
        4.712215385524962, -5.213072661838554*^-16}, {1.5709591757989714`, 
        0.}, {1.55, 0}, {1.3, 0}, {1.05, 0}, {0.8, 0}, {0.55, 0}, {0.3, 0}, {
        0.05, 0}},
       VertexColors->None]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      PolygonBox[{{1.5709591757989714`, 0.}, {1.8, -0.22717230840438568`}, {
        2.05, -0.46096986582557253`}, {2.3, -0.6661399511690984}, {
        2.55, -0.8299766518221392}, {2.8, -0.9421621382647435}, {
        3.05, -0.995626768802847}, {3.3, -0.9872561525068837}, {
        3.55, -0.9175869999622625}, {3.8, -0.7909149941102289}, {
        4.05, -0.6149461238247161}, {4.3, -0.4007142052936761}, {
        4.55, -0.16164060178411804`}, {
        4.712215385524962, -5.213072661838554*^-16}, {
        4.712215385524962, -5.213072661838554*^-16}, {4.55, 0}, {4.3, 0}, {
        4.05, 0}, {3.8, 0}, {3.55, 0}, {3.3, 0}, {3.05, 0}, {2.8, 0}, {
        2.55, 0}, {2.3, 0}, {2.05, 0}, {1.8, 0}, {1.5709591757989714`, 0.}},
       VertexColors->None]}}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      PolygonBox[{{0.05, 1.5221932151771629`}, {0.3, 0.32421705125862327`}, {
        0.47352920106645846`, 0.}, {3.120843328297151, 0.}, {3.3, 
        0.17239059217969083`}, {3.55, 0.4034285205941714}, {3.8, 
        0.609666642493153}, {4.05, 0.7773250146487805}, {4.3, 
        0.8948918898131738}, {4.55, 0.9537137966067087}, {4.8, 
        0.9483264780138434}, {5.05, 0.8764087237078184}, {5.3, 
        0.7381101461819626}, {5.3, 0}, {5.05, 0}, {4.8, 0}, {4.55, 0}, {
        4.3, 0}, {4.05, 0}, {3.8, 0}, {3.55, 0}, {3.3, 0}, {3.120843328297151,
         0.}, {0.47352920106645846`, 0.}, {0.3, 0}, {0.05, 0}},
       VertexColors->None]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      PolygonBox[{{0.47352920106645846`, 0.}, {0.55, -0.14287587786523956`}, {
        0.8, -0.4554857589001668}, {1.05, -0.6757402048695363}, {
        1.3, -0.8181089943536514}, {1.55, -0.8868873442743054}, {
        1.8, -0.8850366008801903}, {2.05, -0.8171114415020524}, {
        2.3, -0.6902841051441974}, {2.55, -0.514529772569684}, {
        2.8, -0.3023447666685141}, {3.05, -0.06816783991936509}, {
        3.120843328297151, 0.}, {3.120843328297151, 0.}, {3.05, 0}, {
        2.8, 0}, {2.55, 0}, {2.3, 0}, {2.05, 0}, {1.8, 0}, {1.55, 0}, {
        1.3, 0}, {1.05, 0}, {0.8, 0}, {0.55, 0}, {0.47352920106645846`, 0.}},
       VertexColors->None]}}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4lkzQWCl/V//KV+ffH9vbwwGl+23urFrpkx6
Zw+Rf2ifWV+rucHtNZT/0j7UtMpTweuZ/dkzIPDB/lp1xOU11+5D+V/sGTP0
XdLlLkL5P+xjEwXv1XtOhfL/2Jutnlz4W/js/jQwYHC4kNx1oL3hLpTP5PBh
otRulsCnUD6Lg8xCBiPt/ldQPptDIE+OmaHaOyifw+Hhj4TVOnfeQ/lcDvfC
fprNmg7j8zgEBjdl3o95C+XzOay6ZPxNx//lfoh/BRyOKobULV77GMoXdFhw
a6Oh79KbUL6QQ5uO/tLFG45A+cIODHP2PliVsg0aXiIOLfqhbB1GV6F8UQeH
5V+P8+99aA8AMsuk5g==
      "]], {}, {}}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4lkzQWClfYbANdfnUT/sjcHgsv3itr/3f+y/
Yg+Rf2iffSRj90HPQ/sh/Jf2v90m7l2rdnf/2TMg8ME+1FLgzcr5T6H8L/bs
/1++/KT7Csr/YW86P2ZiYuIbKP+P/fZkQXeLoDf708CAwUGC69yTY6qvoHwm
h/vxghvPiT2D8lkc7mk6qLCXP4Dy2Rz0A2zvzo28DOVzOLBsF59cVLwRyudy
CEs8JvlU4Jg9hM/jsLmg7/bRizehfD4HZp74eclNj6H+FXCoet+x9cb9F1C+
oMPBBrbAL4veQPlCDqL5R09fankH5Qs7LGBSOLohAsYXcbBTOuHXxQ1TL+oQ
FRCmPXPec3sAst6nKQ==
      "]], {}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 5.3}, {-0.995626768802847, 1.5221932151771629`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7035854376415873`*^9, 3.70358550250007*^9, 
  3.703585594434537*^9, 3.703585673801701*^9, 3.703585756375228*^9, 
  3.703585811669545*^9, 3.70358585945013*^9, 3.703586214819767*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "w", "]"}], ",", 
     RowBox[{"cosDataInter", "[", "w", "]"}], ",", 
     RowBox[{"realCosHT", "[", "w", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "0.05", ",", "5.5", ",", ".25"}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{3.703584457476406*^9, 3.7035848225676394`*^9}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      PolygonBox[{{0.05, 0.04997916927067833}, {0.3, 0.29552020666133955`}, {
        0.55, 0.5226872289306592}, {0.8, 0.7173560908995228}, {1.05, 
        0.867423225594017}, {1.3, 0.963558185417193}, {1.55, 
        0.999783764189357}, {1.8, 0.9738476308781951}, {2.05, 
        0.8873623686333755}, {2.3, 0.7457052121767203}, {2.55, 
        0.557683717391417}, {2.8, 0.3349881501559051}, {3.05, 
        0.0914646422324372}, {3.1417544628792546`, 0.}, {3.1417544628792546`, 
        0.}, {3.05, 0}, {2.8, 0}, {2.55, 0}, {2.3, 0}, {2.05, 0}, {1.8, 0}, {
        1.55, 0}, {1.3, 0}, {1.05, 0}, {0.8, 0}, {0.55, 0}, {0.3, 0}, {
        0.05, 0}},
       VertexColors->None]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      PolygonBox[{{3.1417544628792546`, 0.}, {3.3, -0.1577456941432482}, {
        3.55, -0.3971481672859598}, {3.8, -0.6118578909427189}, {
        4.05, -0.788525254426195}, {4.3, -0.9161659367494549}, {
        4.55, -0.9868438585032365}, {4.8, -0.9961646088358407}, {
        5.05, -0.9435486686359066}, {5.3, -0.8322674422239013}, {5.3, 0}, {
        5.05, 0}, {4.8, 0}, {4.55, 0}, {4.3, 0}, {4.05, 0}, {3.8, 0}, {
        3.55, 0}, {3.3, 0}, {3.1417544628792546`, 0.}},
       VertexColors->None]}}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      PolygonBox[{{0.05, 0.999010543486747}, {0.3, 0.9553700257622127}, {0.55,
         0.8523789224964108}, {0.8, 0.696548598776341}, {1.05, 
        0.49747772826407066`}, {1.3, 0.2674806753035455}, {1.55, 
        0.020788190773914795`}, {1.5709591757989714`, 0.}, {
        4.712215385524962, -5.213072661838554*^-16}, {4.8, 
        0.08747356402237472}, {5.05, 0.3312091886370967}, {5.3, 
        0.5543288140736209}, {5.3, 0}, {5.05, 0}, {4.8, 0}, {
        4.712215385524962, -5.213072661838554*^-16}, {1.5709591757989714`, 
        0.}, {1.55, 0}, {1.3, 0}, {1.05, 0}, {0.8, 0}, {0.55, 0}, {0.3, 0}, {
        0.05, 0}},
       VertexColors->None]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      PolygonBox[{{1.5709591757989714`, 0.}, {1.8, -0.22717230840438568`}, {
        2.05, -0.46096986582557253`}, {2.3, -0.6661399511690984}, {
        2.55, -0.8299766518221392}, {2.8, -0.9421621382647435}, {
        3.05, -0.995626768802847}, {3.3, -0.9872561525068837}, {
        3.55, -0.9175869999622625}, {3.8, -0.7909149941102289}, {
        4.05, -0.6149461238247161}, {4.3, -0.4007142052936761}, {
        4.55, -0.16164060178411804`}, {
        4.712215385524962, -5.213072661838554*^-16}, {
        4.712215385524962, -5.213072661838554*^-16}, {4.55, 0}, {4.3, 0}, {
        4.05, 0}, {3.8, 0}, {3.55, 0}, {3.3, 0}, {3.05, 0}, {2.8, 0}, {
        2.55, 0}, {2.3, 0}, {2.05, 0}, {1.8, 0}, {1.5709591757989714`, 0.}},
       VertexColors->None]}}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      PolygonBox[{{0.05, 3.2178372168118012`}, {0.3, 0.016051048973586012`}, {
        0.31930117119971024`, 2.948020493703436*^-17}, {0.9661027221064449, 
        0.}, {1.05, 1.3594409711133582`}, {1.2425127438183767`, 0.}, {
        1.7575935017716935`, 0.}, {1.8, 0.07373578367582952}, {
        1.808971431932485, 0.}, {3.8592992437866784`, 0.}, {4.05, 
        7.576621748721879}, {4.3, 0.4131318097055834}, {4.449213236181927, 
        0.}, {4.449213236181927, 0.}, {4.3, 0}, {4.05, 0}, {
        3.8592992437866784`, 0.}, {1.808971431932485, 0.}, {1.8, 0}, {
        1.7575935017716935`, 0.}, {1.2425127438183767`, 0.}, {1.05, 0}, {
        0.9661027221064449, 0.}, {0.31930117119971024`, 
        2.948020493703436*^-17}, {0.3, 0}, {0.05, 0}},
       VertexColors->None]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      PolygonBox[{{0.31930117119971024`, 2.948020493703436*^-17}, {
        0.55, -0.19185147683048207`}, {0.8, -2.6914680847148604`}, {
        0.9661027221064449, 0.}, {1.2425127438183767`, 0.}, {
        1.3, -0.40594991178307904`}, {1.55, -0.36096047017925986`}, {
        1.7575935017716935`, 0.}, {1.808971431932485, 0.}, {
        2.05, -1.9810026413251285`}, {2.3, -1.0241468303706789`}, {
        2.55, -0.9652416244885559}, {2.8, -1.0334767564298037`}, {
        3.05, -0.8959851009955918}, {3.3, -0.5479258369685243}, {
        3.55, -1.854465128079375}, {3.8, -2.355984051024571}, {
        3.8592992437866784`, 0.}, {4.449213236181927, 0.}, {
        4.55, -0.2790517731266306}, {4.8, -0.8687158802245212}, {
        5.05, -1.7016123756009147`}, {5.3, -0.996044224801897}, {5.3, 0}, {
        5.05, 0}, {4.8, 0}, {4.55, 0}, {4.449213236181927, 0.}, {
        3.8592992437866784`, 0.}, {3.8, 0}, {3.55, 0}, {3.3, 0}, {3.05, 0}, {
        2.8, 0}, {2.55, 0}, {2.3, 0}, {2.05, 0}, {1.808971431932485, 0.}, {
        1.7575935017716935`, 0.}, {1.55, 0}, {1.3, 0}, {1.2425127438183767`, 
        0.}, {0.9661027221064449, 0.}, {0.8, 0}, {0.55, 0}, {
        0.31930117119971024`, 2.948020493703436*^-17}},
       VertexColors->None]}}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4lkzQWClvU3K/0X3pq20NwaDy/bGu3ZNPfvy
kj1E/qH9lQzPibd2PoDyX9qf/bf/0JQvz+zPngGBD/YHP5lFvTv4Gsr/Yu8t
d/Rn+dV3UP4P+4xqj1arf++h/D/2H0T3Nh7SfG+fBgYMDn/T5Y+4pr6B8pkc
VPQjdC/eeQ7lszgsXfattfvGQyifzeHE01jlooKrUD6Hw773CvxWWduhfC6H
dp7tp5gMj+yH8HkcLph2qT7Iugnl8znMPfDmf9iUx/sh/hVw0J5SFTDT+iWU
L+ig2sVoZR34FsoXcuj9EjDJcsp7KF/YgcGOZ9aUBzC+iMNJc/tfPYbvoHxR
B2uhPSHvF77aDwA8n6sa
      "]], {}, {}}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4lkzQWCl/V//KV+ffH9vbwwGl+23urFrpkx6
Zw+Rf2ifWV+rucHtNZT/0j7UtMpTweuZ/dkzIPDB/lp1xOU11+5D+V/sGTP0
XdLlLkL5P+xjEwXv1XtOhfL/2Jutnlz4W/js/jQwYHC4kNx1oL3hLpTP5PBh
otRulsCnUD6Lg8xCBiPt/ldQPptDIE+OmaHaOyifw+Hhj4TVOnfeQ/lcDvfC
fprNmg7j8zgEBjdl3o95C+XzOay6ZPxNx//lfoh/BRyOKobULV77GMoXdFhw
a6Oh79KbUL6QQ5uO/tLFG45A+cIODHP2PliVsg0aXiIOLfqhbB1GV6F8UQeH
5V+P8+99aA8AMsuk5g==
      "]], {}, {}}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4lkzQWClfX15QIHiPk4HYzC4bP/42sKV6/Mn
2EPkH9oX94VdndZ3Yj+E/9L+1fyAbIUO1gNnz4DAB/uDyX90XA98tYfwv9gf
4tgdJvr75n4I/4f98tQlH39KXofy/9iLHsjTjnywyT4NDBgcNOtjLutv+r8f
wmdy+PA8++TzpA9QPosDY5BtutPjd1A+m8PWNQlv5Dph8hwO88P8P71Y/QbK
53Jwsjx7eHbHQyifx0HmmNeCx6v/Qvl8DhOTOrT4bjIdgPhXwOHzhuZ3pX5y
UP8LOky4/TztQMEtewhfyCGd/97337cv7ofwhR2OTHhk13rmNZQv4vDj9K+n
Zy1/Q/miDjqzYpRn3H+/HwCWMq+2
      "]], {}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 5.3}, {-2.6914680847148604`, 3.3445288181966553`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.703584462792878*^9, 3.7035845145749598`*^9, 
  3.703584606201352*^9, 3.703584823523695*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"DiscretePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sin", "[", "w", "]"}], ",", 
      RowBox[{"cosDataInter", "[", "w", "]"}], ",", 
      RowBox[{"realCosHT", "[", "w", "]"}], ",", 
      RowBox[{"realCosHTanalytic", "[", "w", "]"}], ",", 
      RowBox[{"realCosHTanalyticInf", "[", "w", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"w", ",", "0.05", ",", "5.5", ",", ".25"}], "}"}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.703584154862721*^9, 3.70358418177908*^9}, {
   3.703584222009243*^9, 3.7035842804666033`*^9}, {3.7035843104688807`*^9, 
   3.7035843199494*^9}, 3.703584835097042*^9}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      PolygonBox[{{0.05, 0.04997916927067833}, {0.3, 0.29552020666133955`}, {
        0.55, 0.5226872289306592}, {0.8, 0.7173560908995228}, {1.05, 
        0.867423225594017}, {1.3, 0.963558185417193}, {1.55, 
        0.999783764189357}, {1.8, 0.9738476308781951}, {2.05, 
        0.8873623686333755}, {2.3, 0.7457052121767203}, {2.55, 
        0.557683717391417}, {2.8, 0.3349881501559051}, {3.05, 
        0.0914646422324372}, {3.1417544628792546`, 0.}, {3.1417544628792546`, 
        0.}, {3.05, 0}, {2.8, 0}, {2.55, 0}, {2.3, 0}, {2.05, 0}, {1.8, 0}, {
        1.55, 0}, {1.3, 0}, {1.05, 0}, {0.8, 0}, {0.55, 0}, {0.3, 0}, {
        0.05, 0}},
       VertexColors->None]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      PolygonBox[{{3.1417544628792546`, 0.}, {3.3, -0.1577456941432482}, {
        3.55, -0.3971481672859598}, {3.8, -0.6118578909427189}, {
        4.05, -0.788525254426195}, {4.3, -0.9161659367494549}, {
        4.55, -0.9868438585032365}, {4.8, -0.9961646088358407}, {
        5.05, -0.9435486686359066}, {5.3, -0.8322674422239013}, {5.3, 0}, {
        5.05, 0}, {4.8, 0}, {4.55, 0}, {4.3, 0}, {4.05, 0}, {3.8, 0}, {
        3.55, 0}, {3.3, 0}, {3.1417544628792546`, 0.}},
       VertexColors->None]}}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      PolygonBox[{{0.05, 0.999010543486747}, {0.3, 0.9553700257622127}, {0.55,
         0.8523789224964108}, {0.8, 0.696548598776341}, {1.05, 
        0.49747772826407066`}, {1.3, 0.2674806753035455}, {1.55, 
        0.020788190773914795`}, {1.5709591757989714`, 0.}, {
        4.712215385524962, -5.213072661838554*^-16}, {4.8, 
        0.08747356402237472}, {5.05, 0.3312091886370967}, {5.3, 
        0.5543288140736209}, {5.3, 0}, {5.05, 0}, {4.8, 0}, {
        4.712215385524962, -5.213072661838554*^-16}, {1.5709591757989714`, 
        0.}, {1.55, 0}, {1.3, 0}, {1.05, 0}, {0.8, 0}, {0.55, 0}, {0.3, 0}, {
        0.05, 0}},
       VertexColors->None]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      PolygonBox[{{1.5709591757989714`, 0.}, {1.8, -0.22717230840438568`}, {
        2.05, -0.46096986582557253`}, {2.3, -0.6661399511690984}, {
        2.55, -0.8299766518221392}, {2.8, -0.9421621382647435}, {
        3.05, -0.995626768802847}, {3.3, -0.9872561525068837}, {
        3.55, -0.9175869999622625}, {3.8, -0.7909149941102289}, {
        4.05, -0.6149461238247161}, {4.3, -0.4007142052936761}, {
        4.55, -0.16164060178411804`}, {
        4.712215385524962, -5.213072661838554*^-16}, {
        4.712215385524962, -5.213072661838554*^-16}, {4.55, 0}, {4.3, 0}, {
        4.05, 0}, {3.8, 0}, {3.55, 0}, {3.3, 0}, {3.05, 0}, {2.8, 0}, {
        2.55, 0}, {2.3, 0}, {2.05, 0}, {1.8, 0}, {1.5709591757989714`, 0.}},
       VertexColors->None]}}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      PolygonBox[{{0.05, 3.2178372168118012`}, {0.3, 0.016051048973586012`}, {
        0.31930117119971024`, 2.948020493703436*^-17}, {0.9661027221064449, 
        0.}, {1.05, 1.3594409711133582`}, {1.2425127438183767`, 0.}, {
        1.7575935017716935`, 0.}, {1.8, 0.07373578367582952}, {
        1.808971431932485, 0.}, {3.8592992437866784`, 0.}, {4.05, 
        7.576621748721879}, {4.3, 0.4131318097055834}, {4.449213236181927, 
        0.}, {4.449213236181927, 0.}, {4.3, 0}, {4.05, 0}, {
        3.8592992437866784`, 0.}, {1.808971431932485, 0.}, {1.8, 0}, {
        1.7575935017716935`, 0.}, {1.2425127438183767`, 0.}, {1.05, 0}, {
        0.9661027221064449, 0.}, {0.31930117119971024`, 
        2.948020493703436*^-17}, {0.3, 0}, {0.05, 0}},
       VertexColors->None]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      PolygonBox[{{0.31930117119971024`, 2.948020493703436*^-17}, {
        0.55, -0.19185147683048207`}, {0.8, -2.6914680847148604`}, {
        0.9661027221064449, 0.}, {1.2425127438183767`, 0.}, {
        1.3, -0.40594991178307904`}, {1.55, -0.36096047017925986`}, {
        1.7575935017716935`, 0.}, {1.808971431932485, 0.}, {
        2.05, -1.9810026413251285`}, {2.3, -1.0241468303706789`}, {
        2.55, -0.9652416244885559}, {2.8, -1.0334767564298037`}, {
        3.05, -0.8959851009955918}, {3.3, -0.5479258369685243}, {
        3.55, -1.854465128079375}, {3.8, -2.355984051024571}, {
        3.8592992437866784`, 0.}, {4.449213236181927, 0.}, {
        4.55, -0.2790517731266306}, {4.8, -0.8687158802245212}, {
        5.05, -1.7016123756009147`}, {5.3, -0.996044224801897}, {5.3, 0}, {
        5.05, 0}, {4.8, 0}, {4.55, 0}, {4.449213236181927, 0.}, {
        3.8592992437866784`, 0.}, {3.8, 0}, {3.55, 0}, {3.3, 0}, {3.05, 0}, {
        2.8, 0}, {2.55, 0}, {2.3, 0}, {2.05, 0}, {1.808971431932485, 0.}, {
        1.7575935017716935`, 0.}, {1.55, 0}, {1.3, 0}, {1.2425127438183767`, 
        0.}, {0.9661027221064449, 0.}, {0.8, 0}, {0.55, 0}, {
        0.31930117119971024`, 2.948020493703436*^-17}},
       VertexColors->None]}}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      PolygonBox[{{0.05, 1.7500117066199012`}, {0.3, 0.5814478026147905}, {
        0.55, 0.15010397828180433`}, {0.6793299857006654, 0.}, {
        5.071671250120959, 0.}, {5.3, 0.14522064832363535`}, {5.3, 0}, {
        5.071671250120959, 0.}, {0.6793299857006654, 0.}, {0.55, 0}, {
        0.3, 0}, {0.05, 0}},
       VertexColors->None]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      PolygonBox[{{0.6793299857006654, 0.}, {0.8, -0.14005297462550628`}, {
        1.05, -0.36365482499796603`}, {1.3, -0.5434151679494322}, {
        1.55, -0.6880550685000042}, {1.8, -0.8012203854139741}, {
        2.05, -0.884509670089657}, {2.3, -0.9387421094820302}, {
        2.55, -0.9645649561228431}, {2.8, -0.9627691624748259}, {
        3.05, -0.9344576192523658}, {3.3, -0.881129293476307}, {
        3.55, -0.804709426829689}, {3.8, -0.7075408777489216}, {
        4.05, -0.5923437711180173}, {4.3, -0.46214504393782563`}, {
        4.55, -0.32017295909385524`}, {4.8, -0.16969945065589934`}, {
        5.05, -0.013783253288149508`}, {5.071671250120959, 0.}, {
        5.071671250120959, 0.}, {5.05, 0}, {4.8, 0}, {4.55, 0}, {4.3, 0}, {
        4.05, 0}, {3.8, 0}, {3.55, 0}, {3.3, 0}, {3.05, 0}, {2.8, 0}, {
        2.55, 0}, {2.3, 0}, {2.05, 0}, {1.8, 0}, {1.55, 0}, {1.3, 0}, {
        1.05, 0}, {0.8, 0}, {0.6793299857006654, 0.}},
       VertexColors->None]}}, 
    {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      PolygonBox[{{0.05, 1.8341409086621652`}, {0.3, 0.6656456984085153}, {
        0.55, 0.234468726134087}, {0.7522035795371759, 0.}, {
        4.923153777752509, 0.}, {5.05, 0.07757442373134123}, {5.3, 
        0.23011386755139698`}, {5.3, 0}, {5.05, 0}, {4.923153777752509, 0.}, {
        0.7522035795371759, 0.}, {0.55, 0}, {0.3, 0}, {0.05, 0}},
       VertexColors->None]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      PolygonBox[{{0.7522035795371759, 0.}, {0.8, -0.05542318214810446}, {
        1.05, -0.2786618228080163}, {1.3, -0.4579610032638518}, {
        1.55, -0.6020423774295706}, {1.8, -0.7145530563531413}, {
        2.05, -0.7970939300282531}, {2.3, -0.8504882330936918}, {
        2.55, -0.8753898971352271}, {2.8, -0.872600565019496}, {
        3.05, -0.8432399231656613}, {3.3, -0.7888330730588018}, {
        3.55, -0.7113458300806353}, {3.8, -0.6131843202569716}, {
        4.05, -0.49716841032182735`}, {4.3, -0.36648514562427026`}, {
        4.55, -0.22462667355692276`}, {4.8, -0.07531626224428141}, {
        4.923153777752509, 0.}, {4.923153777752509, 0.}, {4.8, 0}, {
        4.55, 0}, {4.3, 0}, {4.05, 0}, {3.8, 0}, {3.55, 0}, {3.3, 0}, {
        3.05, 0}, {2.8, 0}, {2.55, 0}, {2.3, 0}, {2.05, 0}, {1.8, 0}, {
        1.55, 0}, {1.3, 0}, {1.05, 0}, {0.8, 0}, {0.7522035795371759, 0.}},
       VertexColors->None]}}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4lkzQWClvU3K/0X3pq20NwaDy/bGu3ZNPfvy
kj1E/qH9lQzPibd2PoDyX9qf/bf/0JQvz+zPngGBD/YHP5lFvTv4Gsr/Yu8t
d/Rn+dV3UP4P+4xqj1arf++h/D/2H0T3Nh7SfG+fBgYMDn/T5Y+4pr6B8pkc
VPQjdC/eeQ7lszgsXfattfvGQyifzeHE01jlooKrUD6Hw773CvxWWduhfC6H
dp7tp5gMj+yH8HkcLph2qT7Iugnl8znMPfDmf9iUx/sh/hVw0J5SFTDT+iWU
L+ig2sVoZR34FsoXcuj9EjDJcsp7KF/YgcGOZ9aUBzC+iMNJc/tfPYbvoHxR
B2uhPSHvF77aDwA8n6sa
      "]], {}, {}}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4lkzQWCl/V//KV+ffH9vbwwGl+23urFrpkx6
Zw+Rf2ifWV+rucHtNZT/0j7UtMpTweuZ/dkzIPDB/lp1xOU11+5D+V/sGTP0
XdLlLkL5P+xjEwXv1XtOhfL/2Jutnlz4W/js/jQwYHC4kNx1oL3hLpTP5PBh
otRulsCnUD6Lg8xCBiPt/ldQPptDIE+OmaHaOyifw+Hhj4TVOnfeQ/lcDvfC
fprNmg7j8zgEBjdl3o95C+XzOay6ZPxNx//lfoh/BRyOKobULV77GMoXdFhw
a6Oh79KbUL6QQ5uO/tLFG45A+cIODHP2PliVsg0aXiIOLfqhbB1GV6F8UQeH
5V+P8+99aA8AMsuk5g==
      "]], {}, {}}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4lkzQWClfX15QIHiPk4HYzC4bP/42sKV6/Mn
2EPkH9oX94VdndZ3Yj+E/9L+1fyAbIUO1gNnz4DAB/uDyX90XA98tYfwv9gf
4tgdJvr75n4I/4f98tQlH39KXofy/9iLHsjTjnywyT4NDBgcNOtjLutv+r8f
wmdy+PA8++TzpA9QPosDY5BtutPjd1A+m8PWNQlv5Dph8hwO88P8P71Y/QbK
53Jwsjx7eHbHQyifx0HmmNeCx6v/Qvl8DhOTOrT4bjIdgPhXwOHzhuZ3pX5y
UP8LOky4/TztQMEtewhfyCGd/97337cv7ofwhR2OTHhk13rmNZQv4vDj9K+n
Zy1/Q/miDjqzYpRn3H+/HwCWMq+2
      "]], {}, {}}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4lkzQWClvePpCjcehj/2xmBw2b7jh2COxexH
9hD5h/Y3lO/kzTY7DOW/tLddd6fB8e3B/WfPgMAHe+52ycdybteh/C/2X4+f
N1mR/BDK/2H/YZ+iQA/LMyj/j/2yXezvZyx+uT8NDBgc2v84WD73fQPlMzlc
9Ct+osP1DspncWDzWhu8/S6Mz+aQu9zXjfE8jM/hEP7bdZXw87dQPpcD54sE
fjMjmHk8Dk1tD37rHoDZx+dwqyLgiM6SZ/sh/hVwcJKb96bqyyMoX9BBRSfv
3InJd6F8IQe9k+I7t9VegfKFHQzXRWtv23EUyhdxWGp+/UOKVQ+UL+pwoWGB
+PRph+wBnbCqbw==
      "]], {}, {}}, 
    {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4lkzQWClPVu0vvKSiL/2xmBw2X5Zuo7pD5+n
9hD5h/YrFcKthZjPQfkv7X0SOlJzE9bsP3sGBD7YX1v1LHXG1YtQ/hf7MJXv
q6z970L5P+y5t1snvHN+DOX/sRdI5Yyfd/fZ/jQwYHCo+q6peLrxJZTP5LBn
aYSksflrKJ/Fwdgqb40h8xson83hb5Q6a8QbmDyHw55NU70u/X4F5XM5rPON
vC1nBzOPx0H5S1dIxGGYfXwOF/psd5rMf7wf4l8Bh74Pu4tnX7wP5Qs6mLns
lqkruQ7lCzlU28bJTDxwBsoXdjhqZmT81n0zlC/icHXhuzuvbm+Ghp+og+Wi
fezxJWftAbIMpqg=
      "]], {}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 5.3}, {-2.6914680847148604`, 2.7622025351274457`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.703584159330372*^9, 3.703584178313848*^9}, {
   3.703584219321517*^9, 3.703584288422493*^9}, 3.703584361749423*^9, 
   3.703584573452647*^9, 3.703584653051077*^9, 3.703584862669506*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"cosDataHT", "[", "w", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "0.5", ",", "5.5", ",", ".25"}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{3.703584058639822*^9, 3.703584336462056*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     PolygonBox[{{0.6783219857582952, 0.}, {0.75, 0.0885830016751632}, {1., 
       0.3228488200897777}, {1.25, 0.5103998818894333}, {1.5, 
       0.6616259541240536}, {1.75, 0.780914875193261}, {2., 
       0.8700644279755065}, {2.25, 0.9300677695683846}, {2.5, 
       0.9614892616869758}, {2.75, 0.9651612214797395}, {3., 
       0.9420277261318142}, {3.25, 0.8935895770425467}, {3.5, 
       0.8216051120498947}, {3.75, 0.7284102639762883}, {4., 
       0.6165873352575424}, {4.25, 0.4891655121246499}, {4.5, 
       0.3492970782825283}, {4.75, 0.20029454103003322`}, {5., 
       0.045266873050600634`}, {5.071403233534696, 0.}, {5.071403233534696, 
       0.}, {5., 0}, {4.75, 0}, {4.5, 0}, {4.25, 0}, {4., 0}, {3.75, 0}, {
       3.5, 0}, {3.25, 0}, {3., 0}, {2.75, 0}, {2.5, 0}, {2.25, 0}, {2., 0}, {
       1.75, 0}, {1.5, 0}, {1.25, 0}, {1., 0}, {0.75, 0}, {0.6783219857582952,
        0.}},
      VertexColors->None]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     PolygonBox[{{0.5, -0.2203785488515204}, {0.6783219857582952, 0.}, {
       5.071403233534696, 0.}, {5.25, -0.11322340396397285`}, {
       5.5, -0.27414927447946863`}, {5.5, 0}, {5.25, 0}, {5.071403233534696, 
       0.}, {0.5, 0}, {0.6783219857582952, 0.}},
      VertexColors->None]}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigIEH9u+D2J1iTc/sh/Bf2E9Q0VVPWLvNHsL/
YG8776tE38orUP4X+12ywkpGoQ+g/B/2hjtTDLl0nkL5f+zr3W0NHf++gPIZ
HP5pfYqaeP01lM/kINWyulr28Fson8Xh9aUzCq1H3kH5bA773xmfnPkIxudw
ENEqDRFXhfG5HH6a6Wl7zngD5fM4MCadPzvN6xWUz+cgqLWbS9n/OZQv4HDs
EWOs6O7HUL6gQy2z1d0av/tQvpDDti+fFR9FXYPyhR0EvZYmOyw+CeWLOAil
bDCz0F0O5Ys6lBzRajT9swcaXmIOrxXZ01Z2X9wPAJJ/XJQ=
     "]], {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 5.5}, {-0.27414927447946863`, 0.9651612214797395}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.703584059679112*^9, 3.703584364092792*^9}]
}, Open  ]],

Cell[BoxData["realCosHTanalyticInf"], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"realCosHTanalytic", "[", "w", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "0", ",", "5.5", ",", ".25"}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.7035840815117197`*^9, {3.703584118624774*^9, 3.7035841191523647`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     PolygonBox[{{0.678413130250749, 0.}, {0.75, 0.08853152766227235}, {1., 
       0.32287297712563007`}, {1.25, 0.5104493604201729}, {1.5, 
       0.6617206646869239}, {1.75, 0.7810120176440621}, {2., 
       0.870197399152766}, {2.25, 0.9301897275148542}, {2.5, 
       0.9616389193689786}, {2.75, 0.965290231457255}, {3., 
       0.9421753134134379}, {3.25, 0.89371005776421}, {3.5, 
       0.8217340422534665}, {3.75, 0.7285088723892044}, {4., 
       0.616683871409725}, {4.25, 0.4892317905295337}, {4.5, 
       0.34935116787670667`}, {4.75, 0.20032148387160942`}, {5., 
       0.045272631716248866`}, {5.0714025365476925`, 0.}, {
       5.0714025365476925`, 0.}, {5., 0}, {4.75, 0}, {4.5, 0}, {4.25, 0}, {
       4., 0}, {3.75, 0}, {3.5, 0}, {3.25, 0}, {3., 0}, {2.75, 0}, {2.5, 0}, {
       2.25, 0}, {2., 0}, {1.75, 0}, {1.5, 0}, {1.25, 0}, {1., 0}, {
       0.75, 0}, {0.678413130250749, 0.}},
      VertexColors->None]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     PolygonBox[{{0., -228.9510409625228}, {0.25, -0.7050104029669698}, {
       0.5, -0.22064363243473237`}, {0.678413130250749, 0.}, {
       5.0714025365476925`, 0.}, {5.25, -0.11323935506033214`}, {
       5.5, -0.2741941816508634}, {5.5, 0}, {5.25, 0}, {5.0714025365476925`, 
       0.}, {0.678413130250749, 0.}, {0.5, 0}, {0.25, 0}, {0., 0}},
      VertexColors->None]}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGZiQADlZyVv8+blHIDwLtg7Lmf6Vdj/bD+E/8A+
O2bDBx67M1D+C/sXBT/7GVZts4fwP9hbCiVmf155Bcr/Yr925oqnM0MfQPk/
7L/H7r1wQecplP/HXprP6BXPvxdQPoPD8Tm+5ituvIbymRweckfYyx55C+Wz
OJSyrPi97+g7KJ/N4bLVi7AVj2F8Dge/Tceu+6jB+FwOjc3HrrrOfAPl8zh8
W7jeYKn3Kyifz8HIdse1j/7PoXwBB8O5pRfu734M5Qs6OFnK357kfx/KF3KQ
TzFjOBp9DcoXdlgh9jVNaclJKF/EoVnIofCn7nIoX9Rh04ZZco5/90DDS8yh
K3PPgdSei/sB8BVxYw==
     "]], {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 5.5}, {-1.6236634742971454`, 0.965290231457255}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.703584092024283*^9, 3.703584127427903*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.703584078499442*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"epsilon1", ",", "w"}], "}"}], "=", 
   RowBox[{"ToExpression", "@", 
    RowBox[{
    "Import", "[", "\"\<http://pastebin.com/raw.php?i=Z08GwMa8\>\"", 
     "]"}]}]}], ";"}], "\n", 
 RowBox[{"f", "=", 
  RowBox[{"Interpolation", "[", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flatten", "[", "w", "]"}], ",", 
      RowBox[{"Flatten", "[", "epsilon1", "]"}]}], "}"}], "]"}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"epsilon2", "[", "w_", "]"}], ":=", 
  RowBox[{
   RowBox[{"epsilon2", "[", "w", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"2", "/", "Pi"}], " ", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"a", " ", 
        RowBox[{
         RowBox[{"f", "[", "a", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", "^", "2"}], "-", 
           RowBox[{"w", "^", "2"}]}], ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "0", ",", "5.5793"}], "}"}], ",", 
       RowBox[{"Method", "\[Rule]", "\"\<PrincipalValue\>\""}], ",", 
       RowBox[{"Exclusions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a", "^", "2"}], "-", 
            RowBox[{"w", "^", "2"}]}], ")"}], "\[Equal]", "0"}], "}"}]}]}], 
      "]"}]}], "//", "Quiet"}]}]}], "\n", 
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"epsilon2", "[", "w", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "0.5", ",", "5.5", ",", ".25"}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7035839176176662`*^9, 3.703583917624305*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{{{}, {}, {
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                   LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAfYLHmXBieT70Isrdo6gtQHfN4pOu
SLc/eUpdu2erKUDwdylmXkPIP+npiHSDtClA5fd5ESQG0j96Rpoz4MIpQD+z
SeoBzdc/uOhCeYnWKUA9hsYROBHeP3zCmV1H8ilAR0bGxC/14T+9DkM0bhIq
QEHV/6dvIOU/+tNJ6Fw8KkDyo24I5DzoP1fVW2wXbSpATQwCEdEj6z/ibsRa
p6EqQHkA7EBqSe4/4l0H3vbiKkAnR30MvpzwP6+oxDU7KCtA7S0fN2EN8j9K
F16rpHQrQJxabHVanfM/QJ1/683RK0Ag1MsHkBL1P+f1i3BRMyxAjZPWrRun
9j8w2sMEsaksQNXye5JBNPg/dXDac0AsLUDynjPLo6b5P6qus2BWtC1A+JCW
F1w4+z+/AP1En1kuQNLPC7hQr/w/kowm4r4GL0CVVCxsm0X+PxRCIN0A2i9A
NHnnXoDU/z9No+Z0kmIwQFN12tJQpABAnd5Ins/eMEAB0RaADG4BQFytq71U
eDFAGVNcV2YqAkDG1y4KvhwyQB8l700N4wJAvtjeu9HVMkAZmldOX6sDQANu
/2FUvzNAfTXJeE9mBECnudXBTr80QNZzEK3qMAVAPSCxWjQJNkAdAqUA0/cF
QLutlNLRkDdAzrZCflmxBkB6StEd0Eo5QHMOtgWLegdAuZO6hGSPO0CDjDK3
WjYIQO2FhaT5CT5AgFr8h3fuCEA95DYQBzpAQHLLm2I/tglAe5ar6N6VQEDO
YkRnpXAKQJA/ZzpCADxAH53CdbY6C0BeRC5ld9sxQNr9Sa5l9wtAN+fAqGQP
KECDrh4GYrAMQEPMDROp+CRAIALJZwl5DUBUlrzvZ1shQCd8fPNONA5ARoom
6YZ/HEAjmQWJP/8OQPxZ8PUPSRlADQbcPX3GD0Cf4zbXCOkWQLDMXY4sQBBA
8Nrothz4EEDVZ7gC8KQQQNnRWt6RDgHAL5YXjAIDEUC8F3CmMA4qwIBsHaU7
XxFAWg8KnYHzMsBLFA5DSsMRQNDe4dtuoDLAS08D9qcgEkDhvwUSVzQwwMVb
4y3bhRJA/onjZPYOK8A2EGr1NOkSQEbcgvdLBifA3Ff10d1FE0BnkHBYuYAk
wP1wazNcqhNAGw5BIbqVIsBTHeapKQgUQMUnfgf5KiHAI5tLpcxtFEDpJ+gn
IfofwOrAVzCW0RRAoogSOEbcHcDmeWjQri4VQN+yctOgZRzAXARk9ZyTFUA4
2fIRFCwbwAciZC/a8RVAEIV5rAcPGMCfEL88OVEWQB178euEBRfAvgyoPg==

                    "]]}}}, {}, {}}, {
               DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                AxesOrigin -> {0, 0}, 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, DisplayFunction -> Identity, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                All, DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                  AbsolutePointSize[6], "ScalingFunctions" -> None, 
                  "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                PlotRange -> {{0., 5.57932}, {-18.95119649406056, 
                 33.17086513880073}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "5.57932`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{{{}, {}, {
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                   LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAfYLHmXBieT70Isrdo6gtQHfN4pOu
SLc/eUpdu2erKUDwdylmXkPIP+npiHSDtClA5fd5ESQG0j96Rpoz4MIpQD+z
SeoBzdc/uOhCeYnWKUA9hsYROBHeP3zCmV1H8ilAR0bGxC/14T+9DkM0bhIq
QEHV/6dvIOU/+tNJ6Fw8KkDyo24I5DzoP1fVW2wXbSpATQwCEdEj6z/ibsRa
p6EqQHkA7EBqSe4/4l0H3vbiKkAnR30MvpzwP6+oxDU7KCtA7S0fN2EN8j9K
F16rpHQrQJxabHVanfM/QJ1/683RK0Ag1MsHkBL1P+f1i3BRMyxAjZPWrRun
9j8w2sMEsaksQNXye5JBNPg/dXDac0AsLUDynjPLo6b5P6qus2BWtC1A+JCW
F1w4+z+/AP1En1kuQNLPC7hQr/w/kowm4r4GL0CVVCxsm0X+PxRCIN0A2i9A
NHnnXoDU/z9No+Z0kmIwQFN12tJQpABAnd5Ins/eMEAB0RaADG4BQFytq71U
eDFAGVNcV2YqAkDG1y4KvhwyQB8l700N4wJAvtjeu9HVMkAZmldOX6sDQANu
/2FUvzNAfTXJeE9mBECnudXBTr80QNZzEK3qMAVAPSCxWjQJNkAdAqUA0/cF
QLutlNLRkDdAzrZCflmxBkB6StEd0Eo5QHMOtgWLegdAuZO6hGSPO0CDjDK3
WjYIQO2FhaT5CT5AgFr8h3fuCEA95DYQBzpAQHLLm2I/tglAe5ar6N6VQEDO
YkRnpXAKQJA/ZzpCADxAH53CdbY6C0BeRC5ld9sxQNr9Sa5l9wtAN+fAqGQP
KECDrh4GYrAMQEPMDROp+CRAIALJZwl5DUBUlrzvZ1shQCd8fPNONA5ARoom
6YZ/HEAjmQWJP/8OQPxZ8PUPSRlADQbcPX3GD0Cf4zbXCOkWQLDMXY4sQBBA
8Nrothz4EEDVZ7gC8KQQQNnRWt6RDgHAL5YXjAIDEUC8F3CmMA4qwIBsHaU7
XxFAWg8KnYHzMsBLFA5DSsMRQNDe4dtuoDLAS08D9qcgEkDhvwUSVzQwwMVb
4y3bhRJA/onjZPYOK8A2EGr1NOkSQEbcgvdLBifA3Ff10d1FE0BnkHBYuYAk
wP1wazNcqhNAGw5BIbqVIsBTHeapKQgUQMUnfgf5KiHAI5tLpcxtFEDpJ+gn
IfofwOrAVzCW0RRAoogSOEbcHcDmeWjQri4VQN+yctOgZRzAXARk9ZyTFUA4
2fIRFCwbwAciZC/a8RVAEIV5rAcPGMCfEL88OVEWQB178euEBRfAvgyoPg==

                    "]]}}}, {}, {}}, {
               DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                AxesOrigin -> {0, 0}, 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, DisplayFunction -> Identity, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                All, DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                  AbsolutePointSize[6], "ScalingFunctions" -> None, 
                  "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                PlotRange -> {{0., 5.57932}, {-18.95119649406056, 
                 33.17086513880073}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "5.57932`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0., 5.57932}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.703583919730444*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","inumri",
   "\"The integrand \\!\\(\\*RowBox[{FractionBox[RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"2.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"-\\\", \
\\\"a\\\"}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\
\", \\\"\[RightSkeleton]\\\"}]}], RowBox[{RowBox[{\\\"-\\\", \\\"4.`\\\"}], \
\\\"+\\\", SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"2.`\\\", \
\\\"\[VeryThinSpace]\\\"}], \\\"-\\\", \\\"a\\\"}], \\\")\\\"}], \
\\\"2\\\"]}]], \\\"+\\\", FractionBox[RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"2.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
\\\"a\\\"}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\
\", \\\"\[RightSkeleton]\\\"}]}], RowBox[{RowBox[{\\\"-\\\", \\\"4.`\\\"}], \
\\\"+\\\", SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"2.`\\\", \
\\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \\\"a\\\"}], \\\")\\\"}], \
\\\"2\\\"]}]]}]\\) has evaluated to Overflow, Indeterminate, or Infinity for \
all sampling points in the region with boundaries \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0.`\\\", \\\",\\\", \
\\\"4.1955189760564857`*^-19\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"",2,177,132,
   29423918985163992039,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.70358394432167*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","inumri",
   "\"The integrand \\!\\(\\*RowBox[{FractionBox[RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"2.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"-\\\", \
\\\"a\\\"}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\
\", \\\"\[RightSkeleton]\\\"}]}], RowBox[{RowBox[{\\\"-\\\", \\\"4.`\\\"}], \
\\\"+\\\", SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"2.`\\\", \
\\\"\[VeryThinSpace]\\\"}], \\\"-\\\", \\\"a\\\"}], \\\")\\\"}], \
\\\"2\\\"]}]], \\\"+\\\", FractionBox[RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"2.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
\\\"a\\\"}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\
\", \\\"\[RightSkeleton]\\\"}]}], RowBox[{RowBox[{\\\"-\\\", \\\"4.`\\\"}], \
\\\"+\\\", SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"2.`\\\", \
\\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \\\"a\\\"}], \\\")\\\"}], \
\\\"2\\\"]}]]}]\\) has evaluated to Overflow, Indeterminate, or Infinity for \
all sampling points in the region with boundaries \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0.`\\\", \\\",\\\", \
\\\"4.1955189760564857`*^-19\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"",2,177,133,
   29423918985163992039,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.703583944376845*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","inumri",
   "\"The integrand \\!\\(\\*RowBox[{FractionBox[RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"2.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"-\\\", \
\\\"a\\\"}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\
\", \\\"\[RightSkeleton]\\\"}]}], RowBox[{RowBox[{\\\"-\\\", \\\"4.`\\\"}], \
\\\"+\\\", SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"2.`\\\", \
\\\"\[VeryThinSpace]\\\"}], \\\"-\\\", \\\"a\\\"}], \\\")\\\"}], \
\\\"2\\\"]}]], \\\"+\\\", FractionBox[RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"2.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
\\\"a\\\"}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\
\", \\\"\[RightSkeleton]\\\"}]}], RowBox[{RowBox[{\\\"-\\\", \\\"4.`\\\"}], \
\\\"+\\\", SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"2.`\\\", \
\\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \\\"a\\\"}], \\\")\\\"}], \
\\\"2\\\"]}]]}]\\) has evaluated to Overflow, Indeterminate, or Infinity for \
all sampling points in the region with boundaries \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0.`\\\", \\\",\\\", \
\\\"4.1955189760564857`*^-19\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"",2,177,134,
   29423918985163992039,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.703583944437427*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"inumri\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,177,135,29423918985163992039,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.703583944470922*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","zeroregion",
   "\"Integration region \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0``15.954589770191003\\\", \\\",\\\", \
\\\"4.19551897605648525309832591499123756757683745009181281865394807245`65.\
954589770191*^-19\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\) cannot be further \
subdivided at the specified working precision. NIntegrate assumes zero \
integral there and on any further indivisible regions.\"",2,177,136,
   29423918985163992039,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.703583985732992*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     PolygonBox[{{0.5, 19.15535511311785}, {0.75, 15.981303654178289`}, {1., 
       13.768836139408963`}, {1.25, 12.067615087469044`}, {1.5, 
       10.666616023392985`}, {1.75, 9.438097090107615}, {2., 
       6.7900528649833225`}, {2.25, 7.066779082585375}, {2.5, 
       5.582456657178788}, {2.75, 3.25376854959834}, {2.902001374323004, 
       0.}, {5.157142458073803, -4.048837879938131*^-15}, {5.25, 
       0.6566413270520622}, {5.5, 3.8720621968229}, {5.5, 0}, {5.25, 0}, {
       5.157142458073803, -4.048837879938131*^-15}, {2.902001374323004, 0.}, {
       2.75, 0}, {2.5, 0}, {2.25, 0}, {2., 0}, {1.75, 0}, {1.5, 0}, {
       1.25, 0}, {1., 0}, {0.75, 0}, {0.5, 0}},
      VertexColors->None]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     PolygonBox[{{2.902001374323004, 0.}, {3., -2.0977760730904724`}, {
       3.25, -19.88068255235726}, {3.5, -24.573026078351102`}, {
       3.75, -22.044120068142927`}, {4., -23.874244992482947`}, {
       4.25, -29.367587860223324`}, {4.5, -8.737292185462477}, {
       4.75, -3.048338418728275}, {5., -1.11123157112879}, {
       5.157142458073803, -4.048837879938131*^-15}, {
       5.157142458073803, -4.048837879938131*^-15}, {5., 0}, {4.75, 0}, {
       4.5, 0}, {4.25, 0}, {4., 0}, {3.75, 0}, {3.5, 0}, {3.25, 0}, {3., 0}, {
       2.902001374323004, 0.}},
      VertexColors->None]}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigIEH9h3SXlFH1Y0dIPwX9uYee/Jyv+lD+R/s
FWu/Pl7SqQ3lf7Gfc+pW4TwlDSj/h/3RN2yb/EJVofw/9n4/WJz9HihB+QwO
82+7zGPWlIbymRzCuOP3JLrIQPksDhXrprfkh4hB+WwO5yy1zm1n54LyORwY
uZIu2Z1gOADhczk4dmRkljw0hvJ5HF67el3bOMkCyudzyD76stib2wzKF3D4
mC7ceu6+OZQv6HBD4J2NVJwtlC/ksD+gIaauUhHKF3aIXLDH4X8SB5Qv4hBb
13Jw1vGP+yF8UQf9Bpk1JsxP7SF8MQev0t37fv/kcwAA3aRZdg==
     "]], {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 5.5}, {-29.367587860223324`, 19.15535511311785}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.703583985778921*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"analyticHT", "[", 
  RowBox[{"cos", ",", "2", ",", 
   RowBox[{"2", "Pi"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"analyticHT", "[", 
    RowBox[{"cos", ",", "y", ",", 
     RowBox[{"2", "Pi"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0.05", ",", "5.5", ",", ".25"}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "Input"]
}, Open  ]]
},
WindowSize->{1440, 830},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 131, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[736, 27, 199, 5, 59, "Subsubsection"],
Cell[938, 34, 222, 5, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1197, 44, 177, 3, 35, "Subsubsection"],
Cell[1377, 49, 787, 24, 32, "Input"],
Cell[2167, 75, 137, 1, 30, "Text"],
Cell[2307, 78, 1523, 43, 75, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3867, 126, 162, 3, 35, "Subsubsection"],
Cell[4032, 131, 136, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[4193, 138, 689, 16, 75, "Input"],
Cell[4885, 156, 236, 4, 32, "Output"],
Cell[5124, 162, 237, 4, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5410, 172, 167, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[5602, 179, 1453, 34, 54, "Input"],
Cell[7058, 215, 16475, 342, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23570, 562, 867, 23, 32, "Input"],
Cell[24440, 587, 16254, 339, 234, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40743, 932, 236, 4, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[41004, 940, 714, 19, 32, "Input"],
Cell[41721, 961, 16394, 341, 235, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[58164, 1308, 172, 3, 35, "Subsubsection"],
Cell[58339, 1313, 859, 27, 54, "Input"],
Cell[59201, 1342, 217, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[59443, 1351, 955, 24, 54, "Input"],
Cell[60401, 1377, 646, 13, 32, "Output"],
Cell[61050, 1392, 635, 13, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[61734, 1411, 96, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[61855, 1416, 116, 3, 32, "Input"],
Cell[61974, 1421, 2254, 48, 229, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64289, 1476, 102, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[64416, 1481, 4647, 141, 180, "Input"],
Cell[69066, 1624, 1176, 33, 77, "Output"],
Cell[70245, 1659, 430, 8, 32, "Output"],
Cell[70678, 1669, 426, 8, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71141, 1682, 1527, 40, 54, "Input"],
Cell[72671, 1724, 38962, 653, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111670, 2382, 664, 16, 32, "Input"],
Cell[112337, 2400, 4574, 124, 138, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116948, 2529, 753, 18, 32, "Input"],
Cell[117704, 2549, 549, 9, 24, "Message"],
Cell[118256, 2560, 60901, 1016, 506, "Output"]
}, Open  ]],
Cell[179172, 3579, 94, 1, 32, "Input"],
Cell[179269, 3582, 140, 2, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179446, 3589, 92, 1, 64, "Section"],
Cell[179541, 3592, 1227, 31, 54, "Input"],
Cell[CellGroupData[{
Cell[180793, 3627, 198, 4, 32, "Input"],
Cell[180994, 3633, 109, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181140, 3639, 146, 3, 32, "Input"],
Cell[181289, 3644, 161, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181487, 3651, 1116, 25, 96, "Input"],
Cell[182606, 3678, 471, 10, 24, "Message"],
Cell[183080, 3690, 750, 14, 24, "Message"],
Cell[183833, 3706, 758, 14, 24, "Message"],
Cell[184594, 3722, 730, 13, 24, "Message"],
Cell[185327, 3737, 442, 9, 24, "Message"],
Cell[185772, 3748, 470, 10, 24, "Message"],
Cell[186245, 3760, 473, 10, 24, "Message"],
Cell[186721, 3772, 444, 9, 24, "Message"],
Cell[187168, 3783, 15085, 319, 231, "Output"]
}, Open  ]],
Cell[202268, 4105, 481, 12, 54, "Input"],
Cell[202752, 4119, 155, 4, 32, "Input"],
Cell[CellGroupData[{
Cell[202932, 4127, 163, 2, 32, "Input"],
Cell[203098, 4131, 2882, 96, 88, "Output"]
}, Open  ]],
Cell[205995, 4230, 728, 17, 32, "Input"],
Cell[206726, 4249, 373, 12, 32, "Input"],
Cell[207102, 4263, 118, 2, 32, "Input"],
Cell[207223, 4267, 163, 2, 32, "Input"],
Cell[207389, 4271, 810, 23, 32, "Input"],
Cell[208202, 4296, 382, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[208609, 4305, 122, 2, 32, "Input"],
Cell[208734, 4309, 105, 2, 32, "Output"],
Cell[208842, 4313, 4517, 101, 229, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213396, 4419, 646, 16, 54, "Input"],
Cell[214045, 4437, 158, 3, 32, "Output"],
Cell[214206, 4442, 4571, 102, 229, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218814, 4549, 282, 5, 32, "Input"],
Cell[219099, 4556, 249, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219385, 4566, 807, 18, 32, "Input"],
Cell[220195, 4586, 720, 13, 48, "Message"],
Cell[220918, 4601, 699, 12, 48, "Message"],
Cell[221620, 4615, 714, 12, 48, "Message"],
Cell[222337, 4629, 440, 8, 24, "Message"],
Cell[222780, 4639, 705, 12, 42, "Message"],
Cell[223488, 4653, 707, 12, 42, "Message"],
Cell[224198, 4667, 707, 12, 42, "Message"],
Cell[224908, 4681, 445, 8, 24, "Message"],
Cell[225356, 4691, 4922, 109, 229, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230315, 4805, 517, 13, 54, "Input"],
Cell[230835, 4820, 7962, 157, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238834, 4982, 620, 15, 54, "Input"],
Cell[239457, 4999, 7034, 142, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246528, 5146, 551, 14, 54, "Input"],
Cell[247082, 5162, 9765, 187, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256884, 5354, 841, 19, 96, "Input"],
Cell[257728, 5375, 14299, 261, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272064, 5641, 412, 10, 54, "Input"],
Cell[272479, 5653, 4444, 100, 229, "Output"]
}, Open  ]],
Cell[276938, 5756, 46, 0, 32, "Input"],
Cell[CellGroupData[{
Cell[277009, 5760, 449, 11, 54, "Input"],
Cell[277461, 5773, 4563, 102, 233, "Output"]
}, Open  ]],
Cell[282039, 5878, 68, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[282132, 5883, 1789, 53, 201, "Input"],
Cell[283924, 5938, 13374, 268, 61, "Output"],
Cell[297301, 6208, 1345, 21, 71, "Message"],
Cell[298649, 6231, 1346, 21, 71, "Message"],
Cell[299998, 6254, 1346, 21, 71, "Message"],
Cell[301347, 6277, 347, 7, 24, "Message"],
Cell[301697, 6286, 592, 11, 91, "Message"],
Cell[302292, 6299, 4506, 101, 240, "Output"]
}, Open  ]],
Cell[306813, 6403, 530, 14, 75, "Input"]
}, Open  ]]
}
]
*)

