(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    229564,       4405]
NotebookOptionsPosition[    228235,       4357]
NotebookOutlinePosition[    228588,       4373]
CellTagsIndexPosition[    228545,       4370]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Volumes/MicroSD/PostDoc_SD/ZrC/Thermodynamic_Integration_Analysis/UP_\
sample/EXTRA_UPSAMPLE\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meamFiles5", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<TI_EpotminusEperf_all2_EXTRA_5_3200\>\"", ",", 
     "\"\<TI_EpotminusEperf_all_EXTRA_5_3200\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dftUPFiles5", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<TI_UP_E0all_EXTRA_5_3200\>\"", ",", 
     "\"\<TI_UP_Fall_EXTRA_5_3200\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meamData5", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ReadList", "[", 
      RowBox[{
       RowBox[{"meamFiles5", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "Number", ",", " ", "Number", ",", "Number", ",", "Number", ",", 
         "Number", ",", "Number", ",", "Number", ",", "Number", ",", 
         "Number"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dftUPData5", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ReadList", "[", 
      RowBox[{
       RowBox[{"dftUPFiles5", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", "Number", "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temps", "=", 
   RowBox[{"{", 
    RowBox[{
    "300", ",", "760", ",", "1900", ",", "2500", ",", "3200", ",", "3805"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lambda", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"i", "/", "10"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vols", "=", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "4.685", ",", "4.730", ",", "4.759", ",", "4.801", ",", "4.850"}], 
      "}"}], ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eVcel2meVatom", "=", 
   RowBox[{"1000", "/", "64"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6870904913481207`*^9, 3.6870905184717093`*^9}, {
  3.687090553621895*^9, 3.687090563275999*^9}, {3.687090803218309*^9, 
  3.687090807525714*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Length", "[", 
   RowBox[{"meamData5", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", 
  "5"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dft5", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "Length"}]}], "Input",
 CellChangeTimes->{{3.687090589758787*^9, 3.687090620955886*^9}, {
  3.687090932474038*^9, 3.687090943424993*^9}, {3.6870912209036913`*^9, 
  3.687091221055688*^9}}],

Cell[BoxData["101"], "Output",
 CellChangeTimes->{{3.687090594401108*^9, 3.687090621106723*^9}, {
   3.6870909365964947`*^9, 3.687090943751267*^9}, 3.687091221748246*^9}],

Cell[BoxData["100"], "Output",
 CellChangeTimes->{{3.687090594401108*^9, 3.687090621106723*^9}, {
   3.6870909365964947`*^9, 3.687090943751267*^9}, 3.6870912217651253`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"meamData5", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
   RowBox[{"[", "5", "]"}], "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.6870909925637417`*^9, 3.687091037459584*^9}}],

Cell[BoxData["505"], "Output",
 CellChangeTimes->{3.687091037612027*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"meam5", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"meamData5", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"meamData5", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", "5"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dft5", "=", 
   RowBox[{"eVcel2meVatom", "*", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"dftUPData5", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"meamData5", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", "5"}]}], "]"}], "[", 
        
        RowBox[{"[", "i", "]"}], "]"}], "-", 
       RowBox[{
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"dftUPData5", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"meamData5", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", "5"}]}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dftf5", "=", 
   RowBox[{"eVcel2meVatom", "*", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"dftUPData5", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"meamData5", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", "5"}]}], "]"}], "[", 
        
        RowBox[{"[", "i", "]"}], "]"}], "-", 
       RowBox[{
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"dftUPData5", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"meamData5", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", "5"}]}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.687090580025503*^9, 3.687090585782281*^9}, {
  3.687090625935234*^9, 3.6870906372886057`*^9}, {3.687090859079875*^9, 
  3.687090865017521*^9}, {3.687091227438633*^9, 3.687091235724312*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Energy", " ", "MVT", " ", "TI", " ", "UP"}], "-", "sample"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"GraphicsGrid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ListLinePlot", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"dft5", "-", "meam5"}], ")"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"SwatchLegend", "[", "vols", "]"}]}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Number of\\nUP-samples\>\"", ",", 
             "\"\<UP-sample (meV/atom)\>\""}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}], ",", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"dft5", "-", "meam5"}], ")"}], "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", "i"}], "]"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"meamData5", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", "5"}]}], 
               "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"SwatchLegend", "[", "vols", "]"}]}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Number of\\nUP-samples\>\"", ",", 
             "\"\<UP-sample mean\\n (meV/atom)\>\""}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}], ",", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"StandardDeviation", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"dft5", "-", "meam5"}], ")"}], "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", "i"}], "]"}], "]"}], "/", 
                RowBox[{"Sqrt", "[", "i", "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "2", ",", 
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"meamData5", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", "5"}]}], 
               "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"SwatchLegend", "[", "vols", "]"}]}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Number of\\n UP-samples\>\"", ",", 
             "\"\<UP-sample uncertainty\\n (meV/atom)\>\""}], "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}], "}"}], "}"}], 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "2050"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Mean", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dft5", "-", "meam5"}], ")"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
        RowBox[{"StandardDeviation", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dft5", "-", "meam5"}], ")"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"StandardDeviation", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"dft5", "-", "meam5"}], ")"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "/", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"Length", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"dft5", "-", "meam5"}], ")"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], "//", 
    "TableForm"}]}]}]], "Input",
 CellChangeTimes->{{3.68709065797892*^9, 3.687090715204254*^9}, {
  3.6870912446010847`*^9, 3.687091248153618*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxVVEtIlGEU/ckWaQRCk7SQ+rWyyVeTo73VY2m+0maccVTSGAKnNtEUFGEJ
30Z7IPlDmyyqHyxopZsWVkQ/WkgwgYug2qlIDxNyY20Kure5N2hgGM7c77v3
3HvO/fJOnm3rXWVZVi99+Tf9Wa62/v/A7R6eXLkXQBqugdU81+e7Xyg4G255
MBj8vEOwD/a38MSmDRrfCDNIf5zfJTgXbgPdH9ou2Mby21QqdSYoOB+mzzdW
37NT8Fa4Uyv+7q+arwDOqUQisU7z+eH0EL8hxYUw0YlNA8N+wcWw+Pz1MsGl
mBkgPoEDggMw5yqz3v/U+C4EKJ0/VCG4DM6H0WTlv3pBhB4lK7OmdB7lsMbr
5/q+KP8K4DXxfZMveDdA5RNX9PweuDSuYI/ivUA/9Vui89sHc2dkZGRZ6+2H
x/lPK98DSM7TgC4rv4MIRKjfx5qvEibr/Wiya5vgKthFJOB0qeBquGspvqL1
AJfrBUUPA4D1OlEg8RpYXG/zFonXwBsjPpnlEj+E+EOax17p3xDm+d7Mk/hh
WKzPkmBzGA7JnTqu/dXCI/rf+jVei/hf/VT/OoR++LuHq/dJvA4G1ODiVokf
gflI+kzmSvwIZglmvdL89TA8n37lX49Z1vujYKsBcSofjpVIvAEBCo/+1vuN
8MgO3S9lHqYR7k/is6B+bIJ7lfpNiN9ME/CMEkaKJd6M+GbKX1Yk8WaYPMJD
6s+jMBxflHzmKFyeV5nq1wLznPL1il6GMOuRofdbYaqIb6HUM62Ic/4Z5XcM
s+zfNfkSP5b2x7TwsUJwSU7fO/EPQrDvkh+ea78hOKxvleyHR+dZr6c6/zDM
U8IvxF8Iw+J9/nRQ7ocRsonPLZmnF8Ys+8On/NvS/rgoGG1waB3mWqWeoTjv
0z3h47UBBIdv6/sRQZLPH5LziMC5zO+H1DMU5/15Iv15EXh0ffKC+iuKUCHh
qN6PwtA4xhbE34Yw++GXzNeLIpv1uqH+b0/7I0PyoR02z3+1+qkdWKL3cFz0
89rT70OL7mMMHs9/XvgiBjiU0FH+Mdh8fr3068VgzhOhiN7vgJVD/a/W+h2w
eZ8z1S8dmGHcpfp1IJvfw+/63nXCniG9JlW/ThjWJ0f9Spjnq/vhdcJlPzyQ
fbS6EOf9u6T3u2Cu0f3BEvwBVQqhYg==
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxVlFlsjFEUx2+sXRIphpRSH4YZexd7lX+r7bSKzkw7nYqSSbXzIEJfNJYH
F6lILMWDtG+TNJE0QUgIEolLRBrmwZqGCIOIUglBhRec6ztH4ksmX35zvnPO
/yz3Tm3aEW4ZopRqoZ99u8/nVer/B3pKY8etJ2lwkd5nA6/2/MhlzoI609XV
de33DZc90Ol93a0PJrA9G5rcB2+PYZ4Ecy+ZTN5fyOwgdpc4Po2Z3tcH/Y0b
s5m9wNFbg/6zXuaZcPZ4zgeGFjD7oVP0R6GHeTZA6fzNs5jnIq+Qnl7JNx8J
ku/xzGHOg15K9oOjjcv50KGrue1Fw9leAMfmL5B4hTBpVF+x5FsIszyjr3vE
DOZF0K3FGX1PpZ7FUOWUb/NI5iUwN6m+QbEvheql+pvHMi9DYv9A6GreTObl
MLa+zInMRVB7qf5N85hXQG+Jx+NtOczFSB0k/0PSr5VIUfjktunMq6B3k/8j
HzOAMtL3neepgdgXf2PHQ/EvgbINnMPxNfFpKjDaz3tSClXYPhDq/+XOX5fC
eUF6o9KP1TAHSM9HZr0aOkz93Sd6yxB7Qu2MsT5dhlQR9fOO9Kccyrb7ruQv
h2miep/JflUAtv+dYq+AOkHzGjaK7QEkjhOf4nia2NbzT18llNVTzfPUlYjl
UD3ZU9leBSefvl8g/lWAjbdL9n8NzFfq1xjRvwZqiD0vb7k/1VClpO/CJ5d1
NVI2f7rD/muhsihfZ4rtaxF7TPV+l/zrgMu57QM/ZT7roC8Rv5/M9vUw72lh
z4l9PVQz9ad0CttroNpoH9/84PnUAHb/fOIfhLLnMcnzRhD6Oc3Px/umiWl8
uT2jXTZBV593LvuH4FwhPZmsFyHAR/Wf5POuQ1AvKd6i2exPbM9Xzjj2D0P1
0x9HuL8Iw657IJ2/12HAkN6qBewfhh5JC3FRzkftX3PH9vHsX4uUjXdM5lWL
E9/InpXH/rWI2fPyWfzr3POWxvNDHVQN6dsp/sTZNJ8s7q+pgxMk+yaZXwTO
ObpQDjEjAmX3eavsUwT6A+l5x3YTAez9uF/2tx7K3hcR3kfUu/G7WZ+uh6mg
8/mavzf1wCSrR+6DKHCY9rGS54kolL1vExnsH0XKzheSPwpN5cd7RX+DG2+E
6G+A8lKAEtmnBjg03tB2vm9MA4y9r2/Lfm2Asvfjdb4PsAG6h/rhHYY/XYaT
og==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxVVFlolFcY/TRJjVOpmiZqXcY0xJC6FO24tWb0xCyTuCWZTCYqPpRqkq46
xUJD+nKLpBRMCVRKSXGD+FChjQ+C+qJeA7YPTuvOKD6YUVAxsUYxkEopPT/3
uw/9YbicOfdbz/fdNz/YE2+bKCJt/AWn+0bXyf8/2FWhTH/nG3AwH+ZuV+FA
7HXF02DWZLsKz72iuBDm4lj5jn1F1uFZkIYz4e6T05WfC9PROziWn6t8MeRJ
+Y7e2ZOUL4G93p+KdhUpLoWpZPxfpuv9MthG+suZoXw5pJr+Ov/RvBfi6M72
9vaCEuUXQwZi2a6D3t/bkOGmM+G8KYqXwjLd3pWzFC+DfMXy6mcqfgeyJBKJ
7BPFEUgP/d24qvGWQ9KMV3bnvMMrYGvZj+XFen8l5Crr+W224lUu/pKpildD
Esz/w5Did2EuhLuHs6L1vofim7RPeX9rIMdS0dCPTzReBewo8w/7/kZh9g+O
lX/h9VnLM8oC9ur9dTAjjH92qvoHhOaDeZMcNsQ3yLeMa32VMPep957Jzp+p
hNSzvmSe+l8PqSPerfob4hTrGX+m8aogDwI9XzpsqmC+ZX678tW+GuZj9u8b
1ddUO/03+P7XQPZGQ5kDE5SvASYE5zzla2GOU49G1c/UAq9m+lMrfL9jkM9p
n1OofAxmO/O75ePXwTBcKKP6mjrqy3oGMpp/PYTdi8xRfQzxzO7hptXPtD8b
IEO8/mWu8sTXOFCXR9R+I2QKj6Oql9kIs4v1rvX7sglDLyjAvRK13wSZEeeA
D6n9ZpjTrO9TX/9mSDf7l/bxt8BUMd/1BWq/BbKU5p9cUvsGmGLme8XX1wDJ
Z3/+eKF8I4Tjnr2W43gQj/8ay/70l/NviA/39fV99NJhS/yI+cZ9/CbIpXQ6
3fOv8wfix5yf7yZqPOIe5lsxpvbEFdznUfUvcZg2tr9Z9wFx2CPU4/e5ak9+
N/n5ZQ7bOOQU9+Pv+dq/Zph5rO99rR/NsD8w3206P6YZcoj49nOXnyU/h/cT
fp8SMMG+71f/SMCyfcNvlap9gv0K/n+s9rwf7EuR7oO0QEo5Hwf0/UELLNPt
HwmrPflzHLCFT7X+Ftrz/h2/70m+n8H7qu8fkpDXqH/NfZ2XpJv/RaqfJR5g
fl/7964V+Ix8h847WiGdgaAPVD/ioJ+LlLetrt4Ffj+2wnwf9MfrvxUSjH+H
nxfywT4m9f205E9wHnMLrLPfxng0+POh6k/8c/DA3Tv/H8jTlI0=
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxVVG9M1HUc/siwANGY3DQVCbHycq2pZFpAPP6Bo7rs7kT+NOYLFtRoLrSt
kl70HRubVot8F/Wimwycb1ilM9aW/XbNthpttpVgU+OKJpOgKEhmtfVc3+de
9Ntut2fP5/N8/n83tL2QaM8xs3b+Mv/++63G/v/Bbeqdjrvb4WEeLD3QVd1T
KFwEWwy39vXMyC8E20L78N/Cd8IdSy2Eo8sDj0tg+WMDXVf/EV8G21YwNvD2
EvHlsJc6OjqGZsXfjeBoaDhyaJX4e2Ez8ZHS2mLhMBzlW8dCwpvhnqN/Y4Hw
/czzvf7+/uPSewBBG/nyrP8WBJ/S/+Y64a1w33eHhl/LE97GeioqKl68/JnH
FZigWv/gBvEPwmgeOTwv/e1wXdUFYxuXiX8I9klp73R6Tv47ELjp+Ehbifid
wH2tfan1RcIPA6RL0+uFH4F9S7z0ivwrWc+HkXT3kOJVwT3Lei7dJvtquEr2
czyLH4VFOY/xCdnXIFjG/p9YLR5IXmMBX5Z77AA7x3wP/yX7XQjmOd/znPN/
/C4/r9h18bvhllCvPV/+u2F16e5Qao3098C9yv4sKJ4jTvSlFuwO8XvhJrhP
r+dIfy+shv5vFYqvhXXQ/tikr98Rh4mnxtWPOiQz/f45m38d7B728/hK+Udg
+9ifc+q/I77Aef+wqPzrffwjeYpfD2ug/Rc3pf8Y3Fn24xvl44hzWe921WuP
w37J7P916RMn2ylwRv5PwH5kfzfNiCfu4YBns3cWBU6zgFPrFD+K4BDrOZPd
9ydhO7h/z4fEE+8cHR2Nfi39fbCLmX276vUc8RD13jf5PwX7gPvaclk88cuZ
eWT7E4OdIJ6b8zxiwLu0P7pW8WJwg9SL5Hr7gPYzrOfjW8o/DneR+bxZ4O0R
h73Dg6yaVDzir8gX6v4D4mbW80da/gm44uFI+ka+/BNIPsP2rdyofpOv4r4l
dc9BAlbP/NZ8rvr3w3gNoYOaF4gvZfL5Vf3eD3RSb/Mqrx+Qj3FeqQvyb4A9
PVLa+8aE/BuAEt7LpO7RNcDVUv+89jeg/RTrX/278j8Ay2X+nbfkfwCujPLf
LZU/cSfnUykc0P5GJv684jfCTrKerStUP/Fs5t5z1H/is9yXg9d8vKDR71tn
9n6a4I5Q/yfNG03+vRzUe+iauH+0z1n08QLiYtbXLGzN/r2e+lPzJ/6I93HX
gvrXDKwlf0X7EpB/hfoty31+1gLXm3mAVyg+cRntiwqDfwHw+LtT
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxVVHtIlXcYfttaHuyyLrq00szEHcRaeWxlTXu6nrSWnePRo+TibKT/JkEM
9tcPym4MlI2BRiyZBUVhBf1hUPRLaoxlbLGNFt0mg62y2yzpRpfn6/f+/tgH
h4/nPO/leW/fjC82xZveEZEm/oK3ex4ulv8/sPMjkcikadbBEOwv/f39HR8o
Hg9zoKU8/VCB4gzYxra+4awPFWdBesjfHKV4GswF+oenKs6DvAw3tk18fsbh
fNizw+HGwz5fAWQP/Z8MKl8IdHR2dl7KVT4MM+Zyd8t5H68Isj2jJzrintZR
DCR6c1sHvf1s4CThrsmK58D8RD3XQnB4LmQc42VmKl8C+aZvOFzo64lA9lLP
ZVH7UqQ2E87y/DxIGl8L3lX8MexT1ncjS/F84F6sN3eRt18AQ7pvhe9fGVLH
ogNfZcxUvBBymnozpyteBMnuiQ5UZCj+BGbHYKx3pefLIfMY74+X2q8KSDHx
d76+xUA666vMVntwPkG+Z65fBrCfc35dOcovgfmN/Rn5nsNmCfBnd0v5HZ9/
KaSQ8bdoPwxxO/v/n5/nMkhp62As9MJhswxIch7rvf9ySCvtjz9SfrnrT7ev
fwXkAfM9f6088Zbm5uYfhzT+SubjfOpnqT7iOurf+a/yUUh3sH+ifBTmHPfr
7ykafxXkB/Jf3tb4q4BgXT7z/akExrJf+z5S/0p0BfwVP78qvC3cTlS+ClIU
zNPf0WrIFQpY+Fj7S3yC/mV+f9bAUm44MUH918Bco/0of1+fQsbw9ddo5Ykp
v63A518LsH0D27RfZi0Mz6Mzx/PVkBQT3Lqj9VUDkeDx/V2Ht8dfkucw1sH0
Ud+EkMYjf4oJ37/v/C35Sq7L9knqHwOOcn82Zrl6EEN70O9/Iuofg1znH/np
DtsYzH7a70/T+uOQfdR7SO8XceQFeu76euLoopxYvuqzceAi9/FXf581wOhg
n3WeqIFcIm8VmxoXv2zI9d8SV/MA2v1+JtAV3OdszYeEm3eD7r8hrqD914pt
ApJDPXP896kWwnb0RNPUv9bpaVJ9phZ2MuczpPO1tTB3af9A7aUOqRKO46rP
XwcJvn/fjld/4hDzHfT662C28t6/9/ubhBxhvzeNVf8kUkF/xun8TRKW59K8
W/XYpNP/u9+veuQFr9IZ6k9cxYI68tW/HrKB+/OqSP3JB9+Ln4vVvwE4T70R
/b6iARK0I1vsG2aEtHE=
             "]]}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
         PlotRange -> {{0., 101.}, {-19.898593749999748`, 
          28.901562500000182`}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["\"Number of\\nUP-samples\"", TraditionalForm], 
           FormBox["\"UP-sample (meV/atom)\"", TraditionalForm]}, 
         AxesOrigin -> {0., 0}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 600, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0., 101.}, {-19.898593749999748`, 
          28.901562500000182`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "4.685`3.", "4.73`3.", "4.759`3.", "4.801`3.", "4.85`3."}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {193.5, -189.}, {Center, Center}, {360., 360.}],
     InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxVlHtMU2cYh2thAdlcVJhjXSXIzVJKC2wgF6U/QO4UeqG3jZLQDJQNHCvs
UgaTDWUgSCfUmSxomeKCgXZC9gcDkXrJYGA0cxgDa+Y2wc0VlXGx7iKMxfP+
sZOcnDx5zvO9yXe+nG36N+XFbBaLVbx2//d8cs2LWf+/0Flgurh83B9P0BN2
lVKpXAxkeCNir165klMRzLAPWJMS/cbCEIZ9EeYZX95ZxWOYi4XoGcceBbE/
zv5S7bMviM9wAAwCzvpHA8RB0DVumbo6TBwC9XC/Paw0jGEeeMNDQwkbBAzz
ceR5c1XNGHkBpG2VFp2BvBABqo7aRwIhwxGYT/S6GXiGOBKyRv9BhU7EcBQK
anxs6QeIX0KfufZtuYX4Zfzl2cvluEcwHA2D+pPYcyXkYxAnnB9nG4l34C1O
7MrfDcSxmFlsDhanEMdh/8MsbYOBOB7tpSOheQJaPwG/fu3p1l1IvBNFq7mq
7CLiXZg5+fPje0LiRIhFQZJQHrEY5edtU84NxMCYznTx6CQzrw5Y8K9cjmym
+UlwrH0fWzj5JEz32C6c30c+GXIXr8DUST4ZRe3FB2PE5FPwcWm56L1ZZn/r
UnBsaWWoZYX2ezd8F69LArrJ74basPPZUSv5VAy2B2W2hdD6qeDr7x/uuks+
DYsRFpehifo0VLdMLTlOk08Hl7Xr28t7yKfjlGt6Nl1IPgNb63NfHAsln4FR
r6E/wzPIZyKnX/rGZ9vIZ4K7vWVBs4l8FswXOoorl8MZn4X711a72u4xzMpG
+KWneyw/kc9Gr6+u6rtR8jn4qMEpGxgkn4OKuIzWvWbyEnxREdm1+CF5CS6t
409vfZ18Lm5619vHXyOfi/amogcPteTz8Pkpt8D4MPJ5KBN5l5iDyUvhnJMN
nNjBMKSw8g9N+PjR+1JoD/BF3fEM26VweDW8EMahXoYBjVqt9qdehh5tn/Hc
IeplmG78flRsoV4Gpar2udRm6uVoWjt/0Ubq5TBaj0Ynt1EvR0EtUiKrqZdj
xNa63q+EegX2KstucD+gXoEHUdf0B03UK1Bisp7e3kG9Ao+/4hSGnKQ+H3or
95WuAerz4Xz3Ttw3P1Kfj+TU+UR3B/X5aJ3t13euUK/EbzdqWEPrmPMAJcqM
HuMj5OuUcN1KOfL7H9QrEeU60+VaoF6FkbX/z2036lX4stZVemwznTcVbH1P
vXqW1rOrMBk/cceySr0amrH9t95hU69GveEZ79Elmq9GX6nH9SAPxtvVSJhy
zqVx6fxqEBj56T9sP+o1mIvj/eC+heZr8H7v7OFNPtRrcHcz+/JEFvVaJM3E
cJBNvRba2+kuSaYQ/wKbPqDR
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxVkwtMU2cYhs90qCFyU6QgWK4iMCVquUPhRW4CBUopnKKi4mbA4agMZlCG
FgUUcLAxicAW3BVxc5oKWRhkS9NZYC7IbkAoQ3BBsYoKTC6KYWPx/0h2kpOT
5zzn/b8/3/l+xwNK2cFlHMcdXLz/e768JkK4/19Q2e+p0vbOsfer8FphvO39
8dV4yeZwuBx153jbK4wtoZp021N1ahVja2SJL5nkXTVmbAdNZe7FNLmAsQNU
Ca3CkuU2jJ3gv2LuXu+ENWMX6OX+LV3n1zN2heHRNYt/vhUydoPDqYeJrX0b
GHugYaKn1jXXnvFm1A1mCMyrHRl7grOqbpR7OTHeij93VWmnix0Yb0O9/vLR
sFbKb8fY2IfBhv3kRcg4dOv3mtXEXrgt2tsWLSH2RknGe32ZWcQ+aFR81fzl
CK3ni86BccsnFuT9sPbkYj8/Iu+Pw5ID5goz8gHQWlyNuvMX+UBcsIo9oT5C
PgiRJR/Pj/PEYlilcqcH3iUOxi8BtZse1BCH4LxXQVrzr8QAN3LccqGDsQr4
Y1ZXve8e+VA01Xv3ZHaTD4VJpMu5z9PI78Bn7s901bR/1Q584zqV6nuf9hsG
D4lUnWxH+TDUf/KdqHepf+EoLQjxFjqRD4dw9JCiYTv5CCi3OPjUuJCPQJrW
1Ee51L9IFH9a4RnwKvlIxGlsTesvUf0o1ChMGpw7aH9RmObLwzo4yu/E9Fti
Y8GP5HeivShF1tFD+WjwFe/k2I6Rj0Zls91pwzD5GAiqx9Z0LZCPQXqvjjuc
Qz4WhtKMCOcnbF5VsRCXjsxkP6X5lcDIxrk28wh5CWLrsuqMy8jHodMm97cX
5eTjILk18HfoWfLxiOHfCBwmVsXjzJb9/YYK8gn4/lhRl+ApOx+qBFzLjtH3
T9B5kULy9eL5tWffQ4pOcd9WvRmtJ0X+wuBazTD7XiPFkOcHwqZwWj8R+uDB
PNMkyifC8f2bZ3I2UT4RweknJm7nM9YkotV599x6nvIyvF2gHhUoKS9DgWho
9lkb5WXYwPvWOrmzfmpk2FWmXKdOpf4m4Ypq9GxjIGMkwbLA3c0jgf5HEvzu
thTFt1M+CR0Jlc83Gigvh4/RFTv9C8rLwd94eNF3Bc2THAt30/OFyxlr5Chb
Zy/xpnnjkvG6flKqNWKMZMwW5+oKaf5VyRANV7Y6P6b6yVCUb9sYNEj1UzBk
096tfk71U3CydJnxMXOqnwJ5S7f1hZVUPwW6Zj+FlOaN4/HFfNBPN2Yoz6N8
7GhT9tI885i6/nNVno7q8+B+eLwv5iblFZhUF8XPE0OBQrO60kdL50UBN6XY
uJ/6oVFgs8/1nnxiLhUPzKZCe7SUT8Xe3TNv9lbY41+FR6Dw
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxVk2lMlFcUhodhLbKIpYBIzYBQEagiCCP7yzrIOswwC1uGqqDYBcOSFoR2
rDRKBxVIClqrtWpZywChjVSlGTGGCKViBVmsVBBMFK2I4sgWSuM9P/olk8mT
9zznnu/e79rvzBZlcDkcTsbK77//N890EOf/DzR848Hzn72FN2gE10vyGdWA
KePVUI4UWqrNTRhbondmeXm5eYH1sYHrvgDjwWwdltvByUAtGHN5zXIezio7
Z52fzDN2gGRLX5ZuB4fVO4LjZ8J1Ndey/D1YtxSN9mgXGTtDU3HbwPcpsQs2
vh2xEPuIy3w3rDHw0Q7/qMd4MxzGP05q3KDP2B3tDqnHQ4YMGG/FoxlXRWWA
EWMPICDjcP1NQ8ae8E68u2r0J6rfBnH797ZbFNTPCwYd7ibX9lO9N7K7Wu/a
3aR+fKjiAssW3qH93I7r6oNx6xyJfXDgnuW7N/LJ90W/e84GvhXlfuis26rg
j1PujxsN9dsmQP0DIL/YE4pO4kC8aDz9rPYfqg9C2UX18JQDzQ+Up2dm1vzK
9kcJnDfMG8GntF/BsDUTFDZ9R3kwwgf8y+d+oDwEelesPrqqpjwEDbxPvi0c
02V5KCoil86kcBkrQ3EhtKu22YnyMPi+qn/+Zzf7PpRh0OVlpVR+zmV5OH5X
R3z48znKw2FiHN6gPUF5BGTWl3tbBdQ/Aucsltu89Gg+AaTzvz2tyqX5BOjX
4Z06oqI8EkeS3eau0/sqI7FgMz2lWKL5dmCh6cBMix3lO5B2ZeOxl+OUR+FW
z6qOvklaPwr1uX1HH++kPBqCvhGvhw/YvMpoDB1a7/jlC5o/BlmbPT09X5Ef
gwGu/oXlUvJjsSa+mz/ykPxYHN193yL3MvlxMO//Qys2JD8O82ud3xe0UB6P
2xVG+0rryI+Hk3+taZ4H5UKUyI53zm5nDCH4FsVSsTnVCzH9WjD0xSLbf40Q
2dVZh0eH6D4nIDBlrtItlTEScC+7RVudTueVgAbJbr+/BeQnwPrB7No8J/JF
yK/b63hfRr4Ibi/b0iYmyBehuUQY7DjM5tGIoAwVLtrk0v6IwYtqKPugiTHE
qNnjYupjSOclhkoaHX+shuUaMVp9ht2+9qXzT4RqZT6FLbu/SESxwPzZN3cY
KxPxV9v6r6aKGWsSkc6dOs0ppfsuwanJs2aPc8iXIHUirL/qCfkS2FRfHSvp
JF+CtKY9zw/dIl+KTZsGhkW0HqS45MHbW0v9lVIUZSU17iokX4ocE7Ox1Znk
y3AyNVlV0EG+DFY6VvL0CvJlWOq90+06Sb4MZckFVZZ8uv9y2KesfP/ujCGH
98lr6w7aM1bK0dYeNOgiY6yRY7FraD9fQ+snoYirOBFTQOsn4Uz5L/m7+Pr4
F0eRmSM=
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxVk3lMVFcUxoeBVNoUpQEMUhiURQlSy25dYD5gYNhhVobNCopQATU02GIR
njV1bayCrUWwQbCIhaASUhAxjMPQpHVpCVLAFigjSwFJZaQig9DSzD1/9CUv
L7/33e98596cuy59vzSDz+PxMpbf/77G55mQ9/8H3IbPpiTcHPtvjh7+rh/f
VZrAyJZAdVlZ2c1Fplvjon7h2kw6sS0UW5ycnPKmGdvDtb69tEdHOWsB+Ru9
1doRxk6o43vl3xoYZeyCPQdPrO5/WMd4PVJrx+8UDva1G9kNG80axMORE4zd
wXNRV2R8+BdjD+w7fqxiwWOa8SY8uKR72tGsZ+yJnU8kLYJTLxl7QbvUXZlr
mGfsDXFX2mTeE9J90JeXqQ7i/8PYFz6PD1k37H/F2A/NYwGhrd8tMvbH1tLl
81lHvBmNppYu5/bw1EZ+Dwuv9VYfWGXCeAs6nL3M67V8xluR+bxcn7KJeBtW
vv6lQ00Rrd+OEpu7ouLrxAH4mUvvtBggDoTu7cCOhrXEQnhPrugrsqV6QNNy
/rM/TI3MAReytO1hv5MeBJ2dQCCQMj8XhOMzvpfv1VL/wbhiv7v26RhjLhhp
w0vde3+lvBD4J4cUWFxm9bgQhA5GzYj1VF8ErkDot4NPughfZYfo/UWkhyJ6
1nrCfZbyQ+Ejs5d1lVP9MFS3NKo3TpM/DJGH+ZIcOdsPT4yRh2tanexof2JY
fbDgnbSP6ofDT1Pyfv1Jqh+Ojy06IzbkUP0IyAub8WkN6RFwrhL2590nPRLW
rilfaM6RHomGXLN3uoWkRyFicbDtoiXpUXArjLunLaPziwZn8yjIoWrJOB9c
NHgdV1vTbtB8xWCy6/Z2szY2P1wM7DzPrxyJpHmKRZVXbmV3A5s/LhYvr38S
8uIuzWMcPv/F8rSFF+lx+LM82P2KnvR4+AqHD1lvZox4HNO07Bpab2Dr45F4
fyr8zg7G6niYQ/H9aCndDwkgWjPWmM3uByTgSXy+OTM1x/wScCapP5zJYrpa
gtVv3cj3fMZ0nhTZCR7znboXzC/F3w8mBkqusfWcFCtGrWwPv8ny1FLMtzWl
OLfTfZShYKedQ1Er5ctQ+Vtqza0K8svQL3hU+9yN5allsHTND28eY3k8Oc5u
O50z3kz5chhW6QNqQql/OXia3spCV+pfDvHVkx5+1dS/Aq79y/e/jjEUmD2Q
1DMxTn4FDEePVLo7kl8BUTEnCrOh/pUYqPq66ZQj+ZUwzHBxqfmsH04J00v5
QzpHxmolskps1Jkl1H8Cuosbuy7cpP4ToHLOvJ2npPwEWM3FHBSraP8JCMzW
5MwnUf8qRNUfiS0fIr8KZecFsa8eU74KplEfOSTvJr8KQYa6ozZnKT8RY7E/
eWtnyJ+Ib/cma4aWz+9fQuL/sw==
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxVlH1Q03Ucx+dARAJbDYjCECLX1Fk8DUgcvMd4fhA2trGFSiqMs+wIvZGi
4xYHS9woEkiBeGgEhxl4l+NBpLvhgZ0lQRQCf2TYcEYI5lF5pWXj/H2863f3
u9+97v15fT+f7+8pYG+hLJ/NYrHyHefK9dHxWwzr/wesEaGhoVx36yN0hX6l
eI7DMAet8n6/iofeDHuiQeiob/Nl2AdbLvpVLNzxYXg9lk5HJASJn2XYH/2L
0v7mefJfgL5GX7i76hmGX8TsBYdv9GKYhwH1fUPPPqrnIzXL0f8a8WbUf3No
bd6oJ8MCtBdoNBoD+S+jaq69cbiTOAgs/4oF6XtchoMxfLcy8Mtm4hCwPrz0
B/85qg/Fua6azftMlIdBJPopo8pG/YQI6zzV5f4acTjc7ZvEze8TR+ClYYv3
cjetF4mcGLepwMM0/6sIF5zhjvvQ/rch2lNRfriAOAr8evtsRTLxdkRf7pio
Pkkswr2V/TgTR2Mwcny/0xT1i8HMZ32mkmVigLf7g0s9TzGsB378WmxaL6dc
jFe0MzEdbMrFsLfF9y6vojwWS+1vi9xCmP3pY5HsJKib/4HujwS6f+P0144x
rJeAx68Wmsooj8PWo/O84I2Ux+G6y1LirJnyeDQYtMZfcyiPxz+nVXGNzpQn
QH7+T483FyhPwNM/aw9OnqA8EUN/d19ZnU55IkbevZGlLqY8CbrC1u8NGyhP
gqnuq6aNoDwZu34Xj2kCaH/JKP6YVTB6lp5nCqasvZEqM+UpeDDzJG/NFspT
kSddrSk6T+ungut7mX8/mNZPw8BQzeTBTZSnYUY7eC89nPJ0hFy1sFwez5eO
BW1fj62W8h34It544NYtyneg8rhT7l4l9c+A8Gq5OY1D82XgZlM2d+zx+5kJ
neP9Wz7BMDLRd7LEXrSf6jNRbnzr1DSfYWsmuncudr3BI18K+R2D/0Ap0x9S
sFsDMy27yJeiqNPLzJaQL4Vpm+sZ+RjNL8PdnO+SQM8PMpTZ6qc2BJMvQ4rl
83E7zWuVodCPs86WS/2zsF0yohw9RPNngX29zNV6nPwsXBRO3taEk+/gdwQt
B9zIlwOV3jPr4smXY9UnD92G9pAvRy3L5ZfcUvLlCGy8ecP3I/IVmOiwO02X
kK+AaE5W3aAjX4HGMpNhbTH5CuTfTrQ9QfeHpUTGzpFPFXXkK3HE3GT4tpJ8
JSamOaV+seQr0dLi4eEsJz8bg4LXpzVx5GdjarZ/scpIfjaOptn/ktD/x5qN
6BGLNq+WfBUMjv+D5AL5KvQFnJX0zZGvgu+DKPXWKOZ7t6oQdkR3RVBP378a
o88f2xNyjmGoEdSrWdNm8rL+B+H1w9w=
             "]]}, {}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
         PlotRange -> {{0., 101.}, {-6.909375000000546, 16.380055803572194`}},
          PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["\"Number of\\nUP-samples\"", TraditionalForm], 
           FormBox["\"UP-sample mean\\n (meV/atom)\"", TraditionalForm]}, 
         AxesOrigin -> {0., 0}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 600, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0., 101.}, {-6.909375000000546, 16.380055803572194`}},
          PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "4.685`3.", "4.73`3.", "4.759`3.", "4.801`3.", "4.85`3."}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {580.5, -189.}, {Center, Center}, {360., 360.}],
     InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJw1zQ80lXccx/GbSs5ZMzUzDUsmIsepkNxd3U+4dF2u616Xm0jbkWiT7TT5
d7LnEB2WaYVKOXcxnU5r3fJnZflzWxo25LAm0VwL+Vvypzopd9vp+3vOec5z
Xs/793meNZ8myPcY8Hi86P/u/59vrimhOiL/17kSa9ALqK/0v7aSmZKNEHE1
sT0g9G2yCU4XfJ9+2XAZ2RQ2Fw/oio4vIZsjK5PvY7JnEdkStWaSGHUNj2yN
6Tz12dd9r4VvbINrCe9566tfkm2xvsndRNrwgmwHh/lyw08cn5PXwb0g3fzO
vjmyIxZdcHDUZc+SnaAJ7lq3UMTOOyP7cOXR0r3PyBsgVZ6J3dTC9htx/ZTV
2sQTbL8JAqf5fre0GbILRJZt+y1uT5Nd4XL1xOLiPGY3fHR4MnCy4il5MzoT
NDcHx6bI7mjtmo//Tcm8Be0rTbeoU56QPWBluCrEvp51PozK5Hbifcwfw2BV
W5m4jJ0XIMxUUJW0ntkTbX/Fnp9a/Zi8FcnNsnAb+SRZiFfOB+sv1k6QgczR
rgoJn8wBNyY7y+N5rG/Dc+30xNL0cerbYJszuGrx8Bh1L+wsjIpd3kfmvBDf
t1Y9W8u6Nyxuupm6vM+6N/I+b84U60ep+6CysOpO/k4y54PI2MYfdvWzLoJx
3N6n+UdZFyHm257S8Uus+0Jp3xTp5cC6L2Jt9Gk5oyPU/XB5ovLdP8rInB+K
e37Wx6xmfTsUwt57hZWPqG/HM5so1xkVmSeGcrYlOXxkmLoYNzoqyxuPkHn+
EN+urgmwYN0fP0l8I6Kqh6hLsHnqg447kWROgkfpTg+U+kHqAXhrxqXu/C0y
FwCz3YcschNYD0SxboUT35b1QCwktRr7tT+kLsWFnBXKlENkTooID6Hpy2jW
g3DEv81qlxnrQSiaSX1s0vkPdRkk13b7Pz5FhgxGNnVfpMWQORl+CajjXxKQ
tTK8XMqXHnsxQPtg1GnuZ6WOsX0w9rcMGK28wvbBqA/vSFyWxPbBsHTorujz
ZP+XQ+drLrpvzPZyLD831+yso+9zcvQkNn7jeJmsleOYt2uyJoP9X4EnbkM7
7snIUODWRudrQZZsr0CGfW/R8SEd7RXoficuRVJP5oXgStniD3+vIiME9opX
N3M5MheCM6cb8ka/ZPsQuAgMZ1qEbK/Ej0/E43eN2V6JrYMZvbqmftoroQof
LnkYR9YqMbxEUBJjTeaFInJ+Q2n0n3/TPhQXzIOu2xWRuVAsrPk6TSMka0Mx
MTeScHL8Ae3DUHAw22t/ORlhyErtOuvxGZkLg8d6UbMdn6wNQ81di3MGE320
V2Holr6pvowMFb5L+upAh4rMqdC9o7s0d4CsVaFVWi0SnmT7HWhsqPDUSPuE
/wKjF+3x
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJw1zwlMk3ccxvFX3Igochg60SoCKjPKnMopCH24CpXSk9IiuCFyybwBnZvo
C56bF52ow7IQ1EVNdOpiNjJB6tCgeMCKsCPWKoiAgEUuJ4rMxd+/yZs3n/f7
f9439Uhdp0q34Tgu7d31//39r1fEz0g+9HvTvyJ6gE8nRgqSRsfgPcehR3bl
TGo/R3aCeVbMafHBETrvgs7O28Muu9jeFf4Z5gkhBbZ0fhpa5575WVc7luyO
AleHy4YN7P2euPmbU5tt6yjtZ+Hk5AtNX5ex73nBPy44wO7AW+pzIN0+dcm4
pjfkufD7J3BdWAHr3siqsrlm8zfr87HSzvOV41zWF2D7LHm6xMT6QgTYZwX1
b31NXgTPU/c6Uz2HyT4Iqb3AbbWw/+eL66ajH9w9/5LsB8Em4dTXT4fI/ljf
X1pc0TFIDoBbbo3TKgFzIEZD/zKkqAfIi9G4yfnu0P5+chDky3Pm5QQxB8NB
d3jOnn195CVocPPoznr+ghyCplivOomWORSfRaSEhD3qJYsQmHLRs0/LDKQt
a5/YUmV9bx5YIW7JS2l6Tj0MywLeGjKukvkwOG2fWZzrQ+e5cAgnXRmpXM96
OOZ11Ys+ruyhHoEpqcNf7h/uph6Bb+8Xv6kQk7lI6L0Fsrbvu6hHYrO3plXS
94x6FORth28+SyDzUZBcPJspru6kLoZEoBxzKJHMi3EuLH/8D/Ud1KNhch7M
9kok89E4lh/0SPOsnXoM/BtlqX2ryXwMPFLu5FcPPaUugfDBh4OlhWRegqKW
etMUV9aX4tQq46G1bqwvRdbbP1T5AtZjsaY7uKzjfBv1WMR9/sVM2QUyJ0XR
vktHjitYlyLbvfV6xYsn1ONgfjJtufAomY9Df3BRyZ4Q1mW4bZLXW9tbqcsw
ID5tnOrFuhxrfY81n2hkXY6KUMcbpXoyp8D9khn2u6PIUOD1OtvgbDt2XoGA
e4UL9o4lGxXQb7t1405lC+2VSEqbPbN8BxlK/Lhxdkb5ajKvhNbnVW7RQrJR
icGDopI1A49pr0L2VWvZNjMZKth39vZ8wzqvwnxheO2GWrJRhemFl3RH9Gyv
hqPpl717E9leDcN0O0NNLturYclMGj8xlu3V+NXurIfvR2wfj42rvso5+/gR
7eOxKKf9ftc5Mh+Px/urX/ptIRvj4bC7jqsVkzkNVu6MnzzixvYaZFpHGqxm
C+01qF4T4xy7i2zUYMJlqdQaSOYSMEll+C566CHtE+AjOOny8ASZf9e59ANt
CrIxAcLB5cm2I2baa3GeF9xSNpOhxT11ZN6lnWReC73lpdTdj2zUYnVxw+bm
pw9or0PuJ+Vbco6TocPBay6WxafJvA4df1b9VJNMNupwN9/SyOWxfSLq9FbH
gRUPRP8BFrnlLQ==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJw1zgkw3HcYxvGtpYQQbRM1SirERlRaEUcc6T5Y97V211qKzpCIjMzoMRoV
0/5DZpSk0Ua0aBoVjYiSZJCJYyiVkoOoVEtC5FjHSlzBJo6otuP97czOzme/
/2ff3RKXLNmnwePx9v73/v9z7TUjbHHW7StNXQf6Al7hpTZtVf8I16iDhPri
aKtlNdkQVcGuRv4nefT8RtQLUlMaV5epGwPnG5X8xUWyKV6bmY4UXnhONkdr
jclvEh32exYQyJubXnLMW8HpK3vMZfNkAS68uZB15cQs2Rr3/P0aeoVzZBt0
JXUGmlqzbotE159Eh6ZmyO8iM/3QSNouZjs8nLqjbn02Rd6JWwGremddJsn2
yIsYnRziT5B3odpUXnh001OyA0b0gyxnDJgd8XuP4LMzHz4hO6Et663+My7j
ZGcMfF2QoRaoyLtRKjUVur3N7IIiy4n2mNeZXWEkqJ6LLR8ju8HWKvKGvH+U
7A6p4x7fZgvmPSiTJ+88WzpCfh8uelr6LeasC/FMK8hGz5oZmONFZSu/pOc5
YH5lLOf8/WHqHrBIVh77y5PMeeDTgfLG+ctK6p4oLK/61iSJzHki1d3wluVu
1r0Q7ieq29/wmLoXNITjQSW6rIsQ8329OPQ66yJkSTUPW5SRed44VSgeqjvN
ujdyYjq6FPGs+8Bg4LuRCSfWfbCuKE2wdfQRdV9IznmXnj5K5nxh++Ol2FEB
635w9d02Z6F6SN0PrS753jknyTx/LFWUdE6KWPdHQFS03RbVA+oB2P5iNK7y
GzIXgMzhwrsprqwHQuPSRX5r+RD1QBzRzC2R27IehNwjtcUNt1kPgkxhl1hd
TeYFw9Ys7yuBA+vBkD1Hd9zN+9RDMOnkr5F/kMyFwD6hXjtqdpB6KMYOq9yu
1pG5UBQs2Q+aeLMuhtHxm4ZVgwNrhhjH8poPxn9M5sQwC6nZ8IM+uUWMgsfr
T2VP36N9GIauOeSqc8gIQyJn/quJLZkLw9Oua7903rlL+zA8qsl+73YGmSdB
xZK/c3sOGRKMa3k+CJSyvQQZtWny2QPkFglSf66YKjNn96Vw0Fvd4TrD9lKc
m36n8pXrZE4K3chYdeEQuy9F3eJFe510tpehW2NvEb+b/X8ZVLNV/D+K2X0Z
pj+5vNwezO7LoLj698rnq+z/h2PzfN7LqAV2PxxWC9lixxp2Pxwe+UuZSGT3
w6Hct6lNezPby9GB/dHDs/20l4Mf36S4Uknm5BCl9Bi/eoDcIkdC75MQ6yAy
LwKqIR0zzTfYPgLbQprc+9R9tI9A7wu37Q795JYIlK//88QXBWSeAgYb1Rus
PiBDgd7IvtrYHWyvwEfaHT6rSWyvQPpxTfsbAWwfCeOVvuh5QZ/wX4U46DY=

             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJw90AlQlHUcxvGXK0RkEYFCB+QISANJDIhLeADdRWBhd9kDZRITV0wIlQ5H
kFgQGEQagQ25bDWcFZSYMCcJp5htCgKMagYDOQQpkWOVIxwJRa2m39+d2dn5
vN//877vrPPeQxKlIcdx+/79/vf7/2cuNOe1Ar1YtRhKF+Av9z99TD1PXoHh
YNuaxx3T5NXYdLg2w1N3l2yDuI5rvdGzc2Q7fLzr2X3fhftke0yvdp0XhDA7
oelpmfLqzCTZBY96ZhcPrJwhu6K7zFVaqmV2x2mL5J7N3cwb4OyS8P3SE3a/
11HlZL7Wd4a9nycURhYD+UpmLwh3GinPxujJm5HXLvxrsGeK7I19WfJ+7j32
PlvwqkabWerG9m9i/Wiy2VYZO++DuLMnFrv82Xlf7M++O69eP0H2g0/wyRql
gPkt/G69dLPoyD2yP/bkupzrrGAOQHpba97+3nFyILSXRq8HeDEHod4htvlC
Gvu/g6G63On+7jd/krciPsWw4GUBcwic/G+0WJszh6Jlpjt8TTszwJtu3jV+
hqwCxnl7V4U9Zj0MX6YMTT5Usx6Gr9s+MLO1YD0c6tDAaz4Tf1APh9cTfs7u
RjIXgSKj56VFgaxH4Oi5owfzNrC+DZxpkzbxuzHq22Bz9eH7HyWSue1wzb5c
H2HA+nbY+JZx9ums8wGNvFjmwDofxcNZtrt/uENdgN9W9gfpNWSVAHeGl5Yr
GliPxHWXnh6RhPVIDDZqvjhlzPoOTOaPtKWkjVLfgQM8Eyv3kRHqUZixeYMf
mUxWRaEm9Z6dz9Bt6tEQ+FRmzhWTVdEo+rks/3gH28cgKdp51aZCto9Bzktp
6/qesS6E7KL3TWE+60J4nI8MkaxjPRYPotRJklp2/1iYmOivlPmx58eh19Kq
vGhimHocNKYeUyeryZwIJlZdoTEKOg8RLI0Hk56+OC9Cu7fLcquWrBOhoMQx
sfzFXoyx+jW/3gYZYvwSaTAqnB6ivRjeGR0Db1eQdWKUNsvncwvInAQNZqcm
CnlsL8GHhxzc+1vYXgKM2OWmJbG9BJlfidSfG7J9PBYcr8QLLg3SPh65kroT
exbIqng8iuqMrTtP1sWD0z7XZgvJnBSvfKu3/tuK7aUQH3d7p2Z5gPZSOETX
B1XqyDophqt+4rUeIXMybIyYyHDdSIYMNyr5kxfGbtFehjjfqSnHKrJOBlFh
ib/wMzInh7TFbsYziww5xpW82fIQtpejVoxUS3O2l2NJvyXJqquf9goE9Nu7
BTaSoYBgbMWttINklQLeTemmnAdZp8Cnfs7pNQZsn4C1aSWC6h/7aJ+AMw1d
wQ/qyKoEWJh1aaouknUJOPxJQFX1MTK3E8a6wlR+VF/oPxu/3FQ=
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJw1039M1HUcx/EvPwREYEKkrJhIqSQC4kEcHNK9+M3x+477gahA/EigKVKQ
LomuxTmVQbKCmiKMJspgET8SAUsuQWrQsLiVwRBQIPkNgiAnl2Tj/WG73R73
/Lz2+fyDfVKmJFWf47iUl5//vzf+FoTtfDc3t1fMQD/AsfV3kcN+PbIJeHbK
g7cFzFuxutnQfrcvR7YGrs2dd6nWCTdsg8oEQXkLVsm2SNsbv5C/vkLeiXvO
O3nZWU/Jb0D4dcezumdL5F3YExHWWpywSN6Dm6UDHT5DC+S3UNZ5J3de9YTs
CN7x1q2lH7PuhDshg/opTXNkF/QbTddXNLLuivKxri29ifPkA7AcaPfdPMzM
g4FXUdm/Eey8G4T5YXkr8czukA/4pkhPsvNvY0ea9kHYJnafB9LmHqyFWzLz
MZbV4iY+NUv2RHyz+XzJDzNkLzgoS4uC66fJAlzJbNg+UT1F9sbil7WVhd2T
5IPo0aSVVgUz++DMjvC2u07s/DvIWPjxOwMZ60Isf+Jk3KBiBj4SG1n0901s
WAmc+ODV5Ww+mfNF+JhgS9vnj6n7wuTw0e1rP5M5P6jSv/c2D2XdD6+vnjtx
/c9/qPuj27ZmVOtDVvpj5Tf/Nc3wOPUAlJi9lytpICsDMLr3kvRNEeuBeHqh
qLdwZYx6IKRJv+p6m1kPQr0sWXT+JNsH4Zv7ammFBevByJ9sjDSpYvtg6PXX
z+5LIXMhaOqZX3NZH6UegiMX+yqq/mBdBDvbv6J3DbK9CEFtNwt02ayHwpW/
rO+QznooIry50JUE1sNwwz7dePEY62G4en84KMCU9XAcEJx+/lk9uz8ch63u
8hVHyFwEmlTbWoySWI/Ara+mq8q9WY9Ef1XHuLeA9UhcOReXW2DKehQm3eeO
ZT18RD0KfsZmI4+ukrlouAcHrKuSyIhG3dBl52Q+Ox+Ncb38lPAnDzesjobj
L0etJzLZXowLPTVJsTl0H8S4pA0MiuKx94hxWU/Twgsgq8WIEimX5YbsfRJY
hHY5lbP3QYIpqwDzwlp2vwTO1jXdX7xPVktgYGK4pNnP7o/BxbQuy00r9D7E
4MW2ymnhFFkZA9OQ2e7TP7H3xyCu7mzyvTIyJ0WOsNijOYPtpXhX0G615MX2
UigGb9tVmrC9FH6VpTYz/SO0l6Hb9dDIzDUyZOi0rZ34NIeslCFPzfcsEZHV
Mhi/1qn9kMf2cmjm+X9/a8j2cuSvTepiXwzTXo7dAwWKx9VktRw6TZ7WQ0rm
FJgZ0E3ejSRD8fL/u+jUPu0Q7RXoeF5RPFxFVitwvE/UaJNB5mKR3qFavOFJ
RizW187cik5l+1iUV67GdV1n+1ikFmYZjSay/SFoJ/UTZQ5Dwv8AAHntjg==

             "]]}, {}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 100.}, {0, 8.30851562500021}}, PlotRangeClipping -> 
         True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["\"Number of\\n UP-samples\"", TraditionalForm], 
           FormBox[
           "\"UP-sample uncertainty\\n (meV/atom)\"", TraditionalForm]}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 600, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 100.}, {0, 8.30851562500021}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "4.685`3.", "4.73`3.", "4.759`3.", "4.801`3.", "4.85`3."}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {967.5, -189.}, {
     Center, Center}, {360., 360.}]}, {}},
  ContentSelectable->True,
  ImageSize->2050,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.687090687071209*^9, 3.687090726415307*^9, 
  3.687090812231489*^9, 3.687090868037558*^9, 3.687090964288877*^9, 
  3.687091253357259*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"15.14317295792141`", "4.445085342051017`", "0.4423025228998052`"},
    {"7.886556311880524`", "4.456904761894859`", "0.4434785991309381`"},
    {"2.6520451732668127`", "3.6355686008268373`", "0.36175259653823977`"},
    {
     RowBox[{"-", "1.4545590965341628`"}], "3.500204760500158`", 
     "0.3482833910047705`"},
    {
     RowBox[{"-", "5.387340655941031`"}], "4.735006196010741`", 
     "0.4711507260905417`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.687090687071209*^9, 3.687090726415307*^9, 
  3.687090812231489*^9, 3.687090868037558*^9, 3.687090964288877*^9, 
  3.687091253503433*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"edist5", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"EstimatedDistribution", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"dft5", "-", "meam5"}], ")"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"SkewNormalDistribution", "[", 
        RowBox[{"\[Mu]", ",", "\[Sigma]", ",", "alpha"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"edist5", "//", "TableForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"EstimatedDistribution", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"dft5", "-", "meam5"}], ")"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], "//", 
  "TableForm"}]}], "Input",
 CellChangeTimes->{{3.687091318434122*^9, 3.6870913507390738`*^9}, {
  3.687091753599188*^9, 3.687091765757844*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"SkewNormalDistribution", "[", 
       RowBox[{
       "11.388430177351914`", ",", "5.801831221656835`", ",", 
        "1.4177572141841217`"}], "]"}]},
     {
      RowBox[{"SkewNormalDistribution", "[", 
       RowBox[{
       "5.434476810664454`", ",", "5.067545823078266`", ",", 
        "0.7640632185372414`"}], "]"}]},
     {
      RowBox[{"SkewNormalDistribution", "[", 
       RowBox[{
       "0.2794934151447786`", ",", "4.326141000381726`", ",", 
        "0.9447177414493108`"}], "]"}]},
     {
      RowBox[{"SkewNormalDistribution", "[", 
       RowBox[{"0.5484703966411174`", ",", "4.017743047471827`", ",", 
        RowBox[{"-", "0.7999567062057414`"}]}], "]"}]},
     {
      RowBox[{"SkewNormalDistribution", "[", 
       RowBox[{
        RowBox[{"-", "2.1429331433639005`"}], ",", "5.7205315117768025`", ",", 
        RowBox[{"-", "1.0106788192877478`"}]}], "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.687091336020834*^9, 3.6870913524005747`*^9}, {
  3.687091760322653*^9, 3.687091766781468*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"15.14317295792141`", ",", "4.423025228998052`"}], "]"}]},
     {
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"7.886556311880524`", ",", "4.434785991309381`"}], "]"}]},
     {
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"2.6520451732668127`", ",", "3.6175259653823977`"}], "]"}]},
     {
      RowBox[{"NormalDistribution", "[", 
       RowBox[{
        RowBox[{"-", "1.4545590965341628`"}], ",", "3.482833910047705`"}], 
       "]"}]},
     {
      RowBox[{"NormalDistribution", "[", 
       RowBox[{
        RowBox[{"-", "5.387340655941031`"}], ",", "4.7115072609054165`"}], 
       "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.687091336020834*^9, 3.6870913524005747`*^9}, {
  3.687091760322653*^9, 3.6870917668019857`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ldata5", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"dft5", "-", "meam5"}], ")"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"vols", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "Above"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"ldata5", ",", "20", ",", "\"\<PDF\>\"", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Up-sample\>\"", ",", "\"\<Distribution\>\""}], "}"}]}]}], 
    "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"edist5", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "20"}], ",", "35"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.687091389750544*^9, 3.6870914000684357`*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.511], Thickness[Small]}], {{}, 
      {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{Opacity[
       0.511], Thickness[Small]}], 
       RectangleBox[{0., 0.}, 
        NCache[{2., Rational[1, 202]}, {2., 0.0049504950495049506`}],
        RoundingRadius->0], 
       RectangleBox[{6., 0.}, 
        NCache[{8., Rational[1, 202]}, {8., 0.0049504950495049506`}],
        RoundingRadius->0], 
       RectangleBox[{8., 0.}, 
        NCache[{10., Rational[4, 101]}, {10., 0.039603960396039604`}],
        RoundingRadius->0], 
       RectangleBox[{10., 0.}, 
        NCache[{12., Rational[6, 101]}, {12., 0.0594059405940594}],
        RoundingRadius->0], 
       RectangleBox[{12., 0.}, 
        NCache[{14., Rational[21, 202]}, {14., 0.10396039603960396`}],
        RoundingRadius->0], 
       RectangleBox[{14., 0.}, 
        NCache[{16., Rational[9, 101]}, {16., 0.0891089108910891}],
        RoundingRadius->0], 
       RectangleBox[{16., 0.}, 
        NCache[{18., Rational[19, 202]}, {18., 0.09405940594059406}],
        RoundingRadius->0], 
       RectangleBox[{18., 0.}, 
        NCache[{20., Rational[11, 202]}, {20., 0.054455445544554455`}],
        RoundingRadius->0], 
       RectangleBox[{20., 0.}, 
        NCache[{22., Rational[5, 202]}, {22., 0.024752475247524754`}],
        RoundingRadius->0], 
       RectangleBox[{24., 0.}, 
        NCache[{26., Rational[1, 101]}, {26., 0.009900990099009901}],
        RoundingRadius->0], 
       RectangleBox[{26., 0.}, 
        NCache[{28., Rational[1, 101]}, {28., 0.009900990099009901}],
        RoundingRadius->0], 
       RectangleBox[{28., 0.}, 
        NCache[{30., Rational[1, 202]}, {30., 0.0049504950495049506`}],
        RoundingRadius->0]}, {}, {}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
       Opacity[0.511], Thickness[Small]}], 
       RectangleBox[{-6., 0.}, 
        NCache[{-4., Rational[1, 202]}, {-4., 0.0049504950495049506`}],
        RoundingRadius->0], 
       RectangleBox[{-2., 0.}, 
        NCache[{0., Rational[3, 202]}, {0., 0.01485148514851485}],
        RoundingRadius->0], 
       RectangleBox[{0., 0.}, 
        NCache[{2., Rational[3, 101]}, {2., 0.0297029702970297}],
        RoundingRadius->0], 
       RectangleBox[{2., 0.}, 
        NCache[{4., Rational[3, 101]}, {4., 0.0297029702970297}],
        RoundingRadius->0], 
       RectangleBox[{4., 0.}, 
        NCache[{6., Rational[5, 101]}, {6., 0.04950495049504951}],
        RoundingRadius->0], 
       RectangleBox[{6., 0.}, 
        NCache[{8., Rational[25, 202]}, {8., 0.12376237623762376`}],
        RoundingRadius->0], 
       RectangleBox[{8., 0.}, 
        NCache[{10., Rational[23, 202]}, {10., 0.11386138613861387`}],
        RoundingRadius->0], 
       RectangleBox[{10., 0.}, 
        NCache[{12., Rational[7, 101]}, {12., 0.06930693069306931}],
        RoundingRadius->0], 
       RectangleBox[{12., 0.}, 
        NCache[{14., Rational[5, 202]}, {14., 0.024752475247524754`}],
        RoundingRadius->0], 
       RectangleBox[{14., 0.}, 
        NCache[{16., Rational[2, 101]}, {16., 0.019801980198019802`}],
        RoundingRadius->0], 
       RectangleBox[{16., 0.}, 
        NCache[{18., Rational[1, 202]}, {18., 0.0049504950495049506`}],
        RoundingRadius->0], 
       RectangleBox[{18., 0.}, 
        NCache[{20., Rational[1, 202]}, {20., 0.0049504950495049506`}],
        RoundingRadius->0], 
       RectangleBox[{20., 0.}, 
        NCache[{22., Rational[1, 101]}, {22., 0.009900990099009901}],
        RoundingRadius->0]}, {}, {}}, {{}, 
      {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
       Opacity[0.511], Thickness[Small]}], 
       RectangleBox[{-6., 0.}, 
        NCache[{-4., Rational[2, 101]}, {-4., 0.019801980198019802`}],
        RoundingRadius->0], 
       RectangleBox[{-4., 0.}, 
        NCache[{-2., Rational[3, 101]}, {-2., 0.0297029702970297}],
        RoundingRadius->0], 
       RectangleBox[{-2., 0.}, 
        NCache[{0., Rational[17, 202]}, {0., 0.08415841584158416}],
        RoundingRadius->0], 
       RectangleBox[{0., 0.}, 
        NCache[{2., Rational[15, 202]}, {2., 0.07425742574257425}],
        RoundingRadius->0], 
       RectangleBox[{2., 0.}, 
        NCache[{4., Rational[25, 202]}, {4., 0.12376237623762376`}],
        RoundingRadius->0], 
       RectangleBox[{4., 0.}, 
        NCache[{6., Rational[7, 101]}, {6., 0.06930693069306931}],
        RoundingRadius->0], 
       RectangleBox[{6., 0.}, 
        NCache[{8., Rational[6, 101]}, {8., 0.0594059405940594}],
        RoundingRadius->0], 
       RectangleBox[{8., 0.}, 
        NCache[{10., Rational[5, 202]}, {10., 0.024752475247524754`}],
        RoundingRadius->0], 
       RectangleBox[{10., 0.}, 
        NCache[{12., Rational[3, 202]}, {12., 0.01485148514851485}],
        RoundingRadius->0]}, {}, {}}, {{}, 
      {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
       Opacity[0.511], Thickness[Small]}], 
       RectangleBox[{-10., 0.}, 
        NCache[{-8., Rational[2, 101]}, {-8., 0.019801980198019802`}],
        RoundingRadius->0], 
       RectangleBox[{-8., 0.}, 
        NCache[{-6., Rational[2, 101]}, {-6., 0.019801980198019802`}],
        RoundingRadius->0], 
       RectangleBox[{-6., 0.}, 
        NCache[{-4., Rational[7, 101]}, {-4., 0.06930693069306931}],
        RoundingRadius->0], 
       RectangleBox[{-4., 0.}, 
        NCache[{-2., Rational[11, 101]}, {-2., 0.10891089108910891`}],
        RoundingRadius->0], 
       RectangleBox[{-2., 0.}, 
        NCache[{0., Rational[21, 202]}, {0., 0.10396039603960396`}],
        RoundingRadius->0], 
       RectangleBox[{0., 0.}, 
        NCache[{2., Rational[11, 101]}, {2., 0.10891089108910891`}],
        RoundingRadius->0], 
       RectangleBox[{2., 0.}, 
        NCache[{4., Rational[9, 202]}, {4., 0.04455445544554455}],
        RoundingRadius->0], 
       RectangleBox[{4., 0.}, 
        NCache[{6., Rational[3, 202]}, {6., 0.01485148514851485}],
        RoundingRadius->0], 
       RectangleBox[{6., 0.}, 
        NCache[{8., Rational[1, 101]}, {8., 0.009900990099009901}],
        RoundingRadius->0]}, {}, {}}, {{}, 
      {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
       Opacity[0.511], Thickness[Small]}], 
       RectangleBox[{-20., 0.}, 
        NCache[{-18., Rational[1, 202]}, {-18., 0.0049504950495049506`}],
        RoundingRadius->0], 
       RectangleBox[{-16., 0.}, 
        NCache[{-14., Rational[3, 202]}, {-14., 0.01485148514851485}],
        RoundingRadius->0], 
       RectangleBox[{-14., 0.}, 
        NCache[{-12., Rational[1, 202]}, {-12., 0.0049504950495049506`}],
        RoundingRadius->0], 
       RectangleBox[{-12., 0.}, 
        NCache[{-10., Rational[5, 101]}, {-10., 0.04950495049504951}],
        RoundingRadius->0], 
       RectangleBox[{-10., 0.}, 
        NCache[{-8., Rational[11, 202]}, {-8., 0.054455445544554455`}],
        RoundingRadius->0], 
       RectangleBox[{-8., 0.}, 
        NCache[{-6., Rational[21, 202]}, {-6., 0.10396039603960396`}],
        RoundingRadius->0], 
       RectangleBox[{-6., 0.}, 
        NCache[{-4., Rational[8, 101]}, {-4., 0.07920792079207921}],
        RoundingRadius->0], 
       RectangleBox[{-4., 0.}, 
        NCache[{-2., Rational[11, 202]}, {-2., 0.054455445544554455`}],
        RoundingRadius->0], 
       RectangleBox[{-2., 0.}, 
        NCache[{0., Rational[13, 202]}, {0., 0.06435643564356436}],
        RoundingRadius->0], 
       RectangleBox[{0., 0.}, 
        NCache[{2., Rational[7, 202]}, {2., 0.034653465346534656`}],
        RoundingRadius->0], 
       RectangleBox[{2., 0.}, 
        NCache[{4., Rational[3, 101]}, {4., 0.0297029702970297}],
        RoundingRadius->0], 
       RectangleBox[{6., 0.}, 
        NCache[{8., Rational[1, 202]}, {8., 0.0049504950495049506`}],
        RoundingRadius->
         0]}, {}, {}}}, {{{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
       InsetBox["4.685`", NCache[
        Offset[{0, 4}, {15., Rational[21, 202]}], 
         Offset[{0, 4}, {15., 0.10396039603960396`}]], 
        ImageScaled[{0.5, 0}]]}, {}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, 
       InsetBox["4.73`", NCache[
        Offset[{0, 4}, {8., Rational[25, 202]}], 
         Offset[{0, 4}, {8., 0.12376237623762376`}]], 
        ImageScaled[{0.5, 0}]]}, {}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}}, 
       InsetBox["4.759`", NCache[
        Offset[{0, 4}, {3., Rational[25, 202]}], 
         Offset[{0, 4}, {3., 0.12376237623762376`}]], 
        ImageScaled[{0.5, 0}]]}, {}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}}, 
       InsetBox["4.801`", NCache[
        Offset[{0, 4}, {-1., Rational[11, 101]}], 
         Offset[{0, 4}, {-1., 0.10891089108910891`}]], 
        ImageScaled[{0.5, 0}]]}, {}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, 
       InsetBox["4.85`", NCache[
        Offset[{0, 4}, {-6., Rational[21, 202]}], 
         Offset[{0, 4}, {-6., 0.10396039603960396`}]], 
        ImageScaled[{0.5, 0}]]}, {}}}}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1: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
PfEwBfgfQN3Elg==
       "]], LineBox[CompressedData["
1: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
C/frDgZpg/8B5U2AOg==
       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
JdL/1YiPW0MiPmXr8K421NujtgYhnBr/Awkujg0=
       "]], LineBox[CompressedData["
1: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
       "]]}}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Up-sample\"", TraditionalForm], 
    FormBox["\"Distribution\"", TraditionalForm]},
  AxesOrigin->{-21., 0.},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->700,
  PlotRange->{{-20., 30.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.687091403996475*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"horizontalListPlotFill", "@", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Labeled", "[", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"3", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"Transpose", "[", "andyFah", "]"}], "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], ",", "\"\<TU-TILD\>\"",
         ",", "Above"}], "]"}], ",", 
      RowBox[{"Labeled", "[", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"2", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"Transpose", "[", "MVTintAll", "]"}], "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], ",", 
        "\"\<MVT MEAM TI\>\"", ",", "Above"}], "]"}], ",", 
      RowBox[{"Labeled", "[", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"1", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Transpose", "[", "MVTintAll", "]"}], "[", 
             RowBox[{"[", "4", "]"}], "]"}], "+", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"dft5", "-", "meam5"}], ")"}], "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}]}], "}"}]}],
         ",", "\"\<MVT MEAM TI + UP-sample\>\"", ",", "Above"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"SwatchLegend", "[", 
      RowBox[{
      "\"\<TU-TILD\>\"", ",", "\"\<MVT MEAM TI\>\"", ",", 
       "\"\<MVT MEAM TI + UPsample\>\""}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "3.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "20"}], ",", "25"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<ZrC: Fah at 3805 K\>\""}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\>\"", ",", "\"\<Fah (meV/atom)\>\""}], "}"}]}], ",", 
    RowBox[{"Ticks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", "Automatic"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.68709190860106*^9, 3.687091944112029*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{3., -0.172075}, {3., 2.719392}, {3., 5.650589}, {3., 
       10.236911}, {3., 18.74885}}], 
      {Opacity[0.3], 
       LineBox[{{{0, -0.172075}, {3., -0.172075}}, {{0, 2.719392}, {3., 
          2.719392}}, {{0, 5.650589}, {3., 5.650589}}, {{0, 10.236911}, {3., 
          10.236911}}, {{0, 18.74885}, {3., 18.74885}}}]}},
     Annotation[#, {{Labeled}, Charting`Private`Tag$1494087, {1}}]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{2., -14.82}, {2., -5.74}, {2., -1.1}, {2., 6.09}, {2., 
       16.46}}], 
      {Opacity[0.3], 
       LineBox[{{{0, -14.82}, {2., -14.82}}, {{0, -5.74}, {2., -5.74}}, {{
          0, -1.1}, {2., -1.1}}, {{0, 6.09}, {2., 6.09}}, {{0, 16.46}, {2., 
          16.46}}}]}},
     Annotation[#, {{Labeled}, Charting`Private`Tag$1494087, {2}}]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{1., 0.3231729579214093}, {1., 2.1465563118805235`}, {1., 
       1.5520451732668126`}, {1., 4.635440903465837}, {1., 
       11.07265934405897}}], 
      {Opacity[0.3], 
       LineBox[{{{0, 0.3231729579214093}, {1., 0.3231729579214093}}, {{
          0, 2.1465563118805235`}, {1., 2.1465563118805235`}}, {{
          0, 1.5520451732668126`}, {1., 1.5520451732668126`}}, {{
          0, 4.635440903465837}, {1., 4.635440903465837}}, {{
          0, 11.07265934405897}, {1., 11.07265934405897}}}]}},
     Annotation[#, {{Labeled}, Charting`Private`Tag$1494087, {
       3}}]& ], {}}, {{}, {
     InsetBox["\<\"TU-TILD\"\>", Offset[{0, 2}, {3., 18.74885}], 
      ImageScaled[{1, 0}]], 
     InsetBox["\<\"MVT MEAM TI\"\>", Offset[{0, 2}, {2., 16.46}], 
      ImageScaled[{1, 0}]], 
     InsetBox["\<\"MVT MEAM TI + UP-sample\"\>", 
      Offset[{0, 2}, {1., 11.07265934405897}], 
      ImageScaled[{1, 0}]]}}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\"", TraditionalForm], 
    FormBox["\"Fah (meV/atom)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{1049.85546875, Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"ZrC: Fah at 3805 K\"", TraditionalForm],
  PlotRange->{{0, 3.5}, {-20, 25}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{
  3.687091898148932*^9, {3.687091934475758*^9, 3.687091944579627*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Mean", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"dft5", "-", "meam5"}], ")"}], "[", 
     RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Mean", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"dftf5", "-", "meam5"}], ")"}], "[", 
     RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Transpose", "[", "MVTintAll", "]"}], "[", 
   RowBox[{"[", "4", "]"}], "]"}], "+", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Mean", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"dft5", "-", "meam5"}], ")"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6870921048641376`*^9, 3.687092108478628*^9}, {
  3.68709218140688*^9, 3.6870921830493183`*^9}, {3.687092454554111*^9, 
  3.687092454821209*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "15.14317295792141`", ",", "7.886556311880524`", ",", "2.6520451732668127`",
    ",", 
   RowBox[{"-", "1.4545590965341628`"}], ",", 
   RowBox[{"-", "5.387340655941031`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.687092045561631*^9, {3.687092105393713*^9, 3.687092108666891*^9}, 
   3.687092183642076*^9, 3.6870922178632183`*^9, 3.687092455426586*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8.433202351485084`", ",", "1.1611865717817555`", ",", 
   RowBox[{"-", "4.1776191212875675`"}], ",", 
   RowBox[{"-", "8.693694306929817`"}], ",", 
   RowBox[{"-", "12.83612933168277`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.687092045561631*^9, {3.687092105393713*^9, 3.687092108666891*^9}, 
   3.687092183642076*^9, 3.6870922178632183`*^9, 3.6870924554452333`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.3231729579214093`", ",", "2.1465563118805235`", ",", 
   "1.5520451732668126`", ",", "4.635440903465837`", ",", 
   "11.07265934405897`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.687092045561631*^9, {3.687092105393713*^9, 3.687092108666891*^9}, 
   3.687092183642076*^9, 3.6870922178632183`*^9, 3.687092455458493*^9}]
}, Open  ]]
},
WindowSize->{720, 830},
WindowMargins->{{19, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2490, 76, 327, "Input"],
Cell[CellGroupData[{
Cell[3073, 100, 426, 11, 54, "Input"],
Cell[3502, 113, 170, 2, 32, "Output"],
Cell[3675, 117, 172, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3884, 124, 276, 7, 32, "Input"],
Cell[4163, 133, 72, 1, 32, "Output"]
}, Open  ]],
Cell[4250, 137, 3267, 93, 327, "Input"],
Cell[CellGroupData[{
Cell[7542, 234, 4987, 128, 453, "Input"],
Cell[12532, 364, 84763, 1608, 717, "Output"],
Cell[97298, 1974, 1083, 26, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98418, 2005, 1160, 32, 117, "Input"],
Cell[99581, 2039, 1554, 42, 103, "Output"],
Cell[101138, 2083, 1336, 37, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102511, 2125, 1364, 39, 96, "Input"],
Cell[103878, 2166, 115609, 1960, 424, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219524, 4131, 2862, 76, 306, "Input"],
Cell[222389, 4209, 3439, 73, 677, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225865, 4287, 1170, 36, 75, "Input"],
Cell[227038, 4325, 398, 9, 32, "Output"],
Cell[227439, 4336, 412, 8, 32, "Output"],
Cell[227854, 4346, 365, 8, 32, "Output"]
}, Open  ]]
}
]
*)

