(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    523395,      10512]
NotebookOptionsPosition[    520871,      10431]
NotebookOutlinePosition[    521223,      10447]
CellTagsIndexPosition[    521180,      10444]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"Some", " ", "basic", " ", "information"}], ";"}], 
  "Section"]], "Input",
 CellChangeTimes->{{3.7082578223520327`*^9, 3.708257822354642*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"alatts", "=", 
   RowBox[{"{", 
    RowBox[{
    "4.575", ",", "4.600", ",", "4.625", ",", "4.6583", ",", "4.685", ",", 
     "4.730", ",", "4.759", ",", "4.801", ",", "4.850"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tempps", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "10", ",", "300", ",", "500", ",", "760", ",", "1000", ",", 
     "1500", ",", "1900", ",", "2500", ",", "3200", ",", "3800"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temppps", "=", 
   RowBox[{"tempps", "[", 
    RowBox[{"[", 
     RowBox[{"2", ";;", "11"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temps2", "=", 
   RowBox[{"{", 
    RowBox[{
    "300", ",", "300", ",", "760", ",", "1900", ",", "2500", ",", "3200", ",",
      "3800"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temps3", "=", 
   RowBox[{"{", 
    RowBox[{
    "300", ",", "760", ",", "1900", ",", "2500", ",", "3200", ",", "3800"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"THz2meV", "=", 
   RowBox[{"1", "/", "4.135665538536"}]}], ";", 
  RowBox[{"K2meV", "=", "0.086173324"}], ";", 
  RowBox[{"kjmol2evatom", "=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"96.487", "*", "64"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nat", "=", "64"}], ";", 
  RowBox[{"Natvac", "=", "63"}], ";", 
  RowBox[{"mass", "=", 
   RowBox[{"{", 
    RowBox[{"91.224", ",", "12.0107", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ang2bohr", "=", 
   RowBox[{"1", "/", "0.529177208"}]}], ";", 
  RowBox[{"ev2har", "=", 
   RowBox[{"1", "/", "27.211396"}]}], ";", 
  RowBox[{"kB", "=", 
   RowBox[{"1000", "*", "8.617332478", "*", 
    RowBox[{"10", "^", 
     RowBox[{"\[Minus]", "5"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eVperAng2harperbohr", "=", 
   RowBox[{"ev2har", "/", "ang2bohr"}]}], ";", 
  RowBox[{"eVperAng22harperbohr2", "=", 
   RowBox[{
    RowBox[{"ev2har", "/", "ang2bohr"}], "/", "ang2bohr"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HarBohr", "=", 
    RowBox[{"meVperAng22harperbohr2", "=", 
     RowBox[{"0.001", "*", 
      RowBox[{
       RowBox[{"ev2har", "/", "ang2bohr"}], "/", "ang2bohr"}]}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Constant", ",", " ", 
    RowBox[{"Fermi", "-", 
     RowBox[{"Dirac", " ", "and", " ", "Fermi"}], "-", 
     RowBox[{"Dirac", " ", "changing", " ", "with", " ", "energy"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K2eV", "=", 
   RowBox[{"8.617332478", "*", 
    RowBox[{"10", "^", 
     RowBox[{"\[Minus]", "5"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fermiDirac", "[", 
    RowBox[{"energy_", ",", "temp_"}], "]"}], ":=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"energy", "/", 
        RowBox[{"(", 
         RowBox[{"K2eV", "*", "temp"}], ")"}]}], "]"}], "+", "1"}], ")"}]}]}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "define", " ", "sigma", " ", "and8", " ", "kappa", " ", "kernels"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"temp", " ", "in", " ", "energy", " ", "units"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigmaK", "[", 
   RowBox[{"energy_", ",", "temp_"}], "]"}], ":=", 
  RowBox[{"-", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"fermiDirac", "[", 
      RowBox[{"energy", ",", "temp"}], "]"}], ",", "energy"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kappaK", "[", 
   RowBox[{"energy_", ",", "temp_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"1", "/", "temp"}], ")"}]}], "*", 
   RowBox[{"(", 
    RowBox[{"energy", "^", "2"}], ")"}], "*", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"fermiDirac", "[", 
      RowBox[{"energy", ",", "temp"}], "]"}], ",", "energy"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eV2ryd", "=", 
   RowBox[{"1", "/", "13.605698066"}]}], ";", 
  RowBox[{"ryd2eV", "=", "13.605698066"}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Volumes/MicroSD/Dropbox/PostDoc_SD/NEB/FINAL_PATHS_FOR_PAPER/\>\"", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{"{", "\"\<3_vol_temp_dist_energy\>\"", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NEBdata", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ReadList", "[", 
       RowBox[{
        RowBox[{"file", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "Number", ",", " ", "Number", ",", "Number", ",", " ", "Number", ",",
           "Number", ",", " ", "Number", ",", "Number", ",", " ", "Number", 
          ",", "Number", ",", " ", "Number", ",", "Number", ",", " ", 
          "Number", ",", "Number"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "1"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",\

 CellChangeTimes->{{3.7082578388707447`*^9, 3.708257842540681*^9}, 
   3.708258108693862*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"{", 
    RowBox[{"0.125", ",", "0", ",", "0.125"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"{", 
    RowBox[{"0.1339", ",", "0.07524", ",", "0.3666"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{"b", "-", "a"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"2", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{"c", "^", "2"}], "]"}], "^", "0.5"}], "*", "2", "*", "4.6583"}], 
  "+", "4.349635"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"2", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{"c", "^", "2"}], "]"}], "^", "0.5"}], "*", "2", "*", "4.759"}], 
  "+", "3.576795"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"2", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{"c", "^", "2"}], "]"}], "^", "0.5"}], "*", "2", "*", "4.850"}], 
  "+", "3.668868"}]}], "Input",
 CellChangeTimes->{{3.708258408220529*^9, 3.708258477494133*^9}, {
  3.708258561179366*^9, 3.708258601603195*^9}, {3.708259691010112*^9, 
  3.708259792073811*^9}, {3.708260151918232*^9, 3.7082601873242598`*^9}}],

Cell[BoxData["9.067582860938451`"], "Output",
 CellChangeTimes->{{3.7082584192772303`*^9, 3.7082584776571703`*^9}, {
   3.708258566906186*^9, 3.708258601986578*^9}, {3.70825972872787*^9, 
   3.708259792471857*^9}, 3.7082598779228067`*^9, {3.708260154508686*^9, 
   3.708260187698316*^9}}],

Cell[BoxData["8.396732288325374`"], "Output",
 CellChangeTimes->{{3.7082584192772303`*^9, 3.7082584776571703`*^9}, {
   3.708258566906186*^9, 3.708258601986578*^9}, {3.70825972872787*^9, 
   3.708259792471857*^9}, 3.7082598779228067`*^9, {3.708260154508686*^9, 
   3.708260187709352*^9}}],

Cell[BoxData["8.580970510690914`"], "Output",
 CellChangeTimes->{{3.7082584192772303`*^9, 3.7082584776571703`*^9}, {
   3.708258566906186*^9, 3.708258601986578*^9}, {3.70825972872787*^9, 
   3.708259792471857*^9}, 3.7082598779228067`*^9, {3.708260154508686*^9, 
   3.708260187715535*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"0.07924", "*", "4.6583", "*", "2"}], "\[IndentingNewLine]", 
 RowBox[{"0.07924", "*", "4.759", "*", "2"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"0.07924", "*", "4.850", "*", "2"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.708345433577153*^9, 3.70834546477209*^9, {3.708345534179698*^9, 
   3.7083455369839*^9}, {3.708349226892692*^9, 3.70834923125554*^9}, {
   3.708349637508411*^9, 3.708349654169903*^9}}],

Cell[BoxData["0.738247384`"], "Output",
 CellChangeTimes->{
  3.708345434385384*^9, 3.708345465274787*^9, 3.7083455374003*^9, 
   3.70834923179084*^9, {3.708349641867021*^9, 3.708349654894511*^9}}],

Cell[BoxData["0.7542063200000001`"], "Output",
 CellChangeTimes->{
  3.708345434385384*^9, 3.708345465274787*^9, 3.7083455374003*^9, 
   3.70834923179084*^9, {3.708349641867021*^9, 3.708349654909905*^9}}],

Cell[BoxData["0.768628`"], "Output",
 CellChangeTimes->{
  3.708345434385384*^9, 3.708345465274787*^9, 3.7083455374003*^9, 
   3.70834923179084*^9, {3.708349641867021*^9, 3.708349654925482*^9}}]
}, Open  ]],

Cell[BoxData["}"], "Input",
 CellChangeTimes->{3.708258426392161*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NEBdata", "[", 
  RowBox[{"[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.708258114857688*^9, 3.7082581257416286`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "4.6583`", ",", "0", ",", "1.931386`", ",", "0.995135`", ",", 
   "4.759`", ",", "2479", ",", "2.290072`", ",", "1.182288`", ",", "4.85`", 
   ",", "3821", ",", "2.427912`", ",", "1.402299`"}], "}"}]], "Output",
 CellChangeTimes->{{3.708258115818842*^9, 3.708258126000414*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", ".67127382"}], "E"}], "+", "03"}]], "Input",
 CellChangeTimes->{{3.708258103149074*^9, 3.708258103157441*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"index", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Transpose", "[", "NEBdata", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"{", "1", "}"}], "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"vols", "=", 
  RowBox[{
   RowBox[{"Transpose", "[", "NEBdata", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "6", ",", "10"}], "}"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"temp", "=", 
  RowBox[{
   RowBox[{"Transpose", "[", "NEBdata", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "7", ",", "11"}], "}"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"dist", "=", 
  RowBox[{
   RowBox[{"Transpose", "[", "NEBdata", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"{", 
     RowBox[{"4", ",", "8", ",", "12"}], "}"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"e0s", "=", 
  RowBox[{
   RowBox[{"Transpose", "[", "NEBdata", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"{", 
     RowBox[{"5", ",", "9", ",", "13"}], "}"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.708259891012113*^9, 3.708259898557585*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.7082578441228523`*^9, {3.708259899280899*^9, 3.70825990688378*^9}, 
   3.708260206775427*^9, 3.708260287036291*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "4.6583`", ",", "4.6583`", ",", "4.6583`", ",", "4.6583`", ",", "4.6583`",
      ",", "4.6583`", ",", "4.6583`", ",", "4.6583`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4.759`", ",", "4.759`", ",", "4.759`", ",", "4.759`", ",", "4.759`", ",",
      "4.759`", ",", "4.759`", ",", "4.759`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4.85`", ",", "4.85`", ",", "4.85`", ",", "4.85`", ",", "4.85`", ",", 
     "4.85`", ",", "4.85`", ",", "4.85`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7082578441228523`*^9, {3.708259899280899*^9, 3.70825990688378*^9}, 
   3.708260206775427*^9, 3.708260287044703*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2479", ",", "2479", ",", "2479", ",", "2479", ",", "2479", ",", "2479", 
     ",", "2479", ",", "2479"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3821", ",", "3821", ",", "3821", ",", "3821", ",", "3821", ",", "3821", 
     ",", "3821", ",", "3821"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7082578441228523`*^9, {3.708259899280899*^9, 3.70825990688378*^9}, 
   3.708260206775427*^9, 3.708260287051839*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.540279`"}], ",", "0.`", ",", "0.540279`", ",", 
     "0.881051`", ",", "1.931386`", ",", "4.349635`", ",", "6.70861`", ",", 
     "9.06758`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.505926`"}], ",", "0.`", ",", "0.505926`", ",", 
     "0.917487`", ",", "2.290072`", ",", "3.576795`", ",", "5.98676`", ",", 
     "8.39673`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.491838`"}], ",", "0.`", ",", "0.491838`", ",", 
     "0.973187`", ",", "2.427912`", ",", "3.668868`", ",", "6.12492`", ",", 
     "8.58097`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7082578441228523`*^9, {3.708259899280899*^9, 3.70825990688378*^9}, 
   3.708260206775427*^9, 3.7082602870584927`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.459286`", ",", "0.`", ",", "0.459286`", ",", "0.390465`", ",", 
     "0.995135`", ",", 
     RowBox[{"-", "3.362815`"}], ",", "5.`", ",", 
     RowBox[{"-", "3.362815`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.415663`", ",", "0.`", ",", "0.415663`", ",", "0.297066`", ",", 
     "1.182288`", ",", 
     RowBox[{"-", "2.827372`"}], ",", "6.`", ",", 
     RowBox[{"-", "2.827372`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.408561`", ",", "0.`", ",", "0.408561`", ",", "0.224986`", ",", 
     "1.402299`", ",", 
     RowBox[{"-", "2.077542`"}], ",", "7.`", ",", 
     RowBox[{"-", "2.077542`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7082578441228523`*^9, {3.708259899280899*^9, 3.70825990688378*^9}, 
   3.708260206775427*^9, 3.70826028706678*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"diste0s", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"dist", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"e0s", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListLinePlot", "@", "diste0s"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{"diste0s", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"Method", "\[Rule]", "\"\<Spline\>\""}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}], "[", "x", 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "@", 
     RowBox[{"diste0s", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.7082578553837633`*^9, {3.708259916023576*^9, 3.708259916109659*^9}, {
   3.708260213839222*^9, 3.708260214098763*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
ma0epU7kjq/8t7SkhKe3OEvYp6oT/wNTQPsi
       "]]}}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{-0.540279, 0.459286}, {0., 0.}, {0.540279, 0.459286}, {
       0.881051, 0.390465}, {1.931386, 0.995135}, {4.349635, -3.362815}, {
       6.70861, 5.}, {9.06758, -3.362815}}]}, {}}, {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-12.852219325285851`, 5.1810939673549825`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.708257855858656*^9, {3.70825991023592*^9, 3.708259916518265*^9}, {
   3.708260209515832*^9, 3.7082602146744223`*^9}, 3.708260289186784*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"F", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"diste0s", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], "*", 
          RowBox[{
           RowBox[{"(", "1", ")"}], "^", "j"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"diste0s", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
     "2"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.708260914838375*^9, 3.708260926410535*^9}, 
   3.7082609841134577`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.540279`"}], ",", "0.459286`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.530279`"}], ",", "0.46028600000000003`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.550279`"}], ",", "0.46028600000000003`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0.001`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.01`"}], ",", "0.001`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.540279`", ",", "0.459286`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.550279`", ",", "0.46028600000000003`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.530279`", ",", "0.46028600000000003`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.881051`", ",", "0.390465`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.891051`", ",", "0.391465`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.871051`", ",", "0.391465`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.931386`", ",", "0.995135`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.941386`", ",", "0.996135`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.921386`", ",", "0.996135`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.349635`", ",", 
       RowBox[{"-", "3.362815`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.359635`", ",", 
       RowBox[{"-", "3.361815`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.339635`", ",", 
       RowBox[{"-", "3.361815`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.70861`", ",", "5.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.71861`", ",", "5.001`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.69861`", ",", "5.001`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9.06758`", ",", 
       RowBox[{"-", "3.362815`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9.07758`", ",", 
       RowBox[{"-", "3.361815`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9.05758`", ",", 
       RowBox[{"-", "3.361815`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.505926`"}], ",", "0.415663`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.495926`"}], ",", "0.416663`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.515926`"}], ",", "0.416663`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0.001`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.01`"}], ",", "0.001`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.505926`", ",", "0.415663`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.515926`", ",", "0.416663`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.495926`", ",", "0.416663`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.917487`", ",", "0.297066`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.9274870000000001`", ",", "0.298066`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.907487`", ",", "0.298066`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.290072`", ",", "1.182288`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.3000719999999997`", ",", "1.183288`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.280072`", ",", "1.183288`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.576795`", ",", 
       RowBox[{"-", "2.827372`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.586795`", ",", 
       RowBox[{"-", "2.826372`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.5667950000000004`", ",", 
       RowBox[{"-", "2.826372`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.98676`", ",", "6.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.99676`", ",", "6.001`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.9767600000000005`", ",", "6.001`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.39673`", ",", 
       RowBox[{"-", "2.827372`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.40673`", ",", 
       RowBox[{"-", "2.826372`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.38673`", ",", 
       RowBox[{"-", "2.826372`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.491838`"}], ",", "0.408561`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.481838`"}], ",", "0.409561`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.501838`"}], ",", "0.409561`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0.001`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.01`"}], ",", "0.001`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.491838`", ",", "0.408561`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.501838`", ",", "0.409561`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.481838`", ",", "0.409561`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.973187`", ",", "0.224986`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.983187`", ",", "0.225986`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.963187`", ",", "0.225986`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.427912`", ",", "1.402299`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.437912`", ",", "1.4032989999999999`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.4179120000000003`", ",", "1.4032989999999999`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.668868`", ",", 
       RowBox[{"-", "2.077542`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.6788679999999996`", ",", 
       RowBox[{"-", "2.0765420000000003`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.658868`", ",", 
       RowBox[{"-", "2.0765420000000003`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.12492`", ",", "7.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.13492`", ",", "7.001`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.114920000000001`", ",", "7.001`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.58097`", ",", 
       RowBox[{"-", "2.077542`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.59097`", ",", 
       RowBox[{"-", "2.0765420000000003`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.57097`", ",", 
       RowBox[{"-", "2.0765420000000003`"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.70826092775744*^9, 3.7082609848191957`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Function", " ", "to", " ", "force", " ", "the", " ", "gradients", " ", 
    "to", " ", "be", " ", "correct", " ", "either", " ", "side"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"deltaX", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"deltaForce", "=", "0.00005"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"F", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a_", ",", "b_"}], "}"}], ",", "j_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "+", 
         RowBox[{"deltaX", "/", "1000"}]}], ",", 
        RowBox[{"b", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "^", 
            RowBox[{"(", "j", ")"}]}], ")"}], "deltaForce"}]}]}], "}"}], ",", 
      
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "-", 
         RowBox[{"deltaX", "/", "1000"}]}], ",", 
        RowBox[{"b", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "^", 
            RowBox[{"(", "j", ")"}]}], ")"}], "deltaForce"}]}]}], "}"}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{"diste0sGrad", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"Flatten", "@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"F", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"diste0s", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}], ",", "j"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"diste0s", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ",",
         "2"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"diste0sGradGP", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#1", "\[Rule]", "#2"}], "}"}], "&"}], "@@@", 
        RowBox[{"diste0sGrad", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Pdiste0sGradGP", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Predict", "[", 
       RowBox[{
        RowBox[{"diste0sGradGP", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"Method", "\[Rule]", "\"\<GaussianProcess\>\""}]}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.708260514901207*^9, 3.7082605149678307`*^9}, {
   3.7082606438323*^9, 3.708260644213272*^9}, {3.708260679577579*^9, 
   3.708260698399446*^9}, 3.7082607465567913`*^9, {3.7082610136189537`*^9, 
   3.708261131896173*^9}, {3.70826116925206*^9, 3.708261170874415*^9}, {
   3.708261210489277*^9, 3.70826121091541*^9}, {3.70826125322992*^9, 
   3.708261260103258*^9}, {3.7082613706719027`*^9, 3.7082614134666567`*^9}, {
   3.7082616166635733`*^9, 3.7082617118438883`*^9}, {3.708261783986219*^9, 
   3.708261811679709*^9}, {3.708261850243595*^9, 3.7082620363783207`*^9}, {
   3.708262083262732*^9, 3.708262102590053*^9}, {3.708262197405322*^9, 
   3.7082621974744864`*^9}, {3.708262283745121*^9, 3.7082622838514757`*^9}, 
   3.708262318721099*^9, 3.708343101803217*^9, {3.7083431344817543`*^9, 
   3.708343242364668*^9}, 3.7083433507131653`*^9, {3.708343407247643*^9, 
   3.708343407408086*^9}}],

Cell[BoxData["0.00005`"], "Output",
 CellChangeTimes->{
  3.708257862837781*^9, 3.708260062691218*^9, 3.708260292304638*^9, 
   3.7082605152492113`*^9, 3.708260645030786*^9, 3.708260700873591*^9, 
   3.70826074719058*^9, {3.7082610821358624`*^9, 3.708261132262083*^9}, 
   3.708261174295692*^9, 3.7082612116192493`*^9, 3.708261261477203*^9, 
   3.7082613732525797`*^9, 3.708261413869446*^9, {3.708261618342708*^9, 
   3.708261712810464*^9}, 3.708261812005157*^9, 3.7082618506268387`*^9, {
   3.708261880809202*^9, 3.708262004268682*^9}, 3.708262036941803*^9, {
   3.7082620843524218`*^9, 3.7082621028853073`*^9}, 3.7082621996462383`*^9, 
   3.70826228409945*^9, 3.708262319076458*^9, 3.708343102488744*^9, {
   3.7083431360526867`*^9, 3.70834324282876*^9}, 3.708343351142694*^9, 
   3.708343407952138*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.540279`"}], ",", "0.459286`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.539779`"}], ",", "0.45923600000000003`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5407789999999999`"}], ",", "0.45923600000000003`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0005`", ",", "0.00005`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0005`"}], ",", "0.00005`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.540279`", ",", "0.459286`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5407789999999999`", ",", "0.45923600000000003`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0.539779`", ",", "0.45923600000000003`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.881051`", ",", "0.390465`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.881551`", ",", "0.390515`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8805510000000001`", ",", "0.390515`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.931386`", ",", "0.995135`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.931886`", ",", "0.995085`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.930886`", ",", "0.995085`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.349635`", ",", 
       RowBox[{"-", "3.362815`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.350135`", ",", 
       RowBox[{"-", "3.362765`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.349135`", ",", 
       RowBox[{"-", "3.362765`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.70861`", ",", "5.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.70911`", ",", "4.99995`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.7081100000000005`", ",", "4.99995`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9.06758`", ",", 
       RowBox[{"-", "3.362815`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9.06808`", ",", 
       RowBox[{"-", "3.362765`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9.067079999999999`", ",", 
       RowBox[{"-", "3.362765`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.505926`"}], ",", "0.415663`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.505426`"}], ",", "0.415613`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5064259999999999`"}], ",", "0.415613`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0005`", ",", "0.00005`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0005`"}], ",", "0.00005`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.505926`", ",", "0.415663`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5064259999999999`", ",", "0.415613`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.505426`", ",", "0.415613`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.917487`", ",", "0.297066`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.917987`", ",", "0.297116`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.9169870000000001`", ",", "0.297116`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.290072`", ",", "1.182288`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.290572`", ",", "1.182238`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.2895719999999997`", ",", "1.182238`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.576795`", ",", 
       RowBox[{"-", "2.827372`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.5772950000000003`", ",", 
       RowBox[{"-", "2.827322`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.576295`", ",", 
       RowBox[{"-", "2.827322`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.98676`", ",", "6.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.98726`", ",", "5.99995`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.986260000000001`", ",", "5.99995`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.39673`", ",", 
       RowBox[{"-", "2.827372`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.39723`", ",", 
       RowBox[{"-", "2.827322`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.39623`", ",", 
       RowBox[{"-", "2.827322`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.491838`"}], ",", "0.408561`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.491338`"}], ",", "0.408511`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.492338`"}], ",", "0.408511`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0005`", ",", "0.00005`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0005`"}], ",", "0.00005`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.491838`", ",", "0.408561`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.492338`", ",", "0.408511`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.491338`", ",", "0.408511`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.973187`", ",", "0.224986`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.973687`", ",", "0.22503599999999999`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.9726870000000001`", ",", "0.22503599999999999`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"2.427912`", ",", "1.402299`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.4284120000000002`", ",", "1.4022489999999999`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.427412`", ",", "1.4022489999999999`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.668868`", ",", 
       RowBox[{"-", "2.077542`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.669368`", ",", 
       RowBox[{"-", "2.0774920000000003`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.6683679999999996`", ",", 
       RowBox[{"-", "2.0774920000000003`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.12492`", ",", "7.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.12542`", ",", "6.99995`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.124420000000001`", ",", "6.99995`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.58097`", ",", 
       RowBox[{"-", "2.077542`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.581470000000001`", ",", 
       RowBox[{"-", "2.0774920000000003`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.58047`", ",", 
       RowBox[{"-", "2.0774920000000003`"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.708257862837781*^9, 3.708260062691218*^9, 3.708260292304638*^9, 
   3.7082605152492113`*^9, 3.708260645030786*^9, 3.708260700873591*^9, 
   3.70826074719058*^9, {3.7082610821358624`*^9, 3.708261132262083*^9}, 
   3.708261174295692*^9, 3.7082612116192493`*^9, 3.708261261477203*^9, 
   3.7082613732525797`*^9, 3.708261413869446*^9, {3.708261618342708*^9, 
   3.708261712810464*^9}, 3.708261812005157*^9, 3.7082618506268387`*^9, {
   3.708261880809202*^9, 3.708262004268682*^9}, 3.708262036941803*^9, {
   3.7082620843524218`*^9, 3.7082621028853073`*^9}, 3.7082621996462383`*^9, 
   3.70826228409945*^9, 3.708262319076458*^9, 3.708343102488744*^9, {
   3.7083431360526867`*^9, 3.70834324282876*^9}, 3.708343351142694*^9, 
   3.708343407968254*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.540279`"}], "\[Rule]", "0.459286`"}], ",", 
     RowBox[{
      RowBox[{"-", "0.539779`"}], "\[Rule]", "0.45923600000000003`"}], ",", 
     RowBox[{
      RowBox[{"-", "0.5407789999999999`"}], "\[Rule]", 
      "0.45923600000000003`"}], ",", 
     RowBox[{"0.`", "\[Rule]", "0.`"}], ",", 
     RowBox[{"0.0005`", "\[Rule]", "0.00005`"}], ",", 
     RowBox[{
      RowBox[{"-", "0.0005`"}], "\[Rule]", "0.00005`"}], ",", 
     RowBox[{"0.540279`", "\[Rule]", "0.459286`"}], ",", 
     RowBox[{"0.5407789999999999`", "\[Rule]", "0.45923600000000003`"}], ",", 
     
     RowBox[{"0.539779`", "\[Rule]", "0.45923600000000003`"}], ",", 
     RowBox[{"0.881051`", "\[Rule]", "0.390465`"}], ",", 
     RowBox[{"0.881551`", "\[Rule]", "0.390515`"}], ",", 
     RowBox[{"0.8805510000000001`", "\[Rule]", "0.390515`"}], ",", 
     RowBox[{"1.931386`", "\[Rule]", "0.995135`"}], ",", 
     RowBox[{"1.931886`", "\[Rule]", "0.995085`"}], ",", 
     RowBox[{"1.930886`", "\[Rule]", "0.995085`"}], ",", 
     RowBox[{"4.349635`", "\[Rule]", 
      RowBox[{"-", "3.362815`"}]}], ",", 
     RowBox[{"4.350135`", "\[Rule]", 
      RowBox[{"-", "3.362765`"}]}], ",", 
     RowBox[{"4.349135`", "\[Rule]", 
      RowBox[{"-", "3.362765`"}]}], ",", 
     RowBox[{"6.70861`", "\[Rule]", "5.`"}], ",", 
     RowBox[{"6.70911`", "\[Rule]", "4.99995`"}], ",", 
     RowBox[{"6.7081100000000005`", "\[Rule]", "4.99995`"}], ",", 
     RowBox[{"9.06758`", "\[Rule]", 
      RowBox[{"-", "3.362815`"}]}], ",", 
     RowBox[{"9.06808`", "\[Rule]", 
      RowBox[{"-", "3.362765`"}]}], ",", 
     RowBox[{"9.067079999999999`", "\[Rule]", 
      RowBox[{"-", "3.362765`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.505926`"}], "\[Rule]", "0.415663`"}], ",", 
     RowBox[{
      RowBox[{"-", "0.505426`"}], "\[Rule]", "0.415613`"}], ",", 
     RowBox[{
      RowBox[{"-", "0.5064259999999999`"}], "\[Rule]", "0.415613`"}], ",", 
     RowBox[{"0.`", "\[Rule]", "0.`"}], ",", 
     RowBox[{"0.0005`", "\[Rule]", "0.00005`"}], ",", 
     RowBox[{
      RowBox[{"-", "0.0005`"}], "\[Rule]", "0.00005`"}], ",", 
     RowBox[{"0.505926`", "\[Rule]", "0.415663`"}], ",", 
     RowBox[{"0.5064259999999999`", "\[Rule]", "0.415613`"}], ",", 
     RowBox[{"0.505426`", "\[Rule]", "0.415613`"}], ",", 
     RowBox[{"0.917487`", "\[Rule]", "0.297066`"}], ",", 
     RowBox[{"0.917987`", "\[Rule]", "0.297116`"}], ",", 
     RowBox[{"0.9169870000000001`", "\[Rule]", "0.297116`"}], ",", 
     RowBox[{"2.290072`", "\[Rule]", "1.182288`"}], ",", 
     RowBox[{"2.290572`", "\[Rule]", "1.182238`"}], ",", 
     RowBox[{"2.2895719999999997`", "\[Rule]", "1.182238`"}], ",", 
     RowBox[{"3.576795`", "\[Rule]", 
      RowBox[{"-", "2.827372`"}]}], ",", 
     RowBox[{"3.5772950000000003`", "\[Rule]", 
      RowBox[{"-", "2.827322`"}]}], ",", 
     RowBox[{"3.576295`", "\[Rule]", 
      RowBox[{"-", "2.827322`"}]}], ",", 
     RowBox[{"5.98676`", "\[Rule]", "6.`"}], ",", 
     RowBox[{"5.98726`", "\[Rule]", "5.99995`"}], ",", 
     RowBox[{"5.986260000000001`", "\[Rule]", "5.99995`"}], ",", 
     RowBox[{"8.39673`", "\[Rule]", 
      RowBox[{"-", "2.827372`"}]}], ",", 
     RowBox[{"8.39723`", "\[Rule]", 
      RowBox[{"-", "2.827322`"}]}], ",", 
     RowBox[{"8.39623`", "\[Rule]", 
      RowBox[{"-", "2.827322`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.491838`"}], "\[Rule]", "0.408561`"}], ",", 
     RowBox[{
      RowBox[{"-", "0.491338`"}], "\[Rule]", "0.408511`"}], ",", 
     RowBox[{
      RowBox[{"-", "0.492338`"}], "\[Rule]", "0.408511`"}], ",", 
     RowBox[{"0.`", "\[Rule]", "0.`"}], ",", 
     RowBox[{"0.0005`", "\[Rule]", "0.00005`"}], ",", 
     RowBox[{
      RowBox[{"-", "0.0005`"}], "\[Rule]", "0.00005`"}], ",", 
     RowBox[{"0.491838`", "\[Rule]", "0.408561`"}], ",", 
     RowBox[{"0.492338`", "\[Rule]", "0.408511`"}], ",", 
     RowBox[{"0.491338`", "\[Rule]", "0.408511`"}], ",", 
     RowBox[{"0.973187`", "\[Rule]", "0.224986`"}], ",", 
     RowBox[{"0.973687`", "\[Rule]", "0.22503599999999999`"}], ",", 
     RowBox[{"0.9726870000000001`", "\[Rule]", "0.22503599999999999`"}], ",", 
     
     RowBox[{"2.427912`", "\[Rule]", "1.402299`"}], ",", 
     RowBox[{"2.4284120000000002`", "\[Rule]", "1.4022489999999999`"}], ",", 
     RowBox[{"2.427412`", "\[Rule]", "1.4022489999999999`"}], ",", 
     RowBox[{"3.668868`", "\[Rule]", 
      RowBox[{"-", "2.077542`"}]}], ",", 
     RowBox[{"3.669368`", "\[Rule]", 
      RowBox[{"-", "2.0774920000000003`"}]}], ",", 
     RowBox[{"3.6683679999999996`", "\[Rule]", 
      RowBox[{"-", "2.0774920000000003`"}]}], ",", 
     RowBox[{"6.12492`", "\[Rule]", "7.`"}], ",", 
     RowBox[{"6.12542`", "\[Rule]", "6.99995`"}], ",", 
     RowBox[{"6.124420000000001`", "\[Rule]", "6.99995`"}], ",", 
     RowBox[{"8.58097`", "\[Rule]", 
      RowBox[{"-", "2.077542`"}]}], ",", 
     RowBox[{"8.581470000000001`", "\[Rule]", 
      RowBox[{"-", "2.0774920000000003`"}]}], ",", 
     RowBox[{"8.58047`", "\[Rule]", 
      RowBox[{"-", "2.0774920000000003`"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.708257862837781*^9, 3.708260062691218*^9, 3.708260292304638*^9, 
   3.7082605152492113`*^9, 3.708260645030786*^9, 3.708260700873591*^9, 
   3.70826074719058*^9, {3.7082610821358624`*^9, 3.708261132262083*^9}, 
   3.708261174295692*^9, 3.7082612116192493`*^9, 3.708261261477203*^9, 
   3.7082613732525797`*^9, 3.708261413869446*^9, {3.708261618342708*^9, 
   3.708261712810464*^9}, 3.708261812005157*^9, 3.7082618506268387`*^9, {
   3.708261880809202*^9, 3.708262004268682*^9}, 3.708262036941803*^9, {
   3.7082620843524218`*^9, 3.7082621028853073`*^9}, 3.7082621996462383`*^9, 
   3.70826228409945*^9, 3.708262319076458*^9, 3.708343102488744*^9, {
   3.7083431360526867`*^9, 3.70834324282876*^9}, 3.708343351142694*^9, 
   3.7083434079850597`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["PredictorFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                 AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                 BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {All, All}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                 Axes -> False, AspectRatio -> 1, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                 FrameTicks -> None, FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Feature type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                 AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                 BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {All, All}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                 Axes -> False, AspectRatio -> 1, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                 FrameTicks -> None, FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Feature type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["24", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
          Baseline], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["PredictorFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                 AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                 BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {All, All}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                 Axes -> False, AspectRatio -> 1, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                 FrameTicks -> None, FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Feature type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                 AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                 BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {All, All}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                 Axes -> False, AspectRatio -> 1, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                 FrameTicks -> None, FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Feature type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["24", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
          Baseline], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["PredictorFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                 AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                 BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {All, All}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                 Axes -> False, AspectRatio -> 1, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                 FrameTicks -> None, FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Feature type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                 AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                 BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {All, All}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                 Axes -> False, AspectRatio -> 1, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                 FrameTicks -> None, FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GaussianProcess\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Feature type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["24", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
          Baseline], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.708257862837781*^9, 3.708260062691218*^9, 3.708260292304638*^9, 
   3.7082605152492113`*^9, 3.708260645030786*^9, 3.708260700873591*^9, 
   3.70826074719058*^9, {3.7082610821358624`*^9, 3.708261132262083*^9}, 
   3.708261174295692*^9, 3.7082612116192493`*^9, 3.708261261477203*^9, 
   3.7082613732525797`*^9, 3.708261413869446*^9, {3.708261618342708*^9, 
   3.708261712810464*^9}, 3.708261812005157*^9, 3.7082618506268387`*^9, {
   3.708261880809202*^9, 3.708262004268682*^9}, 3.708262036941803*^9, {
   3.7082620843524218`*^9, 3.7082621028853073`*^9}, 3.7082621996462383`*^9, 
   3.70826228409945*^9, 3.708262319076458*^9, 3.708343102488744*^9, {
   3.7083431360526867`*^9, 3.70834324282876*^9}, 3.708343351142694*^9, 
   3.708343409616625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vol", "=", "2"}], "}"}], ",", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Pdiste0sGradGP", "[", 
           RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Pdiste0sGradGP", "[", 
            RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], "+", 
          RowBox[{"StandardDeviation", "[", 
           RowBox[{
            RowBox[{"Pdiste0sGradGP", "[", 
             RowBox[{"[", "vol", "]"}], "]"}], "[", 
            RowBox[{"x", ",", "\"\<Distribution\>\""}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Pdiste0sGradGP", "[", 
            RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], "-", 
          RowBox[{"StandardDeviation", "[", 
           RowBox[{
            RowBox[{"Pdiste0sGradGP", "[", 
             RowBox[{"[", "vol", "]"}], "]"}], "[", 
            RowBox[{"x", ",", "\"\<Distribution\>\""}], "]"}], "]"}]}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"dist", "[", 
             RowBox[{"[", "vol", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "+", "0.1"}]}], "}"}], 
       ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Gray", ",", "Gray"}], "}"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", "3", "}"}]}], "}"}]}], ",", 
       RowBox[{"Exclusions", "\[Rule]", "\"\<None\>\""}], ",", 
       RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<Prediction\>\"", ",", 
            "\"\<1-\[Sigma] confidence interval\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.2", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Reaction path (\[Angstrom])\>\"", ",", 
            RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Reaction barrier (eV)\>\"", ",", 
            RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}], ",", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"diste0s", "[", 
        RowBox[{"[", "vol", "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"legends", "[", 
           RowBox[{"[", "vol", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.2", ",", "0.8"}], "}"}]}], "]"}]}]}], "]"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vol", "=", "3"}], "}"}], ",", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Pdiste0sGradGP", "[", 
           RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Pdiste0sGradGP", "[", 
            RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], "+", 
          RowBox[{"StandardDeviation", "[", 
           RowBox[{
            RowBox[{"Pdiste0sGradGP", "[", 
             RowBox[{"[", "vol", "]"}], "]"}], "[", 
            RowBox[{"x", ",", "\"\<Distribution\>\""}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Pdiste0sGradGP", "[", 
            RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], "-", 
          RowBox[{"StandardDeviation", "[", 
           RowBox[{
            RowBox[{"Pdiste0sGradGP", "[", 
             RowBox[{"[", "vol", "]"}], "]"}], "[", 
            RowBox[{"x", ",", "\"\<Distribution\>\""}], "]"}], "]"}]}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"dist", "[", 
             RowBox[{"[", "vol", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "+", "0.1"}]}], "}"}], 
       ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Gray", ",", "Gray"}], "}"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", "3", "}"}]}], "}"}]}], ",", 
       RowBox[{"Exclusions", "\[Rule]", "\"\<None\>\""}], ",", 
       RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<Prediction\>\"", ",", 
            "\"\<1-\[Sigma] confidence interval\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.2", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Reaction path (\[Angstrom])\>\"", ",", 
            RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Reaction barrier (eV)\>\"", ",", 
            RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}], ",", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"diste0s", "[", 
        RowBox[{"[", "vol", "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"legends", "[", 
           RowBox[{"[", "vol", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.2", ",", "0.8"}], "}"}]}], "]"}]}]}], "]"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.708262203122891*^9, 3.708262203208437*^9}, {
  3.708343112332933*^9, 3.708343112515779*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{GraphicsComplexBox[CompressedData["
1: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
+lzvZAfy9YviOpXW3zTka4u5eE6uby+Qr623SLvv0WMgX28LBGEJeSxf+yVr
z/gf/oF8XR965pAdmYl8HZhdIlVAnEa+nn30gP55xxTy9WX1JA/PsAGA+zoh
0680yGcew33Np+lwMe0Yy9dvSAebIpdGkK9F3tC9ZeP+AdzXGcJ8w86CRIj7
2h/YvE0t4Ue+PjN1dqp+twjy9aO0jINbl1i+PvAw7R+WKIx8fb5IYK7vHR/E
fb3xqICQeBoHxH3dMcBdvHXfFMB9rcG3/n746DSG+zouyeKuVQLL1zTzqg1E
HgbAfb1h8NKTny4M5OvFVJGV+epS5Ou3345Zben4gnzdT+gGR64wkK/rRnrv
gPp25Gv31uuU2NNjyNfDZHXK4Fcm8nV3yu6vHUJTyNf5FFWsPHcS+frJ8VhR
eioV+Xr0Wdmao5YcyNcZP05ncjPZka9NvVWtdijUAtzX7nc2Rf3pW0G+DnUS
SH+kwAVxXw/UUTotsgWRr+W7PgsI/hVFvnb2T6IHWIghX2vnbflVclwI+dqf
Im+bWcMFcV+ndlPklZ8RIO7rW9Y+Nxf2MwDua4+gM1n/Vucz7ush/tdDovrt
yNePleWeN/l3IF+/djaMTfhzB/m6iJTQXEnoQr5ejnQTmPnE8rUtu4Sm6+p7
Dvf1GpnI9Pgj08jXqdFSfQ3+08jXMHs4NUxhCvl6Z5P3Q9KJEeTrQKvWoF1x
TOTr0lvc11WesXytpb5PSPDFJPK1xTtbHXYwDXBf6+yrfuohzQlxX6v/jdok
abgW4r4W9jptaBAvjHw9eE9hl9wKy9fyi+1llH0iyNdPQ2RLDHT5ka9f7/OL
4XrKCXFf+6ql5XflzwDc11eXM/nNcseQr9tmyfXCrixfM4adrm450I58XdA8
ZdN1i+Vrt7XmO3otopGvF081m20WaUO+tjnLLNGk05GvO4/Kv/yP+RX5+tdt
hv2AxCRIyzS0v5i2DNxtgn4un2Iib1N0k3TLp1neDrrx5+qu1XmB+7rD4Jrg
7s9E5Gv3nrjmOaMlDPc1ZfJ+3NjgMAjZXh09/UoINif3eBxRYYe4rwnkJ5cy
s1m+ni5NcJz3FIW4nwmeCYe4bi0C3M9jC2usBus4kZ+13+ucDuikIz+/HZlv
KQtrQH5OlLR1aQ0sRn5+s4RlF71g+fnR4xOdG3lakZf1R19yHYlmIi8Lu+0q
comfQl7+nPzcZFh/Cowlxe4K3rMGskXcSBHk7UJ+/rG2c/Ea1wqG+5lDNe1N
7msidZk39t5lhiB0lJfIk346j/zccE/b0O67CPJzlO3WxMCe1flG3JP9KVkG
0uTsl6Z4/yI/n6t54allPI/hfo77Tsp2tGL5ed5m+pLh2Ajq0+HQPt2Hpx35
Wddl7tyDyxXIz/3Pp9kCOcqQn894Jo4Za7P8vBdTPFz1kYb8fDnmqOg+q0rk
596+fg8rlXTk5xUTmV/H+SeQn6+VdabvDBlAfg5zc8ipmptFfTrvgFVmcQ4R
+XkwxnRe0Y2E/Czj98/9tzknFffzJWL6Jy43AhX382e5gBfE95MY7ufvzMqD
XOlTAPfz4nBGRvN6MvJzuXmtp1aLKPKzswfscnHjRH6+3fKAX+rkIIb7mWkK
QtTfLWGoT6u/GLvxlIOK+9kn9DBj12ES6tMG/3U8cn/K6tNn4jQGba9TMdzP
4jePXZh7SEd+Nsp9UhVw4wzq07BpU1Assw35uZIcF371Shvy8+gebJ77Sgvy
s7s5ddqiIgvD/Zzh8XMhfnsf8rP1yRMQ6LD6tP6NCzVP07ox3M8/Gzku8oWz
U3E/UwLv7XdNYPnZwMQzgrz6HsD9bP6CkCxwn52K+1mYRKh+Z7CA4X4W1k9r
fbe3GcP9HCHUwTG1hQv5uaR2h7FAMsvPNZmWI+6PBJGf/cetb+bSfwDcz/1O
wT1+TjMY7ucrY113Ky+yUXE/S9wlY09OEqm4ny2efPQSSmD1abaOicB7Xt9Q
n/6SjWn6e7P8PKghbzj89inyczUtIl9ifT3yc2HBLf+ReDryM3uCEMezGBry
82m9ADei9lPkZ86d5jn37ZqRnwX+TRIN61h+dtcmObxxrEB+XrmwYGL1YQX5
eeyBVL63LQn5+QxdPiZNnIT8/GAh8aDjdQ4q7memhUlPseEyhvv5qHvHhtv0
YQz3cyEW4rm2moD8XEhcto0ZF0F+VjGStdFMFkZ+dn17WTSDdw7gfk53Vx74
rjiB4X6uDchvVtxGoOJ+pp5anAqM4aTifvZy913PF0xCfvYZFf+jceMD8rM3
jbAzX7MZ+VnPZOdBc41Y5Gfx4q7IveGsPm2XDqsUmmjIzy8ybLg/nKlHfnY3
P+TU2JeD4X6+KGkHryT8Qn62ui+m4rp/DPn5XSr2ZPi/cdSn9zZGJFpf5kR9
OuhIfFBDPMvPkbdWZiN5iVTczxs+bqhdvMtGxf183m5Fji/iH4b7efqZv8Ly
dQbA/azXWlKuFrYO+VmBsoutYYzl5+Mij0ObF3iRn+GSa5F9SyaG+/m4rsmh
5x7zGO7nlL2yS4Wr5w/3s/H58TNCE0TUpzW99Nwak1h+XqA4+NhYDaI+fYv/
Qd14fifyM+H2DVfJH3nIzwZNt9ePxVUhP99mOFbVybL6dFzUI+3MPBrys1ax
xLbXdwqRny3vJpn+Lq9Efg4rfhittYXVp83svDYZq3YiPz/T/7kjJXQR+bm4
IljkuhAJ+Xkw3Yb7pgkJ+bnZzIzG94uDivuZNni0YShmBcP9zJksnXQn4S+G
+7nBPL+tyGUe4H7mK5ngnE0TRn42roxVqu4UQX5m1/U16nAkID8/z3j1+GTr
bwz3c1NfHH+Q2AqG+9l/3T7dTGlOKu7n+6Yp6t6rfsP97J6TuGmpPAr5eaLD
wuadcRvys3XqsZgH984hP6dvb9TbkUxHfp7H+oZeHG9FfnZS/HQzUb4Z+flw
0yXMUaAAw/3cP6DfQmYbQn62O3e0/sTSOPJzgYjGXt+XPzHcz0tK/Kcojzmo
uJ+Tj3NN2Sax/CxW8uZN3QkiFfezsNah4iJ+diruZ0UDj9akwDkM9zN0qX2r
rJeL+rRGwcEdKsO8yM80efPq90yWn38oFuj7ZKxDftbq8tTr+EoDuJ85T+qm
3AufxXA/8ynkbfAjsFNxP0te3nwkbdUPuJ9r9YnqGiksP/sEizhLhdIw3M+E
6I7i2Y9dyM8RkFIkecMR+RnuCTcIz29Bfp7QD5B8PNOO/JxnqXWYZkBDfqYs
lf+LexiL4X72qR4zniB1IT9X6Bi/F6dNoj49+c020MOcjYr7ufSq822xEFaf
vpUTXtjfR6TiXqb+yJbzbVhEfdqhnSf6GF8fhvvZQLmEhzYhivx89Jip+FkN
MurTTzM6DShvJwDep7caJfORZqawwsw9GiWXZGGza821jwQiFfd1dJ6bgsFD
EvK1EudLNrX+JuRrh0ZlrfiXn5CvH/0KaXtsko18/eK0k/PWOJavN1k/nquZ
p6E+zV8tfLb46CfkbaqI6j2l1FgM97bHwdN2+8vHkLffY7pfJS+NIF/7cHC4
x24koj79SLyALT2URE1m2+QXdlgATm+X71zI50S9+lYTPW72EBOL9XmuOS8t
Ah2vF2txvBtB/latO/HiV4Ag8vfKl1d0YgSrXxN+OfcKH6Zj+wnbU5fFpKGQ
quODh0qLGO7xHKU9ng8VSahnT5QErAtJJlH/BxQqOQM=
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
         {GrayLevel[0.5], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1He4jnUcx/FzjlX2KnsclKSiqIyibErZ7UjJKEQqVEpkFWVnRVYaRqnM
c2iRvVfIlk3Kynx9L3+8zvv+XM9znfM89/27TnLLjo06JCUkJCTS3o9XWMlY
LtGb/fxAdm98VVcxjst8yAF+JEfS9d+xms+5Qh8O8hM5vd5B1zCeq/Tlb+aQ
y+sddS0T4gPZ/fQQc8ltv6br+IJEu78eZh432Z10PRNJsgfoEeZzs91ZNzCJ
NPZHepQF5LFf141MJq39sR5jIXntLrqJKQzkOCm8wWamks77BukJUslnv6lb
+JL09id6kkXkt9/SrUwjg/2pnmIxBeyuuo2vGMw//Ew3/uRrbvC+IXqaXyho
d9ftfMON9lD9l18pZL+tO/iWYfzHbxT22ju6k+lktIfrGX6niP2u/sUMMtkj
9CxL6MEuZpLZayP1HEspar+nu5lFFvszPc8fJNvv6x6+YxQXWEZP9vI9Wb1v
tP7PcorZH+g+ZpPNHqMXWUFxu1ecP0erXTxvasf5s5/Sq1pGV2vbOC/U4qB9
hbtcr9I2cdaoyQH7Sb2sd+pKza012O/6EnfE39dcWj0+n+uLlI7PrTm1Wnwv
10/E99Hb4/tqa83Bw3E/7GZxL7RU3Ct9WbPzUNxP+zy3xX3WbFo1noPrc5SM
Z6NZtUo8O9dN45nprfFctVU8Dx6MZ283iWeut8S50Mz6QJwZ143jvGiJOE/6
UpwDKseZsxvFWdPicR71xThHVIoza5+mWJxjbRnnk4pssxvGGddkXawvxPmm
AlvtBnpKi+oibaEZuJ8t9uN6UotoqjbX9NzHZvsxPaGFNUXT6b1scl1fj2sh
XajPa1rKs9F+VI9pQV2gz2kayrHBfkSPagGdr89qEvew3q6nRzS/ztNnNJG7
WWfX1cOaT+fq04nX/0GXZa3LOnpI8+ocvQbL4cPV
            
            "]]]}, {}, {}}, {{}, {}, {}, 
         {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[{1, 98, 50, 146, 26, 122, 74, 166, 2, 99, 51, 147, 27, 123, 
           75, 167, 3, 100, 52, 148, 28, 124, 76, 168, 4, 101, 53, 149, 29, 
           125, 77, 169, 5, 102, 54, 150, 30, 126, 78, 170, 6, 103, 55, 151, 
           31, 127, 79, 171, 7, 104, 56, 152, 32, 128, 80, 172, 8, 105, 57, 
           33, 129, 81, 173, 9, 106, 58, 153, 34, 130, 82, 174, 10, 107, 59, 
           154, 35, 131, 83, 11, 108, 60, 155, 36, 132, 84, 175, 12, 109, 61, 
           156, 37, 133, 85, 176, 13, 110, 62, 157, 38, 134, 86, 14, 111, 63, 
           158, 39, 135, 87, 15, 112, 64, 40, 136, 88, 177, 16, 113, 65, 159, 
           41, 137, 89, 17, 114, 66, 42, 138, 90, 178, 18, 115, 67, 160, 43, 
           139, 91, 179, 19, 116, 68, 161, 44, 140, 92, 20, 117, 69, 162, 45, 
           141, 93, 180, 21, 118, 70, 163, 46, 142, 94, 22, 119, 71, 164, 47, 
           143, 95, 23, 120, 72, 48, 144, 96, 181, 24, 121, 73, 165, 49, 145, 
           97, 182, 25}]}, 
         {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJwVyedXDgAYh+G3srIqZdPSNKOQFZVVNER2SSR8yD/nnCKzgcgIiYSMUPYq
CnX14T7X8ztPXOWZkpqgQCBwVrWaZbzndt5j2uhTB1XnnM1e5rGNyxmkQzpn
z2Ef83mfKxiswzpvz+UH7uADpjNEZaq35/Ejd/IhMzhG5bpgz+cnFrCdKzlW
F93R/MxCPuIqjtMRXbJj+IVF7OBqjleFLtux/MpiPmYmJ+iorthx/MZdfMI1
DFWlrtrx/M5OrXVP1DE12Av4gyV8ynWcpONqtBP4k7vZxfWcrCZ3In9xD59x
A6eoSs12EvtZyufM4lRdcydzgC+00R2m6+4U/ma3NrnDdUI37FT+4V6+ZDYj
VK0WeyEHuY+vmMNpuulexCG+Vq47Urfci/mXb7TZHaVW9xL+4372cAun66Ru
20v5n2+11T1Dp3THXsZhHuA7buNMndZdewT18Fdt
           "]]}, 
         {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJwVzmdbjnEcx+GrpGRkJUKId+QleIpSSFQom2yKjFRGRhlZoYiSzGRWZJQV
2ZJSnD04j8/9PX7/47iv+BmJ0xNCgiAoZ6Yft9nNX5bTxmlGhAbBLL3DHnpZ
wRvOMNJ9tt5lL32s5C1nGeXe/0f3yOcfq3jHOUa7J2o9+/o/yF6t7zlPtD1H
71NAiL1GP1DOGDtJGygk1F6r7Vwgxk7WBxQxwF6nH7nIWHuuPmQ/YXa2fuIS
4+x5+ogDrKeDCubzmIMM9G6DfqaSWDtFn3CIcHujfuEy4+0F+pRiIuxN+pUr
TLBTtZHDbOYbVSykiSMM8m6LfucqE+1F2sxRIu2t+oNrxNlp+oxjbOMn1Uxy
S9fnlDDY3q6/qGGynaEtlDLEztFOrrOYFxxnqFuu/qaWKfYSfckJhtk7tIsb
xNtL9RUn2ckf6sjkNaeI8i5Pu7nJVDtLWyljuL1Le7jFNHuZ/gd6rG8Z
           
           "]]}}}], {}, {}}, {{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6], 
        PointBox[{{-0.505926, 0.415663}, {0., 0.}, {0.505926, 0.415663}, {
         0.917487, 0.297066}, {2.290072, 1.182288}, {3.576795, -2.827372}, {
         5.98676, 6.}, {8.39673, -2.827372}}]}, {}}, {}, {}, {{}, {}}}}, 
    InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          
          TemplateBox[{"\"Prediction\"","\"1-\[Sigma] confidence interval\""},
           
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{#, ",", #2}], "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"T=2500 K turning-point data\""},
           "PointLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"PointLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "False", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{0.2, 0.8}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox[
       "\"Reaction barrier (eV)\"", FontSize -> 12, StripOnInput -> False], 
       TraditionalForm], None}, {
      FormBox[
       StyleBox[
       "\"Reaction path (\[Angstrom])\"", FontSize -> 12, StripOnInput -> 
        False], TraditionalForm], None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->1000,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}, "AxesInFront" -> True},
   PlotRange->{{-1, 8.49673}, {-2.8287051843139794`, 5.999150308055935}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{
       GraphicsComplex[CompressedData["
1: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
+lzvZAfy9YviOpXW3zTka4u5eE6uby+Qr623SLvv0WMgX28LBGEJeSxf+yVr
z/gf/oF8XR965pAdmYl8HZhdIlVAnEa+nn30gP55xxTy9WX1JA/PsAGA+zoh
0680yGcew33Np+lwMe0Yy9dvSAebIpdGkK9F3tC9ZeP+AdzXGcJ8w86CRIj7
2h/YvE0t4Ue+PjN1dqp+twjy9aO0jINbl1i+PvAw7R+WKIx8fb5IYK7vHR/E
fb3xqICQeBoHxH3dMcBdvHXfFMB9rcG3/n746DSG+zouyeKuVQLL1zTzqg1E
HgbAfb1h8NKTny4M5OvFVJGV+epS5Ou3345Zben4gnzdT+gGR64wkK/rRnrv
gPp25Gv31uuU2NNjyNfDZHXK4Fcm8nV3yu6vHUJTyNf5FFWsPHcS+frJ8VhR
eioV+Xr0Wdmao5YcyNcZP05ncjPZka9NvVWtdijUAtzX7nc2Rf3pW0G+DnUS
SH+kwAVxXw/UUTotsgWRr+W7PgsI/hVFvnb2T6IHWIghX2vnbflVclwI+dqf
Im+bWcMFcV+ndlPklZ8RIO7rW9Y+Nxf2MwDua4+gM1n/Vucz7ush/tdDovrt
yNePleWeN/l3IF+/djaMTfhzB/m6iJTQXEnoQr5ejnQTmPnE8rUtu4Sm6+p7
Dvf1GpnI9Pgj08jXqdFSfQ3+08jXMHs4NUxhCvl6Z5P3Q9KJEeTrQKvWoF1x
TOTr0lvc11WesXytpb5PSPDFJPK1xTtbHXYwDXBf6+yrfuohzQlxX6v/jdok
abgW4r4W9jptaBAvjHw9eE9hl9wKy9fyi+1llH0iyNdPQ2RLDHT5ka9f7/OL
4XrKCXFf+6ql5XflzwDc11eXM/nNcseQr9tmyfXCrixfM4adrm450I58XdA8
ZdN1i+Vrt7XmO3otopGvF081m20WaUO+tjnLLNGk05GvO4/Kv/yP+RX5+tdt
hv2AxCRIyzS0v5i2DNxtgn4un2Iib1N0k3TLp1neDrrx5+qu1XmB+7rD4Jrg
7s9E5Gv3nrjmOaMlDPc1ZfJ+3NjgMAjZXh09/UoINif3eBxRYYe4rwnkJ5cy
s1m+ni5NcJz3FIW4nwmeCYe4bi0C3M9jC2usBus4kZ+13+ucDuikIz+/HZlv
KQtrQH5OlLR1aQ0sRn5+s4RlF71g+fnR4xOdG3lakZf1R19yHYlmIi8Lu+0q
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
        
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
           EdgeForm[], 
           Directive[
            GrayLevel[0.5], 
            Opacity[0.2]], 
           GraphicsGroup[{
             Polygon[CompressedData["
1:eJwl1He4jnUcx/FzjlX2KnsclKSiqIyibErZ7UjJKEQqVEpkFWVnRVYaRqnM
c2iRvVfIlk3Kynx9L3+8zvv+XM9znfM89/27TnLLjo06JCUkJCTS3o9XWMlY
LtGb/fxAdm98VVcxjst8yAF+JEfS9d+xms+5Qh8O8hM5vd5B1zCeq/Tlb+aQ
y+sddS0T4gPZ/fQQc8ltv6br+IJEu78eZh432Z10PRNJsgfoEeZzs91ZNzCJ
NPZHepQF5LFf141MJq39sR5jIXntLrqJKQzkOCm8wWamks77BukJUslnv6lb
+JL09id6kkXkt9/SrUwjg/2pnmIxBeyuuo2vGMw//Ew3/uRrbvC+IXqaXyho
d9ftfMON9lD9l18pZL+tO/iWYfzHbxT22ju6k+lktIfrGX6niP2u/sUMMtkj
9CxL6MEuZpLZayP1HEspar+nu5lFFvszPc8fJNvv6x6+YxQXWEZP9vI9Wb1v
tP7PcorZH+g+ZpPNHqMXWUFxu1ecP0erXTxvasf5s5/Sq1pGV2vbOC/U4qB9
hbtcr9I2cdaoyQH7Sb2sd+pKza012O/6EnfE39dcWj0+n+uLlI7PrTm1Wnwv
10/E99Hb4/tqa83Bw3E/7GZxL7RU3Ct9WbPzUNxP+zy3xX3WbFo1noPrc5SM
Z6NZtUo8O9dN45nprfFctVU8Dx6MZ283iWeut8S50Mz6QJwZ143jvGiJOE/6
UpwDKseZsxvFWdPicR71xThHVIoza5+mWJxjbRnnk4pssxvGGddkXawvxPmm
AlvtBnpKi+oibaEZuJ8t9uN6UotoqjbX9NzHZvsxPaGFNUXT6b1scl1fj2sh
XajPa1rKs9F+VI9pQV2gz2kayrHBfkSPagGdr89qEvew3q6nRzS/ztNnNJG7
WWfX1cOaT+fq04nX/0GXZa3LOnpI8+ocvQbL4cPV
              
              "]]}]}, {}, {}}, {{}, {}, {}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           
           Line[{1, 98, 50, 146, 26, 122, 74, 166, 2, 99, 51, 147, 27, 123, 
            75, 167, 3, 100, 52, 148, 28, 124, 76, 168, 4, 101, 53, 149, 29, 
            125, 77, 169, 5, 102, 54, 150, 30, 126, 78, 170, 6, 103, 55, 151, 
            31, 127, 79, 171, 7, 104, 56, 152, 32, 128, 80, 172, 8, 105, 57, 
            33, 129, 81, 173, 9, 106, 58, 153, 34, 130, 82, 174, 10, 107, 59, 
            154, 35, 131, 83, 11, 108, 60, 155, 36, 132, 84, 175, 12, 109, 61,
             156, 37, 133, 85, 176, 13, 110, 62, 157, 38, 134, 86, 14, 111, 
            63, 158, 39, 135, 87, 15, 112, 64, 40, 136, 88, 177, 16, 113, 65, 
            159, 41, 137, 89, 17, 114, 66, 42, 138, 90, 178, 18, 115, 67, 160,
             43, 139, 91, 179, 19, 116, 68, 161, 44, 140, 92, 20, 117, 69, 
            162, 45, 141, 93, 180, 21, 118, 70, 163, 46, 142, 94, 22, 119, 71,
             164, 47, 143, 95, 23, 120, 72, 48, 144, 96, 181, 24, 121, 73, 
            165, 49, 145, 97, 182, 25}]}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0.5]], 
           Line[CompressedData["
1:eJwVyedXDgAYh+G3srIqZdPSNKOQFZVVNER2SSR8yD/nnCKzgcgIiYSMUPYq
CnX14T7X8ztPXOWZkpqgQCBwVrWaZbzndt5j2uhTB1XnnM1e5rGNyxmkQzpn
z2Ef83mfKxiswzpvz+UH7uADpjNEZaq35/Ejd/IhMzhG5bpgz+cnFrCdKzlW
F93R/MxCPuIqjtMRXbJj+IVF7OBqjleFLtux/MpiPmYmJ+iorthx/MZdfMI1
DFWlrtrx/M5OrXVP1DE12Av4gyV8ynWcpONqtBP4k7vZxfWcrCZ3In9xD59x
A6eoSs12EvtZyufM4lRdcydzgC+00R2m6+4U/ma3NrnDdUI37FT+4V6+ZDYj
VK0WeyEHuY+vmMNpuulexCG+Vq47Urfci/mXb7TZHaVW9xL+4372cAun66Ru
20v5n2+11T1Dp3THXsZhHuA7buNMndZdewT18Fdt
            "]]}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0.5]], 
           Line[CompressedData["
1:eJwVzmdbjnEcx+GrpGRkJUKId+QleIpSSFQom2yKjFRGRhlZoYiSzGRWZJQV
2ZJSnD04j8/9PX7/47iv+BmJ0xNCgiAoZ6Yft9nNX5bTxmlGhAbBLL3DHnpZ
wRvOMNJ9tt5lL32s5C1nGeXe/0f3yOcfq3jHOUa7J2o9+/o/yF6t7zlPtD1H
71NAiL1GP1DOGDtJGygk1F6r7Vwgxk7WBxQxwF6nH7nIWHuuPmQ/YXa2fuIS
4+x5+ogDrKeDCubzmIMM9G6DfqaSWDtFn3CIcHujfuEy4+0F+pRiIuxN+pUr
TLBTtZHDbOYbVSykiSMM8m6LfucqE+1F2sxRIu2t+oNrxNlp+oxjbOMn1Uxy
S9fnlDDY3q6/qGGynaEtlDLEztFOrrOYFxxnqFuu/qaWKfYSfckJhtk7tIsb
xNtL9RUn2ckf6sjkNaeI8i5Pu7nJVDtLWyljuL1Le7jFNHuZ/gd6rG8Z
            
            "]]}}}], {}, {}}, {{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          
          Point[{{-0.505926, 0.415663}, {0., 0.}, {0.505926, 0.415663}, {
           0.917487, 0.297066}, {2.290072, 1.182288}, {3.576795, -2.827372}, {
           5.98676, 6.}, {8.39673, -2.827372}}]}, {}}}, {}, {}, {{}, {}}}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{
         Style["Reaction barrier (eV)", FontSize -> 12], None}, {
         Style["Reaction path (\[Angstrom])", FontSize -> 12], None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 1000, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}, "AxesInFront" -> True}, 
      PlotRange -> {{-1, 8.49673}, {-2.8287051843139794`, 5.999150308055935}},
       PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       PointLegend[{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {"T=2500 K turning-point data"}, 
        LegendMarkers -> {{False, Automatic}}, Joined -> {False}, 
        LabelStyle -> {}, LegendLayout -> "Column"]]], {0.2, 0.8}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.7082622080823383`*^9, 3.708262294169112*^9, 3.708262326255858*^9, {
   3.708343119100564*^9, 3.708343192343191*^9}, {3.70834322339358*^9, 
   3.708343252885085*^9}, 3.7083433593308496`*^9, 3.7083434177145443`*^9}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{GraphicsComplexBox[CompressedData["
1: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
HyYFq+Rfo/s6xOpwUbred+TrucSa08d8+pGvL8coLk7205CvjdPctEi5C8jX
vopRQe/f00Dc3eT7Tb0s8OJ28/VS2THk7UqKos8u41nk7RfeokTBf+Onnd54
cm0/Lzwfe5rjgBYDxP0t5p9uf3MLG/K2cMancw5aIsjbyjvIrB/a6N7uZ1Ik
pX3hgilRb6PKzSUh1/28fXF9i8jfbspttKKpMeTvulfxk/A43d+hHBI7GTzH
UP8eOrTndE1RM/J3SaQVv1NfCfK3H8aipGz2Gfn7l1+0urBHB/L3xW/8rU+P
1iF/Sz3d++Z0dw6G+1vbsfC0hmAThvt7kNuBiUN3Gvn7RcGB5v3a08jfyomV
tdijcdS/qZP6zwL7N5C/f4vZUhviCRTc362vzqtE/dhA/dvZYupQY/oyhvub
cb0yL6B5FMP9/flp+O0cvX/70v/3t6O5yxcxW0Hkb2m1y42G+STkb1rA1kdB
O9iQv+Ekhe/eo2YM97fttTPBuQsLGO5vjfWRbZPuG6h/95jOnDPvIFBwf+vd
KScff0Pv3woRInIGh6sw3N+5s4eo0bL0/p3EeTGd05+M4f5uV5avbCtsQ/52
579pG6bTiPydzTuREOFRifz9V185LmpHO4b723BtQXTqQQvyt47qicg/F+j+
/neW/CfPWo78bZr449vP48vI33ZCtifTn9L9vd1A9AODK4GC+7usRmSO4+sa
6t9Bfm6mm0fmMdzfvYnZZInjOah/a0qyvDP9y4n8feS198CR23R/V3N5ap38
wY/8vVoYtNQSMQ1wf1+YpR17rjWN4f5W3NJ3lEtrFcP9Ta57XTD3jkDB/f0x
10RANZvev31q+RsqlftQ/z4nYztV+JeK/F2iwbgYc+gu8re7sMDi1QONyN/V
DOc+nd/Xgvw99q1Y4Vp+DfK3Qjq7VOSL7xju79QisTjx9VQM9/ez1QHTvMU5
5O+L3D92nRcaQP6O8mx+d9VmHvXvXm9nVrkrBArub10T1vuiwQQK7u/5KKmX
pdPrqH8Pd5iZFN5cxHB/L17M3gW9ujHc322nloWi85mQv4VWNE8zPBBB/i5e
beqt1hNG/na9opa75SoB+XsxOOZ3LPcwhvv7uT0589CeZQz3t7Skge+UJYGC
+/ul/c+pk+UECu7vxsXmvbqVJcjfrlwHr0XO1CN/a3kTX+g+fo78HbxNK9xU
nO5vb+zKYdOLdcjf9szXHLhD3yN/73Wpmw1WoGK4v6mRZ6Q3rwwif581e5vJ
LEnv33spX1dayJ0Y7u+TBjAq8sca8vfIhyt986l0f0cGhx3K0yJQcH/bqzpZ
WNmsYri/3xE+me6PnMFwf6s8fPhjKWAY4P6OXQssId/jRf4+5TZPvDVJ97d2
7byQ3Xci8neKm23Li9vNAPf3U2/YTGGZx3B/P1f4lrh3bg3175pIyrP3nQQK
7m/VrGquyqd0fz+yd9vzs2cQ9e8hr9OqHJ3tyN8nLG8zDR/JQv5mKljDisaq
kL/tfOM+KAW2IX9/c+L79OpDLfJ3L9+e+oqBcgz3d/Rd09gS468Y7m91/1Au
NftZ5G9es65S8sEx5G+ho7IHN+nNoP7duvRNYwskUHB/9wNnDuNIAgX3N6UH
bjX9t//i/n4QWNHknrqE4f7uenSdXY51EMP9fWFR+/21egLyt296mXkRSRj5
e3OzXs7YYxHkb0Mvh8zJUibkb4lmpyPTAX0Y7m+VyskPRPklDPc315qL7yl2
AgX3N+tQhb9PPYGC+7sXUqPDJZ5huL/l3il8jHzfjPy976nUMclbN5C/K4J6
Q+S6OpC/t2elBYw0fEf+XnzirrpxhYL8PcObe3+zKhXD/f0pMyr1bGov8vcT
O6dCXhLd3ylfZE2PaX7GcH9Hcey+Imm8ivzdqbIhwvKU7m9JQ/G2wsMECurf
V47WfhVYQ/0765m7kJLdHIb7W21bgXMCFxXg/t4q81VgPoKI/M16xNF988z/
+PtYZGnBT17kbxXNiSKpvAGA+/u5Zn3M+r5ZDPc35wvRZ0Hiaxjub61Ojby6
OgIF9/dwzPZK23S6v+sPfy5+ztSO+vcl3ceb9Zzp/Ttkvc+i3s8Sw/29v2fJ
t7S2Gfl7eZW0spm/Cfk7TGvyNk95FfK3NbCWfnuvGcP9nVZUviqz+zPy96dm
lz0vGej+Lnx3w8FPphP1cH8bYHGJYxH1cNYgGz/Du/Qe3mU9cvzmv/MA97gL
i807btd11MNXH98ZqDywgOE+n3q3aVaf8zuG+7z7fDYbI4WEfG7gVf3x0DNB
1MNfCt/TqBlZBLjXrZP80g5kjmO41wUWOrqj9VewjCuCg53cUtDi25m+zggC
Bfd7u+C4+sEPBArud7XFObvdInXI70Ui/GIsU5XI79HB2/9UBOcjvzenl2Sk
ZFGR33vNWIwKXel9vLc63JHWfAv5/fTrix9bm9ow3O+/1Y+c3ME6jvweTvz+
4cP1WeR1A/KEaQbjBvI6c9tYbncygcIrszzuUUCEllW+b8gC9F7+N61+Veb8
FIb3cjXSgKL7yAzA/W45LpfBd4sf+d0muDRQNIzud4JTaNnnp4kYY0JOmX2Z
OFyeiBrakkDDcM+3NT7P+1S8juGeL8kJ3P/mF4GCe37qCRcfx0sC5f8A29md
+g==
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
         {GrayLevel[0.5], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl03e8T3Ucx/Gfi3txUUrKulx7XZISoWgRRUlUSrkpNKiQ3VDai0ppCEVD
RoOy3WtUNOy9KXvv7fl5+OPpdd6Pc+/j/n7nfKVndm3ZJSmRSOSgh3+eYTEj
SXLjTd3JFIraz+oSviKn/ZbuYirF7G66lK/JZb+tu5lGcbu7LmMUue13dA/T
KZF04TMsZzTJ9ru6lxmUtJ/TFXxDiv2e7mMmaXZPXcm35LHf1/3MopTdS1fx
HXntQXqALErbvXU135PPHqwHySbd7qNrGEOq/YEeYjZ9WcsP5HfvQz3MHMrY
/XQdYylgf6RHmEtZu7+uZxwF7SF6lHmUs5/XDYznIvtjPcbvvMBGJnCxe5/o
cf6gvP2ibuJHCtlD9QR/UsF+STfzE59ykvlUdG+AbuFnLrE/01MsoJL9sm7l
Fy61P9fT/MUr/MdECrv3hZ7hbyrbA/V/JnGZPUzP8g9V7Fd1G79SxP5Sz/Ev
Ve3XdDu/cbk9XBO6UKvp67qDyVxhj9Acukgz9A1d5Fee1qLcFj9vPxA/R00W
2l3j92kSfy9x4T/MlfE5XHaJv03j+Kx22/iMWiO+hxbRW+N7ur4/vp9Wj2eg
T8X35pZ4TvYZMuLZaWG9OZ6t6/vimWq1eO76ZDxrbop3Y98b70SrxnvTJ+Jd
cWO8V/skVeJ9ayFtFOfBdZs4B1o5zoo+HueHhnGe7ONUijOmnePccUOcQ7t1
nD+tGGdUC+r1cYZd3xNnVyvE+dZOWoAGrLNb6REtr3O0o+anPmvtw5RzPVsf
01Tqsca+Ww9pWc3WRzUf17HabqkHtYxmaQfNS11W2XfpAU3XWfqI5qEOK+07
db+W1pmaqSlcywq7he7TUjpD22sytVluN9e9mqbT9WHNzTUss+/QPVpSp+lD
mourWWrfrru1hE7VdpqTWiyxm+kuLa5T9EFN4ioW2011pxaLc6/nAehqxBc=

            "]]]}, {}, {}}, {{}, {}, {}, 
         {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[{1, 98, 50, 146, 26, 122, 74, 167, 2, 99, 51, 147, 27, 123, 
           75, 168, 3, 100, 52, 148, 28, 124, 76, 169, 4, 101, 53, 149, 29, 
           125, 77, 170, 5, 102, 54, 150, 30, 126, 78, 171, 6, 103, 55, 151, 
           31, 127, 79, 172, 7, 104, 56, 152, 32, 128, 80, 173, 8, 105, 57, 
           33, 129, 81, 174, 9, 106, 58, 153, 34, 130, 82, 175, 10, 107, 59, 
           154, 35, 131, 83, 11, 108, 60, 155, 36, 132, 84, 176, 12, 109, 61, 
           156, 37, 133, 85, 177, 13, 110, 62, 157, 38, 134, 86, 14, 111, 63, 
           158, 39, 135, 87, 15, 112, 64, 159, 40, 136, 88, 178, 16, 113, 65, 
           160, 41, 137, 89, 179, 17, 114, 66, 42, 138, 90, 180, 18, 115, 67, 
           161, 43, 139, 91, 181, 19, 116, 68, 162, 44, 140, 92, 20, 117, 69, 
           163, 45, 141, 93, 182, 21, 118, 70, 164, 46, 142, 94, 22, 119, 71, 
           165, 47, 143, 95, 23, 120, 72, 48, 144, 96, 183, 24, 121, 73, 166, 
           49, 145, 97, 184, 25}]}, 
         {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJwV0mdbDgAYhuE3szJblJWUZEciEUJpCdmyKhRFfp5RZpFRMlKhYY9Q2aty
9uE6zuf+/sSVVhedCQoEAud0XtOMD8zjAy7nCB3SBXs6e5jPh0zhSB3WRXsG
P7KAj7iCo3RENfZMfuJWtjCVo3VUtfYsfmYhH3Mlx6hEl+xY9nIbW7mKY1Wq
y/Zs9nE725jGYJXpih3Hfu5gO1czRMd01Z7DLyziE6YzVMd1zY7nV+7kU67h
OJ3QdTuB3/hMa93jVa46ey6/cxc7mMEJqlC9ncgf3M1OruNE3XDP40/uYRfX
c5JO6qadxF/s1gb3ZJ1Sgz2fv7mXz5nJMN1yL+AfvtBGd7gqddteyL/cx5fc
xAhV6Y69iP+4n6+4mZG6617MAb5WljtKp9VoL+EgD/ANszlFTe6lHGIx33IL
p2r4Se/ZycPPqnfIYbSq1WwvY5AO6r2dyxid1X37PwayWJk=
           "]]}, 
         {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJwNyXdXzgEYx+Hf8yRCRPYoRcrqzXgJXgDHFgqVkRnKLkLILrIjMkpmdjZl
RChbqOuP63zu77kTJ0waPzEUBEEFkx11bCccDoKl2sQpBtlT9A47iLCX6QdO
M9ieqnfZSSd7uX7kDEPsaXqPYiLtFdpMBUPt6XqfXXS2V+onzhJnz9AH7KaL
vUo/c454e6Y+ZA9Rdq5+oZJh9ix9RAld7dXawnkS7DStZy/d7DXaygUS7dn6
mH10t9fqV6qYwxP2E+2Xp9+4yHB7rj7lAD3sfP3OJUbY6fqMg/S01+kPLpNk
Z+hzDhFjr9efXGEeLzhML78N+otqRtrz9SWl9LY36m9qSLYX6CvK2MQfrpLi
l6mvOUKsvVnbqGWUnaUNHKWPvUX/co1sGimnr1+B/uM6o+2F+oZj9LML9T83
GGMv0rccp7+9Vdu5yVh7sb7jBAPsbRroLR2nS/Q9JxloF2lIb2uq5mgHbiFu
Lw==
           "]]}}}], {}, {}}, {{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6], 
        PointBox[{{-0.491838, 0.408561}, {0., 0.}, {0.491838, 0.408561}, {
         0.973187, 0.224986}, {2.427912, 1.402299}, {3.668868, -2.077542}, {
         6.12492, 7.}, {8.58097, -2.077542}}]}, {}}, {}, {}, {{}, {}}}}, 
    InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          
          TemplateBox[{"\"Prediction\"","\"1-\[Sigma] confidence interval\""},
           
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{#, ",", #2}], "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"T=3800 K turning-point data\""},
           "PointLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"PointLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "False", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{0.2, 0.8}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox[
       "\"Reaction barrier (eV)\"", FontSize -> 12, StripOnInput -> False], 
       TraditionalForm], None}, {
      FormBox[
       StyleBox[
       "\"Reaction path (\[Angstrom])\"", FontSize -> 12, StripOnInput -> 
        False], TraditionalForm], None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->1000,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}, "AxesInFront" -> True},
   PlotRange->{{-1, 8.68097}, {-2.108240652762075, 6.997690810032182}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{
       GraphicsComplex[CompressedData["
1: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
HyYFq+Rfo/s6xOpwUbred+TrucSa08d8+pGvL8coLk7205CvjdPctEi5C8jX
vopRQe/f00Dc3eT7Tb0s8OJ28/VS2THk7UqKos8u41nk7RfeokTBf+Onnd54
cm0/Lzwfe5rjgBYDxP0t5p9uf3MLG/K2cMancw5aIsjbyjvIrB/a6N7uZ1Ik
pX3hgilRb6PKzSUh1/28fXF9i8jfbspttKKpMeTvulfxk/A43d+hHBI7GTzH
UP8eOrTndE1RM/J3SaQVv1NfCfK3H8aipGz2Gfn7l1+0urBHB/L3xW/8rU+P
1iF/Sz3d++Z0dw6G+1vbsfC0hmAThvt7kNuBiUN3Gvn7RcGB5v3a08jfyomV
tdijcdS/qZP6zwL7N5C/f4vZUhviCRTc362vzqtE/dhA/dvZYupQY/oyhvub
cb0yL6B5FMP9/flp+O0cvX/70v/3t6O5yxcxW0Hkb2m1y42G+STkb1rA1kdB
O9iQv+Ekhe/eo2YM97fttTPBuQsLGO5vjfWRbZPuG6h/95jOnDPvIFBwf+vd
KScff0Pv3woRInIGh6sw3N+5s4eo0bL0/p3EeTGd05+M4f5uV5avbCtsQ/52
579pG6bTiPydzTuREOFRifz9V185LmpHO4b723BtQXTqQQvyt47qicg/F+j+
/neW/CfPWo78bZr449vP48vI33ZCtifTn9L9vd1A9AODK4GC+7usRmSO4+sa
6t9Bfm6mm0fmMdzfvYnZZInjOah/a0qyvDP9y4n8feS198CR23R/V3N5ap38
wY/8vVoYtNQSMQ1wf1+YpR17rjWN4f5W3NJ3lEtrFcP9Ta57XTD3jkDB/f0x
10RANZvev31q+RsqlftQ/z4nYztV+JeK/F2iwbgYc+gu8re7sMDi1QONyN/V
DOc+nd/Xgvw99q1Y4Vp+DfK3Qjq7VOSL7xju79QisTjx9VQM9/ez1QHTvMU5
5O+L3D92nRcaQP6O8mx+d9VmHvXvXm9nVrkrBArub10T1vuiwQQK7u/5KKmX
pdPrqH8Pd5iZFN5cxHB/L17M3gW9ujHc322nloWi85mQv4VWNE8zPBBB/i5e
beqt1hNG/na9opa75SoB+XsxOOZ3LPcwhvv7uT0589CeZQz3t7Skge+UJYGC
+/ul/c+pk+UECu7vxsXmvbqVJcjfrlwHr0XO1CN/a3kTX+g+fo78HbxNK9xU
nO5vb+zKYdOLdcjf9szXHLhD3yN/73Wpmw1WoGK4v6mRZ6Q3rwwif581e5vJ
LEnv33spX1dayJ0Y7u+TBjAq8sca8vfIhyt986l0f0cGhx3K0yJQcH/bqzpZ
WNmsYri/3xE+me6PnMFwf6s8fPhjKWAY4P6OXQssId/jRf4+5TZPvDVJ97d2
7byQ3Xci8neKm23Li9vNAPf3U2/YTGGZx3B/P1f4lrh3bg3175pIyrP3nQQK
7m/VrGquyqd0fz+yd9vzs2cQ9e8hr9OqHJ3tyN8nLG8zDR/JQv5mKljDisaq
kL/tfOM+KAW2IX9/c+L79OpDLfJ3L9+e+oqBcgz3d/Rd09gS468Y7m91/1Au
NftZ5G9es65S8sEx5G+ho7IHN+nNoP7duvRNYwskUHB/9wNnDuNIAgX3N6UH
bjX9t//i/n4QWNHknrqE4f7uenSdXY51EMP9fWFR+/21egLyt296mXkRSRj5
e3OzXs7YYxHkb0Mvh8zJUibkb4lmpyPTAX0Y7m+VyskPRPklDPc315qL7yl2
AgX3N+tQhb9PPYGC+7sXUqPDJZ5huL/l3il8jHzfjPy976nUMclbN5C/K4J6
Q+S6OpC/t2elBYw0fEf+XnzirrpxhYL8PcObe3+zKhXD/f0pMyr1bGov8vcT
O6dCXhLd3ylfZE2PaX7GcH9Hcey+Imm8ivzdqbIhwvKU7m9JQ/G2wsMECurf
V47WfhVYQ/0765m7kJLdHIb7W21bgXMCFxXg/t4q81VgPoKI/M16xNF988z/
+PtYZGnBT17kbxXNiSKpvAGA+/u5Zn3M+r5ZDPc35wvRZ0Hiaxjub61Ojby6
OgIF9/dwzPZK23S6v+sPfy5+ztSO+vcl3ceb9Zzp/Ttkvc+i3s8Sw/29v2fJ
t7S2Gfl7eZW0spm/Cfk7TGvyNk95FfK3NbCWfnuvGcP9nVZUviqz+zPy96dm
lz0vGej+Lnx3w8FPphP1cH8bYHGJYxH1cNYgGz/Du/Qe3mU9cvzmv/MA97gL
i807btd11MNXH98ZqDywgOE+n3q3aVaf8zuG+7z7fDYbI4WEfG7gVf3x0DNB
1MNfCt/TqBlZBLjXrZP80g5kjmO41wUWOrqj9VewjCuCg53cUtDi25m+zggC
Bfd7u+C4+sEPBArud7XFObvdInXI70Ui/GIsU5XI79HB2/9UBOcjvzenl2Sk
ZFGR33vNWIwKXel9vLc63JHWfAv5/fTrix9bm9ow3O+/1Y+c3ME6jvweTvz+
4cP1WeR1A/KEaQbjBvI6c9tYbncygcIrszzuUUCEllW+b8gC9F7+N61+Veb8
FIb3cjXSgKL7yAzA/W45LpfBd4sf+d0muDRQNIzud4JTaNnnp4kYY0JOmX2Z
OFyeiBrakkDDcM+3NT7P+1S8juGeL8kJ3P/mF4GCe37qCRcfx0sC5f8A29md
+g==
        
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
           EdgeForm[], 
           Directive[
            GrayLevel[0.5], 
            Opacity[0.2]], 
           GraphicsGroup[{
             Polygon[CompressedData["
1:eJwl03e8T3Ucx/Gfi3txUUrKulx7XZISoWgRRUlUSrkpNKiQ3VDai0ppCEVD
RoOy3WtUNOy9KXvv7fl5+OPpdd6Pc+/j/n7nfKVndm3ZJSmRSOSgh3+eYTEj
SXLjTd3JFIraz+oSviKn/ZbuYirF7G66lK/JZb+tu5lGcbu7LmMUue13dA/T
KZF04TMsZzTJ9ru6lxmUtJ/TFXxDiv2e7mMmaXZPXcm35LHf1/3MopTdS1fx
HXntQXqALErbvXU135PPHqwHySbd7qNrGEOq/YEeYjZ9WcsP5HfvQz3MHMrY
/XQdYylgf6RHmEtZu7+uZxwF7SF6lHmUs5/XDYznIvtjPcbvvMBGJnCxe5/o
cf6gvP2ibuJHCtlD9QR/UsF+STfzE59ykvlUdG+AbuFnLrE/01MsoJL9sm7l
Fy61P9fT/MUr/MdECrv3hZ7hbyrbA/V/JnGZPUzP8g9V7Fd1G79SxP5Sz/Ev
Ve3XdDu/cbk9XBO6UKvp67qDyVxhj9Acukgz9A1d5Fee1qLcFj9vPxA/R00W
2l3j92kSfy9x4T/MlfE5XHaJv03j+Kx22/iMWiO+hxbRW+N7ur4/vp9Wj2eg
T8X35pZ4TvYZMuLZaWG9OZ6t6/vimWq1eO76ZDxrbop3Y98b70SrxnvTJ+Jd
cWO8V/skVeJ9ayFtFOfBdZs4B1o5zoo+HueHhnGe7ONUijOmnePccUOcQ7t1
nD+tGGdUC+r1cYZd3xNnVyvE+dZOWoAGrLNb6REtr3O0o+anPmvtw5RzPVsf
01Tqsca+Ww9pWc3WRzUf17HabqkHtYxmaQfNS11W2XfpAU3XWfqI5qEOK+07
db+W1pmaqSlcywq7he7TUjpD22sytVluN9e9mqbT9WHNzTUss+/QPVpSp+lD
mourWWrfrru1hE7VdpqTWiyxm+kuLa5T9EFN4ioW2011pxaLc6/nAehqxBc=

              "]]}]}, {}, {}}, {{}, {}, {}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           
           Line[{1, 98, 50, 146, 26, 122, 74, 167, 2, 99, 51, 147, 27, 123, 
            75, 168, 3, 100, 52, 148, 28, 124, 76, 169, 4, 101, 53, 149, 29, 
            125, 77, 170, 5, 102, 54, 150, 30, 126, 78, 171, 6, 103, 55, 151, 
            31, 127, 79, 172, 7, 104, 56, 152, 32, 128, 80, 173, 8, 105, 57, 
            33, 129, 81, 174, 9, 106, 58, 153, 34, 130, 82, 175, 10, 107, 59, 
            154, 35, 131, 83, 11, 108, 60, 155, 36, 132, 84, 176, 12, 109, 61,
             156, 37, 133, 85, 177, 13, 110, 62, 157, 38, 134, 86, 14, 111, 
            63, 158, 39, 135, 87, 15, 112, 64, 159, 40, 136, 88, 178, 16, 113,
             65, 160, 41, 137, 89, 179, 17, 114, 66, 42, 138, 90, 180, 18, 
            115, 67, 161, 43, 139, 91, 181, 19, 116, 68, 162, 44, 140, 92, 20,
             117, 69, 163, 45, 141, 93, 182, 21, 118, 70, 164, 46, 142, 94, 
            22, 119, 71, 165, 47, 143, 95, 23, 120, 72, 48, 144, 96, 183, 24, 
            121, 73, 166, 49, 145, 97, 184, 25}]}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0.5]], 
           Line[CompressedData["
1:eJwV0mdbDgAYhuE3szJblJWUZEciEUJpCdmyKhRFfp5RZpFRMlKhYY9Q2aty
9uE6zuf+/sSVVhedCQoEAud0XtOMD8zjAy7nCB3SBXs6e5jPh0zhSB3WRXsG
P7KAj7iCo3RENfZMfuJWtjCVo3VUtfYsfmYhH3Mlx6hEl+xY9nIbW7mKY1Wq
y/Zs9nE725jGYJXpih3Hfu5gO1czRMd01Z7DLyziE6YzVMd1zY7nV+7kU67h
OJ3QdTuB3/hMa93jVa46ey6/cxc7mMEJqlC9ncgf3M1OruNE3XDP40/uYRfX
c5JO6qadxF/s1gb3ZJ1Sgz2fv7mXz5nJMN1yL+AfvtBGd7gqddteyL/cx5fc
xAhV6Y69iP+4n6+4mZG6617MAb5WljtKp9VoL+EgD/ANszlFTe6lHGIx33IL
p2r4Se/ZycPPqnfIYbSq1WwvY5AO6r2dyxid1X37PwayWJk=
            "]]}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0.5]], 
           Line[CompressedData["
1:eJwNyXdXzgEYx+Hf8yRCRPYoRcrqzXgJXgDHFgqVkRnKLkLILrIjMkpmdjZl
RChbqOuP63zu77kTJ0waPzEUBEEFkx11bCccDoKl2sQpBtlT9A47iLCX6QdO
M9ieqnfZSSd7uX7kDEPsaXqPYiLtFdpMBUPt6XqfXXS2V+onzhJnz9AH7KaL
vUo/c454e6Y+ZA9Rdq5+oZJh9ix9RAld7dXawnkS7DStZy/d7DXaygUS7dn6
mH10t9fqV6qYwxP2E+2Xp9+4yHB7rj7lAD3sfP3OJUbY6fqMg/S01+kPLpNk
Z+hzDhFjr9efXGEeLzhML78N+otqRtrz9SWl9LY36m9qSLYX6CvK2MQfrpLi
l6mvOUKsvVnbqGWUnaUNHKWPvUX/co1sGimnr1+B/uM6o+2F+oZj9LML9T83
GGMv0rccp7+9Vdu5yVh7sb7jBAPsbRroLR2nS/Q9JxloF2lIb2uq5mgHbiFu
Lw==
            "]]}}}], {}, {}}, {{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          
          Point[{{-0.491838, 0.408561}, {0., 0.}, {0.491838, 0.408561}, {
           0.973187, 0.224986}, {2.427912, 1.402299}, {3.668868, -2.077542}, {
           6.12492, 7.}, {8.58097, -2.077542}}]}, {}}}, {}, {}, {{}, {}}}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{
         Style["Reaction barrier (eV)", FontSize -> 12], None}, {
         Style["Reaction path (\[Angstrom])", FontSize -> 12], None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 1000, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}, "AxesInFront" -> True}, 
      PlotRange -> {{-1, 8.68097}, {-2.108240652762075, 6.997690810032182}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       PointLegend[{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {"T=3800 K turning-point data"}, 
        LegendMarkers -> {{False, Automatic}}, Joined -> {False}, 
        LabelStyle -> {}, LegendLayout -> "Column"]]], {0.2, 0.8}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.7082622080823383`*^9, 3.708262294169112*^9, 3.708262326255858*^9, {
   3.708343119100564*^9, 3.708343192343191*^9}, {3.70834322339358*^9, 
   3.708343252885085*^9}, 3.7083433593308496`*^9, 3.708343423719981*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.708261297719262*^9, 3.708261339738009*^9}, {
   3.7082618575175753`*^9, 3.7082618595740747`*^9}, 3.708343109402069*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vol", "=", "3"}], "}"}], ",", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Pdiste0sGradGP", "[", 
           RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Pdiste0sGradGP", "[", 
            RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], "+", 
          RowBox[{"StandardDeviation", "[", 
           RowBox[{
            RowBox[{"Pdiste0sGradGP", "[", 
             RowBox[{"[", "vol", "]"}], "]"}], "[", 
            RowBox[{"x", ",", "\"\<Distribution\>\""}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Pdiste0sGradGP", "[", 
            RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], "-", 
          RowBox[{"StandardDeviation", "[", 
           RowBox[{
            RowBox[{"Pdiste0sGradGP", "[", 
             RowBox[{"[", "vol", "]"}], "]"}], "[", 
            RowBox[{"x", ",", "\"\<Distribution\>\""}], "]"}], "]"}]}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"dist", "[", 
             RowBox[{"[", "vol", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], "+", "0.1"}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Gray", ",", "Gray"}], "}"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", "3", "}"}]}], "}"}]}], ",", 
       RowBox[{"Exclusions", "\[Rule]", "\"\<None\>\""}], ",", 
       RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<Prediction\>\"", ",", 
            "\"\<1-\[Sigma] confidence interval\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.2", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Reaction path (\[Angstrom])\>\"", ",", 
            RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Reaction barrier (eV)\>\"", ",", 
            RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], ",", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"diste0s", "[", 
        RowBox[{"[", "vol", "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"legends", "[", 
           RowBox[{"[", "vol", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.2", ",", "0.8"}], "}"}]}], "]"}]}]}], "]"}]}], "]"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{GraphicsComplexBox[CompressedData["
1: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
4sTGfPyfp4cKYgyFU3BP/ztix3VDE+/VZn0Vm9TlcE9zRV6Kf6GMe3pV3JVq
39mEPC0SSmFrPdmLPL1nMLFQl3UQeTo73YD6yAX3tEysbIjJLtzTP7dr3p2m
q0ee3hPVHy9psIw83eWZXmmUgnva/um7MthOINM87SkV9MFBiUCmedoiTybZ
x3MAo3n6FqgTJ2vSIU8/3uYexpLGhzw9fOKqeG8zEXlaWqVi5No87ml7weN/
JD4LI08zy6tE7t7HizxdqjWeNOVNQJ5uVitrdZvsxmieZgrdy8DquoI8XeeV
QtLMwHt1QTv3EtTBPf3hkUOecPN/PG3YJVLbgnvaOF80rWeyA3n64vuvFSss
/cjTfg6Ou7as/0We/u3l6fkA4p6O8MqNyHYYRJ6OY5reLaVDQZ5OO65Zry9J
INM87RVTa8LxBPf04/Rvf0f46Mg0T/s4H1O7MLSA0Tw9vc145O//94T/eTpg
TO6m164tyNPGQ5MlmpFCyNMakrW5Rk24p+cyu9fTbXFPK6vvXbGTFUS9Wnn5
k99rw0HUq4MIOlkk71nUq/M/PvsZIUsg0zw9ZW/K9iIF93TVA43arJa3yNOT
Wfzl3SK4p4sv0EVUzjYiT4tpm/69JIp7+tlgwak3Z/uQpztfmXW8OD2MPG0+
7dt+6xveqxmCgcHQQbxXsx3vmoo7NYh6tfcMp4uD3xrytdoxOSObJ7ivd0Yq
qjzemC80X1ubN9hkha6iXp1e83pl6ZsA8rTM1sAs4I97utz7rHQRhnvaI1Uw
OipeCPXq1dznk//cJlCv7pY94rzp5xryNO/+SoprJu5peg7WOLcs3NNHNqbz
l+VW5GkXT5/3T6VwTwtYaTg02f9BnlazGA+qetuPPJ3w9+kFehXc004fZM6V
V84hTwdkOAifuYV7+vDTG4qjeXiv5lWed2vqJpBpvbo4k/6o4fEZjObp4FH2
PR96hZGnA7e3tuqv4J7+/MicEJiJ+9n1ZZZ6/fgC8nOJ5bYA6ZsEMs3PepUy
XOQNL/wfcZrbAQ==
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
         {GrayLevel[0.5], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwt1He8T3Ucx/F7L66Ua2dfIyqjqJSKlEgZpTJTkaRoICMlK2RV2kYRGmZZ
UfZWJHsrpYGsyy0Uuffq+Xnkj6fXeT+Oy+93zpey7bo06ZyUkJCQyNN+eY4N
fMR5BnOAr8jrN3bSjYwngyEc5Gvyud9ZNzGBTIZyiPnkd7+LbmYiWQzjDxZQ
wP3ndQsfc4HhHGYhBd3vqlv5JD6w/ZoeYRHd2ManJLr3uh5lMYXs7rqdz0iy
39BjLKEHO5hENvdG6HGWcrn9gu5kMtntNzWNZRS2e+ouppDDfktPsJwi9ou6
m6kk22/rSVZQ1H5J9zCNnPY7ms5Kitm9dC/TeZc/WcXL/MDnvMdfrKY3P/IF
l/j59/UUayhu99F9zCCXPVJP8w0l7L76EzO51B6lZ/iWknY//ZlZXGaP1r9Z
S3/2M5sxvMIvzOED/mEdA/iVL8ntz/hQz/IdqfZA/Y25pNhj9RzrKWUP0t+Z
Rx57nP7L95S2X42z5pg8G++IenHW7FZxtrSKbtJn4h1zF4fshzRLr9WNF/9d
FKIuB+1MrnG9QQ+QQeX4e7Wg1onP5bqlntdK8Zm1oxbgzvhedov4vFoxvrN2
0PzUjudiN4/vqxXieelTmo874nnazeJ56dXx3PVJzcvt8fztpvGs9ap4b9o+
nhO14t3ZTeKd6ZXx3jVFb4v37voM5eO8aG6tGefF9YNxTrRcnDN9It4/NeK8
2Q/EOdMr4nxquzg/3Brn1L4/zqiWjbOtj8f54xb22o3jbGsZXaFt4/xyM3vs
dEq7Xq45tTq7Xd+nJ7WULtPHNJmb2GXfqyc0VZdqDr2Rna4baZqW1CXaRrNT
jR12Qz2uJXSxttZs3MB2u4Ee0+K6SB/VJK5nm11fj2oxXaiPaCLXsdW+R49o
UV2gDyf+/x9yVba4vFsPaxGdr/8BXmHDQw==
            
            "]]]}, {}, {}}, {{}, {}, {}, 
         {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[{1, 97, 50, 144, 26, 121, 74, 164, 2, 98, 51, 145, 27, 122, 
           75, 165, 3, 99, 52, 146, 28, 123, 76, 166, 4, 100, 53, 147, 29, 
           124, 77, 167, 5, 101, 54, 148, 30, 125, 78, 168, 6, 102, 55, 149, 
           31, 126, 79, 7, 103, 56, 150, 32, 127, 80, 169, 8, 104, 57, 151, 
           33, 128, 81, 9, 105, 58, 152, 34, 129, 82, 170, 10, 106, 59, 153, 
           35, 130, 83, 171, 11, 107, 60, 154, 36, 131, 84, 172, 12, 108, 61, 
           155, 37, 132, 85, 173, 13, 109, 62, 156, 38, 133, 86, 174, 14, 110,
            63, 39, 15, 111, 64, 40, 134, 87, 175, 16, 112, 65, 157, 41, 135, 
           88, 176, 17, 113, 66, 158, 42, 136, 89, 177, 18, 114, 67, 159, 43, 
           137, 90, 178, 19, 115, 68, 160, 44, 138, 91, 179, 20, 116, 69, 45, 
           139, 92, 21, 117, 70, 46, 140, 93, 22, 118, 71, 161, 47, 141, 94, 
           180, 23, 119, 72, 162, 48, 142, 95, 181, 24, 120, 73, 163, 49, 143,
            96, 182, 25}]}, 
         {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJwVyXdXDgAYh+H3RVkpZJZUyM4KIZRZyCqbNBHO0afrJBlJUaLMsktDUXZJ
Ei5/3Od6fueJLyjJuhQMBAKlKtN0o5s7+YDL/z91QpedM/ie6XzIFQzqpMrt
mfzADD7iSo7QKV2xo9jDXXzMVRypHFXY0ezlbj5hEkfptK7as/iRe/iUqxmi
a+4YfmImm7iGocrVdXs2P3Mvm7mWo3XDHcsvfKZk9xjlqdKO41fu43Ou41jl
66Ydz2/czxdcz3EqUJU9h995gC+5geNVqFv2XPbxIF8xhWGqds9jP19ro3uC
atwJ/MEsvuEmhqtIt+35HGA2W7iZETqjO/YC/uQhtjKVE3VWtfZCDvIw3zKN
k3ROdfYi/uIRtnELJ6tYd+3FHOJRtnMrI1XvXsLf7NA9LbWH2alt7ik6r/t2
Iv/wGN9xO6fqghrsZfzL4+ziDk7TRTXa/wD9Clfa
           "]]}, 
         {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJwVzmdXSAEcx/FbskpCZHN6S15Cj6lkZYQIacgqpOwREhFRFElKRoSEjIxU
RhGFyKcHn/O9v/M/954bG5cwLz4kCIIy5nu4QyF/2MA7LhAVGgQL9C77GGQj
77nIBPfhD91jP3/ZxAfKmeieoPc5wD/S6eASk9wTtYmDDLGZj1wm2n2hPuDQ
8A/bGdpJBUk85DAhbpnaRSWT7UXazBFC7Szt5gqLecRRRrhl6yeuMsVeoo85
Rpi9RT9TRYy9VJ9wnJF2jn6hmqn2Mm2hiFH2Vv3KNabZyfqUE4y2t2kP15lu
L9dWTrKdXmpYwTNOsYNv3GAlzylmjPd36ndqmWGv0hecZqydq33cZKadom2U
EG7n6Q/qmGWv1pecIcLepT+5xRpecZbdrOU1peyhn3pSecM5xvlGvg7QwGx7
nbZznkh7r/7iNnPs9fqWMsbbBfqbRubaafofiw5uGg==
           
           "]]}}}], {}, {}}, {{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6], 
        PointBox[{{-0.491838, 0.408561}, {0., 0.}, {0.491838, 0.408561}, {
         0.973187, 0.224986}, {2.427912, 1.402299}, {3.668868, -2.077542}, {
         6.12492, 7.}, {8.58097, -2.077542}}]}, {}}, {}, {}, {{}, {}}}}, 
    InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          
          TemplateBox[{"\"Prediction\"","\"1-\[Sigma] confidence interval\""},
           
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{#, ",", #2}], "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"T=3800 K turning-point data\""},
           "PointLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"PointLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "False", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{0.2, 0.8}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox[
       "\"Reaction barrier (eV)\"", FontSize -> 12, StripOnInput -> False], 
       TraditionalForm], None}, {
      FormBox[
       StyleBox[
       "\"Reaction path (\[Angstrom])\"", FontSize -> 12, StripOnInput -> 
        False], TraditionalForm], None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->500,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}, "AxesInFront" -> True},
   PlotRange->{{0, 8.68097}, {-2.135209879216358, 7.000177124785607}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{
       GraphicsComplex[CompressedData["
1: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
4sTGfPyfp4cKYgyFU3BP/ztix3VDE+/VZn0Vm9TlcE9zRV6Kf6GMe3pV3JVq
39mEPC0SSmFrPdmLPL1nMLFQl3UQeTo73YD6yAX3tEysbIjJLtzTP7dr3p2m
q0ee3hPVHy9psIw83eWZXmmUgnva/um7MthOINM87SkV9MFBiUCmedoiTybZ
x3MAo3n6FqgTJ2vSIU8/3uYexpLGhzw9fOKqeG8zEXlaWqVi5No87ml7weN/
JD4LI08zy6tE7t7HizxdqjWeNOVNQJ5uVitrdZvsxmieZgrdy8DquoI8XeeV
QtLMwHt1QTv3EtTBPf3hkUOecPN/PG3YJVLbgnvaOF80rWeyA3n64vuvFSss
/cjTfg6Ou7as/0We/u3l6fkA4p6O8MqNyHYYRJ6OY5reLaVDQZ5OO65Zry9J
INM87RVTa8LxBPf04/Rvf0f46Mg0T/s4H1O7MLSA0Tw9vc145O//94T/eTpg
TO6m164tyNPGQ5MlmpFCyNMakrW5Rk24p+cyu9fTbXFPK6vvXbGTFUS9Wnn5
k99rw0HUq4MIOlkk71nUq/M/PvsZIUsg0zw9ZW/K9iIF93TVA43arJa3yNOT
Wfzl3SK4p4sv0EVUzjYiT4tpm/69JIp7+tlgwak3Z/uQpztfmXW8OD2MPG0+
7dt+6xveqxmCgcHQQbxXsx3vmoo7NYh6tfcMp4uD3xrytdoxOSObJ7ivd0Yq
qjzemC80X1ubN9hkha6iXp1e83pl6ZsA8rTM1sAs4I97utz7rHQRhnvaI1Uw
OipeCPXq1dznk//cJlCv7pY94rzp5xryNO/+SoprJu5peg7WOLcs3NNHNqbz
l+VW5GkXT5/3T6VwTwtYaTg02f9BnlazGA+qetuPPJ3w9+kFehXc004fZM6V
V84hTwdkOAifuYV7+vDTG4qjeXiv5lWed2vqJpBpvbo4k/6o4fEZjObp4FH2
PR96hZGnA7e3tuqv4J7+/MicEJiJ+9n1ZZZ6/fgC8nOJ5bYA6ZsEMs3PepUy
XOQNL/wfcZrbAQ==
        
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
           EdgeForm[], 
           Directive[
            GrayLevel[0.5], 
            Opacity[0.2]], 
           GraphicsGroup[{
             Polygon[CompressedData["
1:eJwt1He8T3Ucx/F7L66Ua2dfIyqjqJSKlEgZpTJTkaRoICMlK2RV2kYRGmZZ
UfZWJHsrpYGsyy0Uuffq+Xnkj6fXeT+Oy+93zpey7bo06ZyUkJCQyNN+eY4N
fMR5BnOAr8jrN3bSjYwngyEc5Gvyud9ZNzGBTIZyiPnkd7+LbmYiWQzjDxZQ
wP3ndQsfc4HhHGYhBd3vqlv5JD6w/ZoeYRHd2ManJLr3uh5lMYXs7rqdz0iy
39BjLKEHO5hENvdG6HGWcrn9gu5kMtntNzWNZRS2e+ouppDDfktPsJwi9ou6
m6kk22/rSVZQ1H5J9zCNnPY7ms5Kitm9dC/TeZc/WcXL/MDnvMdfrKY3P/IF
l/j59/UUayhu99F9zCCXPVJP8w0l7L76EzO51B6lZ/iWknY//ZlZXGaP1r9Z
S3/2M5sxvMIvzOED/mEdA/iVL8ntz/hQz/IdqfZA/Y25pNhj9RzrKWUP0t+Z
Rx57nP7L95S2X42z5pg8G++IenHW7FZxtrSKbtJn4h1zF4fshzRLr9WNF/9d
FKIuB+1MrnG9QQ+QQeX4e7Wg1onP5bqlntdK8Zm1oxbgzvhedov4vFoxvrN2
0PzUjudiN4/vqxXieelTmo874nnazeJ56dXx3PVJzcvt8fztpvGs9ap4b9o+
nhO14t3ZTeKd6ZXx3jVFb4v37voM5eO8aG6tGefF9YNxTrRcnDN9It4/NeK8
2Q/EOdMr4nxquzg/3Brn1L4/zqiWjbOtj8f54xb22o3jbGsZXaFt4/xyM3vs
dEq7Xq45tTq7Xd+nJ7WULtPHNJmb2GXfqyc0VZdqDr2Rna4baZqW1CXaRrNT
jR12Qz2uJXSxttZs3MB2u4Ee0+K6SB/VJK5nm11fj2oxXaiPaCLXsdW+R49o
UV2gDyf+/x9yVba4vFsPaxGdr/8BXmHDQw==
              
              "]]}]}, {}, {}}, {{}, {}, {}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           
           Line[{1, 97, 50, 144, 26, 121, 74, 164, 2, 98, 51, 145, 27, 122, 
            75, 165, 3, 99, 52, 146, 28, 123, 76, 166, 4, 100, 53, 147, 29, 
            124, 77, 167, 5, 101, 54, 148, 30, 125, 78, 168, 6, 102, 55, 149, 
            31, 126, 79, 7, 103, 56, 150, 32, 127, 80, 169, 8, 104, 57, 151, 
            33, 128, 81, 9, 105, 58, 152, 34, 129, 82, 170, 10, 106, 59, 153, 
            35, 130, 83, 171, 11, 107, 60, 154, 36, 131, 84, 172, 12, 108, 61,
             155, 37, 132, 85, 173, 13, 109, 62, 156, 38, 133, 86, 174, 14, 
            110, 63, 39, 15, 111, 64, 40, 134, 87, 175, 16, 112, 65, 157, 41, 
            135, 88, 176, 17, 113, 66, 158, 42, 136, 89, 177, 18, 114, 67, 
            159, 43, 137, 90, 178, 19, 115, 68, 160, 44, 138, 91, 179, 20, 
            116, 69, 45, 139, 92, 21, 117, 70, 46, 140, 93, 22, 118, 71, 161, 
            47, 141, 94, 180, 23, 119, 72, 162, 48, 142, 95, 181, 24, 120, 73,
             163, 49, 143, 96, 182, 25}]}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0.5]], 
           Line[CompressedData["
1:eJwVyXdXDgAYh+H3RVkpZJZUyM4KIZRZyCqbNBHO0afrJBlJUaLMsktDUXZJ
Ei5/3Od6fueJLyjJuhQMBAKlKtN0o5s7+YDL/z91QpedM/ie6XzIFQzqpMrt
mfzADD7iSo7QKV2xo9jDXXzMVRypHFXY0ezlbj5hEkfptK7as/iRe/iUqxmi
a+4YfmImm7iGocrVdXs2P3Mvm7mWo3XDHcsvfKZk9xjlqdKO41fu43Ou41jl
66Ydz2/czxdcz3EqUJU9h995gC+5geNVqFv2XPbxIF8xhWGqds9jP19ro3uC
atwJ/MEsvuEmhqtIt+35HGA2W7iZETqjO/YC/uQhtjKVE3VWtfZCDvIw3zKN
k3ROdfYi/uIRtnELJ6tYd+3FHOJRtnMrI1XvXsLf7NA9LbWH2alt7ik6r/t2
Iv/wGN9xO6fqghrsZfzL4+ziDk7TRTXa/wD9Clfa
            "]]}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0.5]], 
           Line[CompressedData["
1:eJwVzmdXSAEcx/FbskpCZHN6S15Cj6lkZYQIacgqpOwREhFRFElKRoSEjIxU
RhGFyKcHn/O9v/M/954bG5cwLz4kCIIy5nu4QyF/2MA7LhAVGgQL9C77GGQj
77nIBPfhD91jP3/ZxAfKmeieoPc5wD/S6eASk9wTtYmDDLGZj1wm2n2hPuDQ
8A/bGdpJBUk85DAhbpnaRSWT7UXazBFC7Szt5gqLecRRRrhl6yeuMsVeoo85
Rpi9RT9TRYy9VJ9wnJF2jn6hmqn2Mm2hiFH2Vv3KNabZyfqUE4y2t2kP15lu
L9dWTrKdXmpYwTNOsYNv3GAlzylmjPd36ndqmWGv0hecZqydq33cZKadom2U
EG7n6Q/qmGWv1pecIcLepT+5xRpecZbdrOU1peyhn3pSecM5xvlGvg7QwGx7
nbZznkh7r/7iNnPs9fqWMsbbBfqbRubaafofiw5uGg==
            
            "]]}}}], {}, {}}, {{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          
          Point[{{-0.491838, 0.408561}, {0., 0.}, {0.491838, 0.408561}, {
           0.973187, 0.224986}, {2.427912, 1.402299}, {3.668868, -2.077542}, {
           6.12492, 7.}, {8.58097, -2.077542}}]}, {}}}, {}, {}, {{}, {}}}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{
         Style["Reaction barrier (eV)", FontSize -> 12], None}, {
         Style["Reaction path (\[Angstrom])", FontSize -> 12], None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 500, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}, "AxesInFront" -> True}, 
      PlotRange -> {{0, 8.68097}, {-2.135209879216358, 7.000177124785607}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       PointLegend[{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {"T=3800 K turning-point data"}, 
        LegendMarkers -> {{False, Automatic}}, Joined -> {False}, 
        LabelStyle -> {}, LegendLayout -> "Column"]]], {0.2, 0.8}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.7082606566681013`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"legends", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "\"\<T=0 K turning-point data\>\"", "}"}], ",", 
     RowBox[{"{", "\"\<T=2500 K turning-point data\>\"", "}"}], ",", 
     RowBox[{"{", "\"\<T=3800 K turning-point data\>\"", "}"}]}], "}"}]}], 
  ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"gp1", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"vol", "=", "1"}], "}"}], ",", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Pdiste0sGradGP", "[", 
            RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Pdiste0sGradGP", "[", 
             RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], "+", 
           RowBox[{"StandardDeviation", "[", 
            RowBox[{
             RowBox[{"Pdiste0sGradGP", "[", 
              RowBox[{"[", "vol", "]"}], "]"}], "[", 
             RowBox[{"x", ",", "\"\<Distribution\>\""}], "]"}], "]"}]}], ",", 
          
          RowBox[{
           RowBox[{
            RowBox[{"Pdiste0sGradGP", "[", 
             RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], "-", 
           RowBox[{"StandardDeviation", "[", 
            RowBox[{
             RowBox[{"Pdiste0sGradGP", "[", 
              RowBox[{"[", "vol", "]"}], "]"}], "[", 
             RowBox[{"x", ",", "\"\<Distribution\>\""}], "]"}], "]"}]}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"dist", "[", 
              RowBox[{"[", "vol", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], "+", "0.1"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", "Gray", ",", "Gray"}], "}"}]}], ",", 
        RowBox[{"Filling", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"2", "\[Rule]", 
           RowBox[{"{", "3", "}"}]}], "}"}]}], ",", 
        RowBox[{"Exclusions", "\[Rule]", "\"\<None\>\""}], ",", 
        RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<Prediction\>\"", ",", 
             "\"\<1-\[Sigma] confidence interval\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.2", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Reaction path (\[Angstrom])\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Reaction barrier (eV)\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], ",", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"List", "@@@", 
         RowBox[{"diste0s", "[", 
          RowBox[{"[", "vol", "]"}], "]"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"legends", "[", 
            RowBox[{"[", "vol", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.2", ",", "0.8"}], "}"}]}], "]"}]}]}], "]"}]}], "]"}]}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gp2", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"vol", "=", "2"}], "}"}], ",", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Pdiste0sGradGP", "[", 
            RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Pdiste0sGradGP", "[", 
             RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], "+", 
           RowBox[{"StandardDeviation", "[", 
            RowBox[{
             RowBox[{"Pdiste0sGradGP", "[", 
              RowBox[{"[", "vol", "]"}], "]"}], "[", 
             RowBox[{"x", ",", "\"\<Distribution\>\""}], "]"}], "]"}]}], ",", 
          
          RowBox[{
           RowBox[{
            RowBox[{"Pdiste0sGradGP", "[", 
             RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], "-", 
           RowBox[{"StandardDeviation", "[", 
            RowBox[{
             RowBox[{"Pdiste0sGradGP", "[", 
              RowBox[{"[", "vol", "]"}], "]"}], "[", 
             RowBox[{"x", ",", "\"\<Distribution\>\""}], "]"}], "]"}]}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"dist", "[", 
              RowBox[{"[", "vol", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], "+", "0.1"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", "Gray", ",", "Gray"}], "}"}]}], ",", 
        RowBox[{"Filling", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"2", "\[Rule]", 
           RowBox[{"{", "3", "}"}]}], "}"}]}], ",", 
        RowBox[{"Exclusions", "\[Rule]", "\"\<None\>\""}], ",", 
        RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<Prediction\>\"", ",", 
             "\"\<1-\[Sigma] confidence interval\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.2", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Reaction path (\[Angstrom])\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Reaction barrier (eV)\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], ",", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"diste0s", "[", 
         RowBox[{"[", "vol", "]"}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"legends", "[", 
            RowBox[{"[", "vol", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.2", ",", "0.8"}], "}"}]}], "]"}]}]}], "]"}]}], "]"}]}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gp3", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"vol", "=", "3"}], "}"}], ",", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Pdiste0sGradGP", "[", 
            RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Pdiste0sGradGP", "[", 
             RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], "+", 
           RowBox[{"StandardDeviation", "[", 
            RowBox[{
             RowBox[{"Pdiste0sGradGP", "[", 
              RowBox[{"[", "vol", "]"}], "]"}], "[", 
             RowBox[{"x", ",", "\"\<Distribution\>\""}], "]"}], "]"}]}], ",", 
          
          RowBox[{
           RowBox[{
            RowBox[{"Pdiste0sGradGP", "[", 
             RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], "-", 
           RowBox[{"StandardDeviation", "[", 
            RowBox[{
             RowBox[{"Pdiste0sGradGP", "[", 
              RowBox[{"[", "vol", "]"}], "]"}], "[", 
             RowBox[{"x", ",", "\"\<Distribution\>\""}], "]"}], "]"}]}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"dist", "[", 
              RowBox[{"[", "vol", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], "+", "0.1"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", "Gray", ",", "Gray"}], "}"}]}], ",", 
        RowBox[{"Filling", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"2", "\[Rule]", 
           RowBox[{"{", "3", "}"}]}], "}"}]}], ",", 
        RowBox[{"Exclusions", "\[Rule]", "\"\<None\>\""}], ",", 
        RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<Prediction\>\"", ",", 
             "\"\<1-\[Sigma] confidence interval\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.2", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Reaction path (\[Angstrom])\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Reaction barrier (eV)\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], ",", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"diste0s", "[", 
         RowBox[{"[", "vol", "]"}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"legends", "[", 
            RowBox[{"[", "vol", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.2", ",", "0.8"}], "}"}]}], "]"}]}]}], "]"}]}], "]"}]}],
    "]"}]}]}], "Input"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{GraphicsComplexBox[CompressedData["
1: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
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
         {GrayLevel[0.5], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl03fYjXUYwPF32KOyQpGRMpKZiowyC5UkbWVGygyZJQ2rsrIaREZktSg7
40UZ2ZIdJXvv8bkvf3zO9/dcz3XOdc5z36dAk7b12yQlJCQk8qqXF5jLAA7R
kQ2M5wovMo+BHOYtNvINV3mJ+XzMETqxiQlc42UW8AlH6cxmJsYX8EUa6UI+
5Rhd2MIkEt1/RRcxiOO8zVYmk5R04zcsZjBd2ca3JLvXWH9jCCfoxl9MIZX7
TXQJQ+nOdqbSlKUMowd/8x3NWMZnnKQnO5hGap/XXJcznFP0YifTSeN+C01h
BKd5h13M4DVWMJJ32c1MWrKSUZyhN3uYRVqf2UpXMZqzvMdevud1fudz+rCP
H0jnfa31D77gHO/zDz+S3v03dDVfcp4P2M9PvMkavuICH3KAn8ngvW10LWO4
yEf8y2zaso6x9OU/5tCOP/maS/TjIL+Q0We21/WM4zL9+Z9fyeR+h5iNlXo+
vj/3x9xcPxqz0PwxU30ufj/lYt6uT5Iv9kDT6n2xI861Ymf0jtghTaNl2eZ8
nLzOi3Urx8jjepGm1jJsca6pR/V2XajPaipKs9l1DT2it+kCbajJlGKT6+p6
WHPrfJ3HM85JlGSj60Pkcp6rDTSREmxwXS2ekeaM55Rw409/bzxHx6rxfPXW
eMb6tF7T4jEHfSRmozliPlpfr+o9MT99OGaq2WOueoViMXetEvug2WIn9KmY
mRaNvdHKsUuaNfZJ68XMtUjsnFaKXdQssY/6ZOyRFo6d1X3cErusT8QO6t2x
61ox9l9vjv+APh77q3fpKn1I9+hNOkvrxv5rIV2pFXS3ZtaZWkfP6p26Qsvr
Ls2kM7S2ntGCmqIP6k7NqNP1MT2tBXS5PqA7NINO0+su8shh
            
            "]]]}, {}, {}}, {{}, {}, {}, 
         {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[{1, 98, 50, 146, 26, 122, 74, 161, 2, 99, 51, 147, 27, 123, 
           75, 162, 3, 100, 52, 148, 28, 124, 76, 163, 4, 101, 53, 29, 125, 
           77, 5, 102, 54, 149, 30, 126, 78, 164, 6, 103, 55, 150, 31, 127, 
           79, 165, 7, 104, 56, 32, 128, 80, 8, 105, 57, 33, 129, 81, 9, 106, 
           58, 151, 34, 130, 82, 166, 10, 107, 59, 152, 35, 131, 83, 11, 108, 
           60, 153, 36, 132, 84, 167, 12, 109, 61, 154, 37, 133, 85, 168, 13, 
           110, 62, 155, 38, 134, 86, 14, 111, 63, 39, 135, 87, 15, 112, 64, 
           40, 136, 88, 16, 113, 65, 156, 41, 137, 89, 17, 114, 66, 42, 138, 
           90, 169, 18, 115, 67, 157, 43, 139, 91, 170, 19, 116, 68, 158, 44, 
           140, 92, 20, 117, 69, 159, 45, 141, 93, 21, 118, 70, 46, 142, 94, 
           22, 119, 71, 47, 143, 95, 23, 120, 72, 48, 144, 96, 171, 24, 121, 
           73, 160, 49, 145, 97, 172, 25}]}, 
         {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJwt0Wc3FwAYxuE/KUlmg5aINCQq7aLSQlOD3vYB6pPJTHbaGUWJRERLeyqK
ytU5XvzOdT+vn6TzFwsvBAUCgZLp5jgGuJW3mcRR5vESwznIbbzDFfzBfJZy
Lp9xO+8ymT9ZwDJGcIg72MIUjvEIyxnJYe5kK1dynEdZwSg+5y62MZW/eIyV
jOYLtmuV/ZvHWcUYvuRu3uNqTvAELzOWr5jN+1zDSZ5kNefxNXPYwbX8wyua
b49wDzuZxr8sZA0X8A338gHX8R9PsZYL+Zb7+JDp/5+iOsTxHXPZxfUM0mnV
u+P5no+UYQfrjBrcjVpkf+B+djOTM3RWTe7F/MgD7OEGhqhIV91L+IkH+Zgb
OVPN9lJ+Zq+uaZn7C59okz1L1+0EfuUh9jGLobphL+c39muzPVvFuulO5Hce
5lNuYZjO6ZZ7CgMOV8I=
           "]]}, 
         {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJwV0mc3kGEAx+GHNIwv4Sv1UqLQ0pBoqTSkgbSoNNBGgyhNNLSkIWVUlNIi
Kqm0u7y4zu8553/u+zwv7uiElInzQoIgqCHGx0Vy6SeNVg7yh0lcIo8PpPOI
Q/wlljo2McBCHnOYf0ymnnwGWUQbR0Z/IDQI4rSBzXxkMe0cJcQer5fZwieW
0EEZofYpeoWtLKWTcsbYpupVtvGZDJ5QQZg9Qa+xnWU85RiJNFLAcp5xnCSu
U8gQK+jiBGPdN01vsIMvZNLNScbZp+tNdjLMSp5TyQxusYtVvKCKmdymiK+s
podTjHfnLG1iN99Yw0uqSeYOe8jiFTVMcG62NrOX76yll9OE2+foXfYxQjav
OcNc7lHMD9bxhloinB19XPcp4SfrectZUnhAKRt4xznm08J+frGR95wn0p2p
+pAD/CaHPi4QZV+g/wFt3XNQ
           "]]}}}], {}, {}}, {{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6], 
        PointBox[{{-0.540279, 0.459286}, {0., 0.}, {0.540279, 0.459286}, {
         0.881051, 0.390465}, {1.931386, 0.995135}, {4.349635, -3.362815}, {
         6.70861, 5.}, {9.06758, -3.362815}}]}, {}}, {}, {}, {{}, {}}}}, 
    InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          
          TemplateBox[{"\"Prediction\"","\"1-\[Sigma] confidence interval\""},
           
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{#, ",", #2}], "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"T=0 K turning-point data\""},
           "PointLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"PointLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "False", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{0.2, 0.8}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox[
       "\"Reaction barrier (eV)\"", FontSize -> 12, StripOnInput -> False], 
       TraditionalForm], None}, {
      FormBox[
       StyleBox[
       "\"Reaction path (\[Angstrom])\"", FontSize -> 12, StripOnInput -> 
        False], TraditionalForm], None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->500,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}, "AxesInFront" -> True},
   PlotRange->{{0, 9.16758}, {-3.3630361710135714`, 4.999400766222217}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{
       GraphicsComplex[CompressedData["
1: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
        
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
           EdgeForm[], 
           Directive[
            GrayLevel[0.5], 
            Opacity[0.2]], 
           GraphicsGroup[{
             Polygon[CompressedData["
1:eJwl03fYjXUYwPF32KOyQpGRMpKZiowyC5UkbWVGygyZJQ2rsrIaREZktSg7
40UZ2ZIdJXvv8bkvf3zO9/dcz3XOdc5z36dAk7b12yQlJCQk8qqXF5jLAA7R
kQ2M5wovMo+BHOYtNvINV3mJ+XzMETqxiQlc42UW8AlH6cxmJsYX8EUa6UI+
5Rhd2MIkEt1/RRcxiOO8zVYmk5R04zcsZjBd2ca3JLvXWH9jCCfoxl9MIZX7
TXQJQ+nOdqbSlKUMowd/8x3NWMZnnKQnO5hGap/XXJcznFP0YifTSeN+C01h
BKd5h13M4DVWMJJ32c1MWrKSUZyhN3uYRVqf2UpXMZqzvMdevud1fudz+rCP
H0jnfa31D77gHO/zDz+S3v03dDVfcp4P2M9PvMkavuICH3KAn8ngvW10LWO4
yEf8y2zaso6x9OU/5tCOP/maS/TjIL+Q0We21/WM4zL9+Z9fyeR+h5iNlXo+
vj/3x9xcPxqz0PwxU30ufj/lYt6uT5Iv9kDT6n2xI861Ymf0jtghTaNl2eZ8
nLzOi3Urx8jjepGm1jJsca6pR/V2XajPaipKs9l1DT2it+kCbajJlGKT6+p6
WHPrfJ3HM85JlGSj60Pkcp6rDTSREmxwXS2ekeaM55Rw409/bzxHx6rxfPXW
eMb6tF7T4jEHfSRmozliPlpfr+o9MT99OGaq2WOueoViMXetEvug2WIn9KmY
mRaNvdHKsUuaNfZJ68XMtUjsnFaKXdQssY/6ZOyRFo6d1X3cErusT8QO6t2x
61ox9l9vjv+APh77q3fpKn1I9+hNOkvrxv5rIV2pFXS3ZtaZWkfP6p26Qsvr
Ls2kM7S2ntGCmqIP6k7NqNP1MT2tBXS5PqA7NINO0+su8shh
              
              "]]}]}, {}, {}}, {{}, {}, {}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           
           Line[{1, 98, 50, 146, 26, 122, 74, 161, 2, 99, 51, 147, 27, 123, 
            75, 162, 3, 100, 52, 148, 28, 124, 76, 163, 4, 101, 53, 29, 125, 
            77, 5, 102, 54, 149, 30, 126, 78, 164, 6, 103, 55, 150, 31, 127, 
            79, 165, 7, 104, 56, 32, 128, 80, 8, 105, 57, 33, 129, 81, 9, 106,
             58, 151, 34, 130, 82, 166, 10, 107, 59, 152, 35, 131, 83, 11, 
            108, 60, 153, 36, 132, 84, 167, 12, 109, 61, 154, 37, 133, 85, 
            168, 13, 110, 62, 155, 38, 134, 86, 14, 111, 63, 39, 135, 87, 15, 
            112, 64, 40, 136, 88, 16, 113, 65, 156, 41, 137, 89, 17, 114, 66, 
            42, 138, 90, 169, 18, 115, 67, 157, 43, 139, 91, 170, 19, 116, 68,
             158, 44, 140, 92, 20, 117, 69, 159, 45, 141, 93, 21, 118, 70, 46,
             142, 94, 22, 119, 71, 47, 143, 95, 23, 120, 72, 48, 144, 96, 171,
             24, 121, 73, 160, 49, 145, 97, 172, 25}]}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0.5]], 
           Line[CompressedData["
1:eJwt0Wc3FwAYxuE/KUlmg5aINCQq7aLSQlOD3vYB6pPJTHbaGUWJRERLeyqK
ytU5XvzOdT+vn6TzFwsvBAUCgZLp5jgGuJW3mcRR5vESwznIbbzDFfzBfJZy
Lp9xO+8ymT9ZwDJGcIg72MIUjvEIyxnJYe5kK1dynEdZwSg+5y62MZW/eIyV
jOYLtmuV/ZvHWcUYvuRu3uNqTvAELzOWr5jN+1zDSZ5kNefxNXPYwbX8wyua
b49wDzuZxr8sZA0X8A338gHX8R9PsZYL+Zb7+JDp/5+iOsTxHXPZxfUM0mnV
u+P5no+UYQfrjBrcjVpkf+B+djOTM3RWTe7F/MgD7OEGhqhIV91L+IkH+Zgb
OVPN9lJ+Zq+uaZn7C59okz1L1+0EfuUh9jGLobphL+c39muzPVvFuulO5Hce
5lNuYZjO6ZZ7CgMOV8I=
            "]]}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0.5]], 
           Line[CompressedData["
1:eJwV0mc3kGEAx+GHNIwv4Sv1UqLQ0pBoqTSkgbSoNNBGgyhNNLSkIWVUlNIi
Kqm0u7y4zu8553/u+zwv7uiElInzQoIgqCHGx0Vy6SeNVg7yh0lcIo8PpPOI
Q/wlljo2McBCHnOYf0ymnnwGWUQbR0Z/IDQI4rSBzXxkMe0cJcQer5fZwieW
0EEZofYpeoWtLKWTcsbYpupVtvGZDJ5QQZg9Qa+xnWU85RiJNFLAcp5xnCSu
U8gQK+jiBGPdN01vsIMvZNLNScbZp+tNdjLMSp5TyQxusYtVvKCKmdymiK+s
podTjHfnLG1iN99Yw0uqSeYOe8jiFTVMcG62NrOX76yll9OE2+foXfYxQjav
OcNc7lHMD9bxhloinB19XPcp4SfrectZUnhAKRt4xznm08J+frGR95wn0p2p
+pAD/CaHPi4QZV+g/wFt3XNQ
            "]]}}}], {}, {}}, {{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          
          Point[{{-0.540279, 0.459286}, {0., 0.}, {0.540279, 0.459286}, {
           0.881051, 0.390465}, {1.931386, 0.995135}, {4.349635, -3.362815}, {
           6.70861, 5.}, {9.06758, -3.362815}}]}, {}}}, {}, {}, {{}, {}}}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{
         Style["Reaction barrier (eV)", FontSize -> 12], None}, {
         Style["Reaction path (\[Angstrom])", FontSize -> 12], None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 500, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}, "AxesInFront" -> True}, 
      PlotRange -> {{0, 9.16758}, {-3.3630361710135714`, 4.999400766222217}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       PointLegend[{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {"T=0 K turning-point data"}, 
        LegendMarkers -> {{False, Automatic}}, Joined -> {False}, 
        LabelStyle -> {}, LegendLayout -> "Column"]]], {0.2, 0.8}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.708260536919547*^9, 3.708262163023917*^9, 
  3.7082622387997217`*^9, 3.70826235972323*^9}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{GraphicsComplexBox[CompressedData["
1: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
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
         {GrayLevel[0.5], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwt1He0z2UcwPF7r31JJS0lJFS0KLvIyCrl0iClrgiVnVlmpIyUnWhQRjvX
LDJvyr1omBdlprL3yHh9Tv3x+r2f5zzne37n930+51cstUNK+6SEhIREmvt4
niWMZR/92MBnnKcNSxnHfvqzkc+5QFuWMZ4DDGATX8QX+KJ2upwJHGQgm/mS
ROcv6Are5RCvkcVXJDl/UdOZyGEGsYWvyeb8Jf2B9zjCYLbyDdmdt9eVTOIo
r7ONWXTgRyYzhN9JI4fnOupPvM8x3uAPZpPTeSddxQcc5022M4dczjtrBh8y
lC50JZOPOMEwdjCX3J55WVczhZMMZyfzyOO8m65hKiPYxXy6s5aPOcVb7GYB
yZ7roT/zCacZyR6+Ja/znvoL03ibP/mOXvzKdM7wDntZSD7P9dbfmMFZRvEX
i3iFV1nHTP5lNH/zPZd4vo+u51POMYZ/WEx+533jHRuj1noFNeN92D8a36el
4460lRagRrxP+zPcGnerl+v9cTfWTeL36y0xE/qcXkb1uFv7U9wc86Qt9VKq
xVzYN4470VKarvn1vpgl6xOUtF6hqfHbuJet9ikxH1pCl+uz8e6oyhb7RjFf
epMu07xahSzroxS3XqrJWpnN1o/oEb1Rl+gzMR9UYpP9YYrFe9QWMVtUZKP9
w3pIi8Y9aC6twAbrgxSJ+9OnNSfl447sG+oBvSHuX5/SHNwTd2z/kO7XwjE7
ml3vjvmwflD36fUxc///72SjXMyXfYO4d70uZlaf1CTKxlza14+50UI6X5tp
InfFXNvXi7nTa3WeNk387w/uTtZa1o251Wt0rl7gDus1WifmXa/WOfqEntfb
dbU+oHv0Kp2tj8es6m2aqbV1t16pafpYzLqW0Qytpbu0oM7Si+0IxF8=
            
            "]]]}, {}, {}}, {{}, {}, {}, 
         {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[{1, 98, 50, 146, 26, 122, 74, 163, 2, 99, 51, 147, 27, 123, 
           75, 164, 3, 100, 52, 148, 28, 124, 76, 165, 4, 101, 53, 149, 29, 
           125, 77, 166, 5, 102, 54, 150, 30, 126, 78, 167, 6, 103, 55, 31, 
           127, 79, 168, 7, 104, 56, 151, 32, 128, 80, 169, 8, 105, 57, 152, 
           33, 129, 81, 9, 106, 58, 34, 130, 82, 10, 107, 59, 153, 35, 131, 
           83, 170, 11, 108, 60, 154, 36, 132, 84, 171, 12, 109, 61, 37, 133, 
           85, 13, 110, 62, 155, 38, 134, 86, 14, 111, 63, 156, 39, 135, 87, 
           172, 15, 112, 64, 157, 40, 136, 88, 173, 16, 113, 65, 41, 137, 89, 
           17, 114, 66, 158, 42, 138, 90, 174, 18, 115, 67, 159, 43, 139, 91, 
           175, 19, 116, 68, 44, 140, 92, 20, 117, 69, 160, 45, 141, 93, 176, 
           21, 118, 70, 46, 142, 94, 22, 119, 71, 161, 47, 143, 95, 23, 120, 
           72, 48, 144, 96, 177, 24, 121, 73, 162, 49, 145, 97, 178, 25}]}, 
         {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJwlzudXDmAcx+Hn0aDQoKQiSorMrCg7ZVdCRUoe4yV/nBWyK4TIHhlJJBkZ
iTKujhefc/2+59wv7vTQkfLDwUAgcExHlWC85jre4GwOsSL4/00iu1jEm5zD
36zkcU7gGxazlXP5h1U8wSS+5Xre4jz+5UlNdHdzA29z/vDHtEv1zmS+40a2
MZdB7dYpO4U93MQ7XMARqtZpO5XvuZl3uZBh2qMz9iT2cgvvcRHD1eCezA/c
yvtczAjV6Kydxo8s4QMuYaRqdc6ewk98qDz3SJ13T+VnlvIRl3KU9uqCnc4+
PtYyd5TqdNHO4BeW8QnzGa1L7mn8yqcqcI/WZXcmv3Eb27mcY7RPjfZ0fmc5
n3EFxyqkJjuL/Xyule4YNbuz+YPb+YKrGKv9umLP4ABfarU7Tgd01Z7Jn9zB
Dq5hvK65c/iLr7TWPU4H1WLP4iB3spOFHK9Dum7/Az8hWJk=
           "]]}, 
         {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJwVz+lSSHEcx+FTWki6h26pS+iNlCSUPZUtRCRbtlAUsiSFkmRtVUpSiCiy
pUUJpacXz3zOzHd+858TG58StyIkCIJSlvq4z2G+kclLLjNLAg0c4TtZ9FDO
f5bxgKP8IJtXXJl/IDQIEvUhxxhhK71cJcSepI8o5Cfb6OMaofbl+pjjjLKd
11xngT1Zn3CCMXbwhgrC7PM/+pSTjLOTt9wghUZOkUM/lYS7W6lNnGaCXbzj
JhH2VG2miF/s5j1VRNpXaQtn2MNq1tDKWSbJZYBqFrpJ0zbOMcVePnCLRfZ0
fUYx+/jIbdbSTgm/yWOQO0S5W6cdnGea/QxRw2L7en3OBQ7wiVo20Ekpf8jn
M3eJdrdRuyjjLwcZpo5NbOYFF/lHAV+4xxL3GdrNJWY4xFfqibFv0TlIqm53

           "]]}}}], {}, {}}, {{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6], 
        PointBox[{{-0.505926, 0.415663}, {0., 0.}, {0.505926, 0.415663}, {
         0.917487, 0.297066}, {2.290072, 1.182288}, {3.576795, -2.827372}, {
         5.98676, 6.}, {8.39673, -2.827372}}]}, {}}, {}, {}, {{}, {}}}}, 
    InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          
          TemplateBox[{"\"Prediction\"","\"1-\[Sigma] confidence interval\""},
           
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{#, ",", #2}], "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"T=2500 K turning-point data\""},
           "PointLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"PointLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "False", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{0.2, 0.8}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox[
       "\"Reaction barrier (eV)\"", FontSize -> 12, StripOnInput -> False], 
       TraditionalForm], None}, {
      FormBox[
       StyleBox[
       "\"Reaction path (\[Angstrom])\"", FontSize -> 12, StripOnInput -> 
        False], TraditionalForm], None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->500,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}, "AxesInFront" -> True},
   PlotRange->{{0, 8.49673}, {-2.8275072801847814`, 5.998642163771059}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{
       GraphicsComplex[CompressedData["
1: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
        
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
           EdgeForm[], 
           Directive[
            GrayLevel[0.5], 
            Opacity[0.2]], 
           GraphicsGroup[{
             Polygon[CompressedData["
1:eJwt1He0z2UcwPF7r31JJS0lJFS0KLvIyCrl0iClrgiVnVlmpIyUnWhQRjvX
LDJvyr1omBdlprL3yHh9Tv3x+r2f5zzne37n930+51cstUNK+6SEhIREmvt4
niWMZR/92MBnnKcNSxnHfvqzkc+5QFuWMZ4DDGATX8QX+KJ2upwJHGQgm/mS
ROcv6Are5RCvkcVXJDl/UdOZyGEGsYWvyeb8Jf2B9zjCYLbyDdmdt9eVTOIo
r7ONWXTgRyYzhN9JI4fnOupPvM8x3uAPZpPTeSddxQcc5022M4dczjtrBh8y
lC50JZOPOMEwdjCX3J55WVczhZMMZyfzyOO8m65hKiPYxXy6s5aPOcVb7GYB
yZ7roT/zCacZyR6+Ja/znvoL03ibP/mOXvzKdM7wDntZSD7P9dbfmMFZRvEX
i3iFV1nHTP5lNH/zPZd4vo+u51POMYZ/WEx+533jHRuj1noFNeN92D8a36el
4460lRagRrxP+zPcGnerl+v9cTfWTeL36y0xE/qcXkb1uFv7U9wc86Qt9VKq
xVzYN4470VKarvn1vpgl6xOUtF6hqfHbuJet9ikxH1pCl+uz8e6oyhb7RjFf
epMu07xahSzroxS3XqrJWpnN1o/oEb1Rl+gzMR9UYpP9YYrFe9QWMVtUZKP9
w3pIi8Y9aC6twAbrgxSJ+9OnNSfl447sG+oBvSHuX5/SHNwTd2z/kO7XwjE7
ml3vjvmwflD36fUxc///72SjXMyXfYO4d70uZlaf1CTKxlza14+50UI6X5tp
InfFXNvXi7nTa3WeNk387w/uTtZa1o251Wt0rl7gDus1WifmXa/WOfqEntfb
dbU+oHv0Kp2tj8es6m2aqbV1t16pafpYzLqW0Qytpbu0oM7Si+0IxF8=
              
              "]]}]}, {}, {}}, {{}, {}, {}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           
           Line[{1, 98, 50, 146, 26, 122, 74, 163, 2, 99, 51, 147, 27, 123, 
            75, 164, 3, 100, 52, 148, 28, 124, 76, 165, 4, 101, 53, 149, 29, 
            125, 77, 166, 5, 102, 54, 150, 30, 126, 78, 167, 6, 103, 55, 31, 
            127, 79, 168, 7, 104, 56, 151, 32, 128, 80, 169, 8, 105, 57, 152, 
            33, 129, 81, 9, 106, 58, 34, 130, 82, 10, 107, 59, 153, 35, 131, 
            83, 170, 11, 108, 60, 154, 36, 132, 84, 171, 12, 109, 61, 37, 133,
             85, 13, 110, 62, 155, 38, 134, 86, 14, 111, 63, 156, 39, 135, 87,
             172, 15, 112, 64, 157, 40, 136, 88, 173, 16, 113, 65, 41, 137, 
            89, 17, 114, 66, 158, 42, 138, 90, 174, 18, 115, 67, 159, 43, 139,
             91, 175, 19, 116, 68, 44, 140, 92, 20, 117, 69, 160, 45, 141, 93,
             176, 21, 118, 70, 46, 142, 94, 22, 119, 71, 161, 47, 143, 95, 23,
             120, 72, 48, 144, 96, 177, 24, 121, 73, 162, 49, 145, 97, 178, 
            25}]}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0.5]], 
           Line[CompressedData["
1:eJwlzudXDmAcx+Hn0aDQoKQiSorMrCg7ZVdCRUoe4yV/nBWyK4TIHhlJJBkZ
iTKujhefc/2+59wv7vTQkfLDwUAgcExHlWC85jre4GwOsSL4/00iu1jEm5zD
36zkcU7gGxazlXP5h1U8wSS+5Xre4jz+5UlNdHdzA29z/vDHtEv1zmS+40a2
MZdB7dYpO4U93MQ7XMARqtZpO5XvuZl3uZBh2qMz9iT2cgvvcRHD1eCezA/c
yvtczAjV6Kydxo8s4QMuYaRqdc6ewk98qDz3SJ13T+VnlvIRl3KU9uqCnc4+
PtYyd5TqdNHO4BeW8QnzGa1L7mn8yqcqcI/WZXcmv3Eb27mcY7RPjfZ0fmc5
n3EFxyqkJjuL/Xyule4YNbuz+YPb+YKrGKv9umLP4ABfarU7Tgd01Z7Jn9zB
Dq5hvK65c/iLr7TWPU4H1WLP4iB3spOFHK9Dum7/Az8hWJk=
            "]]}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0.5]], 
           Line[CompressedData["
1:eJwVz+lSSHEcx+FTWki6h26pS+iNlCSUPZUtRCRbtlAUsiSFkmRtVUpSiCiy
pUUJpacXz3zOzHd+858TG58StyIkCIJSlvq4z2G+kclLLjNLAg0c4TtZ9FDO
f5bxgKP8IJtXXJl/IDQIEvUhxxhhK71cJcSepI8o5Cfb6OMaofbl+pjjjLKd
11xngT1Zn3CCMXbwhgrC7PM/+pSTjLOTt9wghUZOkUM/lYS7W6lNnGaCXbzj
JhH2VG2miF/s5j1VRNpXaQtn2MNq1tDKWSbJZYBqFrpJ0zbOMcVePnCLRfZ0
fUYx+/jIbdbSTgm/yWOQO0S5W6cdnGea/QxRw2L7en3OBQ7wiVo20Ekpf8jn
M3eJdrdRuyjjLwcZpo5NbOYFF/lHAV+4xxL3GdrNJWY4xFfqibFv0TlIqm53

            "]]}}}], {}, {}}, {{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          
          Point[{{-0.505926, 0.415663}, {0., 0.}, {0.505926, 0.415663}, {
           0.917487, 0.297066}, {2.290072, 1.182288}, {3.576795, -2.827372}, {
           5.98676, 6.}, {8.39673, -2.827372}}]}, {}}}, {}, {}, {{}, {}}}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{
         Style["Reaction barrier (eV)", FontSize -> 12], None}, {
         Style["Reaction path (\[Angstrom])", FontSize -> 12], None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 500, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}, "AxesInFront" -> True}, 
      PlotRange -> {{0, 8.49673}, {-2.8275072801847814`, 5.998642163771059}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       PointLegend[{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {"T=2500 K turning-point data"}, 
        LegendMarkers -> {{False, Automatic}}, Joined -> {False}, 
        LabelStyle -> {}, LegendLayout -> "Column"]]], {0.2, 0.8}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.708260536919547*^9, 3.708262163023917*^9, 
  3.7082622387997217`*^9, 3.708262365712203*^9}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{GraphicsComplexBox[CompressedData["
1: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
bwnboOTnp/O9VwbBcgKDR3ArAXKtKxUcr1wAjoEnJhtbyeC3FHWWlfOrYN7W
hEmyiRIaRPTw1mWOA+0Dlxs6o+ngohpQmKMllD91WOm9eoMRdo4rMpjnb2Bm
NW7LnJzMcFEmhe/CSDuWM6la2xLBAvtuFSoyN/WBF6kLiaMbrHAn1AJTezMF
jFgC03bvsUORzLNjX6v2QEdd1gFK03/739D08fIEL7RrSbp74zc3dLtzodVZ
ix0GObvVS5zmhdstn5zSDpLB55WHdeYq+GB9VNlW4dgseMVoJ6EKBaD2iII1
7BgAQarRP3QyBGF7bszhGxMV2BHO3zofI4VgLNl0kuHsGkYe3RvlpC4MtZSD
Bm86E8pxn+8YV4wYx0sgn7M5vftwm7cD+Vwrte8OtW478nn0VOhUhUgz8rnT
5y7j/9TGkM+nr2u9ep+1inyefyae0fzPGvJ5sOXdFPdXq8jn4RsW7RLCS8jn
bDmfq+5M/EI+D3XIC7xlRfT5GT4yBimDBeRzNtmHSiTPpgDu85vcLxIv6W0j
n7sH3EnZFCSBuM8fYJbqAs00yOcvxUih0RYH8vnr3GN8hf/P5yf7fjwRbGdH
Pvf1pLrKOLAP+bxulzV+s50AcZ8/TyFAduUt5PPx/OukF0bGAO5z+/ZfJofl
VpHPbSuS3Sk09zDc5zFSl8UBfQXyeWCqZ+JRhm7k88W0cp1IuSbkcyXVXjWF
0i7kc0lsu0ghbAH5fJP3erSI9zry+f3IWofvKavI51dehz6xzV5FPo/pfV1M
ojkMcJ/HN5cE0vSvIp+3PxZWOMe+i3zuW12XfJjuI/J5lGdFj7zSGvJ53zn+
yG/Ue8jnJaxBM35PyCHu85Gq08+OzDEjn8umFgkScog+z/zkeWHqKA/yueaj
BmMaWmbk88RD3sypS2QQ9/mARu2YmMcu8rl+0rXA6ykryOd5Qy7zgjfbkM+5
6E9XTLIRfb5eKDiUUp2OfB5nG23xuoHo8xQbvYhbki3I5/yj5x/e/taGfH5v
fukIZcYM8rnY8wNwcXkN+fydFFP/10NryOeTtW7CCi2ryOfDxlIx8MZf5HMH
bS3Hx3yzyOdxqceCKO8SfS4rJz565+oQ8nksTdGlru1F5PM5zV1bpaod5PMX
j9u3m56QQtzn0XXeC510jMjnd9MnI4PouJHPhcT6j0Y9JPr8stf1xN0brMjn
+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
ZZcjSzN3iP4mNbmq+ZxQ/j9dVW6b
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
         {GrayLevel[0.5], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwt03e8jnUcx+FzjOyd7HHsmR2KVDJSUTSsbGVFVqSEKGQUFS2jQYmmUUb2
LmXvGWWWvSK5vq/64zrv53Pu8zrnPPf9e5La9WjcPVlCQkIivX15nh18RioX
3tDTLCGf3U938jmp7Tf1DEvJb/fXXcwgjT1Oz7KMAvYLupsvSGuP13MsZwB7
mEk6197S86ygoP2i7mUW6e239QIreYl9fEkG197Ri6wiyR6o+/mKjPYEvcRq
XuYAX5PJtYl6mTUUsgfpQb4hs/2uXmEthe3BeohvyWK/p1dZRxF7iP7Gd7zP
36znFQ4zm6x+7gO9xk8UtYfqEeaQzf5Qr/Mzxexh+jtzudWepP+wgeL2q/oH
88huT9Yb/MJrHOV7bnNtiv7Lr5Swh+sxfiCHPTUOiG7UERxnPjl97yNN1E1a
UkfqCRaQy/5Yk+lmLaWv60kWktv+RJPrFi2to/QUi8hjf6opdKuO5k9+ZBop
fX+bltEx+heLyWtP11t0u5bVsbrF2+gbv5cH4/+wW8ffpxKb7T7xf9Eg3ke8
ba3Ipv8/I7l4IO6B3SreOxXYaPeKe0L9uH/2U4n/fbjKx731smfcT+rF/bdb
xn3XcvFc9Ll4HtSNZ2ff4PZ4ptojniN14rnbLeJ5a9k4E9o9zgH3x7mxm8d5
0TJxpjSb1o4z5/U1Ssc51Gfj/HFfnFO7WZxRLRVnWLvFueZeDtlN9aqW1LXa
VTNzDwftJ/WKltA12kUzUYsD9mWKe71aO2tG7ma//YRe0mK6SjtpBmqyz35c
L2pRXanptQZ7vX5ML2gRXaHPaDruYo/dRM9rYV2uT2ta7mS33VjPaSFdph01
DdXZZT+qZzVJl2oHTU01dtqP6BktqEu0vaaiKjvsRnpaC8QZ1XZxPrmD7XbD
OL+aP863to3zTRW22Q/H2dd8ukjbxOeCymy1H9JTmlcX6k194cKi
            
            "]]]}, {}, {}}, {{}, {}, {}, 
         {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[{1, 98, 50, 146, 26, 122, 74, 165, 2, 99, 51, 147, 27, 123, 
           75, 166, 3, 100, 52, 148, 28, 124, 76, 167, 4, 101, 53, 149, 29, 
           125, 77, 168, 5, 102, 54, 150, 30, 126, 78, 169, 6, 103, 55, 31, 
           127, 79, 170, 7, 104, 56, 151, 32, 128, 80, 171, 8, 105, 57, 152, 
           33, 129, 81, 172, 9, 106, 58, 34, 130, 82, 10, 107, 59, 153, 35, 
           131, 83, 173, 11, 108, 60, 154, 36, 132, 84, 174, 12, 109, 61, 37, 
           133, 85, 175, 13, 110, 62, 155, 38, 134, 86, 176, 14, 111, 63, 156,
            39, 135, 87, 177, 15, 112, 64, 157, 40, 136, 88, 178, 16, 113, 65,
            41, 137, 89, 17, 114, 66, 158, 42, 138, 90, 179, 18, 115, 67, 159,
            43, 139, 91, 180, 19, 116, 68, 160, 44, 140, 92, 181, 20, 117, 69,
            161, 45, 141, 93, 182, 21, 118, 70, 162, 46, 142, 94, 183, 22, 
           119, 71, 163, 47, 143, 95, 184, 23, 120, 72, 48, 144, 96, 185, 24, 
           121, 73, 164, 49, 145, 97, 186, 25}]}, 
         {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJwt0udXDgAYh+G3UBqoECLJyK7MEiqUlZmRMssWhfTXUUakQjbZIUUSCYmM
q3P6cJ/r+X1/EkvK88uCAoHA+YEmGB3cwAdcyME6oAt2PD9xIx9yEYeoWFX2
RHZyEx9xMUNUomo7gZ+5mY+ZxlAd1EV7Er9wC5uYzqE6pEt2Iru4lU+4hGE6
rMv2ZH5lPp8yg+E6oiv2FHZzG59xKSN0VDX2VH7jdj7nMkbqqnsav3MHX3A5
h+mYrtlJ/MGdfMlMDtdx1drT2cNXynKP0Aldt2fwJwvYzGxGqVR19kz2chdf
cwWjdVL19iz+YiHfcCVjdEoN9mz+5lutco/UDfcc9rGILczhKPU/xU17Lv9w
N98xl6NVrlt2Mv+yVavdsTqtRjuF/7iHbVzDMTqj23Zq/+Npr94713KszuqO
PY9B2qcP9jqOU4Xu2vMZrHb3esbpnO7ZCzhI+/XRzuN4Veq+/R+Y9Flt
           "]]}, 
         {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJwV0ldfSAEcx+FTEoWyG0ZlzzfjJXgBdYdIocjeq1JWRpKRIiPZJUSRiEhC
kpVRyHhcPJ/v+Z3/uTxJc1PmJIcEQVDBPA9NHGJAaBBs0I9UMc6er484zEB7
o37iEuPtBfqYIiLsTfqZyyTYqdrMESLtzdrNFRbyhGIGuW3RL1wl0V6kTznK
YHurfuUaabRQwhC3bfqN6yTZi/UZx4iyt+t3bpDOc44T7bZDe6hmgp2hrZxg
qL1Te6lhor1EX3CSYXaO/uAmk+yl2kYpufyklmW85BTDfZenv7jFZDtT2ylj
hL1L+7jNFDtLX1HOSDtff3OHqfZyfc1pRtkF+oc6VvCGM4x2261/ucs0O1s7
qCDG3vP/B9F7upK3nCXWu70aovU6XVdpJ+eIs/dpqDboDF2t7zhPvL1f++l9
nalrtIsLjLELNUwf6FreU8kB+nvfqLN0nX7gImPtgxquD3W2rtd/by1r5g==

           "]]}}}], {}, {}}, {{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6], 
        PointBox[{{-0.491838, 0.408561}, {0., 0.}, {0.491838, 0.408561}, {
         0.973187, 0.224986}, {2.427912, 1.402299}, {3.668868, -2.077542}, {
         6.12492, 7.}, {8.58097, -2.077542}}]}, {}}, {}, {}, {{}, {}}}}, 
    InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          
          TemplateBox[{"\"Prediction\"","\"1-\[Sigma] confidence interval\""},
           
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{#, ",", #2}], "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"T=3800 K turning-point data\""},
           "PointLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"PointLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "False", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{0.2, 0.8}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox[
       "\"Reaction barrier (eV)\"", FontSize -> 12, StripOnInput -> False], 
       TraditionalForm], None}, {
      FormBox[
       StyleBox[
       "\"Reaction path (\[Angstrom])\"", FontSize -> 12, StripOnInput -> 
        False], TraditionalForm], None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->500,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}, "AxesInFront" -> True},
   PlotRange->{{0, 8.68097}, {-2.077743913368163, 6.999721947282668}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{
       GraphicsComplex[CompressedData["
1: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
bwnboOTnp/O9VwbBcgKDR3ArAXKtKxUcr1wAjoEnJhtbyeC3FHWWlfOrYN7W
hEmyiRIaRPTw1mWOA+0Dlxs6o+ngohpQmKMllD91WOm9eoMRdo4rMpjnb2Bm
NW7LnJzMcFEmhe/CSDuWM6la2xLBAvtuFSoyN/WBF6kLiaMbrHAn1AJTezMF
jFgC03bvsUORzLNjX6v2QEdd1gFK03/739D08fIEL7RrSbp74zc3dLtzodVZ
ix0GObvVS5zmhdstn5zSDpLB55WHdeYq+GB9VNlW4dgseMVoJ6EKBaD2iII1
7BgAQarRP3QyBGF7bszhGxMV2BHO3zofI4VgLNl0kuHsGkYe3RvlpC4MtZSD
Bm86E8pxn+8YV4wYx0sgn7M5vftwm7cD+Vwrte8OtW478nn0VOhUhUgz8rnT
5y7j/9TGkM+nr2u9ep+1inyefyae0fzPGvJ5sOXdFPdXq8jn4RsW7RLCS8jn
bDmfq+5M/EI+D3XIC7xlRfT5GT4yBimDBeRzNtmHSiTPpgDu85vcLxIv6W0j
n7sH3EnZFCSBuM8fYJbqAs00yOcvxUih0RYH8vnr3GN8hf/P5yf7fjwRbGdH
Pvf1pLrKOLAP+bxulzV+s50AcZ8/TyFAduUt5PPx/OukF0bGAO5z+/ZfJofl
VpHPbSuS3Sk09zDc5zFSl8UBfQXyeWCqZ+JRhm7k88W0cp1IuSbkcyXVXjWF
0i7kc0lsu0ghbAH5fJP3erSI9zry+f3IWofvKavI51dehz6xzV5FPo/pfV1M
ojkMcJ/HN5cE0vSvIp+3PxZWOMe+i3zuW12XfJjuI/J5lGdFj7zSGvJ53zn+
yG/Ue8jnJaxBM35PyCHu85Gq08+OzDEjn8umFgkScog+z/zkeWHqKA/yueaj
BmMaWmbk88RD3sypS2QQ9/mARu2YmMcu8rl+0rXA6ykryOd5Qy7zgjfbkM+5
6E9XTLIRfb5eKDiUUp2OfB5nG23xuoHo8xQbvYhbki3I5/yj5x/e/taGfH5v
fukIZcYM8rnY8wNwcXkN+fydFFP/10NryOeTtW7CCi2ryOfDxlIx8MZf5HMH
bS3Hx3yzyOdxqceCKO8SfS4rJz565+oQ8nksTdGlru1F5PM5zV1bpaod5PMX
j9u3m56QQtzn0XXeC510jMjnd9MnI4PouJHPhcT6j0Y9JPr8stf1xN0brMjn
+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
ZZcjSzN3iP4mNbmq+ZxQ/j9dVW6b
        
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
           EdgeForm[], 
           Directive[
            GrayLevel[0.5], 
            Opacity[0.2]], 
           GraphicsGroup[{
             Polygon[CompressedData["
1:eJwt03e8jnUcx+FzjOyd7HHsmR2KVDJSUTSsbGVFVqSEKGQUFS2jQYmmUUb2
LmXvGWWWvSK5vq/64zrv53Pu8zrnPPf9e5La9WjcPVlCQkIivX15nh18RioX
3tDTLCGf3U938jmp7Tf1DEvJb/fXXcwgjT1Oz7KMAvYLupsvSGuP13MsZwB7
mEk6197S86ygoP2i7mUW6e239QIreYl9fEkG197Ri6wiyR6o+/mKjPYEvcRq
XuYAX5PJtYl6mTUUsgfpQb4hs/2uXmEthe3BeohvyWK/p1dZRxF7iP7Gd7zP
36znFQ4zm6x+7gO9xk8UtYfqEeaQzf5Qr/Mzxexh+jtzudWepP+wgeL2q/oH
88huT9Yb/MJrHOV7bnNtiv7Lr5Swh+sxfiCHPTUOiG7UERxnPjl97yNN1E1a
UkfqCRaQy/5Yk+lmLaWv60kWktv+RJPrFi2to/QUi8hjf6opdKuO5k9+ZBop
fX+bltEx+heLyWtP11t0u5bVsbrF2+gbv5cH4/+wW8ffpxKb7T7xf9Eg3ke8
ba3Ipv8/I7l4IO6B3SreOxXYaPeKe0L9uH/2U4n/fbjKx731smfcT+rF/bdb
xn3XcvFc9Ll4HtSNZ2ff4PZ4ptojniN14rnbLeJ5a9k4E9o9zgH3x7mxm8d5
0TJxpjSb1o4z5/U1Ssc51Gfj/HFfnFO7WZxRLRVnWLvFueZeDtlN9aqW1LXa
VTNzDwftJ/WKltA12kUzUYsD9mWKe71aO2tG7ma//YRe0mK6SjtpBmqyz35c
L2pRXanptQZ7vX5ML2gRXaHPaDruYo/dRM9rYV2uT2ta7mS33VjPaSFdph01
DdXZZT+qZzVJl2oHTU01dtqP6BktqEu0vaaiKjvsRnpaC8QZ1XZxPrmD7XbD
OL+aP863to3zTRW22Q/H2dd8ukjbxOeCymy1H9JTmlcX6k194cKi
              
              "]]}]}, {}, {}}, {{}, {}, {}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           
           Line[{1, 98, 50, 146, 26, 122, 74, 165, 2, 99, 51, 147, 27, 123, 
            75, 166, 3, 100, 52, 148, 28, 124, 76, 167, 4, 101, 53, 149, 29, 
            125, 77, 168, 5, 102, 54, 150, 30, 126, 78, 169, 6, 103, 55, 31, 
            127, 79, 170, 7, 104, 56, 151, 32, 128, 80, 171, 8, 105, 57, 152, 
            33, 129, 81, 172, 9, 106, 58, 34, 130, 82, 10, 107, 59, 153, 35, 
            131, 83, 173, 11, 108, 60, 154, 36, 132, 84, 174, 12, 109, 61, 37,
             133, 85, 175, 13, 110, 62, 155, 38, 134, 86, 176, 14, 111, 63, 
            156, 39, 135, 87, 177, 15, 112, 64, 157, 40, 136, 88, 178, 16, 
            113, 65, 41, 137, 89, 17, 114, 66, 158, 42, 138, 90, 179, 18, 115,
             67, 159, 43, 139, 91, 180, 19, 116, 68, 160, 44, 140, 92, 181, 
            20, 117, 69, 161, 45, 141, 93, 182, 21, 118, 70, 162, 46, 142, 94,
             183, 22, 119, 71, 163, 47, 143, 95, 184, 23, 120, 72, 48, 144, 
            96, 185, 24, 121, 73, 164, 49, 145, 97, 186, 25}]}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0.5]], 
           Line[CompressedData["
1:eJwt0udXDgAYh+G3UBqoECLJyK7MEiqUlZmRMssWhfTXUUakQjbZIUUSCYmM
q3P6cJ/r+X1/EkvK88uCAoHA+YEmGB3cwAdcyME6oAt2PD9xIx9yEYeoWFX2
RHZyEx9xMUNUomo7gZ+5mY+ZxlAd1EV7Er9wC5uYzqE6pEt2Iru4lU+4hGE6
rMv2ZH5lPp8yg+E6oiv2FHZzG59xKSN0VDX2VH7jdj7nMkbqqnsav3MHX3A5
h+mYrtlJ/MGdfMlMDtdx1drT2cNXynKP0Aldt2fwJwvYzGxGqVR19kz2chdf
cwWjdVL19iz+YiHfcCVjdEoN9mz+5lutco/UDfcc9rGILczhKPU/xU17Lv9w
N98xl6NVrlt2Mv+yVavdsTqtRjuF/7iHbVzDMTqj23Zq/+Npr94713KszuqO
PY9B2qcP9jqOU4Xu2vMZrHb3esbpnO7ZCzhI+/XRzuN4Veq+/R+Y9Flt
            "]]}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0.5]], 
           Line[CompressedData["
1:eJwV0ldfSAEcx+FTEoWyG0ZlzzfjJXgBdYdIocjeq1JWRpKRIiPZJUSRiEhC
kpVRyHhcPJ/v+Z3/uTxJc1PmJIcEQVDBPA9NHGJAaBBs0I9UMc6er484zEB7
o37iEuPtBfqYIiLsTfqZyyTYqdrMESLtzdrNFRbyhGIGuW3RL1wl0V6kTznK
YHurfuUaabRQwhC3bfqN6yTZi/UZx4iyt+t3bpDOc44T7bZDe6hmgp2hrZxg
qL1Te6lhor1EX3CSYXaO/uAmk+yl2kYpufyklmW85BTDfZenv7jFZDtT2ylj
hL1L+7jNFDtLX1HOSDtff3OHqfZyfc1pRtkF+oc6VvCGM4x2261/ucs0O1s7
qCDG3vP/B9F7upK3nCXWu70aovU6XVdpJ+eIs/dpqDboDF2t7zhPvL1f++l9
nalrtIsLjLELNUwf6FreU8kB+nvfqLN0nX7gImPtgxquD3W2rtd/by1r5g==

            "]]}}}], {}, {}}, {{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          
          Point[{{-0.491838, 0.408561}, {0., 0.}, {0.491838, 0.408561}, {
           0.973187, 0.224986}, {2.427912, 1.402299}, {3.668868, -2.077542}, {
           6.12492, 7.}, {8.58097, -2.077542}}]}, {}}}, {}, {}, {{}, {}}}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{
         Style["Reaction barrier (eV)", FontSize -> 12], None}, {
         Style["Reaction path (\[Angstrom])", FontSize -> 12], None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 500, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}, "AxesInFront" -> True}, 
      PlotRange -> {{0, 8.68097}, {-2.077743913368163, 6.999721947282668}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       PointLegend[{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {"T=3800 K turning-point data"}, 
        LegendMarkers -> {{False, Automatic}}, Joined -> {False}, 
        LabelStyle -> {}, LegendLayout -> "Column"]]], {0.2, 0.8}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.708260536919547*^9, 3.708262163023917*^9, 
  3.7082622387997217`*^9, 3.7082623718307867`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"gp1", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"vol", "=", "1"}], "}"}], ",", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Pdiste0sGradGP", "[", 
            RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Pdiste0sGradGP", "[", 
             RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], "+", 
           RowBox[{"StandardDeviation", "[", 
            RowBox[{
             RowBox[{"Pdiste0sGradGP", "[", 
              RowBox[{"[", "vol", "]"}], "]"}], "[", 
             RowBox[{"x", ",", "\"\<Distribution\>\""}], "]"}], "]"}]}], ",", 
          
          RowBox[{
           RowBox[{
            RowBox[{"Pdiste0sGradGP", "[", 
             RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], "-", 
           RowBox[{"StandardDeviation", "[", 
            RowBox[{
             RowBox[{"Pdiste0sGradGP", "[", 
              RowBox[{"[", "vol", "]"}], "]"}], "[", 
             RowBox[{"x", ",", "\"\<Distribution\>\""}], "]"}], "]"}]}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"dist", "[", 
              RowBox[{"[", "vol", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], "+", "0.1"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", "Gray", ",", "Gray"}], "}"}]}], ",", 
        RowBox[{"Filling", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"2", "\[Rule]", 
           RowBox[{"{", "3", "}"}]}], "}"}]}], ",", 
        RowBox[{"Exclusions", "\[Rule]", "\"\<None\>\""}], ",", 
        RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<Prediction\>\"", ",", 
             "\"\<1-\[Sigma] confidence interval\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.2", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Reaction path (\[Angstrom])\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Reaction barrier (eV)\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], ",", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"List", "@@@", 
         RowBox[{"diste0s", "[", 
          RowBox[{"[", "vol", "]"}], "]"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"legends", "[", 
            RowBox[{"[", "vol", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.2", ",", "0.8"}], "}"}]}], "]"}]}]}], "]"}]}], "]"}]}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gp2", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"vol", "=", "2"}], "}"}], ",", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Pdiste0sGradGP", "[", 
            RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Pdiste0sGradGP", "[", 
             RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], "+", 
           RowBox[{"StandardDeviation", "[", 
            RowBox[{
             RowBox[{"Pdiste0sGradGP", "[", 
              RowBox[{"[", "vol", "]"}], "]"}], "[", 
             RowBox[{"x", ",", "\"\<Distribution\>\""}], "]"}], "]"}]}], ",", 
          
          RowBox[{
           RowBox[{
            RowBox[{"Pdiste0sGradGP", "[", 
             RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], "-", 
           RowBox[{"StandardDeviation", "[", 
            RowBox[{
             RowBox[{"Pdiste0sGradGP", "[", 
              RowBox[{"[", "vol", "]"}], "]"}], "[", 
             RowBox[{"x", ",", "\"\<Distribution\>\""}], "]"}], "]"}]}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"dist", "[", 
              RowBox[{"[", "vol", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], "+", "0.1"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", "Gray", ",", "Gray"}], "}"}]}], ",", 
        RowBox[{"Filling", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"2", "\[Rule]", 
           RowBox[{"{", "3", "}"}]}], "}"}]}], ",", 
        RowBox[{"Exclusions", "\[Rule]", "\"\<None\>\""}], ",", 
        RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<Prediction\>\"", ",", 
             "\"\<1-\[Sigma] confidence interval\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.2", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Reaction path (\[Angstrom])\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Reaction barrier (eV)\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], ",", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"diste0s", "[", 
         RowBox[{"[", "vol", "]"}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"legends", "[", 
            RowBox[{"[", "vol", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.2", ",", "0.8"}], "}"}]}], "]"}]}]}], "]"}]}], "]"}]}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gp3", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"vol", "=", "3"}], "}"}], ",", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Pdiste0sGradGP", "[", 
            RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Pdiste0sGradGP", "[", 
             RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], "+", 
           RowBox[{"StandardDeviation", "[", 
            RowBox[{
             RowBox[{"Pdiste0sGradGP", "[", 
              RowBox[{"[", "vol", "]"}], "]"}], "[", 
             RowBox[{"x", ",", "\"\<Distribution\>\""}], "]"}], "]"}]}], ",", 
          
          RowBox[{
           RowBox[{
            RowBox[{"Pdiste0sGradGP", "[", 
             RowBox[{"[", "vol", "]"}], "]"}], "[", "x", "]"}], "-", 
           RowBox[{"StandardDeviation", "[", 
            RowBox[{
             RowBox[{"Pdiste0sGradGP", "[", 
              RowBox[{"[", "vol", "]"}], "]"}], "[", 
             RowBox[{"x", ",", "\"\<Distribution\>\""}], "]"}], "]"}]}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"dist", "[", 
              RowBox[{"[", "vol", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], "+", "0.1"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", "Gray", ",", "Gray"}], "}"}]}], ",", 
        RowBox[{"Filling", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"2", "\[Rule]", 
           RowBox[{"{", "3", "}"}]}], "}"}]}], ",", 
        RowBox[{"Exclusions", "\[Rule]", "\"\<None\>\""}], ",", 
        RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<Prediction\>\"", ",", 
             "\"\<1-\[Sigma] confidence interval\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.2", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Reaction path (\[Angstrom])\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Reaction barrier (eV)\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], ",", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"diste0s", "[", 
         RowBox[{"[", "vol", "]"}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"legends", "[", 
            RowBox[{"[", "vol", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.2", ",", "0.8"}], "}"}]}], "]"}]}]}], "]"}]}], "]"}]}],
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.708257992134411*^9, 3.7082579942036533`*^9}, {
  3.70826036711416*^9, 3.708260368786234*^9}, {3.708260399376595*^9, 
  3.708260414721898*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{GraphicsComplexBox[CompressedData["
1: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
z94baMHtukzkZ5l2ZzGtAQb+/wAjmETm
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
         {GrayLevel[0.5], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl03ecyHUYwPFzdkURlYRUNBDRoMyKUlZGqGSVkSK7YRWiYVRG9p6hjOy9
0rK3VPa8cyrl7Pfz8sf7Pr/f6/vH3e/7PJe/SZuarRMTEhLS0MyPOsznE47S
mo2MJpWXWUAfjtGGTYzhAnVZSF+O8y6bGctF6rGITzlBW7YwjkvUZzGfcZJ2
bGU8l3mFJXzOKdqzjQlc4VWW8gUd2M5EXmMZ/ejIDibRgOX0pxM7mczrrGAA
p+nMLqZwlYasZCBJvMdupsZFutBGuoovSeZ99jCNNM4b62q+4gwfsJfpJDpv
omv4mhQ+ZB/fktZ5U13LIM7Shd+ZwRusYzBd2c9M3mQ9Q/ibbvzBLNIlXp//
jwzlH7rzJ9+R3nlz3cA3/EsP/uJ7WvATw/iIA8ymJT8znHN8zEHm8Ba/MIL/
6Mkh5pLB72ulvzKS/+nFYeaR0fnb+hujOE9vjvADmZy/o0uMo3bcKY+wzfuz
ekrv1MVaK2ZCMbZ6f0ZPai5dpFs4wR3eFyZc/2cpymaPx7nd8wK9ysOeN+nT
ekxv0/laU69oEd2oFfSo5oy/V1/Sy1o4vknLx7dojvheraGXtFDciZaLu9Bb
4760ul7Uh+JOtWzcpWaPu9YLPBiz0INki/loKg/E7PQAt8Q89Tz3x7y1TMxZ
b45d0GoxDy0Y+6KlY080a+ySVo15aoHYN30q9kyzxB7qOe6LHdX93BR7q1Vi
r/Te2G19MnZab4y91xdjL/UeXaOldJ/eoNP1hdhrza+rtaTu1cw6TSvrWb1b
V+kTukcz6VR9XlM0n67Ux3W3ZtQpeoa8nlfoY7pLM+hkfU6TNY8u10d1p6bX
SVpJk/QuXaYldIem04laUU9rbl2qxXW7ptUJeg156c7A
            
            "]]]}, {}, {}}, {{}, {}, {}, 
         {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[{1, 90, 48, 132, 26, 112, 70, 149, 2, 91, 49, 133, 27, 113, 
           71, 150, 3, 92, 50, 134, 28, 114, 72, 151, 4, 93, 51, 135, 29, 115,
            73, 152, 5, 94, 52, 136, 30, 116, 74, 153, 6, 95, 53, 137, 31, 
           117, 75, 154, 7, 96, 54, 138, 32, 118, 76, 8, 97, 55, 139, 33, 119,
            77, 155, 9, 98, 56, 140, 34, 120, 78, 10, 99, 57, 35, 121, 79, 11,
            100, 58, 141, 36, 122, 80, 156, 12, 101, 59, 142, 37, 123, 81, 
           157, 13, 102, 60, 143, 38, 124, 82, 14, 103, 61, 39, 15, 16, 104, 
           62, 40, 125, 83, 17, 105, 63, 144, 41, 126, 84, 158, 18, 106, 64, 
           145, 42, 127, 85, 159, 19, 107, 65, 146, 43, 128, 86, 160, 20, 108,
            66, 44, 21, 22, 109, 67, 45, 129, 87, 23, 110, 68, 147, 46, 130, 
           88, 161, 24, 111, 69, 148, 47, 131, 89, 162, 25}]}, 
         {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJwt0mdbDXAcx+FzrJCVWYk6RAgVkqyGSFl1eAVeAC9KdiEVGZkJDSRJiSIj
GSkjZN2uy4PPdX9/j///0N794X3BQCBwWgc00vGAK3iRs/mOm1nCUWzlStYw
ju+5hQc5mg+5ipc4hx+Yz0Mcwzam8zLnsp+HFWE/4mpeYTw/ciuPcCzbmcGr
TOAAC3iU49jBNbzGEAdZyGMcz8fM5HXO4ydu43FGspNrWcv5/MztLOUEPuEN
JdpfWKaJ9lOuYx0X8Ct38AQnsYvreZMLOcSdPMnJ7OYG3mISv/GUptjPeFuL
7O8sV5T9nPVabP/4/4ZT7R5uZAOXcJi7WMFpfMEsNjKZP1nESk7nS2aziUv5
i8Ws4gy+Yg7vcBl/M8wznMnXzOVdLucfntUsu5f3lPLv06ka0XzDZp1TjLuP
m3ifqQxqt867Y/mWeWxhGkdojy64/wJ9qVya
           "]]}, 
         {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJwV0Pcz0GEAx/EvKv6N/qXuIppEJKVdVNImI7T3oEUa0kCpSAuhrTQVKWlJ
isbLD697P3efu+e5e8bGpY6bExIEQSXjHc6zni5Ghrvs4xeRXGAD3aTSwn5+
E8VFsnjPXFo5wBATqCKbHubRxkGGiaaajXxgPvc4xB9iqCGHjyzgPsX8ZSKX
yGUhDyhhEpfJYxEPOcxkaslnMY84whSusIlelvCYo/xjKlcp4BNLecKxkY8M
DYJpeo1C+kijneOE2GO1jiI+k85TSgm1x2k9m/nCMp5RRph9ul5nC19ZTgcn
iKeBrazgOeUkcINtfCODF5xklDtn6E22852VvOQUo+2Jeosd9JPJK06TxG12
sorXnGEmd9jFD1bzhgqSaWQ3A6yhk7OM8d4sbWIPP1nLWyoJt6doM3sZZB3v
OEeEfbb+B3PqdNc=
           "]]}}}], {}, {}}, {{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6], 
        PointBox[{{-0.540279, 0.459286}, {0., 0.}, {0.540279, 0.459286}, {
         0.881051, 0.390465}, {1.931386, 0.995135}, {4.349635, -3.362815}, {
         6.70861, 5.}, {9.06758, -3.362815}}]}, {}}, {}, {}, {{}, {}}}}, 
    InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          
          TemplateBox[{"\"Prediction\"","\"1-\[Sigma] confidence interval\""},
           
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{#, ",", #2}], "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"T=0 K turning-point data\""},
           "PointLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"PointLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "False", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{0.2, 0.8}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox[
       "\"Reaction barrier (eV)\"", FontSize -> 12, StripOnInput -> False], 
       TraditionalForm], None}, {
      FormBox[
       StyleBox[
       "\"Reaction path (\[Angstrom])\"", FontSize -> 12, StripOnInput -> 
        False], TraditionalForm], None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->500,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}, "AxesInFront" -> True},
   PlotRange->{{0, 9.16758}, {-3.4053380027222184`, 4.999886119953688}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{
       GraphicsComplex[CompressedData["
1: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
z94baMHtukzkZ5l2ZzGtAQb+/wAjmETm
        
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
           EdgeForm[], 
           Directive[
            GrayLevel[0.5], 
            Opacity[0.2]], 
           GraphicsGroup[{
             Polygon[CompressedData["
1:eJwl03ecyHUYwPFzdkURlYRUNBDRoMyKUlZGqGSVkSK7YRWiYVRG9p6hjOy9
0rK3VPa8cyrl7Pfz8sf7Pr/f6/vH3e/7PJe/SZuarRMTEhLS0MyPOsznE47S
mo2MJpWXWUAfjtGGTYzhAnVZSF+O8y6bGctF6rGITzlBW7YwjkvUZzGfcZJ2
bGU8l3mFJXzOKdqzjQlc4VWW8gUd2M5EXmMZ/ejIDibRgOX0pxM7mczrrGAA
p+nMLqZwlYasZCBJvMdupsZFutBGuoovSeZ99jCNNM4b62q+4gwfsJfpJDpv
omv4mhQ+ZB/fktZ5U13LIM7Shd+ZwRusYzBd2c9M3mQ9Q/ibbvzBLNIlXp//
jwzlH7rzJ9+R3nlz3cA3/EsP/uJ7WvATw/iIA8ymJT8znHN8zEHm8Ba/MIL/
6Mkh5pLB72ulvzKS/+nFYeaR0fnb+hujOE9vjvADmZy/o0uMo3bcKY+wzfuz
ekrv1MVaK2ZCMbZ6f0ZPai5dpFs4wR3eFyZc/2cpymaPx7nd8wK9ysOeN+nT
ekxv0/laU69oEd2oFfSo5oy/V1/Sy1o4vknLx7dojvheraGXtFDciZaLu9Bb
4760ul7Uh+JOtWzcpWaPu9YLPBiz0INki/loKg/E7PQAt8Q89Tz3x7y1TMxZ
b45d0GoxDy0Y+6KlY080a+ySVo15aoHYN30q9kyzxB7qOe6LHdX93BR7q1Vi
r/Te2G19MnZab4y91xdjL/UeXaOldJ/eoNP1hdhrza+rtaTu1cw6TSvrWb1b
V+kTukcz6VR9XlM0n67Ux3W3ZtQpeoa8nlfoY7pLM+hkfU6TNY8u10d1p6bX
SVpJk/QuXaYldIem04laUU9rbl2qxXW7ptUJeg156c7A
              
              "]]}]}, {}, {}}, {{}, {}, {}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           
           Line[{1, 90, 48, 132, 26, 112, 70, 149, 2, 91, 49, 133, 27, 113, 
            71, 150, 3, 92, 50, 134, 28, 114, 72, 151, 4, 93, 51, 135, 29, 
            115, 73, 152, 5, 94, 52, 136, 30, 116, 74, 153, 6, 95, 53, 137, 
            31, 117, 75, 154, 7, 96, 54, 138, 32, 118, 76, 8, 97, 55, 139, 33,
             119, 77, 155, 9, 98, 56, 140, 34, 120, 78, 10, 99, 57, 35, 121, 
            79, 11, 100, 58, 141, 36, 122, 80, 156, 12, 101, 59, 142, 37, 123,
             81, 157, 13, 102, 60, 143, 38, 124, 82, 14, 103, 61, 39, 15, 16, 
            104, 62, 40, 125, 83, 17, 105, 63, 144, 41, 126, 84, 158, 18, 106,
             64, 145, 42, 127, 85, 159, 19, 107, 65, 146, 43, 128, 86, 160, 
            20, 108, 66, 44, 21, 22, 109, 67, 45, 129, 87, 23, 110, 68, 147, 
            46, 130, 88, 161, 24, 111, 69, 148, 47, 131, 89, 162, 25}]}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0.5]], 
           Line[CompressedData["
1:eJwt0mdbDXAcx+FzrJCVWYk6RAgVkqyGSFl1eAVeAC9KdiEVGZkJDSRJiSIj
GSkjZN2uy4PPdX9/j///0N794X3BQCBwWgc00vGAK3iRs/mOm1nCUWzlStYw
ju+5hQc5mg+5ipc4hx+Yz0Mcwzam8zLnsp+HFWE/4mpeYTw/ciuPcCzbmcGr
TOAAC3iU49jBNbzGEAdZyGMcz8fM5HXO4ydu43FGspNrWcv5/MztLOUEPuEN
JdpfWKaJ9lOuYx0X8Ct38AQnsYvreZMLOcSdPMnJ7OYG3mISv/GUptjPeFuL
7O8sV5T9nPVabP/4/4ZT7R5uZAOXcJi7WMFpfMEsNjKZP1nESk7nS2aziUv5
i8Ws4gy+Yg7vcBl/M8wznMnXzOVdLucfntUsu5f3lPLv06ka0XzDZp1TjLuP
m3ifqQxqt867Y/mWeWxhGkdojy64/wJ9qVya
            "]]}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0.5]], 
           Line[CompressedData["
1:eJwV0Pcz0GEAx/EvKv6N/qXuIppEJKVdVNImI7T3oEUa0kCpSAuhrTQVKWlJ
isbLD697P3efu+e5e8bGpY6bExIEQSXjHc6zni5Ghrvs4xeRXGAD3aTSwn5+
E8VFsnjPXFo5wBATqCKbHubRxkGGiaaajXxgPvc4xB9iqCGHjyzgPsX8ZSKX
yGUhDyhhEpfJYxEPOcxkaslnMY84whSusIlelvCYo/xjKlcp4BNLecKxkY8M
DYJpeo1C+kijneOE2GO1jiI+k85TSgm1x2k9m/nCMp5RRph9ul5nC19ZTgcn
iKeBrazgOeUkcINtfCODF5xklDtn6E22852VvOQUo+2Jeosd9JPJK06TxG12
sorXnGEmd9jFD1bzhgqSaWQ3A6yhk7OM8d4sbWIPP1nLWyoJt6doM3sZZB3v
OEeEfbb+B3PqdNc=
            "]]}}}], {}, {}}, {{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          
          Point[{{-0.540279, 0.459286}, {0., 0.}, {0.540279, 0.459286}, {
           0.881051, 0.390465}, {1.931386, 0.995135}, {4.349635, -3.362815}, {
           6.70861, 5.}, {9.06758, -3.362815}}]}, {}}}, {}, {}, {{}, {}}}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{
         Style["Reaction barrier (eV)", FontSize -> 12], None}, {
         Style["Reaction path (\[Angstrom])", FontSize -> 12], None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 500, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}, "AxesInFront" -> True}, 
      PlotRange -> {{0, 9.16758}, {-3.4053380027222184`, 4.999886119953688}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       PointLegend[{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {"T=0 K turning-point data"}, 
        LegendMarkers -> {{False, Automatic}}, Joined -> {False}, 
        LabelStyle -> {}, LegendLayout -> "Column"]]], {0.2, 0.8}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.708257880291671*^9, 3.70825799932512*^9, 
  3.708260076614995*^9, 3.708260301178297*^9, 3.708260425613893*^9}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{GraphicsComplexBox[CompressedData["
1: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
/rzLjNS4KeWL/BnRtM/FroH0p8e7/e4OzGrkz21HZxrdI6uQP+UivWKEgpuR
P4ecLSvDDgwify6UiJ3qLhtB/nwbs0VVdXoY+TMyz4Km/O47IPwZ/CJAtW9i
DiP8afyE34j1P/7Ea6vYPp0LGOHP61wJkVFdUcif3v2Bj/BzC4Dw594qCavm
In5I+LPQ+3r3bT0m8udApnR/0tJ8J/wpwG+b/nqG9OeW/MyEuBgW8qdFG8bR
ul4U+dNMe0XixBo6JPwZnW7aVmI9Cgh/3uq28mn51Iv8qVF9OMrHlhv5c23q
zOhu8zzkT82rQhP/LZL+PFR+WSefRvozfn8Dw2XoN/LnQnEy18Mt3cifO+bC
vjvxjSB/OmIHnht2k/40vm1j6BXWh/xpP3hszO9yL/KnuqrPw6Z4buRPNcp5
5+Vh3DjhS3OVP085tokgXzIyTNd5HGAhX+Y2HPwSNUD68h/nyliPGDbyZdik
jElsDRPut44XCDaQheHVfPYN7yiQ8KTaJsEW42PzGOHJyxVOIVYPSU/+KbqU
IWiShjy58o6nvMxV0pOPh1//y/QiPZnwjVPj2WI18mSIsJDNRdV24O3BtktY
uwCSY9pT0lnDyJeLN/mkrLpJXw45Zv2dMh1CvjRww/RMeDiRLx+EcV/7yUtD
nmQ8sXi946Q48uRWl30+/30nPble+YPIu6X5FJzkuS9mXhI+LVFTPFAjjnzZ
PxXib397HCN8aVPI9+9+GxX5stlibOcZnUrky/zhYCZ/DOnLt7q5jkr3SV8G
HT9Vvq2zHnnSMYjzqH/ICPKkZP3MFuW0EaA9JMA2NKNBFbtbX3dotwLCkwEj
2z5d1SI9OT77z1XZghN5MtjotfZfbjbyZCj9mBvHIunJuKSqGg4dNvIkq1Q2
e+U0B/LkTukNXqfOkp4UXHdfsMNvBeqfXM/2u9xrqUKe9G/PbB6qr0aezOQQ
KeC3q0SetEz3Tlk59BkjPHnb/0u6f0AaRnhSvWdGuLF+AHny+w6/w+9vDSBP
rgx1MNqyqR/1Tz2jlw0LS34hPLnZNHI2Npr0pA/H0Q2JozTkSXa1lpXgZxpO
eFKfvj+3t4CCE57cfFKK2bSsHSM8yVBZq/5PjwN5sm38As9XGhN5UsY/0KRs
nvSk6WaslXJLFHlydcV7EwnteUB48q1GdjslthcjPFlL/eAFZjhwwpMfZT1l
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

       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
         {GrayLevel[0.5], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl03mYTmUYwOExiJJSqESkSCgSkURJZReSkij7UplEJS0UlRaKVHZtEpXK
vhVFWWcso0xTqcYwlhajYjCL+7nmj3t+573OXN93vvd9TtXeSZ2HJCYkJBSh
hz+dWMjzZDCYzUzjOJ1ZxBj28iBbmE4Od7KYsWTyEFuZwQm6sIQX2MfDJDOT
u1jKi+xnCCnM4iRdWcZLZJHENmZzirtZzjgO8AjbeZdc7mEFL3OQoezgPbqx
klc4xKPs5H3yuJdVvMphhpHKB+TTndW8xp8MZxcfUsB9fMV4/uIxfmBObHxi
4d5/zQT+5nF+5COKuN9T1/A6//AEu5nL/azlDUaQxsc8wDdM5El+Yh6JPq+X
fsskjjCSdOZT1P3euo43yeYpfuYTirnfR9czmaf5hU/py3e8xVGe4Vc+ox/f
8zb/8ix7WEBxn9lfN/AO/zGK3/icM9wfoBuZwv+M5ne+oIT7A3UTUznGc/zB
l5R0f1A8s+3uGP/PtfHc1rfE92mV+M16R3wf9eI3WzeP59XKsWeazlEuif3V
4npN7K/rbCrFeWgaR6gYZ6fFtG6cm+ub4xz14jh37RD7Tp04d+ubYg60QsyN
to9z4+qYG+tmMUd6Ucydtos54aqYO+umMYd6oa5KKHzBa5Pq8jAXuF6pOzlE
eesVuoODlLNerts5QFnrZdpWC7SWbtMbNUvP16XaRvO1pqZoE92v5+kSzeNK
18m6jzKuF2trzdUaulVv0Ew9VxdpKz2lV+gWbax79RxdqC31pFbXzXq9Zmjp
OH89QbWYD20Uc6Fnx+zo7Zqjl8d8acOYKy0Vs6e36XG9LOZTr4u51LNidvXW
mDetGvOtDWKu9cyYe20R86qXxruh9eOd0JLxzuhpspjI2A==
            
            "]]]}, {}, {}}, {{}, {}, {}, 
         {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[{1, 96, 50, 142, 26, 120, 74, 157, 2, 97, 51, 143, 27, 121, 
           75, 158, 3, 98, 52, 144, 28, 122, 76, 159, 4, 99, 53, 145, 29, 123,
            77, 160, 5, 100, 54, 146, 30, 124, 78, 161, 6, 101, 55, 31, 125, 
           79, 162, 7, 102, 56, 147, 32, 126, 80, 163, 8, 103, 57, 148, 33, 
           127, 81, 9, 104, 58, 34, 128, 82, 164, 10, 105, 59, 149, 35, 129, 
           83, 165, 11, 106, 60, 150, 36, 130, 84, 166, 12, 107, 61, 151, 37, 
           131, 85, 13, 108, 62, 38, 14, 109, 63, 39, 132, 86, 15, 110, 64, 
           40, 133, 87, 16, 111, 65, 152, 41, 134, 88, 167, 17, 112, 66, 153, 
           42, 135, 89, 168, 18, 113, 67, 154, 43, 136, 90, 169, 19, 114, 68, 
           44, 137, 91, 20, 115, 69, 45, 138, 92, 21, 116, 70, 46, 22, 117, 
           71, 47, 139, 93, 23, 118, 72, 155, 48, 140, 94, 170, 24, 119, 73, 
           156, 49, 141, 95, 171, 25}]}, 
         {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJwV0edaDwAYxuF/yEgkKZoqW4VSEiqlMkJdDsEB5Kh8IyqrIUQaVoVQioZK
A1lpULcPv+t+n89v0sVLFyqCAoHAZV3RaqOPB9nMRP7iCV7lGvYzk4+ZxN8s
YiVD+IFZbGEyZ1jMa1zLjzzEVm7jH5bwOkM5wGy2cTtnWaV17kEeZjt3cI4n
Wc31HGIOn3An53mKNQzjMI/wKXdxgad5gxv4ic+02/2XNxXuHuFRPuce/uMZ
3uJGjvIYX3AvF1nK24zgGDt0R5vsz+xUrSLtcXapTlH2BF8q5f9zVI/NnGQu
XzGVQTqrBnsLp5jH10zjMp3TXTuaX5jPbu7jcp1Xox3DrzzON9zPFbrnjuU3
vtV9xdnTfKcD7mA9cMfzO3vUpAT7BwvYy3SuVJke2lv5k4V8zwyuUrke2Usv
bVVg
           "]]}, 
         {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJwV0HdXyFEAx+FfkbyNXpKiZAuFSkRUdlEUJdkaVmZIlLIyy54lFEJUZFNk
Pv3xnM8953vOPffciLiUyFkhQRDUMcKhmixeMpPrbKOfSI6TzSsSucF2fhDF
CVbQSRI3KeEnI6lhJa9J5haljKKWHN4w+KjblDFANCfJpYsU7lDOL2KoYxXd
zOYuO/jNaOpZTQ9zuMdOYjlFHm9J5T67+MMYTpPPO+bygN38ZSxnWEMv82hm
D/8Yx1nW8p40WqgY/PjQIBiv5yjgA/N5yF5C7BO0gUI+soBW9jGR86wjnUfs
ZxIXKCKDxxwg1H2T9SLr+UQmTzjIEHucXqKYzyykjUMMtU/Ry2xgEe1UMpUr
bOQLi3nKYabRyCa+soRnHCHMnfHaxGa+sZTnHGWYPUGvsoXvLKODKsLt0/Ua
W+ljOS84xnD7DP0PgEN2KQ==
           "]]}}}], {}, {}}, {{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6], 
        PointBox[{{-0.505926, 0.415663}, {0., 0.}, {0.505926, 0.415663}, {
         0.917487, 0.297066}, {2.290072, 1.182288}, {3.576795, -2.827372}, {
         5.98676, 6.}, {8.39673, -2.827372}}]}, {}}, {}, {}, {{}, {}}}}, 
    InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          
          TemplateBox[{"\"Prediction\"","\"1-\[Sigma] confidence interval\""},
           
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{#, ",", #2}], "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"T=2500 K turning-point data\""},
           "PointLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"PointLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "False", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{0.2, 0.8}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox[
       "\"Reaction barrier (eV)\"", FontSize -> 12, StripOnInput -> False], 
       TraditionalForm], None}, {
      FormBox[
       StyleBox[
       "\"Reaction path (\[Angstrom])\"", FontSize -> 12, StripOnInput -> 
        False], TraditionalForm], None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->500,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}, "AxesInFront" -> True},
   PlotRange->{{0, 8.49673}, {-2.9247309238738373`, 5.9997428625313685`}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{
       GraphicsComplex[CompressedData["
1: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
/rzLjNS4KeWL/BnRtM/FroH0p8e7/e4OzGrkz21HZxrdI6uQP+UivWKEgpuR
P4ecLSvDDgwify6UiJ3qLhtB/nwbs0VVdXoY+TMyz4Km/O47IPwZ/CJAtW9i
DiP8afyE34j1P/7Ea6vYPp0LGOHP61wJkVFdUcif3v2Bj/BzC4Dw594qCavm
In5I+LPQ+3r3bT0m8udApnR/0tJ8J/wpwG+b/nqG9OeW/MyEuBgW8qdFG8bR
ul4U+dNMe0XixBo6JPwZnW7aVmI9Cgh/3uq28mn51Iv8qVF9OMrHlhv5c23q
zOhu8zzkT82rQhP/LZL+PFR+WSefRvozfn8Dw2XoN/LnQnEy18Mt3cifO+bC
vjvxjSB/OmIHnht2k/40vm1j6BXWh/xpP3hszO9yL/KnuqrPw6Z4buRPNcp5
5+Vh3DjhS3OVP085tokgXzIyTNd5HGAhX+Y2HPwSNUD68h/nyliPGDbyZdik
jElsDRPut44XCDaQheHVfPYN7yiQ8KTaJsEW42PzGOHJyxVOIVYPSU/+KbqU
IWiShjy58o6nvMxV0pOPh1//y/QiPZnwjVPj2WI18mSIsJDNRdV24O3BtktY
uwCSY9pT0lnDyJeLN/mkrLpJXw45Zv2dMh1CvjRww/RMeDiRLx+EcV/7yUtD
nmQ8sXi946Q48uRWl30+/30nPble+YPIu6X5FJzkuS9mXhI+LVFTPFAjjnzZ
PxXib397HCN8aVPI9+9+GxX5stlibOcZnUrky/zhYCZ/DOnLt7q5jkr3SV8G
HT9Vvq2zHnnSMYjzqH/ICPKkZP3MFuW0EaA9JMA2NKNBFbtbX3dotwLCkwEj
2z5d1SI9OT77z1XZghN5MtjotfZfbjbyZCj9mBvHIunJuKSqGg4dNvIkq1Q2
e+U0B/LkTukNXqfOkp4UXHdfsMNvBeqfXM/2u9xrqUKe9G/PbB6qr0aezOQQ
KeC3q0SetEz3Tlk59BkjPHnb/0u6f0AaRnhSvWdGuLF+AHny+w6/w+9vDSBP
rgx1MNqyqR/1Tz2jlw0LS34hPLnZNHI2Npr0pA/H0Q2JozTkSXa1lpXgZxpO
eFKfvj+3t4CCE57cfFKK2bSsHSM8yVBZq/5PjwN5sm38As9XGhN5UsY/0KRs
nvSk6WaslXJLFHlydcV7EwnteUB48q1GdjslthcjPFlL/eAFZjhwwpMfZT1l
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

        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
           EdgeForm[], 
           Directive[
            GrayLevel[0.5], 
            Opacity[0.2]], 
           GraphicsGroup[{
             Polygon[CompressedData["
1:eJwl03mYTmUYwOExiJJSqESkSCgSkURJZReSkij7UplEJS0UlRaKVHZtEpXK
vhVFWWcso0xTqcYwlhajYjCL+7nmj3t+573OXN93vvd9TtXeSZ2HJCYkJBSh
hz+dWMjzZDCYzUzjOJ1ZxBj28iBbmE4Od7KYsWTyEFuZwQm6sIQX2MfDJDOT
u1jKi+xnCCnM4iRdWcZLZJHENmZzirtZzjgO8AjbeZdc7mEFL3OQoezgPbqx
klc4xKPs5H3yuJdVvMphhpHKB+TTndW8xp8MZxcfUsB9fMV4/uIxfmBObHxi
4d5/zQT+5nF+5COKuN9T1/A6//AEu5nL/azlDUaQxsc8wDdM5El+Yh6JPq+X
fsskjjCSdOZT1P3euo43yeYpfuYTirnfR9czmaf5hU/py3e8xVGe4Vc+ox/f
8zb/8ix7WEBxn9lfN/AO/zGK3/icM9wfoBuZwv+M5ne+oIT7A3UTUznGc/zB
l5R0f1A8s+3uGP/PtfHc1rfE92mV+M16R3wf9eI3WzeP59XKsWeazlEuif3V
4npN7K/rbCrFeWgaR6gYZ6fFtG6cm+ub4xz14jh37RD7Tp04d+ubYg60QsyN
to9z4+qYG+tmMUd6Ucydtos54aqYO+umMYd6oa5KKHzBa5Pq8jAXuF6pOzlE
eesVuoODlLNerts5QFnrZdpWC7SWbtMbNUvP16XaRvO1pqZoE92v5+kSzeNK
18m6jzKuF2trzdUaulVv0Ew9VxdpKz2lV+gWbax79RxdqC31pFbXzXq9Zmjp
OH89QbWYD20Uc6Fnx+zo7Zqjl8d8acOYKy0Vs6e36XG9LOZTr4u51LNidvXW
mDetGvOtDWKu9cyYe20R86qXxruh9eOd0JLxzuhpspjI2A==
              
              "]]}]}, {}, {}}, {{}, {}, {}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           
           Line[{1, 96, 50, 142, 26, 120, 74, 157, 2, 97, 51, 143, 27, 121, 
            75, 158, 3, 98, 52, 144, 28, 122, 76, 159, 4, 99, 53, 145, 29, 
            123, 77, 160, 5, 100, 54, 146, 30, 124, 78, 161, 6, 101, 55, 31, 
            125, 79, 162, 7, 102, 56, 147, 32, 126, 80, 163, 8, 103, 57, 148, 
            33, 127, 81, 9, 104, 58, 34, 128, 82, 164, 10, 105, 59, 149, 35, 
            129, 83, 165, 11, 106, 60, 150, 36, 130, 84, 166, 12, 107, 61, 
            151, 37, 131, 85, 13, 108, 62, 38, 14, 109, 63, 39, 132, 86, 15, 
            110, 64, 40, 133, 87, 16, 111, 65, 152, 41, 134, 88, 167, 17, 112,
             66, 153, 42, 135, 89, 168, 18, 113, 67, 154, 43, 136, 90, 169, 
            19, 114, 68, 44, 137, 91, 20, 115, 69, 45, 138, 92, 21, 116, 70, 
            46, 22, 117, 71, 47, 139, 93, 23, 118, 72, 155, 48, 140, 94, 170, 
            24, 119, 73, 156, 49, 141, 95, 171, 25}]}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0.5]], 
           Line[CompressedData["
1:eJwV0edaDwAYxuF/yEgkKZoqW4VSEiqlMkJdDsEB5Kh8IyqrIUQaVoVQioZK
A1lpULcPv+t+n89v0sVLFyqCAoHAZV3RaqOPB9nMRP7iCV7lGvYzk4+ZxN8s
YiVD+IFZbGEyZ1jMa1zLjzzEVm7jH5bwOkM5wGy2cTtnWaV17kEeZjt3cI4n
Wc31HGIOn3An53mKNQzjMI/wKXdxgad5gxv4ic+02/2XNxXuHuFRPuce/uMZ
3uJGjvIYX3AvF1nK24zgGDt0R5vsz+xUrSLtcXapTlH2BF8q5f9zVI/NnGQu
XzGVQTqrBnsLp5jH10zjMp3TXTuaX5jPbu7jcp1Xox3DrzzON9zPFbrnjuU3
vtV9xdnTfKcD7mA9cMfzO3vUpAT7BwvYy3SuVJke2lv5k4V8zwyuUrke2Usv
bVVg
            "]]}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0.5]], 
           Line[CompressedData["
1:eJwV0HdXyFEAx+FfkbyNXpKiZAuFSkRUdlEUJdkaVmZIlLIyy54lFEJUZFNk
Pv3xnM8953vOPffciLiUyFkhQRDUMcKhmixeMpPrbKOfSI6TzSsSucF2fhDF
CVbQSRI3KeEnI6lhJa9J5haljKKWHN4w+KjblDFANCfJpYsU7lDOL2KoYxXd
zOYuO/jNaOpZTQ9zuMdOYjlFHm9J5T67+MMYTpPPO+bygN38ZSxnWEMv82hm
D/8Yx1nW8p40WqgY/PjQIBiv5yjgA/N5yF5C7BO0gUI+soBW9jGR86wjnUfs
ZxIXKCKDxxwg1H2T9SLr+UQmTzjIEHucXqKYzyykjUMMtU/Ry2xgEe1UMpUr
bOQLi3nKYabRyCa+soRnHCHMnfHaxGa+sZTnHGWYPUGvsoXvLKODKsLt0/Ua
W+ljOS84xnD7DP0PgEN2KQ==
            "]]}}}], {}, {}}, {{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          
          Point[{{-0.505926, 0.415663}, {0., 0.}, {0.505926, 0.415663}, {
           0.917487, 0.297066}, {2.290072, 1.182288}, {3.576795, -2.827372}, {
           5.98676, 6.}, {8.39673, -2.827372}}]}, {}}}, {}, {}, {{}, {}}}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{
         Style["Reaction barrier (eV)", FontSize -> 12], None}, {
         Style["Reaction path (\[Angstrom])", FontSize -> 12], None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 500, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}, "AxesInFront" -> True}, 
      PlotRange -> {{0, 8.49673}, {-2.9247309238738373`, 
        5.9997428625313685`}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       PointLegend[{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {"T=2500 K turning-point data"}, 
        LegendMarkers -> {{False, Automatic}}, Joined -> {False}, 
        LabelStyle -> {}, LegendLayout -> "Column"]]], {0.2, 0.8}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.708257880291671*^9, 3.70825799932512*^9, 
  3.708260076614995*^9, 3.708260301178297*^9, 3.708260430238152*^9}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{GraphicsComplexBox[CompressedData["
1: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
qZb/oe5ASwpO+FRpV6TPxxIKTvTElcbSVqMCbDjREyU7/Njf6lNwoicqTVXl
az4cQZ79Zp+wjv39NOqLbZ4+kw1SosizcnGDpr7OpGcjFfXa8hKlkGf5F0Zz
RY4IoL6YWiYvrfqsAxB9MUh2OsHAahoj+mK2EJve/CUqTvi3Q97iSg+TihP+
XSmHeefeJ/3rOPbDbd/gS+RfJQ+8vX8N6V945I9OXX8d8u++I4YhgvtLkX+b
i0uFhqraMcK/6S1rRfiNnyD/Bovx8J1dM4n8G5a2qKukN4b8y3M3sizDpx8j
/PvlM7UqTWEJ+XeoNaU+I4OC62RmyzZ5CsHtSS+iqkuoOM031S+xYdlDK7v/
ZDosX2971aYTRqIw+uTqrKBbkxjh44KtbFdqN5J98uKuP3bWNAaUyRa5+3zZ
PdtnFw6DWhYIt1kcuHx2FYyq2/ySkc3ElGB2iOuUDJw4k7sYnEDBCT+n8/rv
qDJgwwk/d9ALsiIryZ7pxyoPP2dD+pnv8m27rblkz5TZ8IYydKUW9cvN/9yp
ejTUihF+rh5jxE3H9CI/RzE3a7HkpgHkC8AWkldAx+QIBUOpGYzwM+t47MuU
BNLPYVbV20cWKfiBisBJCQlhSDfl0jffwIZnD+hXfr0pArtupQoEHiD75qFb
yZHJvDTka69LTr/VJ0hfU5xCL2n6SsDYsg3mY6XSMJdL//pekSIsSdB9vT6U
gY/nQ0oKh+ewK/qJNeZPZOG+J7HHIqTZcMLfWb7HrldlUvD/AxS03kg=
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
         {GrayLevel[0.5], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1Hec13McwPG7rJKRhIxQGRWhsqKsRBOlgTI6NIw7o8yUhhFCUZSMoihu
G93hrrqr6y5FUVe3Q6G9REo834/+eP5e38fvr8/3/Xk/vo2TUnom10pISEjk
Jj8dmcVjrOIO8niVjVzHxzxOKXeSz2ts4no+4QlWcxfzeJ3NdGI2T7KGAcxn
Ap2Zw1OUkcQCJrKFLnzK05RzNwW8wVa68hnDqeAeCnmTbXQjlWeo5F4WMonu
pDGCKgayiMls5wbSGUk1gyjiLXZwIxk8Sw2DWczb7Ew8MNtMRrGWIRQzhV30
IIvR/Mx9lDCVP+lJNmP4hftZwjvczOeM5QG+Yxq9+ILneJClvMtuevMlz/Mr
ySzjPf6iD1/xAutI4Xve52/6MpcXeYgf+IBbyGEc63mY5UxnD7eSy0v8xiOs
YAb/cBtf8zK/8yg/8iF76cc3vMIfDOUnPqI/3zKeDQxjJTPZx+1x3/b8Wv1P
z9Q1erFu1mO1UDvofj1DV+tFuknra4EuYD6lbOQY/8/Tf2nqeZVeGGfQepqv
18QZtEmcSdvE+fVozdOr4/20cbyPto7316PinfSqmI+eHvPQVjE/PTLmoXs4
LWap6zki5qi55LCcddSNe9Mr4x711Lg7vSD2QA+Pe9crYg+0Udy7nh97p3Vi
b3Q3p8TO6Hmxs1o79k3bx87qybFz2lLX6mGxp9pOd+lJsat6rtbooZqtl+tO
PTF2XM/Raj1Es3QHDT2XaAut0oM1Uy/T7XqCFmtzrdSDNEPb6jY9XhdrM63Q
Wpqul+pWPU6L9Gwtj++jpuklukUb6CI9S8sSDnxAU+V/tvvE7A==
            
            "]]]}, {}, {}}, {{}, {}, {}, 
         {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[{1, 97, 50, 144, 26, 121, 74, 158, 2, 98, 51, 145, 27, 122, 
           75, 159, 3, 99, 52, 146, 28, 123, 76, 160, 4, 100, 53, 147, 29, 
           124, 77, 161, 5, 101, 54, 148, 30, 125, 78, 162, 6, 102, 55, 31, 
           126, 79, 163, 7, 103, 56, 149, 32, 127, 80, 164, 8, 104, 57, 150, 
           33, 128, 81, 165, 9, 105, 58, 34, 129, 82, 10, 106, 59, 151, 35, 
           130, 83, 166, 11, 107, 60, 152, 36, 131, 84, 167, 12, 108, 61, 37, 
           132, 85, 13, 109, 62, 38, 133, 86, 14, 110, 63, 39, 134, 87, 15, 
           111, 64, 40, 16, 112, 65, 153, 41, 135, 88, 168, 17, 113, 66, 154, 
           42, 136, 89, 169, 18, 114, 67, 155, 43, 137, 90, 170, 19, 115, 68, 
           44, 138, 91, 20, 116, 69, 45, 139, 92, 21, 117, 70, 46, 140, 93, 
           22, 118, 71, 47, 141, 94, 23, 119, 72, 156, 48, 142, 95, 171, 24, 
           120, 73, 157, 49, 143, 96, 172, 25}]}, 
         {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJwVyfc+FmAYx+E3KooiKqXIHmmQhhEajsAhOABOx0lI2bJaNg0jIiUiVFJI
irj88f1cv+d+EssryyoOBAKBKlUr4DGJNHbzJFd4iw/2vznFdPbwFH8wjzUM
4ntmsJenucp8PmQwp5nJPsbwJwv4iAf5gRfZzzP8xVodsj8yiwM8yzUWso6H
OcNLHGQs13mb9QzhJ17mEM9xg0VsYChneYUveZ6/2agj9hyv8hXjuMliNvEo
PzObrxnPPyxhM8M4zzdq0WO1Ktx9gcO6YG+xTcfsL8zhCBP4l3fYzuNc5DWO
MpH/eJcdjOAScznGJG7zHjsZyWVe51smc4dPdML+ynE91TM9V5T7N97gBFP4
n/f5gtH8zpt8x1TuspRd3AMHMFEd
           "]]}, 
         {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJwV0tdaDgAAgOHfpXQxskpEQkSFhpGQMhIioyl7ZIUUWYWMhLJHNFAis+wi
I+XA28H7PN8FfEGxyeHzhgQCgWqGiiMs5gnRXCGfzwRTShpPmUYtBXxhGEdJ
5xnTuUohXxlOGUtoJYZrbGIE5SyljViuU8Q3RnKMZTwnjjo2080ojrOcdmZQ
zxZ6CKGCDF4wkxtsJZQTrOAls7jJNr4zmpNk0kE8t9jOD8I4xUpekcBtdtDL
GE6zitckcoed/GQsZ1jNG5K4yy5+EU4lWbxlNvfYzTiqWMMc7rOH8ZxlLXN5
QDG/ieAc2bxjcICH7OUPEzjPOt6TTAP76COSatYzn0fsZyIX2EAnKTzmAH+Z
xEU20sUCGjlIP5O5RA4fWEgTJQwQxWVy+cgimjnEFGrI4xOptHCYf0zlP0tC
doA=
           "]]}}}], {}, {}}, {{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6], 
        PointBox[{{-0.491838, 0.408561}, {0., 0.}, {0.491838, 0.408561}, {
         0.973187, 0.224986}, {2.427912, 1.402299}, {3.668868, -2.077542}, {
         6.12492, 7.}, {8.58097, -2.077542}}]}, {}}, {}, {}, {{}, {}}}}, 
    InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          
          TemplateBox[{"\"Prediction\"","\"1-\[Sigma] confidence interval\""},
           
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{#, ",", #2}], "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"T=3800 K turning-point data\""},
           "PointLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"PointLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "False", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{0.2, 0.8}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox[
       "\"Reaction barrier (eV)\"", FontSize -> 12, StripOnInput -> False], 
       TraditionalForm], None}, {
      FormBox[
       StyleBox[
       "\"Reaction path (\[Angstrom])\"", FontSize -> 12, StripOnInput -> 
        False], TraditionalForm], None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->500,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}, "AxesInFront" -> True},
   PlotRange->{{0, 8.68097}, {-2.293705889012725, 7.0000176437094055`}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{
       GraphicsComplex[CompressedData["
1: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
qZb/oe5ASwpO+FRpV6TPxxIKTvTElcbSVqMCbDjREyU7/Njf6lNwoicqTVXl
az4cQZ79Zp+wjv39NOqLbZ4+kw1SosizcnGDpr7OpGcjFfXa8hKlkGf5F0Zz
RY4IoL6YWiYvrfqsAxB9MUh2OsHAahoj+mK2EJve/CUqTvi3Q97iSg+TihP+
XSmHeefeJ/3rOPbDbd/gS+RfJQ+8vX8N6V945I9OXX8d8u++I4YhgvtLkX+b
i0uFhqraMcK/6S1rRfiNnyD/Bovx8J1dM4n8G5a2qKukN4b8y3M3sizDpx8j
/PvlM7UqTWEJ+XeoNaU+I4OC62RmyzZ5CsHtSS+iqkuoOM031S+xYdlDK7v/
ZDosX2971aYTRqIw+uTqrKBbkxjh44KtbFdqN5J98uKuP3bWNAaUyRa5+3zZ
PdtnFw6DWhYIt1kcuHx2FYyq2/ySkc3ElGB2iOuUDJw4k7sYnEDBCT+n8/rv
qDJgwwk/d9ALsiIryZ7pxyoPP2dD+pnv8m27rblkz5TZ8IYydKUW9cvN/9yp
ejTUihF+rh5jxE3H9CI/RzE3a7HkpgHkC8AWkldAx+QIBUOpGYzwM+t47MuU
BNLPYVbV20cWKfiBisBJCQlhSDfl0jffwIZnD+hXfr0pArtupQoEHiD75qFb
yZHJvDTka69LTr/VJ0hfU5xCL2n6SsDYsg3mY6XSMJdL//pekSIsSdB9vT6U
gY/nQ0oKh+ewK/qJNeZPZOG+J7HHIqTZcMLfWb7HrldlUvD/AxS03kg=
        
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
           EdgeForm[], 
           Directive[
            GrayLevel[0.5], 
            Opacity[0.2]], 
           GraphicsGroup[{
             Polygon[CompressedData["
1:eJwl1Hec13McwPG7rJKRhIxQGRWhsqKsRBOlgTI6NIw7o8yUhhFCUZSMoihu
G93hrrqr6y5FUVe3Q6G9REo834/+eP5e38fvr8/3/Xk/vo2TUnom10pISEjk
Jj8dmcVjrOIO8niVjVzHxzxOKXeSz2ts4no+4QlWcxfzeJ3NdGI2T7KGAcxn
Ap2Zw1OUkcQCJrKFLnzK05RzNwW8wVa68hnDqeAeCnmTbXQjlWeo5F4WMonu
pDGCKgayiMls5wbSGUk1gyjiLXZwIxk8Sw2DWczb7Ew8MNtMRrGWIRQzhV30
IIvR/Mx9lDCVP+lJNmP4hftZwjvczOeM5QG+Yxq9+ILneJClvMtuevMlz/Mr
ySzjPf6iD1/xAutI4Xve52/6MpcXeYgf+IBbyGEc63mY5UxnD7eSy0v8xiOs
YAb/cBtf8zK/8yg/8iF76cc3vMIfDOUnPqI/3zKeDQxjJTPZx+1x3/b8Wv1P
z9Q1erFu1mO1UDvofj1DV+tFuknra4EuYD6lbOQY/8/Tf2nqeZVeGGfQepqv
18QZtEmcSdvE+fVozdOr4/20cbyPto7316PinfSqmI+eHvPQVjE/PTLmoXs4
LWap6zki5qi55LCcddSNe9Mr4x711Lg7vSD2QA+Pe9crYg+0Udy7nh97p3Vi
b3Q3p8TO6Hmxs1o79k3bx87qybFz2lLX6mGxp9pOd+lJsat6rtbooZqtl+tO
PTF2XM/Raj1Es3QHDT2XaAut0oM1Uy/T7XqCFmtzrdSDNEPb6jY9XhdrM63Q
Wpqul+pWPU6L9Gwtj++jpuklukUb6CI9S8sSDnxAU+V/tvvE7A==
              
              "]]}]}, {}, {}}, {{}, {}, {}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           
           Line[{1, 97, 50, 144, 26, 121, 74, 158, 2, 98, 51, 145, 27, 122, 
            75, 159, 3, 99, 52, 146, 28, 123, 76, 160, 4, 100, 53, 147, 29, 
            124, 77, 161, 5, 101, 54, 148, 30, 125, 78, 162, 6, 102, 55, 31, 
            126, 79, 163, 7, 103, 56, 149, 32, 127, 80, 164, 8, 104, 57, 150, 
            33, 128, 81, 165, 9, 105, 58, 34, 129, 82, 10, 106, 59, 151, 35, 
            130, 83, 166, 11, 107, 60, 152, 36, 131, 84, 167, 12, 108, 61, 37,
             132, 85, 13, 109, 62, 38, 133, 86, 14, 110, 63, 39, 134, 87, 15, 
            111, 64, 40, 16, 112, 65, 153, 41, 135, 88, 168, 17, 113, 66, 154,
             42, 136, 89, 169, 18, 114, 67, 155, 43, 137, 90, 170, 19, 115, 
            68, 44, 138, 91, 20, 116, 69, 45, 139, 92, 21, 117, 70, 46, 140, 
            93, 22, 118, 71, 47, 141, 94, 23, 119, 72, 156, 48, 142, 95, 171, 
            24, 120, 73, 157, 49, 143, 96, 172, 25}]}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0.5]], 
           Line[CompressedData["
1:eJwVyfc+FmAYx+E3KooiKqXIHmmQhhEajsAhOABOx0lI2bJaNg0jIiUiVFJI
irj88f1cv+d+EssryyoOBAKBKlUr4DGJNHbzJFd4iw/2vznFdPbwFH8wjzUM
4ntmsJenucp8PmQwp5nJPsbwJwv4iAf5gRfZzzP8xVodsj8yiwM8yzUWso6H
OcNLHGQs13mb9QzhJ17mEM9xg0VsYChneYUveZ6/2agj9hyv8hXjuMliNvEo
PzObrxnPPyxhM8M4zzdq0WO1Ktx9gcO6YG+xTcfsL8zhCBP4l3fYzuNc5DWO
MpH/eJcdjOAScznGJG7zHjsZyWVe51smc4dPdML+ynE91TM9V5T7N97gBFP4
n/f5gtH8zpt8x1TuspRd3AMHMFEd
            "]]}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0.5]], 
           Line[CompressedData["
1:eJwV0tdaDgAAgOHfpXQxskpEQkSFhpGQMhIioyl7ZIUUWYWMhLJHNFAis+wi
I+XA28H7PN8FfEGxyeHzhgQCgWqGiiMs5gnRXCGfzwRTShpPmUYtBXxhGEdJ
5xnTuUohXxlOGUtoJYZrbGIE5SyljViuU8Q3RnKMZTwnjjo2080ojrOcdmZQ
zxZ6CKGCDF4wkxtsJZQTrOAls7jJNr4zmpNk0kE8t9jOD8I4xUpekcBtdtDL
GE6zitckcoed/GQsZ1jNG5K4yy5+EU4lWbxlNvfYzTiqWMMc7rOH8ZxlLXN5
QDG/ieAc2bxjcICH7OUPEzjPOt6TTAP76COSatYzn0fsZyIX2EAnKTzmAH+Z
xEU20sUCGjlIP5O5RA4fWEgTJQwQxWVy+cgimjnEFGrI4xOptHCYf0zlP0tC
doA=
            "]]}}}], {}, {}}, {{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          
          Point[{{-0.491838, 0.408561}, {0., 0.}, {0.491838, 0.408561}, {
           0.973187, 0.224986}, {2.427912, 1.402299}, {3.668868, -2.077542}, {
           6.12492, 7.}, {8.58097, -2.077542}}]}, {}}}, {}, {}, {{}, {}}}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{
         Style["Reaction barrier (eV)", FontSize -> 12], None}, {
         Style["Reaction path (\[Angstrom])", FontSize -> 12], None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 500, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}, "AxesInFront" -> True}, 
      PlotRange -> {{0, 8.68097}, {-2.293705889012725, 7.0000176437094055`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       PointLegend[{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {"T=3800 K turning-point data"}, 
        LegendMarkers -> {{False, Automatic}}, Joined -> {False}, 
        LabelStyle -> {}, LegendLayout -> "Column"]]], {0.2, 0.8}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.708257880291671*^9, 3.70825799932512*^9, 
  3.708260076614995*^9, 3.708260301178297*^9, 3.708260435050084*^9}]
}, Open  ]],

Cell[BoxData["e"], "Input",
 CellChangeTimes->{3.7082605070975847`*^9}]
},
WindowSize->{720, 830},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 190, 5, 49, "Input"],
Cell[751, 27, 4200, 128, 537, "Input"],
Cell[4954, 157, 1105, 30, 180, "Input"],
Cell[CellGroupData[{
Cell[6084, 191, 1154, 34, 138, "Input"],
Cell[7241, 227, 288, 4, 32, "Output"],
Cell[7532, 233, 288, 4, 32, "Output"],
Cell[7823, 239, 288, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8148, 248, 532, 10, 159, "Input"],
Cell[8683, 260, 197, 3, 32, "Output"],
Cell[8883, 265, 204, 3, 32, "Output"],
Cell[9090, 270, 194, 3, 32, "Output"]
}, Open  ]],
Cell[9299, 276, 69, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[9393, 281, 151, 3, 32, "Input"],
Cell[9547, 286, 329, 6, 54, "Output"]
}, Open  ]],
Cell[9891, 295, 161, 4, 32, "Input"],
Cell[CellGroupData[{
Cell[10077, 303, 1148, 35, 117, "Input"],
Cell[11228, 340, 279, 7, 32, "Output"],
Cell[11510, 349, 703, 17, 75, "Output"],
Cell[12216, 368, 631, 17, 54, "Output"],
Cell[12850, 387, 819, 20, 75, "Output"],
Cell[13672, 409, 864, 23, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14573, 437, 1278, 37, 117, "Input"],
Cell[15854, 476, 19009, 324, 230, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34900, 805, 855, 25, 96, "Input"],
Cell[35758, 832, 6671, 186, 516, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42466, 1023, 3899, 103, 285, "Input"],
Cell[46368, 1128, 805, 12, 32, "Output"],
Cell[47176, 1142, 7537, 199, 516, "Output"],
Cell[54716, 1343, 5988, 125, 453, "Output"],
Cell[60707, 1470, 24538, 482, 168, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85282, 1957, 6638, 172, 642, "Input"],
Cell[91923, 2131, 45766, 863, 651, "Output"],
Cell[137692, 2996, 46071, 868, 650, "Output"]
}, Open  ]],
Cell[183778, 3867, 168, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[183971, 3873, 3234, 84, 327, "Input"],
Cell[187208, 3959, 44970, 851, 341, "Output"]
}, Open  ]],
Cell[232193, 4813, 312, 8, 54, "Input"],
Cell[CellGroupData[{
Cell[232530, 4825, 10099, 259, 1020, "Input"],
Cell[242632, 5086, 44544, 842, 341, "Output"],
Cell[287179, 5930, 44624, 843, 341, "Output"],
Cell[331806, 6775, 45910, 864, 341, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377753, 7644, 10264, 262, 1020, "Input"],
Cell[388020, 7908, 44399, 840, 341, "Output"],
Cell[432422, 8750, 44412, 841, 341, "Output"],
Cell[476837, 9593, 43944, 832, 341, "Output"]
}, Open  ]],
Cell[520796, 10428, 71, 1, 32, "Input"]
}
]
*)

