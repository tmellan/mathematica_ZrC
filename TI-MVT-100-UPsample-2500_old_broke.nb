(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    404833,       7711]
NotebookOptionsPosition[    402860,       7643]
NotebookOutlinePosition[    403214,       7659]
CellTagsIndexPosition[    403171,       7656]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Volumes/MicroSD/PostDoc_SD/ZrC/Thermodynamic_Integration_Analysis/UP_\
sample/EXTRA_UPSAMPLE\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meamFiles4", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<TI_EpotminusEperf_all2_EXTRA_4_2500\>\"", ",", 
     "\"\<TI_EpotminusEperf_all_EXTRA_4_2500\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dftUPFiles4", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<TI_UP_E0all_EXTRA_4_2500\>\"", ",", 
     "\"\<TI_UP_Fall_EXTRA_4_2500\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meamData4", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ReadList", "[", 
      RowBox[{
       RowBox[{"meamFiles4", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "Number", ",", " ", "Number", ",", "Number", ",", "Number", ",", 
         "Number", ",", "Number", ",", "Number", ",", "Number", ",", 
         "Number"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dftUPData4", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ReadList", "[", 
      RowBox[{
       RowBox[{"dftUPFiles4", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", "Number", "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temps", "=", 
   RowBox[{"{", 
    RowBox[{
    "300", ",", "760", ",", "1900", ",", "2500", ",", "3200", ",", "3805"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lambda", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"i", "/", "10"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vols", "=", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "4.685", ",", "4.730", ",", "4.759", ",", "4.801", ",", "4.850"}], 
      "}"}], ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eVcel2meVatom", "=", 
   RowBox[{"1000", "/", "64"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6870904913481207`*^9, 3.6870905184717093`*^9}, {
  3.687090553621895*^9, 3.687090563275999*^9}, {3.687090803218309*^9, 
  3.687090807525714*^9}, {3.687707186873164*^9, 3.687707220652521*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Length", "[", 
   RowBox[{"meamData4", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", 
  "5"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dft4", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "Length"}]}], "Input",
 CellChangeTimes->{{3.687090589758787*^9, 3.687090620955886*^9}, {
  3.687090932474038*^9, 3.687090943424993*^9}, {3.6870912209036913`*^9, 
  3.687091221055688*^9}, {3.68770723283032*^9, 3.687707234923815*^9}}],

Cell[BoxData["101"], "Output",
 CellChangeTimes->{{3.687090594401108*^9, 3.687090621106723*^9}, {
   3.6870909365964947`*^9, 3.687090943751267*^9}, 3.687091221748246*^9, 
   3.687707235216474*^9, 3.6877073265687017`*^9}],

Cell[BoxData["101"], "Output",
 CellChangeTimes->{{3.687090594401108*^9, 3.687090621106723*^9}, {
   3.6870909365964947`*^9, 3.687090943751267*^9}, 3.687091221748246*^9, 
   3.687707235216474*^9, 3.6877073265777407`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"meamData4", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
   RowBox[{"[", "5", "]"}], "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.6870909925637417`*^9, 3.687091037459584*^9}, {
  3.687707250321011*^9, 3.687707251182468*^9}}],

Cell[BoxData["505"], "Output",
 CellChangeTimes->{3.687091037612027*^9, 3.687707251517468*^9, 
  3.687707329657282*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"meam4", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"meamData4", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"meamData4", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", "5"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dft4", "=", 
   RowBox[{"eVcel2meVatom", "*", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"dftUPData4", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"meamData4", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", "5"}]}], "]"}], "[", 
        
        RowBox[{"[", "i", "]"}], "]"}], "-", 
       RowBox[{
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"dftUPData4", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"meamData4", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", "5"}]}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dftf4", "=", 
   RowBox[{"eVcel2meVatom", "*", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"dftUPData4", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"meamData4", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", "5"}]}], "]"}], "[", 
        
        RowBox[{"[", "i", "]"}], "]"}], "-", 
       RowBox[{
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"dftUPData4", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"meamData4", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", "5"}]}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.687090580025503*^9, 3.687090585782281*^9}, {
  3.687090625935234*^9, 3.6870906372886057`*^9}, {3.687090859079875*^9, 
  3.687090865017521*^9}, {3.687091227438633*^9, 3.687091235724312*^9}, {
  3.687707254299617*^9, 3.687707275820774*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Energy", " ", "MVT", " ", "TI", " ", "UP"}], "-", "sample"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"GraphicsGrid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ListLinePlot", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"dft4", "-", "meam4"}], ")"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"SwatchLegend", "[", "vols", "]"}]}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Number of\\nUP-samples\>\"", ",", 
             "\"\<UP-sample (meV/atom)\>\""}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}], ",", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"dft4", "-", "meam4"}], ")"}], "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", "i"}], "]"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"meamData4", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", "5"}]}], 
               "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"SwatchLegend", "[", "vols", "]"}]}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Number of\\nUP-samples\>\"", ",", 
             "\"\<UP-sample mean\\n (meV/atom)\>\""}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}], ",", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"StandardDeviation", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"dft4", "-", "meam4"}], ")"}], "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", "i"}], "]"}], "]"}], "/", 
                RowBox[{"Sqrt", "[", "i", "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "2", ",", 
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"meamData4", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", "5"}]}], 
               "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"SwatchLegend", "[", "vols", "]"}]}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Number of\\n UP-samples\>\"", ",", 
             "\"\<UP-sample uncertainty\\n (meV/atom)\>\""}], "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}], "}"}], "}"}], 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "2050"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Mean", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dft4", "-", "meam4"}], ")"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
        RowBox[{"StandardDeviation", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dft4", "-", "meam4"}], ")"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"StandardDeviation", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"dft4", "-", "meam4"}], ")"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "/", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"Length", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"dft4", "-", "meam4"}], ")"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], "//", 
    "TableForm"}]}]}]], "Input",
 CellChangeTimes->{{3.68709065797892*^9, 3.687090715204254*^9}, {
  3.6870912446010847`*^9, 3.687091248153618*^9}, {3.6877072810618677`*^9, 
  3.687707319348724*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxVVEtsTGEUvrHRdKEeE0Goq2qMKn2hVMtHq1Nt6bzakopej9oaiaAV8YtI
JJ4bjy4kl1pVTLpBpU1cz0VLIpGqBHFnwYIIC7VoUOdkzpG4SdN8c/5z/u98
3/nPgt37Yx2TLMvqoD/+n/m+r7f+/2AOBVLhr3OQgVkwj8ZCO4ZDgqfCKqPv
RZHgAMwgxatnCZ6FSPZoTzK/WPBc4EayKnvyMsE2zHP6Pi8WnAfb7wqkegoF
58PZR19jqeAgPJfyOxYIDsFn3LNccAE8Sg+fWSS4EOZe7qkv7QWCl2PqHqo3
FBRcnKnfpf2UwBnpSVbFlgguhX8rnO6q1/NlcI5S/YF8wStg9lJ+r9ZfCZvo
jBbp/avgnyPBerWfcmAXnT80T/BqeKzntaWC18AK7bjw6L3eV4Hk1e7u7pOq
31pYrM8xva8SzjDpd1D7r4LdSfw+KP918Dk+XfmsB9ivB7ZgwNym/p4IHwOA
+XzT+htgn6cfssUfswHWdWrwvvq3Ee5aMninnDcbYXG/Qe2nGnZtuiswrvFq
OGcpblTvGhiyJ7pO+JsafCc6gXb1e1NG77ein9kE+ycJlKf8amF4njqlX1ML
3yP+TzUehl1J/G6WSDwM90u0PzdH9ayDy+c7RG9TB/NnYmJituZvhsvzO6L1
CZM9Y0mN18O/Sw2UaH/1sPsJT1H+DfBe0zyd0Psb0Mf+bNb7G2HYz2nij2mE
VUz+DKh/WwC+L1f12YI+9uuT1t8Kdz/N2wHR2xC+TPOyVPOb4B2h+8byJN4E
h8+36XuNwIkQ4cOiLyKw2b+zeh/Fh2h+Tos+HmGud0f9jWbeY3qh5Efh8LyW
S38mCov1+y3z4kWRfEh6P9P+Y3CC1KDOG2Kw59I89Mp8mhjAeFD68Qhz/+M6
73GA5+tnmeTHEflB8/FO9Y7DuUJ8Zsu+8OKw6XgqR+JWAg7Rq6qROBLAYuJz
Sd63ScDjfVAhfL1E5j1V6r5qBnh/BZR/M3zW56P60QyWZ/SV8m/O6L9I32ML
rIuk98uZkt8Ch/XplH5MCzyeF92vXgvcXzSfOepfK6wsauC4vCcQfkz5DTpP
rXB5P9UKX4/iM1Lh9Bvlvw0u69MmGIR5393U90aY99ESqe9tgz2f/Pg3/9sz
elRo/na4vE/rCvAXEtOdEw==
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxVVH9o1GUcfv2FejrROue0vH03dZ6poZ2aqafP/LFTp+5ut9023OAItqAg
L4WohfghmtUfcUwQnRgd7gcRMg1HDYT4OhUsphJEU1RUFCVX4h/NRP+o5/U+
r9ALx5eH5z6/ns/zviVv76puHm2MaebPfvPn0Trz/wP0xm63Pi1BHk6AudGZ
iX74kuKp8JL9obb3HB9E+k5rsLfYU1wEc24k3LjT4VeBXdHA0MIZij1IWdtw
wuZ9fkqRfhJuzE4oVTwX6f3Dif4rLn8Z5F+eqqmKw5DfBgcH+8Yqfg1AYKhz
1TzFi2C+7ujo+OoVxa8DJzjPR4WKl0DG8ZNx/FLgC9brCSp+A+ZBoj90cJzi
CPwVkUjkx5cVL4NXMNSZeTHvcsjeYG/sosu/Arll/P/quYrfhLlHfb6Zongl
5HPWmxJS/Ba879nfL+7/qyBzqE/fTMWrkeO4gysdvwbybktLS8j1G4UZyEQD
hx7qHtfCOzAwEv7O6bkO3nnuo3uOYsp1ivWe6PwCyCXmf6F3OXJHqd9srSfl
wCh+u9z+1sM0s35FkfLEtt9zTs8NEKvXs9nKb4AJ8HtljPIbIdY/ddqfbISZ
QcOJ298m+F2cZ0+x8puQ+4x6Fbr5KxAvZr2PI8pXAHepb/N85WOA7a9wmvIx
pD/hfmoXKL8ZxuP+ot/m9RLibs775WTlt8Czfv7Z9bcF0sN+bjh9tkIWN2YH
CkYrvxVmLf2XmaR8JeRsqG24vED5SviFnG+988s2yGXqfVz9Itvg2/l6XP7t
MOnswEjfLOW3Q35nuw8Cyu+Av4j1z6t/ZAdg+f3OT1Uw7/O+nXqq81Xl43e7
+ePwrb8Xa37E4Z1mv1dVP4lDfiL+dXoe+3HgLP1zyOVPwN9HPUcpjwSkif1e
0vxC3va/Rv3gJ5BeTj/ML9P4avj2ffnb1a8GrD+z6nchXsD5poc1vhq5DzjP
TcUmCVND/1xTPZEE7nNflc6PSXikh5t0Hj8JYbqRT53+NcBJ1r+u7xmIbX/P
9H5IDdLd1n+ufg1MO+c981jvVy3kL9arGq/xtTD/sP0f3D5r4R+mnxrUvz6x
9U+Tq59C2up1QfMjBbOTDVfq+yAp4E/uZ6mLT+HWEeb7w92Purw/E6UaT+zx
PnSpf6QOpoT4sIuvQ24i7Tnk6tdDbL6Yi6+H3873wtf3RMjTjqF21cevh8la
3t3vBuAd3q9j+h6iAVJxuzWYKsJ/zECP1A==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxVVF9olXUYfjPTOTLX/OafMcY0WVNjrY79b9ujzc42dfNsuqNxIlF2dhM6
uqoD0g9xUBYdulF20x+HUATLzGjZhT8kInB6IdGBFtEu1swtp9O5heB6vr7n
u+jAGM/3vO/7e96/a/Yf6uheYGbd/Av/R78bjfb/H6y5MNB7+NfzESyCHZlI
DR3n9/9+JfAr+yZSwQrhADY0U5MZf0B4Fawik7/wzW/yr4C7kRqqbCnxEa6C
lQ4mR1vvl/1a2Mne+uKeu9KxDlZCvvw+8dWw78g/Oqd4NXBLyE8vFr8Brm2o
sm9jkfBjcEXUX7ZauBb+E/o/UiFcB+QvzNRMlgo/AXenJpPPLZK+J2Fvk3/9
pvQkYA2jueD6P8Kb4L+t7JsYWyX/p2AfM/5snM/T8Mfof/th4WdgPw/01pfH
+p+FlVF/tkT8c7AzydHc0XuK/zxs3/pM/khB9i/A1RcXBlZUyf5F4D3G/yyO
Xw87fZQNOiv/BjjSmZ64Po2wA9ls9sflwoAFfP/YzSi+A9wXfH/TIvGb4UZy
wWCP6uk2w35ifififm6BVScSiQMxvwVuivU7Get5CcZwwTXl54gb+H72uvQ1
wR3v7+//cIn4Jtg061P8t+JvhT1O/8u3Inu3Fa6J/U0sUPyXYX9RX7o46pcj
nub7Z+YUPwkwWmFWelwSrpTz6mL/ZvjtjHcx5pthof2XZeJbYFcZb4PmzxGP
c36/CsS3wh+k/QnV07VyX6g3s0b8Nuy7RvtX14rfButh+l3LxG+H/UD9i39R
fsQd4fzG+nbAvcN23lmo/HZE/ZiP96ENqGA+6zS/rg02+UcuqL2i/Nvh9/O9
Qe2na0fVec7D9/H87IS9xQF4V/pBXHRpePh99dcRt1PPhObH74QLx+tgEOmx
FOwN+q9/SP4pOKbbd3eh3iO+yg+HlY8nfoULdzuubwc85eQ/kD50wMJ+LFsp
f+JMaDAS5eOJz4XzOKb8OoE6zt9A7E8czl91ufw74Xh+Zt7UPfKdvC/DzO9P
+e/idxZ8bCbKF8S/M35+qfyJT3E+PxfviU8Tr57SfO6GbeQ+1mlfsRvuQe5T
aexPfnJ+fr5Rd9UTsz2Dya/1fhcs3Ocr6ge64ArkD+l+OPJTrF/3rPyJP+WA
jsT3Ig0b5r6ckz3ScOE9m1M8lwZusR5Z3Sefhq9lvcbje7UHFs7XR5ekn7iS
BVsa698Dd5bt36t+eeJwPV/TvtpeWJ71aNG9APEp8uP3Gv8FPD2YDA==
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxVVF9olXUYfjcljmdk0023hg43JI41ozqWms49Tedxbm4725wbHcrCM4hd
dBKt2MX4GS2ii4bRTf8gmDjQWuJFrCn5uaCFTMUsV5KxUxHl2cUs1GT+e76+
57vwg8Ph4fm97/P+r3jx5dZ0vpml+fP/g2+mxu79gEOZ6ui6hV4AI7AjLSPl
/V/rXSGscHIws/S3EwEuhg3y/dAV4VK4Ff255JY5sl8C8wbGrsYuil8GvJFL
jrxDP/9/lbBn6f6R0H45bEN0cnB6gfiHMJXHv28r5C8Gy1KwNl/4Yfov78/t
/1H2VbCpC3xwXvE+Cre7Ojo5O1f+HoO7HEsNnMoTfhx2kPbnLuv9E3Cv8/1H
efIfh52amJhIXZP/VXDzmf8nReKfpL/e4uEvwniegn3Ab+0d+VsNNDC/2SLp
rYF9Q3+fmfBa2AHq/f6X/D+NZUXDiWysUvw62FeJbO8P18Wvh42y3tdzwtXw
9tK+pFj6G2B7qNdzXnwN7EPWu+9fYcB2dXd3354T+HfEr9B+9RLZPwMbov+E
4nfEN1ivyvnia2EfX42lmrPiiR9MDYzV3VS+GzkvPn9b/EZ448SHl8p+E2w5
+zvzs/hNwK+sX6JM+dbB2jkv300H8bo6uDOs16cLZL8Zttfnb4jfDHxP/mY4
rwlYmvxMQYAdMeUyt24pvi1wLzH/f5SvI27I9ha/pfdWD1sRj8d7ClSfeniE
8RfCfmyFO0e9yGLZb4VdY31G58q+Ae6SP58R8cQp6l2Iyr4R3jHOW/0i8Y2w
Mu5LRnq2DThL/zHl47bBnvPzeUD+m+CqWO9LoX4T7V5j/fYpv2ZgH+F+zadr
hlfLApSG9WmB62E8TSUBRgu8Ps5HWanyJf8n+3HCAt5rgX3O+dsT7ksStt7f
l/FAD0m4Vzk/PfdLj9hfv1Htg0e8kvGmw3vQCouwH+mo9Il3nmbCw5qHVjg/
nnfzAz2P+EvOz/PC1gZXz34dVT5og+W3jpTX/aF5IO/fg2So3wbsZP2OFEq/
Hagg/Z/qg3bYT2/mkmvGpE/en7dpvffa2W/mczHs33YY6Yn3hUH8HvMf1D10
2+HuY34rw/jJ97EfeeF96YDnz9visP4dcHf41Wi/XAfsbX9ftd8e8QDtT85q
f3dw/9mfob9V/x1AF/PL6F468lU8t79MBrxHPMV4G09LvxPuOOtZovuDTnjN
vBcFi2RP/hD7fSCi+DthOeqNh/etK5iHXfNk3wXnlxuGuz4rv3s=
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxVVF9olWUcfletjUOl6Ukt1jaXrVNa6Y5WuuYec9txc86ds39nuYvl2DAC
HdHVKvhFzSBWUlfWhWGLIhAXpbkg8WXUlQvEm40MOpMiaFIrG0lS6/n8nvei
Fw7feXje3//n/a3dfyg3eJNzbpC/6BufhXr3/wO7vrS0VHKLj2EpUDozPjyw
Tng5XCHVd+TiP+dinIQNDg0NXV4ufg1c8mRmbqpYuAx2JTtZ/tMa4Uq4sr4j
U6evyb4KroJ4McRbBzc7PlxXVSlcDTdA/yuC/xTs+brEzEDAD8FWMt7h+4U3
wK4xv8Qdwo/Auul+LMTfCDs6XJf42QlvAr4fSZ58sVy4Bp7hExV3CqfhmudG
ktX3Cm+GvTm1mHr6PuEtwERmbqQ/8I8BB5jvR0nhx3Hjz59rhZ+Au210Pnv0
N9W/Ffh6MdV3/m7x24BDrO/ZUH8trH2yfDQT8nsS/hzv11YI18F9Wj46v+Nf
+dsOi+bVeI/4eti7PFuCf6D/OOs7rXka4Nvo/8xK8TtgJbRvVnwj/oXzO1sl
/inYZfbrqu4bcYH84s3id8JmyE+UiCeuSafTn4f6G1BI0P8zqscagM3kB4P/
RrhjzG/1UlyPNcJemc9ONiXEN6EQ5XMm5N8EnGD/PwvzyFCf5L+5LvsM7C3O
66tS8buAt4kbQvxd6Gc6ddvXi2+Gi/qxvhC/C2uG7SEev118C/Ae+3lc87YW
uDz19UKZ+N2wFZEe1X8j9pxXb6ivFRbpbd9q8a1wRUzg7O+a3x64TvqblX6N
+GXm26p+uDbgE9Y7G+K3wW2lPtv+EL8XFr2XA6E/xC3MP71M8dvhC4z/qni0
w22g/cHvVG877Dnqr1bz9LzP8aRfXyX7LCo/5HzOV8s+C3eJ/dvvENtn4a/y
/eXEe/KH2a/eBeWXg11i/Hr5B/FLXBgPy78Rv8N6T6h+nwOquR++vEvxO4Bc
9B7UT3TA1VJQF4JeOuC/nZ6evqD+evIXuc9+uKL4nUARP69pf6ATbpr51xQp
Pnm2P7VRevWd8Aw3v+wBxe+C7eOFg8LoivU3Jv1ZF9wY9Xrsxzie533KcXRv
sO+GX2B//tb80A1E+/IL7RvrhvuA/Z0I+RPv5HxWhX3SQ30Q/zobzws98O/z
/sfBnvhW6qk42PcAN+YR9l8eiN7jo+KRhzvF+orDe87H+joV7Mlv4v3dD8q+
F+4v+tumfY1e+DfYr3zS/wdkRr8b
             "]]}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
         PlotRange -> {{0., 101.}, {-13.621562500000152`, 19.9612499999987}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["\"Number of\\nUP-samples\"", TraditionalForm], 
           FormBox["\"UP-sample (meV/atom)\"", TraditionalForm]}, 
         AxesOrigin -> {0., 0}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 600, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0., 101.}, {-13.621562500000152`, 19.9612499999987}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"4.685`", "4.73`", "4.759`", "4.801`", "4.85`"}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {193.5, -189.}, {Center, Center}, {360., 360.}],
     InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxVkntMU2cYhwvMqWNBrIUCE1sEykWRSmmhA+SHXAoFgV5OgaFhOmDMDWEs
dkaBVZwlOqBzAQHJdILTIZcIbhJEJ9kyIuCUpBSadZNLCHMzJE4TcNHiMJ73
j33JycmT5zzf+52T47OvRF3gyOFwClaul/dX61Es5/8LBj2vW7HwBl7hGlg0
DMMc9WTZFeI7K+uYD8s8cJx0LiGlQpY90HJljp/K82V5IxI3jsd5G/xYFiIt
TCL5ZIF4Mx6fydpw77Y/y34w9qe86ZgQwLIIfLt0Nm9AxHIgiqRjHzjlkw+G
wvpccjGWeCvkRbf77x0i3gbZzXNeocXEYgwH7DY5VhJvR05NbW1tM3EYZEw4
95GRWALX78KMiXuJwzE7eXdJ8wWxFMsNZUGNB4hlmO9UzBzuII7AtXx/rV1B
HInzRU5fy/TEcmgUtyq8S4nfxtkb8a0n7xJH4fvQg/32P4mjIdhaUjPtG8hy
DOSVA/3BEuIdkL1/aqHcgzgWc2O7fX61UQ9sWDvZxqln2QA09Qxuce4mHwe3
SLlc3k4+Duf+drlkspDfCdWwi6aRzmPYiWtejYtrl8nHQ563FOrPZecb4mH9
ycYs8eg8CdhcUFhYGE0+AWO/V09XnCSfiI8bfc2jF8gn4kJz78XOLvJJGLxR
fj+1l3wSOuYWV3v+SF4Bi4vfqaGn5BXoKXHPuCoIYn0ynD/6xixaz7IhGV9K
g4117uRToL/cZc3zIp8CU8pcBd+HvBJVzP5vdSLySpg/NRZl5JJPhcOZ4gbu
CfKpcCvOvGJuJ5+GlEPvvWauJ5+Gd+6syfusgfwufKisMh+n5w274Cht+kd8
n3w6NnncDHk4Rz4d6dWXymZmyGfg37Z6tfIX8hnI3W7KeWEjnwmrpa20eJ5l
ZCK+zBYw8JSez0T4u4vuhQ9ZHszExG/ClqjH1KsQ6d6jzKf9oEJ55ZR+9An1
Kpx4+b84BrO9CgeUMZ63vFnmqPFDi2ysXcgy1KjsEK868oJ6Nbia3O6vlmm+
Gs8sC0MN66jX4MGIYCppB/UaBNvTdaN7WDZowA852rk3luZrcHzErp/Ppl6L
2T8yaiejqNeizsEh0h5EvRabXK/zz8dQr4Xz6zU/7wmnnkHEc6vJLqGeQS9n
S7W7nHoGltNHfP+KoJ7BA15MtT2Qeh2EPp4BXHo/6KBfxYTofKnXob576mAZ
7T+ow3Tf0FlBHPVZsOy/qomOpvlZWBSNfN66jfosjK9vutwnoj4LT2xd0ir6
3pxsRD/bNyzwpD4b0jrx+ISA+mw4uBUn9XlRnw1zcnNr/VvU5yDOtO6wjEd9
DrSCicHrK/wf6baTyA==
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxVlH9Qk3Ucx8fuMO+EBGKCExAJZXETGE4Cx483Y2MgP/abZ4BAxYECeUpC
S+blsAwTFRZmTpBGWUyCkkPRa3mhHGGYFevIovpDwjiuQYBxWGIF5/Pxrudu
t3vd6/t6Pt/n++y24YU9mhIuh8MpWfosfz+6ZpI4/7+AjxV3av72xiNciZGr
DofjaR+WvTCzINjRoFrDsi/40+orQVn+LPuD9wvaPS+uZTkATruzcR9DHIzg
D/cmHO30YzkEddUPXvPwJB8KzwrL1IFAPsub4Neuz8yLIy9A/uXa7HWL1Icj
pMd27ted5IW43S87GNZAHAFOxhlNZR5xFOxL84dMxCJUS5wV7luIo1G/fP9S
ep4tcBVNnnULIxZjb4vVaj1BvBXi8p+F4v3EMWBCxf7Sx/d7FtquJGX0APlY
8Gq7x995SByHouXnbaf12+B9k5/64DFLYJJZ6qPEdB7xKAv/6O7xRfIJODSc
7zEZS5wIfYmXIc5GnIRX5epNvt7UA677gh3KYJbNwBe19sm6cvLJ2NWfe++Y
k3wy/rKk+Ssc5KWYa2We+uY8eSnGhQmfV3aTT8FYj/3w6UHyKfDKkxyaMZCX
oXhMedyvmbwMWx/62Q66rWO9HPOi4Ji3A1g2y7G5pWGwsJx8KqaEya0+jQGs
T0WQi5M5tMAyR4EpZ1Nm5yXyCty80SmSbQ5kfRqaujo6Ot4in4bhNWvT/lBQ
n46kF/fMHDaST8dQU0H4QjP57RhYOr8GCfntSHqpz+PledpfBlIVMpmsl/af
gcLpmWz7V+Qz0RU6kSi5RD4TnaL4Dcxt8ln43c24T+8kn4WrZ4U87kny2Ujm
KgTvt5HPRv9P56SDXeSV4P0WJX6SIa+Eb9H9K9dpPxwVUgbmBS0XWIYKbUET
t3b/S+tVkNUYjcYJlvtUiE0cHnHMUq8G17mL20L7hRrjJxr5w5F0Hmp8He07
axCy3KcGYwkofb2Uzk+DN4pX9T73PMvQwGQLuHiAoV6DhLyTK3kt1GtgvO5q
jR+nXosea+y86U/qtRjTVcj/IW/WIi3MdPfoevZ992lxJN1nY4SQ3r8OMdfe
5UeuYhk6CFZPF3TT78Osg2NjVaS0gnodFLNvrvAOoV6PT8va0m+5aL4e126U
jfqN0nw9fqzKN9fdof3rked1z/IDrefkgP9Kr25CQPNzkP5BfLKVQ/NzMBK/
2/bdCpqfg++Nqieqo2g+g7nsClGknHoGz3zbPPKZnnoG7mrlsfF86hm892XB
qfqd1BvQt/Tnb6uh3oCqiLnRU8XUG3Ch0r1XraDegE8k9dsKU6jPxfrF1ZOX
w6nPxXnzZPX+oED8B9Qnj0k=
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxVkQlMlFcUhX8QEiraCmKcQlMEugzFQpV90wMzwOAgzAqDVaA4KiUdsbFY
YFwGrdCqgI1UZ0qwFCyDGzYgBdJFYowKFiolLFZTEAYDsqMoCGhteLdJX/Ln
z8m537n3vueUnCbbZs5x3LaX37//hTO+nvv/ASfqLNu1r+nKgrQC9zuMSy/f
Z3XLAHXw4s7aOabtwDXP7E/95QXTPJw/mx3tgBmm38DOIdv54gsDTK8Cdyri
flbQGNPOuPGio2zXCM3xFppj1IHdxkmm34GHavewT+4I03yc9zIu/Sxngun3
8O532lxh/yOmV2P00NUp/hnq7w6b2in+5jSa7wPUHRiS1r1uhgW9BpuumXmn
HJ1n/lpMbg5zMeum/Twh/bA+I+m/fb2Q99B4XezEMd4bSzSj1dYS0j6wGeT6
X/WifF8ITnzv1nuP+vtBove5/XEp1ftjVvQoX15IOgBh6fLT4gqqD4QmL70y
qITyguD+lU3U4xBzpoPxcG/znwfKyV+Hdt7yIH0n6fWQ/3zx+d0jVA/wvzEY
4n9kvg7IcPppS3Ib1YdAnC1zHLZg9boQ9O2VrZ3bTn4ohjoc1RV64kMR1Si4
MW5L+QJktgyML99HvAAyj8/Lv/UmXwidtcr/spp8IZ6miP7OuUb5Yejd0uhx
spDyw9Cmn1aLqB8Xjh7lueof9Oy+dOEonRU3aXV0fxEQ+C3uLBsmPwJF+QVF
AVPki+BWaDAYVJQvwpPGVbcKeyg/EgVNwq7xe+RHwtKjZYeZnObfgKK+6cc1
9TT/BpwYrE05V7mI+WLwdD3HT160YL4YfiV3Jjy7meaisIKfdizpGPlRcM4V
WFVlk78RX/DmEoxNLE+3EbvnA0zdVyk/Gg9qzE0JrxAfjYxEq47W38iPQV9m
4+QpPvkxELe2Hip7QPkStLzv6Sn3sFzQkCB40cSe9maql2Cs6s3DQ3eYbpDA
133ktsMo5UtxaUebf4kd8yFFeM3WnumVxEuxX9ulsLclXgq74Zl02xTqL4N7
9cv8K8TLoBmNGzHx2Dw6GSqWWNe13SVehqTWePv+cuLlSD0Y9aR9hng5uh21
WbMfES9HRshOU3gy0w1yrMvIcgXtyyngokn5WnOTeAXGi7XP3Uw0vwJjb8tq
nek9GhSo9Ll5dNCV+ivxR2fpsz32xCtR79IcrPUmXgnH1St+PWhDvBI5pjBZ
YBfdXyxmHLx4ocnEx+JZ9KdxXyYSHwvXWwUDf4UTHwv3APeV5Z9Q/zhk9y8r
r0klPg7qM8rTm0aIj4Oi4cIaoT/tH4eIhPyJyBzaX4U8L01Jm5TeX4XE145Y
BG+n+1OhKsjNta+YeBV6u1qO643Ex2Nr6XWx71ni4yGsvPQ002CJfwAJP63V

             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxVlAtMk1cUxxtgQxqWuUEGiqJOQKhmDPDFs3+gAoXyaKEtDIlaRsGBgMsG
wiB+GS9xolgYaNQpIwwDIjBn5ClliMCIGiCKY2ygCIioY0MtGUKG4dwlu8mX
L7/87/+ec3POuRtUSbIYPR6PF7P0vfkvrxkh7/8LqEp257vqaZdxBaq3toX/
Xa1rW+aV4MT8wXKDF8SmUEc2WOZ8M0tsDnntkv/aK+I1ENu0iw7Hsv3roeXU
arVgjPhDVOdeGHh76BGxFZymn2UIr7YT26A839A2dfQZsS2Q1GNf0jJDLICq
5pYwuulP4i3gnc5fDLr5lPgjqDVzxs1e48QfA+fc+YO6P4gd8HCqtbV14Vdi
R3Rdeq3qsR8ldkJeYfuZwLoHxFuxOvin7pQfHhNvg7GrWGNlNE28HU3tmR1D
ugniHThZM5LSa8Ti7QQvufKdL1wGiZ2RM5tbqfS/T+yC+iur08vMColdYeJy
uml4sZ7YDZoj4RmdykZid5z3SChZdOoj9oDc/u6hKR/GQsx91pHn5DbQxsqL
A4Plybt6l5kD5I0pmrjJIdI9MbD9e9e7ifdI90TGlw/STS8Pk+4F57Clfpim
/ZwXjo72Xtixkd3HG946fvZJBcXjvKFKPWdYoz9CuggTacZ6m0t/J12EgJY7
7XNn+0nfBfPbUUg4yvxLvCa7X1TB6uMD+6yv3azjfiPdB/KCxgXPm6xevni5
N/r8xL2HpPviwGuHtSV2rH5+iNeXNViWUT9wfhA8MeoJSpokXYxb86Zrezqp
HzkxesIijrU5Ur48fyTojWyQXqXzOH+Mxf+4yneG4vECUN0ics5SMX8A+pod
V+reZboEmor3JC+6mC6BsH/faG0m0wNRn3PRTFzD9EBsPO6wbyaT9VMQNovb
s9IEU6QHQXKqXNDUxvoxGIPJi5rxkSekB0N8cWfLq+tsHkJgXmR6uWsbzQtC
4OuRZhbdQf3LhSDKqNH4RCTt14ZgbtKpMvERnceTQinao+mMI4YUPh/Y8OKb
mV+KkTf3i2V+KQySnawCVrH5lcFAMVXkYfec/DLkF++za2wgnZPhcfk6tYWU
+WWoHjF0P/OSxQ/Fd6F186Ua0hEK4S82aQspxFwo1Df0E034dJ42FHdKn9fV
7KZ4vDDwc9/P0v7D7h8GyVvX/vLLI+bC8FXxcEF3DL0v2jAoajM/X2/B3hc5
JMWulv6H6HzIYR67YtMlJctfDudvP0kY28Tyl+N2fOiN7CPsfVAgVRpZdUXK
/Aro+opa9kdQfpwCucPWsgApsVaBxKGDwYJTLH8lBGW6LRXzzK/E9WOFew3t
2P2VsFMd7L7P6qFVorWo+9M9USx+OGqEu0/8/F/9wnHWNneoSU39w4Vj9ri2
9rA1zYM2HOtM9luMV7P5iIBZetSwTzz1IyIgelo1WVsw3vYv3c4Vzw==
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.007333333333333334], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxVk3tMU1ccxzs2QJE3RSZsiALjMUMYYJkU5reUUmqBvik03R+itYi84kAC
i7NT5yqgyICBERSGJEMinVlcwPAoWyYMFDZHBCNTVJYwMAjSBRU3BuH+SHaT
m5tPPudzz7kn525Lz5XrrFgslm7lXn2uXXO7Wf+/YFhaXl62tfSs4QYcMk16
iGedzWvsDB9fbfmPWx0YZsOz9XBGhYMjw29jpuJ1+i+t9gy/g1n5oJfvd04M
+0B6RfioWED9dtTZu7i4pNF4P2g+zezMX6Tx70EW3fFm1RJxIO6vrseG1hOM
LZZAbbmnK8M7sHizYzjksQvDIbjNvje0qCAfirgNo01z18l/AEXrhJvwCPkw
RLO6i3buIw6Hufn9rnALcQQy20X2VvNuDO9E7SXRbdv9bIY5+KfH2dNeTxwJ
v7B8QZ2bO8Mfov8H7y9mtOR34ak0oOF0FXEUnKZl7d4ONJ6LPrfan+v3E0ej
75yf6Ktu4hhk5ESqdTzij1C6kHsyLIt4N2yORk4VlhIDEYO3bmUFb15jA/D8
7pHT2R4Ms3ioTdVoNAfI81C473DrNyPkYxH5t+2WYDP5WGjC8WJQT56PSq7d
aJMPeT5yLAPuPxWSj8MArzRLf4V8HKYqW9LOW3kwXoCT75qH2pvJC3BP2zvu
lU19PGofFrPb7pOPR8Xnii7zLuqFOGrvk7D9IXkhalb3m97HSoD/yveXDZFP
wJdZf21yyqdehKDMjS8b5smLIBgdGxvrp34PUDbef2aa/B7s/YNjkVpTL8Yj
ZYTrnDvDBjF8A5b8E1XkE8F9I11xkNiQiJFTRqORRT4J+mjnEvf19SfhY6/+
6sF6mj8Z51f3t5N8MrLrsvuy8shLMHDnsjhp3UtQ871/oOQSeSmGFwK1z6YY
hhTHzQ/swo00XgrXlkaTZwrDZikmQuvi7xKzZHjqf9aiaaNeBk1Q4/Qwl3oZ
bph8XW+eoV6GbQufTIaKqZfDsUnyys+bejkafk921BAb5OiVFX/2xIZ6OVRX
c6PGralXwDhYdOMOh3oFXuVlFxy0pV6BogecxngH6hWQc4KST/xG51+J2GPV
/FIzw1AiT3225MXXDBuUaI5y7HtC/5dZieeTnJdsO5pfhZq5Uv8eFc2vwq/z
xwXc9f1TIdC64s+RRJpfhbcO1V3TVVGfgn+74l/PtFCfgs2dswWmC9SnYEff
xmvdF6lPweOMuIn6GurVMIlDMjKV1Ktx9XK7vkRIvRq83GeV5SLq1TjQUWHc
JKE+Fd+6tgn3yqhPheR6b4wpgfpUnGjWn9Otrz8Vp3L42rJq6tNwTC4PaCig
Pg0x0aMd/JXz9x8hL8fy
             "]]}, {}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
         PlotRange -> {{0., 101.}, {-5.863338647958819, 13.18319196428509}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["\"Number of\\nUP-samples\"", TraditionalForm], 
           FormBox["\"UP-sample mean\\n (meV/atom)\"", TraditionalForm]}, 
         AxesOrigin -> {0., 0}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 600, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0., 101.}, {-5.863338647958819, 13.18319196428509}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"4.685`", "4.73`", "4.759`", "4.801`", "4.85`"}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {580.5, -189.}, {Center, Center}, {360., 360.}],
     InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJw1yw001Xccx/H/xBGWGG0iBx2JoVFqTeET8hCu+3yR1hMt08Kt2Ym1/pV0
7GxnOKWNZWwOLeZpxZ2kO20Z1oPHlELL04xINxk2a8f39z/nd/7n9fv83jZ7
4sTRWhzHRb08//8XvgmvY4mmpf5j+qALdH2oyJdefJW8GP2lexta7xiQjfAN
/2yyZ1qHbIr8Iu3OOy3aZDOsW1V4+vpRLfIKtGlyw1rNObI1tNyN96s2/uO1
4JVQva7blVY5R7ZFRGVayCeCGbIdunfXiRdlTZPtMRJc464pmCK/Cb8PdDfu
0X9OdkJPznZr4bln5DWYHYrMlMgmyS6oNH2caen5lOyKJ6OqYanvBHkt/OY/
G7N9+IS8DruNc8raosfIbjjeKCj20Bklr8esdPOxw3Mj5A34Vn7ztaRU5rfR
opMkF33xJ3kjLC6YRj9OGSa/g5vlsmVagczuOP8i7y2HA0PkTRg/WOCi6Rsk
b4bC9ZaqxIzZA2NnI31PxgyQPZE1/Ojr0SXMXjhteqK8qrefDKRcsDGZCyLz
wCEzZXJcxWPat+C71dWGMWIyvwVcVKKm4vYftHtjScLMYHI4mfeG9GFaybGh
R7T7wMli6ZmieDLvA6w9wK1wZrsvvJ8l63Uo2e4LeSH34yELtm/FTOxyI3VV
H+1bwUWuTNCVkTk/xOjvOHJ3qpd2P3ge6S6zM2S7P36XDKp2NrPdH8ZD7r9m
OZO5AIiKW2NHPu2hPQCxims7R8Ye0h4IROj5bwkn84G4v371lE/jA9q3Id1m
ecYLju3b0OAQerxXl/VBsGxzK3ivid7zQWjzy1FciWJ9MMorHPPN+7tpDwZf
HBJudYrMhaAzdMd0RyfbQzBSvLQ9Yg/bBYjNNjlnP36fdgHyUj7vPlxL5kKR
uNfumk4i20NRV2fRXWbCdiFGRofr3W/cWzCEOFWqdy4pjswL4RT5ZW6AMVkt
RP8uw/dFD7qoFyG+Jje+o4wMEWw+ijdu3kfmRRCs0q4XB5HVIpRtqK8yeH6X
ejF6f+NuTM6RIcb85X+rE78n82K8cbTRdyCerBajqebg+CvdrJdgXqnM/ruH
9RLoGNgWWDHzEjhYfrxJ0MB6Cd71d8zYVM96KRa3NdxpyGC9FK4/2cma9rNe
Ck2qtTR9NeulEE86Xzrb10m9DFYlkcrM82TIUK5qvjoTTuZl2F4o/OGpI1kt
w5pcjXl1OuvlqLtuWJTdxHo5nOUn56PzWP/SJtxfyxJYL0dz7ZWrSjfWK9CQ
YFl6W5f1CoSed4z3aOmgXoHoicGLl74iqxWwT13UNBhF5sKgXTk5t8+FjDDc
c8up9Z1tpz4MPw9ETd36hawOw+VSpaLwDJkLh5HwhAl2tXv9B62h5bY=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJw10A1Q03Ucx/E/q52FoEB0BhIBycM8YoI8hML2AYHxDBvb2EoQyJFwBMEd
pKt0pBF6mEAdpxyrLKQyRY4CER9uBWLRYSx5sAkKEUmKgPGkEFAd39/udrvX
Pnvf/fd1zsiTaXgcx+3+7/3/5+prSox6ybB2wRr0Bd7uytE4tT1JfgoHNrY+
MoxwZCvMlOiyslSL4lXb4kaUQ9ou/jz5OSx/nfp8+XvTZAcoPFv4cZv/JjvB
0YxveX1qiuyC0T77PSHaSfImSNsb/1xUPyC74afDyxlXK8bJHqhwnN3p+Tnz
Zuw89ot5w+F7ZE8I4oVun/4wRvZCKWr2Bwnvkrcgfo+2Yf/oKNkb87b+Ipme
2QdL2z6cjDzyB3krxny5GaNhhOyLN6SzMO/6neyHS+5DfZk3mf2R9gK/zU/B
HICzM12OXO0w+WVYZEjqb1xkDsTpDPfpC08zb8NKnqY/9dEQeTvk/tYWk/nM
QViXXbI1zIz9PhjCjssldlfYLoLvFyu8pkpmMWxebIrptGQGPDD218miO6vW
AR+Aeynbj8yFQNlu8m9R3qY9BE2leo118SDtoRi8vPK6w7cDtIei4rURl4n5
W7TvwJaxhB6PjWzfge76tmbNd2wPw67Pktu+aifrwuBzyWQacGN7OLxbzr9Z
OGOiPRwOG87lLFiw54/AK2X93Xl8si4CvWF2vU/UsOeXoNO0NvOukf0/CcSR
Rhd9POsj4VJdUMfbxPpInLkTmtvRzvoo1JxcfocXyPooJL771gFnX7ZHQ+iV
+PGv99l9otFheiYu/QSZi0Gl+cENC9Zsj4GotbizrJzdLxZD0mKbKkeyLhbr
ePVHU/V0Ly4OHrbfRN/eze4XB1Gj0Z4/we4TDytBqcdBLbtfPNzMQpYGKtie
gPA12VZXrrE9AZ75Bk2uiu2JUAR8L5GlkpGIx2IIlpfYvRMxb5/mt/442ZCI
fTZ7a3xB5qRoLCh2NRaQIUXwkHH2E2vWS3E+/bq6aOY36qUwyueka4+TORnK
55Naq8VkyOBSG5CfF07WyRDrKjgnULJeBqHa/FYJn/VJqLuY1X2q+Sb1SfDZ
Pn5i+DRZlwRRQ1pgcwrZkITBXMG9HlcyJ8erRUET0w/7qZcj9JrdseQ5sk6O
sMUf99o5sF6OlPWuAfmWrFdAqJeMPfiZ9Qo8G6E2N73PegW8/A5l/RNKNijg
3RcU3BdL5pRwfzjSU+XJeiWaP2oyuN7vo14JReFZp5xuskEJ2zJVsH01mUtG
dOER8Zl0MpKhTSpwFruyPhm1opIW9Xgv9cnoH9atzF0gcyrMZtjxviwjQwWt
/ujjq5lknQq9ppT6Q0LWq1A3NNewbw3r1ThlU1VZ3Nsj/hfBStu9
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJw9zQlQlHUcxvFFOSSl5VoyY2VBSEKGOMM4H5BbwGWXXVhEB0QYhkpgJ9AY
zSUMk3QUAWPiynYrTCKPEBWjFQeFPKZQDgFZQIllWrZNMTBNqun37515553P
+32f9++4LV+UvYTD4Wz/5/73+d9lCF2MHlQW7PkxlF7AOdFFNtakJS+DqN+o
vuPUY7IlCrR7a/+w+p1sC4FI+f14p568EiVlNuPypIdke5SHefEdfQxkAXZm
NotLT+vITnDWH5iSTs2QnWHX27tmsJWd/yq6mrZufe49TXaFie+O8+GjU2Q3
rHprutY8inV3lHRcs1t+lO094NTlbuhTsu6Jd0/VcTNtWfdCvKAixKLzF7I3
Sk4eWtFaxv7vgzT12c/4dcy+MPCii4qPPCD7IZt3gdM8e5/8Bs4ffO/5jTZm
f1icaHRMtmVeD/uHF7XrEybJb6KlXz1TPTBBDsChYWGdcT3rgZhs57VZ2zMH
IdPJI3iLin0fjA8qe9qVXOYQXDUEWN2+NE4Oxds2cOg/zAwMdJzu6eCSFQDP
d/TLbh8N9TDMvLS3eceZMeph2CwsGU/T3KMeDqmbyHkkgawIR+uzbZlPzo1S
3wC/j+XSmy+SFRuQO9l5n5s1Qj0C5/IGM+bcyYoImJTrrvCPDFOPxPXL4R6u
hrvUI/Gy2Z5d3kdZj8ItR75e8Iz1KPjrLR94KcmcaBQZpWlz7FiPxmuy7rmg
y0PUY2AqnK91byArYqBa+5Fez2c9FlVt14z0ukHqsdi1pfru7DdkThwW+Y8r
zYrYPg7bHz2SN8Sy8zfipqluwlfD+kaYzuSt2H2Y/T8elUVPz/YIWI9H1qWI
zxVZrCdg9YI8l/eEnZ8AzxKOZWALOz8Rda0H1vZls54IK2Nd5BhY3wTNiP3r
bUrWN8EhZjfaM1gXwqt3aKnInwwhLPVuoRn3Buh7IVQ8rZnLGepqIeSrFuv9
/t8nQVvzQ9P0MrZPQunKr61DvmP7JMxb2ebpKsjqJFj8VBpbmE3miKCdFpQ9
DSdDBJVsv+T4C2wvgqfnr3YLt/ppL0LaxXcO9reQOWI4BBdUC5VkiFFoPicZ
2ExWiPFpblz3Jy5sL4am7lhgnoDtk3ElKHLdwMQd2iejJV04JBshK5JhbSZt
rOkhq5NROm9zXFhB5kiwOtXqepWQ7SXIl+trb7zC9hJ48H0Lx+du016CLrGd
uteL7aV4f1bTlTdPHVKYO/x8zLWLrJCi/ESOaXYV20uRv4CxL9LJnBSUprsM
+9ewfQq4fy75ULWP7VOg5y62GBezfQpsrno3tIrZPhXf7nM56biG7VNxYek6
fZQJ26eiykLWuPNOH+1TMVL8VY65isyRYf/yv34LKO4L/RvvduAf
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJw9zwlM02ccxvE/bIwCFYFMhwJyyBTGIeDKJcpDoVwFSg/abnOjA0VROTcR
cWqFXTIBo7NYWRBiVCBAps6Iw5jKnMxjIUxWhCqHbMK4ZBLBREi2xd+7Jk3z
6ff/vG/rnpEn22rOcdyWf9//fb56zURGNuVvtN5gDvoCvV/W/tha/yLyFXno
v2Yp/P3u32Q77DU4nbXQTZDfxPZLh9UBWaNkR9TleH3Hk/xBdkbOlbrS9BH2
vBvqlYoO5/NjZA9cbP3Cv/0A6574q6jT3XCH3bcG4pIbBSmqGbIXbC54xrm6
TJPfwfzIT25BVpNkX9zQe4gWvNh5/jjxNKFicsk4OQAn5nOTa/Ts/kBUhb3v
rclmvz8IZyY+GQoIekJej7LgzFuVfszv4pddImF/+J9kAS4vOnaUnWX/Nxir
puJuWYlYD4HNqWfO+v97KMzmiiyqu0bIYdiTOdk9IGHnh0O+rsR6eznbbwDH
Hzv8WifbR6DE9m3p/p+ZN+JxYczSQHvmTSjoNY5Z5rHzIzE+U/jpsjeYAdca
gV/+SbIWsK+o3BHoyXoUUo3BP/Q9eEw9ClcT9TslSjInhKn+eo346TB1IXin
ulzDqshcNK4dMs4ccGD7aBRJlvjx6lmPQY/05VQ2n/UYqCSZL0/Xsi7CnfJz
YuFedr4Id8/VDoc6sh6LwS21x0sXh6jHwtJds7vuOpmLQ8fcyEp1MetxcByf
XcNvZz0exYYcO5fPWI/HeVdB7ZmPWE/A5iDLmoBAdn8CypJCPjzkye5PRHp+
dn/2Q7ZPxOlnC95DNWwvxrHYBsXCHtbFmPN7JHLOYj0JVppGTYyI9SRMHnRq
fuLBejICBip/Ozo1SD0Z1fzq0he9ZC4Foz4xuUsVrKfgmGml+wfOrEugN5q2
inoHqEvwui5a2mIgc6lYXtjUtcin55EKXcfaiHI9ez4V/VMhm9ziyYZUZHyu
M8X2PaK9FA3NlgWrviZDCpmgzkq2mqyVwoV/6aZtx0PaS3F7/vvEvDwyJ8P+
rIODR2zJkMF73XRvRLeJ9jLMTidEzxwnG2TYZRadEbqNzMnRdHP3bLsNGXJ0
+++UtrX1014OrsXXoqCMbJBDcNK8iPcxmVNAFyzfttqeDAUcul21ywf7aK+A
dUXrkbZOskEB91FTd3QrmUuD3T59420NGWnIlq19a18g26fBpV6gG55+QPs0
SKNG0o2jZE4J6fOe8O7LZCjhI8xd4ZVH1iph1iB2aPRheyVyv/n1Pm+ml/Yq
9KRsDl7/nAwViptb7311haxVwUnFuaCEbFDhaovfRJaE7dW4KF92X7OD7dWQ
9SiKvmVdq0aVQBbgtILt1fDV3Dp6gWP79+B4r9h+wmiM/AdP9NXN
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJw1znssnXcYB/BTYkWlIzFDrClxXDp1isNoXb4c1O3g3Jwjo1aXNVG6Gdr+
QZxizUY205apdTXajV6mW4nQNUO1zRjV2XTmUqqqF2xtqbvalj7Pm7x583m/
v+/z/KwTP5Cn6AgEguT/3v+/r56nftqV9fX1jXN+9AOyYl+T/E/18Yr6qHad
mJeubiAbYyrxsFH39AqdN8WFsfsnLy/Mk80R+8/wwR4Fz7PCm7fX9FP8n5O3
Qr6/JO6E+CnZBiPnr7RkurFtkfdTaLFh1AzZDgXbo5K/bX9CdkC22XtnLjVy
vg0mNdJqQckU2Qkbt9zMrp58THaGyx2x9VTLI/IO2L08/HXX2kOyC+Iaer8v
/maS7Ioyp1FVzdgDsht+zvO/u9WdczFaPtcY7Unn3B1uZxvnhAcmyB4QuVbY
toL9Do7UnTBr8GB7Yktgx3rEoftkL1TH2N7SNWXvxNtHNV/llIyTd+Hj2mav
IUu2N8y8SyqnJ++RfRARa7+pVcP2hXpjlmfSrTGyH3rDnGVFupwDg+H5j7y0
lGuBTWeqhrNc+bw/LB17hTctOPeH+XFHnxXZKOUB2J97e3Hfi7uUB+BGfn1k
eTZZIIHIpqFjzJFzCZr3/l02UDpCeSAakzTdn8WRtYHwGU4JTfXmPAhqhWpR
fH2Y8iBkZMSXiZ+RBcFIWBL2HXjAeTCc5OvXL/VxvhsIyx7sTOd8N7ycirrs
ng9RHgLpoeyhdwN4fwjM4lui53t4fyhG/ijcEKTgPBTmteVSj36eHwaD9u1y
fxXPD0N8nmFJTR/PD8cOkWTJ8CRZG463Lktfv2rBeQT6JNmdM7acR2BncuFV
nfZByqX4RblrNfcUWSvF8nd69kJvziNhWSKxbmNrIzFnZ/2rtS/nUdC32mw8
Mf4X5VG4oRjQGk2QBdEwP9btrHKl84jGsdUK032rfD4aFsIrmxMqyG3RWCh6
3JrWw30Zps/NGJumcl+GNJ0mbeknfB8Z6gpRn55DbpNB/EXnaWUg30+O363c
B48/pHmQ48NzNYVWvE8rh297gqczeL8cR5Yzz+ZY8n4FVi6mvFE/O0B9BZTC
157NVpO1Coxn/tZRVUluU6DSPOlFtIwsUGKm3ODekD33lShIbKgJWfuT+kqc
/2hGvuzAfSUy0kR7L6i4r4JMpIpsAvdVqG96PzjAn/er8OTaxMWEJO6rsC3r
4JenhdyPQbHe0IrOBO1DDPoNZiNHq3h/DCIkhmrrPeS2GFhYllrW5pIFaqQa
GQeJwX01HFrjSqsF3Ffjx2anl0vX7lBfjTrdrHLTo2SBBqd+sGnXiyBDA5dF
oUmXCVmrgY9KIq6QcV+DeL2CQJGI+7Ewdy7WVS70+/0LqZ7Ynw==
             
             "]]}, {}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 100.}, {0, 4.494609375000039}}, PlotRangeClipping -> 
         True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["\"Number of\\n UP-samples\"", TraditionalForm], 
           FormBox[
           "\"UP-sample uncertainty\\n (meV/atom)\"", TraditionalForm]}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 600, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 100.}, {0, 4.494609375000039}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"4.685`", "4.73`", "4.759`", "4.801`", "4.85`"}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {967.5, -189.}, {
     Center, Center}, {360., 360.}]}, {}},
  ContentSelectable->True,
  ImageSize->2050,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.687090687071209*^9, 3.687090726415307*^9, 
  3.687090812231489*^9, 3.687090868037558*^9, 3.687090964288877*^9, 
  3.687091253357259*^9, 3.687707339135955*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"13.040487314355836`", "3.19962565309823`", "0.3183746519582664`"},
    {"7.279760210396639`", "3.2715498877817097`", "0.32553138079701177`"},
    {"2.69993966584096`", "2.8990494331259997`", "0.2884662002217557`"},
    {
     RowBox[{"-", "0.6735457920798429`"}], "3.5864746723709735`", 
     "0.3568675680755305`"},
    {
     RowBox[{"-", "5.609633353959961`"}], "3.449325486841997`", 
     "0.34322071405469634`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.687090687071209*^9, 3.687090726415307*^9, 
  3.687090812231489*^9, 3.687090868037558*^9, 3.687090964288877*^9, 
  3.687091253357259*^9, 3.687707339196261*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"edist4", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"EstimatedDistribution", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"dft4", "-", "meam4"}], ")"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"SkewNormalDistribution", "[", 
        RowBox[{"\[Mu]", ",", "\[Sigma]", ",", "alpha"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"edist4", "//", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.687091318434122*^9, 3.6870913507390738`*^9}, {
  3.687091753599188*^9, 3.687091765757844*^9}, {3.6877073805913467`*^9, 
  3.6877073889730883`*^9}, {3.687707685971327*^9, 3.68770771335833*^9}, {
  3.687707746964087*^9, 3.687707762855391*^9}, {3.687707793046335*^9, 
  3.6877077933833847`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "FindRoot","cvmit",
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"",2,148,59,29319468004107087619,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.6877073986257553`*^9, 3.6877077168742332`*^9, {3.6877077543069067`*^9, 
   3.68770779671586*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"SkewNormalDistribution", "[", 
       RowBox[{"19.966157889821368`", ",", "7.622192449693218`", ",", 
        RowBox[{"-", "3638.3688578610095`"}]}], "]"}]},
     {
      RowBox[{"SkewNormalDistribution", "[", 
       RowBox[{
       "4.893238831190923`", ",", "4.0364033844211935`", ",", 
        "1.1085926422417602`"}], "]"}]},
     {
      RowBox[{"SkewNormalDistribution", "[", 
       RowBox[{"4.508252326605912`", ",", "3.404595357178386`", ",", 
        RowBox[{"-", "0.8918584378229211`"}]}], "]"}]},
     {
      RowBox[{"SkewNormalDistribution", "[", 
       RowBox[{
        RowBox[{"-", "3.6572448878428827`"}], ",", "4.651656308076889`", ",", 
        "1.3474701970995417`"}], "]"}]},
     {
      RowBox[{"SkewNormalDistribution", "[", 
       RowBox[{
        RowBox[{"-", "3.1161209994814896`"}], ",", "4.242363694635143`", ",", 
        
        RowBox[{"-", "1.083464901301835`"}]}], "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.687091336020834*^9, 3.6870913524005747`*^9}, {
   3.687091760322653*^9, 3.687091766781468*^9}, 3.6877073995860233`*^9, 
   3.687707717857973*^9, {3.68770775529545*^9, 3.687707767705699*^9}, 
   3.6877077978283567`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"edistn4", "=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"EstimatedDistribution", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"dft4", "-", "meam4"}], ")"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], "//", 
   "TableForm"}]}]], "Input"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"13.040487314355836`", ",", "3.1837465195826637`"}], "]"}]},
     {
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"7.279760210396639`", ",", "3.255313807970118`"}], "]"}]},
     {
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"2.69993966584096`", ",", "2.8846620022175564`"}], "]"}]},
     {
      RowBox[{"NormalDistribution", "[", 
       RowBox[{
        RowBox[{"-", "0.6735457920798429`"}], ",", "3.568675680755305`"}], 
       "]"}]},
     {
      RowBox[{"NormalDistribution", "[", 
       RowBox[{
        RowBox[{"-", "5.609633353959961`"}], ",", "3.4322071405469634`"}], 
       "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.68770780161668*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.687708062584268*^9, 3.6877081064507723`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
     LineBox[CompressedData["
1:eJwUVnc8V98fRjaVvffee/vcc46ECCmrrERmVooG4hsJKbJCREahlCTK+hyl
0rI3KVsJ2cno5/fXfT2v53k/5z3Ovfct6hZ4zIOKgoLiOjUFxf+f5kLyc//+
qeO7YzwX9SbH9Zx+7gQ92VTHBtXHk5loJvX8qjtXnNbVse+ZP5HrGlN6iZaX
t17Nq2OKqajRhpYZvc9XPjCd/6qODw/du683PK9n/s1LbqZWHVdG7M8RmljX
M88v8moPUcctPObDA2HM+ofFhMbyZ9VwuX901bc2df1pObFiKqyKJbvOHL2k
dF2fjyHZFpaoYK3Pi4vBY536olk/OhbllXHqoKguayMvyUS2J22qXwGrKj3U
ymE6Tco5naZ2u1wOH11t+rht+4D05EfYuGyRHM7ua8zs9X9IwgHuaa+z5bDN
lRgqhdQS0uRFtbXl63JYPLGMNE7/iKR0s/2VnZscFpbbOK/iUEHCL5gNBLjl
8Klxw/jgiRpSp97KYtVeOdxtMGF+ivkVaYI8VGBBLYdLCzNI3gdqSQwfy6gj
F2VxpaxFsu9QPenYyKGW0U+y+M1Ou9WIbxPptLvKpcuvZTF4dPO+o8FrUugM
txz7K1kclF2ZSiH2hpS9NHXj4ANZvJLjz/poz1vSOO21Iw+jZHF+GWOLnP0H
kgK/ODujoyy+qUP6E5nQSjqv3NTrpymLL6w+Eafx6CQ1GJ7Mbtsvi/VUFVlP
S/aSaI9vO6v9lMHy3Pkq28WDJDm3z2T3Phk8xZogMKn7lXTE765oerMMfvnq
RZgR7XfS+VDf6HfPZLBPQQ6YvD1KyozSnVy/J4OLxsy9qA3HSfUJ9CayiTKY
fz7OXURwkjSa1lficEkGvxLw0qCXmCbR5j1gTPSUwWcrFmvHHX+Q5EpD/Bqs
ZfBxnqAS/Q+zpALR8znGBjKYz1Q4ft/peRJ/dvDnNiUZ/PFN4Ampe79JaWxn
t44LyGDGHfefTfJLJOYbgQpjDDI45NLjvm9fl0nX9gQ4nVmXxmEdNDEfa1ZJ
O2F+iSsT0hi4p7/lalgnha741kd0SuNu8oh92eIGacHP5xctlsYc4ucHXp/Y
InlPegkkl0vjAxKLrtsbO6Tvzp7mvHel8dXmEYensxSEQLbHxNfb0thG7vWG
3VNK4kTv6fCCOGm81cEk+CSMiui0dH8sHyqN7xRFfFxSpib23XA7+NtPGge+
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
E/0f5DeGOw==
      "]], LineBox[CompressedData["
1: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
N3J8CcnY+IW1IDrubnb5N2jlQ/wfsebH9g==
      "]], LineBox[CompressedData["
1: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
5OTp/wPIzRgf
      "]], LineBox[CompressedData["
1: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
f0FA7/eVoZcMOzvXEmSj
      "]], LineBox[CompressedData["
1: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
S+Y3v0OPmD19Pem7rgC/C22bPBGjRqZ5Q8qGtxXgYnb2QKYkFeKZoXubuKcA
j1pXsDVFSiTy3sTpjROK0LzCrSHKgwJ55Otd95pWEeLLbjZ+aCVHah0pzH3Y
FKEmNZ2HAfEE0mfycB3PpwgDstf1+96SIvMQl7wmpghFuWIbVb1JEE5+y483
VBRhoAXDtpHYvgaOftUdp6kIvc/PcVlS/9M4dxBB8eecImT8Qf4VZd/RcFzm
LK4wVYT8m2dcOXS3NYK+lml6WSlCg4Pzw8ScTY3Ubq0pOWdFWJ390oONbkOj
pOHz7RVPRXiujlr2v7w1jYks0vproYoweSetg5RnRaO7P/Q6abQilFlFDQam
ljQaTu2LZCQpQpwQa0xA7y+N5+DWV4kHivBsoRNxc2ZeIzNgO6W5QBE2M9g8
ucX1U8Nn/s/h91eKMM3oVI/r71mN85eX/qPpUISfn1nQpxOnNWTez40RPinC
Gb+0i70NXzUolae1LecUoVBUaN127WeNuadfXt/dVoTdY/f3X+t80njDPsL/
4pQSVEy51mlvNqiRH9UfP8CpBOO61Sz9c3s1bm937f6VVIIcj818l851afim
Uo5oyinBUbl/FMLnP2hcldOtvE9QgmLsLay/bd5rWLi+deVXV4KlHp+LPma+
01AcbR3WMVSC+j3uOV6ebzRWaqrKMq4rwaLYa9+e9DZqPM94Hv0jWQnS7biv
VwRUaST8Lre7n6EEhW4wv35R9FrDR7tGmZCjBP3v8k5Ej73SUN9qnw8rUoJ3
CnDUIVaVGn1mX3W5a5Xgjgtd6/CtEo1NFnpK069KUGeCXOudZZEGTPWNaRNV
hi36eKterjQN0cVb9q5SyrDsyXWyGJ1UDWqtOyp08soQl5vJciU4RWN4LX7B
UkUZLgjceOR7kKThavJUb1tfGXLIpss7vIvTiGccp5S9oQx11hRaRRrCNT4n
orE5jcqw+2J74riyj4YrSNpaa1WGrhfZNX/5e2tsrk45nOtQhtUB04HjLTc0
GE3uqu18VIaF+9MdxLfXNfRZ3i6Zf1OG5apfeP/99dBoyTpnzESiAvlv+vtX
BzlqFBWYscRoq8B1Le7+RwWmGl6vr+b5DahAD/nIfqs0gsZ/g5Hfkw5UIbPx
xre5qUV1YZqXOrKi6nBFoO46vPJY/ayXc/Oqigb8q/N8KWHbSv1DH53zmhMC
B2FNFW0YnXqNhREfZzAKzeYb9tLT2tVsDzK22uMBbJ8NE5zVuqlW0+caNmIJ
IcPtBcqlJH61P1VGCdZzEPbMhmz3X+9RtRle53o/D6Gy1AtFi1fdqt3rWc/x
ixDGvbvAtk7fpVqMn+2gWIVQnoe5com1U/Vyhf+/yh0Ii/rcx9lE2lVbX+a7
naTVhGqPLg3dL6hWvV+4pllO0ITxzlO3H7/OU93BMvs5FTVhScx4tPeXh6rO
0+o2Ecqa8JwGTao9f44qyh8VaKGhCbeNSIaydjNV13O5Ksh0NKH6mzqGjY4U
VYsHZ3guX9GEK2mEg2qlSNV3dQsv2q004RAz35312QhVwucEZRnbY3+z/14a
Foer0rKPmZI6acJrKqEOig53VNvSPGNLPDWhS6Q561m9W6oyVUwc7F6acKJx
kmv6VYDqg6Ha4jvemtBE2Dnok4K/qg8TKWburwnThu3Cs+74qk7hnhphgZrw
yt2zTPd1fFQNLxh8lQrWhPVXP4zxCnirNnj9cc8I0YT8Rw6inLQ3VMWSMraP
wjTh/EDan5fM11X/B+JaXXk=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-20, 35}, {0., 0.13829724179729355`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6877080589049377`*^9, 3.687708103248413*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ldata4", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"dft4", "-", "meam4"}], ")"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"vols", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "Above"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"ldata4", ",", "20", ",", "\"\<PDF\>\"", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Up-sample\>\"", ",", "\"\<Distribution\>\""}], "}"}]}]}], 
    "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"edistn4", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "x"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "20"}], ",", "35"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.687091389750544*^9, 3.6870914000684357`*^9}, {
   3.687707608982469*^9, 3.687707616097848*^9}, 3.687707771158052*^9, {
   3.68770783025263*^9, 3.687707833110394*^9}, {3.687707928243952*^9, 
   3.68770795937286*^9}, {3.6877080136095552`*^9, 3.687708041919847*^9}, {
   3.687708110303445*^9, 3.687708130141769*^9}, {3.687708161119306*^9, 
   3.687708165524238*^9}, {3.687708211496705*^9, 3.687708226127131*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.567], Thickness[Small]}], {{}, 
      {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{Opacity[
       0.567], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0., 0.}, 
             NCache[{2., 
               Rational[1, 202]}, {2., 0.0049504950495049506`}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{279.8679767343287, 315.1251942730656}, {
            173.81708596513653`, 185.03731487145862`}}],
          StatusArea[#, 0.0049504950495049506`]& ,
          TagBoxNote->"0.0049504950495049506"],
         StyleBox["0.0049504950495049506`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.0049504950495049506`, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{4., 0.}, 
             NCache[{6., 
               Rational[1, 202]}, {6., 0.0049504950495049506`}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{349.3824118118024, 384.6396293505393}, {
            173.81708596513653`, 185.03731487145862`}}],
          StatusArea[#, 0.0049504950495049506`]& ,
          TagBoxNote->"0.0049504950495049506"],
         StyleBox["0.0049504950495049506`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.0049504950495049506`, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{6., 0.}, 
             NCache[{8., 
               Rational[2, 101]}, {8., 0.019801980198019802`}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{384.1396293505393, 419.39684688927616`}, {
            141.65639924617025`, 185.03731487145862`}}],
          StatusArea[#, 0.019801980198019802`]& ,
          TagBoxNote->"0.019801980198019802"],
         StyleBox["0.019801980198019802`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.019801980198019802`, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{8., 0.}, 
             NCache[{10., 
               Rational[7, 202]}, {10., 0.034653465346534656`}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{418.89684688927616`, 454.15406442801304`}, {
            109.49571252720396`, 185.03731487145862`}}],
          StatusArea[#, 0.034653465346534656`]& ,
          TagBoxNote->"0.034653465346534656"],
         StyleBox["0.034653465346534656`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.034653465346534656`, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{10., 0.}, 
             NCache[{12., 
               Rational[10, 101]}, {12., 0.09900990099009901}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{453.65406442801304`, 
            488.9112819667499}, {-29.867263254983243`, 185.03731487145862`}}],
          
          StatusArea[#, 0.09900990099009901]& ,
          TagBoxNote->"0.09900990099009901"],
         StyleBox["0.09900990099009901`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.09900990099009901, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{12., 0.}, 
             NCache[{14., 
               Rational[33, 202]}, {14., 0.16336633663366337`}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{488.4112819667499, 
            523.6684995054868}, {-169.23023903717043`, 185.03731487145862`}}],
          
          StatusArea[#, 0.16336633663366337`]& ,
          TagBoxNote->"0.16336633663366337"],
         StyleBox["0.16336633663366337`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.16336633663366337`, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{14., 0.}, 
             NCache[{16., 
               Rational[9, 101]}, {16., 0.0891089108910891}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{523.1684995054868, 
            558.4257170442236}, {-8.426805442339031, 185.03731487145862`}}],
          StatusArea[#, 0.0891089108910891]& ,
          TagBoxNote->"0.0891089108910891"],
         StyleBox["0.0891089108910891`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.0891089108910891, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{16., 0.}, 
             NCache[{18., 
               Rational[11, 202]}, {18., 0.054455445544554455`}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{557.9257170442236, 593.1829345829606}, {
            66.6147969019156, 185.03731487145862`}}],
          StatusArea[#, 0.054455445544554455`]& ,
          TagBoxNote->"0.054455445544554455"],
         StyleBox["0.054455445544554455`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.054455445544554455`, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{18., 0.}, 
             NCache[{20., 
               Rational[3, 101]}, {20., 0.0297029702970297}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{592.6829345829606, 627.9401521216973}, {
            120.21594143352607`, 185.03731487145862`}}],
          StatusArea[#, 0.0297029702970297]& ,
          TagBoxNote->"0.0297029702970297"],
         StyleBox["0.0297029702970297`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.0297029702970297, {}], "Tooltip"]& ]}, {}, {}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{
       Opacity[0.567], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0., 0.}, 
             NCache[{2., 
               Rational[5, 202]}, {2., 0.024752475247524754`}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{279.8679767343287, 315.1251942730656}, {
            130.93617033984816`, 185.03731487145862`}}],
          StatusArea[#, 0.024752475247524754`]& ,
          TagBoxNote->"0.024752475247524754"],
         StyleBox["0.024752475247524754`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.024752475247524754`, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{2., 0.}, 
             NCache[{4., 
               Rational[6, 101]}, {4., 0.0594059405940594}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{314.6251942730656, 349.8824118118024}, {
            55.89456799559352, 185.03731487145862`}}],
          StatusArea[#, 0.0594059405940594]& ,
          TagBoxNote->"0.0594059405940594"],
         StyleBox["0.0594059405940594`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.0594059405940594, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{4., 0.}, 
             NCache[{6., 
               Rational[9, 101]}, {6., 0.0891089108910891}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{349.3824118118024, 
            384.6396293505393}, {-8.426805442339031, 185.03731487145862`}}],
          StatusArea[#, 0.0891089108910891]& ,
          TagBoxNote->"0.0891089108910891"],
         StyleBox["0.0891089108910891`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.0891089108910891, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{6., 0.}, 
             NCache[{8., 
               Rational[23, 202]}, {8., 0.11386138613861387`}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{384.1396293505393, 
            419.39684688927616`}, {-62.02794997394952, 185.03731487145862`}}],
          
          StatusArea[#, 0.11386138613861387`]& ,
          TagBoxNote->"0.11386138613861387"],
         StyleBox["0.11386138613861387`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.11386138613861387`, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{8., 0.}, 
             NCache[{10., 
               Rational[23, 202]}, {10., 0.11386138613861387`}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{418.89684688927616`, 
            454.15406442801304`}, {-62.02794997394952, 185.03731487145862`}}],
          
          StatusArea[#, 0.11386138613861387`]& ,
          TagBoxNote->"0.11386138613861387"],
         StyleBox["0.11386138613861387`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.11386138613861387`, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{10., 0.}, 
             NCache[{12., 
               Rational[6, 101]}, {12., 0.0594059405940594}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{453.65406442801304`, 488.9112819667499}, {
            55.89456799559352, 185.03731487145862`}}],
          StatusArea[#, 0.0594059405940594]& ,
          TagBoxNote->"0.0594059405940594"],
         StyleBox["0.0594059405940594`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.0594059405940594, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{12., 0.}, 
             NCache[{14., 
               Rational[7, 202]}, {14., 0.034653465346534656`}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{488.4112819667499, 523.6684995054868}, {
            109.49571252720396`, 185.03731487145862`}}],
          StatusArea[#, 0.034653465346534656`]& ,
          TagBoxNote->"0.034653465346534656"],
         StyleBox["0.034653465346534656`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.034653465346534656`, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{18., 0.}, 
             NCache[{20., 
               Rational[1, 202]}, {20., 0.0049504950495049506`}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{592.6829345829606, 627.9401521216973}, {
            173.81708596513653`, 185.03731487145862`}}],
          StatusArea[#, 0.0049504950495049506`]& ,
          TagBoxNote->"0.0049504950495049506"],
         StyleBox["0.0049504950495049506`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.0049504950495049506`, {}], "Tooltip"]& ]}, {}, {}}, {{}, 
      {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{
       Opacity[0.567], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-6., 0.}, 
             NCache[{-4., 
               Rational[1, 101]}, {-4., 0.009900990099009901}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{175.5963241181181, 210.85354165685496`}, {
            163.09685705881444`, 185.03731487145862`}}],
          StatusArea[#, 0.009900990099009901]& ,
          TagBoxNote->"0.009900990099009901"],
         StyleBox["0.009900990099009901`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.009900990099009901, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-4., 0.}, 
             NCache[{-2., 
               Rational[3, 202]}, {-2., 0.01485148514851485}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{210.35354165685496`, 245.6107591955918}, {
            152.37662815249234`, 185.03731487145862`}}],
          StatusArea[#, 0.01485148514851485]& ,
          TagBoxNote->"0.01485148514851485"],
         StyleBox["0.01485148514851485`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.01485148514851485, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-2., 0.}, 
             NCache[{0., 
               Rational[6, 101]}, {0., 0.0594059405940594}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{245.1107591955918, 280.3679767343287}, {
            55.89456799559352, 185.03731487145862`}}],
          StatusArea[#, 0.0594059405940594]& ,
          TagBoxNote->"0.0594059405940594"],
         StyleBox["0.0594059405940594`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.0594059405940594, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0., 0.}, 
             NCache[{2., 
               Rational[10, 101]}, {2., 0.09900990099009901}], 
             "RoundingRadius" -> 0]},
           ImageSizeCache->{{279.8679767343287, 
            315.1251942730656}, {-29.867263254983243`, 185.03731487145862`}}],
          
          StatusArea[#, 0.09900990099009901]& ,
          TagBoxNote->"0.09900990099009901"],
         StyleBox["0.09900990099009901`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.09900990099009901, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{2., 0.}, 
             NCache[{4., 
               Rational[15, 101]}, {4., 0.1485148514851485}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{314.6251942730656, 
            349.8824118118024}, {-137.06955231820413`, 185.03731487145862`}}],
          
          StatusArea[#, 0.1485148514851485]& ,
          TagBoxNote->"0.1485148514851485"],
         StyleBox["0.1485148514851485`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.1485148514851485, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{4., 0.}, 
             NCache[{6., 
               Rational[11, 101]}, {6., 0.10891089108910891`}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{349.3824118118024, 
            384.6396293505393}, {-51.307721067627426`, 185.03731487145862`}}],
          
          StatusArea[#, 0.10891089108910891`]& ,
          TagBoxNote->"0.10891089108910891"],
         StyleBox["0.10891089108910891`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.10891089108910891`, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{6., 0.}, 
             NCache[{8., 
               Rational[3, 101]}, {8., 0.0297029702970297}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{384.1396293505393, 419.39684688927616`}, {
            120.21594143352607`, 185.03731487145862`}}],
          StatusArea[#, 0.0297029702970297]& ,
          TagBoxNote->"0.0297029702970297"],
         StyleBox["0.0297029702970297`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.0297029702970297, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{8., 0.}, 
             NCache[{10., 
               Rational[3, 101]}, {10., 0.0297029702970297}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{418.89684688927616`, 454.15406442801304`}, {
            120.21594143352607`, 185.03731487145862`}}],
          StatusArea[#, 0.0297029702970297]& ,
          TagBoxNote->"0.0297029702970297"],
         StyleBox["0.0297029702970297`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.0297029702970297, {}], "Tooltip"]& ]}, {}, {}}, {{}, 
      {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.5], EdgeForm[{
       Opacity[0.567], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-10., 0.}, 
             NCache[{-8., 
               Rational[1, 202]}, {-8., 0.0049504950495049506`}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{106.08188904064434`, 141.33910657938122`}, {
            173.81708596513653`, 185.03731487145862`}}],
          StatusArea[#, 0.0049504950495049506`]& ,
          TagBoxNote->"0.0049504950495049506"],
         StyleBox["0.0049504950495049506`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.0049504950495049506`, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-8., 0.}, 
             NCache[{-6., 
               Rational[3, 202]}, {-6., 0.01485148514851485}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{140.83910657938122`, 176.0963241181181}, {
            152.37662815249234`, 185.03731487145862`}}],
          StatusArea[#, 0.01485148514851485]& ,
          TagBoxNote->"0.01485148514851485"],
         StyleBox["0.01485148514851485`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.01485148514851485, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-6., 0.}, 
             NCache[{-4., 
               Rational[17, 202]}, {-4., 0.08415841584158416}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{175.5963241181181, 210.85354165685496`}, {
            2.293423463983032, 185.03731487145862`}}],
          StatusArea[#, 0.08415841584158416]& ,
          TagBoxNote->"0.08415841584158416"],
         StyleBox["0.08415841584158416`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.08415841584158416, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-4., 0.}, 
             NCache[{-2., 
               Rational[9, 101]}, {-2., 0.0891089108910891}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{210.35354165685496`, 
            245.6107591955918}, {-8.426805442339031, 185.03731487145862`}}],
          StatusArea[#, 0.0891089108910891]& ,
          TagBoxNote->"0.0891089108910891"],
         StyleBox["0.0891089108910891`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.0891089108910891, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-2., 0.}, 
             NCache[{0., 
               Rational[17, 202]}, {0., 0.08415841584158416}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{245.1107591955918, 280.3679767343287}, {
            2.293423463983032, 185.03731487145862`}}],
          StatusArea[#, 0.08415841584158416]& ,
          TagBoxNote->"0.08415841584158416"],
         StyleBox["0.08415841584158416`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.08415841584158416, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0., 0.}, 
             NCache[{2., 
               Rational[19, 202]}, {2., 0.09405940594059406}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{279.8679767343287, 
            315.1251942730656}, {-19.14703434866115, 185.03731487145862`}}],
          StatusArea[#, 0.09405940594059406]& ,
          TagBoxNote->"0.09405940594059406"],
         StyleBox["0.09405940594059406`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.09405940594059406, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{2., 0.}, 
             NCache[{4., 
               Rational[17, 202]}, {4., 0.08415841584158416}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{314.6251942730656, 349.8824118118024}, {
            2.293423463983032, 185.03731487145862`}}],
          StatusArea[#, 0.08415841584158416]& ,
          TagBoxNote->"0.08415841584158416"],
         StyleBox["0.08415841584158416`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.08415841584158416, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{4., 0.}, 
             NCache[{6., 
               Rational[5, 202]}, {6., 0.024752475247524754`}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{349.3824118118024, 384.6396293505393}, {
            130.93617033984816`, 185.03731487145862`}}],
          StatusArea[#, 0.024752475247524754`]& ,
          TagBoxNote->"0.024752475247524754"],
         StyleBox["0.024752475247524754`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.024752475247524754`, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{6., 0.}, 
             NCache[{8., 
               Rational[1, 101]}, {8., 0.009900990099009901}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{384.1396293505393, 419.39684688927616`}, {
            163.09685705881444`, 185.03731487145862`}}],
          StatusArea[#, 0.009900990099009901]& ,
          TagBoxNote->"0.009900990099009901"],
         StyleBox["0.009900990099009901`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.009900990099009901, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{8., 0.}, 
             NCache[{10., 
               Rational[1, 101]}, {10., 0.009900990099009901}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{418.89684688927616`, 454.15406442801304`}, {
            163.09685705881444`, 185.03731487145862`}}],
          StatusArea[#, 0.009900990099009901]& ,
          TagBoxNote->"0.009900990099009901"],
         StyleBox["0.009900990099009901`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.009900990099009901, {}], "Tooltip"]& ]}, {}, {}}, {{}, 
      {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.5], EdgeForm[{
       Opacity[0.567], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-14., 0.}, 
             NCache[{-12., 
               Rational[1, 101]}, {-12., 0.009900990099009901}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{36.567453963170635`, 71.82467150190749}, {
            163.09685705881444`, 185.03731487145862`}}],
          StatusArea[#, 0.009900990099009901]& ,
          TagBoxNote->"0.009900990099009901"],
         StyleBox["0.009900990099009901`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.009900990099009901, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-12., 0.}, 
             NCache[{-10., 
               Rational[11, 202]}, {-10., 0.054455445544554455`}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{71.32467150190749, 106.58188904064434`}, {
            66.6147969019156, 185.03731487145862`}}],
          StatusArea[#, 0.054455445544554455`]& ,
          TagBoxNote->"0.054455445544554455"],
         StyleBox["0.054455445544554455`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.054455445544554455`, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-10., 0.}, 
             NCache[{-8., 
               Rational[13, 202]}, {-8., 0.06435643564356436}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{106.08188904064434`, 141.33910657938122`}, {
            45.1743390892714, 185.03731487145862`}}],
          StatusArea[#, 0.06435643564356436]& ,
          TagBoxNote->"0.06435643564356436"],
         StyleBox["0.06435643564356436`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.06435643564356436, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-8., 0.}, 
             NCache[{-6., 
               Rational[9, 101]}, {-6., 0.0891089108910891}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{140.83910657938122`, 
            176.0963241181181}, {-8.426805442339031, 185.03731487145862`}}],
          StatusArea[#, 0.0891089108910891]& ,
          TagBoxNote->"0.0891089108910891"],
         StyleBox["0.0891089108910891`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.0891089108910891, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-6., 0.}, 
             NCache[{-4., 
               Rational[11, 101]}, {-4., 0.10891089108910891`}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{175.5963241181181, 
            210.85354165685496`}, {-51.307721067627426`, 
            185.03731487145862`}}],
          StatusArea[#, 0.10891089108910891`]& ,
          TagBoxNote->"0.10891089108910891"],
         StyleBox["0.10891089108910891`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.10891089108910891`, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-4., 0.}, 
             NCache[{-2., 
               Rational[17, 202]}, {-2., 0.08415841584158416}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{210.35354165685496`, 245.6107591955918}, {
            2.293423463983032, 185.03731487145862`}}],
          StatusArea[#, 0.08415841584158416]& ,
          TagBoxNote->"0.08415841584158416"],
         StyleBox["0.08415841584158416`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.08415841584158416, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-2., 0.}, 
             NCache[{0., 
               Rational[13, 202]}, {0., 0.06435643564356436}], 
             "RoundingRadius" -> 0]},
           ImageSizeCache->{{245.1107591955918, 280.3679767343287}, {
            45.1743390892714, 185.03731487145862`}}],
          StatusArea[#, 0.06435643564356436]& ,
          TagBoxNote->"0.06435643564356436"],
         StyleBox["0.06435643564356436`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.06435643564356436, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0., 0.}, 
             NCache[{2., 
               Rational[2, 101]}, {2., 0.019801980198019802`}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{279.8679767343287, 315.1251942730656}, {
            141.65639924617025`, 185.03731487145862`}}],
          StatusArea[#, 0.019801980198019802`]& ,
          TagBoxNote->"0.019801980198019802"],
         StyleBox["0.019801980198019802`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.019801980198019802`, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{2., 0.}, 
             NCache[{4., 
               Rational[1, 202]}, {4., 0.0049504950495049506`}], 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{314.6251942730656, 349.8824118118024}, {
            173.81708596513653`, 185.03731487145862`}}],
          StatusArea[#, 0.0049504950495049506`]& ,
          TagBoxNote->"0.0049504950495049506"],
         StyleBox["0.0049504950495049506`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.0049504950495049506`, {}], 
         "Tooltip"]& ]}, {}, {}}}, {{{{{}, {}, {}, {}, {}, {}, {}, {}, {}}, 
       InsetBox["4.685`", NCache[
        Offset[{0, 4}, {10., Rational[33, 202]}], 
         Offset[{0, 4}, {10., 0.16336633663366337`}]], 
        ImageScaled[{0.5, 0}]]}, {}}, {{{{}, {}, {}, {}, {}, {}, {}, {}}, 
       InsetBox["4.73`", NCache[
        Offset[{0, 4}, {10., Rational[23, 202]}], 
         Offset[{0, 4}, {10., 0.11386138613861387`}]], 
        ImageScaled[{0.5, 0}]]}, {}}, {{{{}, {}, {}, {}, {}, {}, {}, {}}, 
       InsetBox["4.759`", NCache[
        Offset[{0, 4}, {2., Rational[15, 101]}], 
         Offset[{0, 4}, {2., 0.1485148514851485}]], 
        ImageScaled[{0.5, 0}]]}, {}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, InsetBox["4.801`", NCache[
        Offset[{0, 4}, {0., Rational[19, 202]}], 
         Offset[{0, 4}, {0., 0.09405940594059406}]], 
        ImageScaled[{0.5, 0}]]}, {}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}}, 
       InsetBox["4.85`", NCache[
        Offset[{0, 4}, {-5., Rational[11, 101]}], 
         Offset[{0, 4}, {-5., 0.10891089108910891`}]], 
        ImageScaled[{0.5, 0}]]}, {}}}}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1: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
v0z+D+8Bi2o=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1: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
FxNquJV2A62FqqHmgzcPNV/ZBZWCqiMuJKqhy5WpNhJcVLBu8rJ57w01JH2t
m/Zf5DYwdrPg1UpTQ+P/uFikureAq9XQi5VsNXTshun9wvhNkKK4dz6kbOe+
gu/+Cdz/gEDRF/y1XA1Jqcn3H4hdByUCeckaz9VQZe/e6bW5NfBqr7ricoMa
Uv/Pq1uidxXM/3LxPf9JDQ1dt4/9/WYZ2BVXDpydV0N35xWkp/kXwE/ByMfd
y2por+vhRZ2KeeCXYXJR9Z8aEiqxDaw3nQdXr/TzLtCoo9zKJ3YKUXPghQed
fTCnOmL9sB2Rs+svOPCtQ7yLVx25Xb3PVWP5B3y0uTOvIqSOCtcNKtfuzoIJ
REqZk1JHbdr0j8NMZgCPsGNboNaOvLqIw7nmKVB4WyK7Q08d9UcPZDApTAES
8x9fkr46ir854Prt9i9gthlL99dMHel80trz9fwkCP/+WP/McXU0rZlKm+0w
Dvozd9X4R6kj1U/qNrl3h0G3KrpVHaOO1pLes5SpDoP3n6ICdsWro5M/6/8s
tg2B2j0bEhnJ6mifIc/QPpohcDt0ObU+Tx0ZUw+2OHAMghvs6v50ReqoPDzv
x0f3AXDl6VlT64fqiBKstcX+7AcInvi7NVKhjtzb76XXufUDK4ffp/c2qSNe
MJjuN94HjBdkTexb1NHErRc/DK37AEj2FcttU0ccJ8Trjzb0AoWWsV7yZ3XU
NS7j8jevB9Br/jRyHFNHT6qTywSSvoDtLiHRwl/q6E6paDsT8xewHOC8MTOj
jsJJq/V1aZ/BWPG3ysvL6sheRfYlV2E3eM31RfjhHg00brd/wWKsE9RWsv+b
36uBjlwx9HkQ0QnKLW2/6rFooGSfnLHDHJ0gN+5TUgePBqK03psOsugAF5db
11ZkNVCVeWLkn7IP4Gwa/Rd9JQ0UnqfRorDRDk4pmZRfJ2sgZwnddnurdnDU
u9lbWFcDoftlJO5dbUD9a2O3sYUGus0sA8VT3gGF4M0nKdYaSJGJC8VvtAAJ
Zr1r3+w00IrFSpG2XwtgM65FAc4aKCBJS+aA/Vsw+/zZ44wADeS9Fuq6y6IZ
jNnMJwwGa6CN0XmzpY4m0D9D8pQN1UCXcqYzKo42gTbJJ3wNlzTQuamjV40D
X4OSjJL40RQNNLY9ud+sEYMbM09cr2dooBv7XxbaWWEQbPRck5ytgVIvfBAC
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
nLyR5UtKRsfOrQQy8Fijy98+q4vk/6Hk05g=
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1: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
YA==
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1:eJwUV3c41t8bRgiVjGRm7/l6X5vP5xzJTERkhpCRkZ0K2busjFB2dtkRej9o
EF+bkGwZSUahMn5+f53rvp7rPPfz3Pdzrus8PLZ3DG+RkZCQsJOTkPz/1OUU
+3F0RMA0PR+eFXzljFquHnq8/EfATuabkyWY3UZdGwZ/We4SMIbbZ8iVqVzQ
eL37+03rBEx2h6nxvZcr2hPUdcrnKwGjH/hFVv7wDjqp8yyBd5yAjSfXtKcJ
eaBr5z0ZB4YJWKUpr+b3JA/09CsWdskeAhbqumL0yN0T1Z12FF1+Q8C4KiTz
wrW9Ucty5ZdpDQRs6OONuoqP3qjr3bN49RoCdnhl7uKGlg8af/a1Yn4pATu9
of+AydgX7QGU2pYZBMxin1uTLO0uOnlqoofmCQGT8NG4LCHlj659rrzalEDA
pGzaKs/3+KOnPYxNz0cd4y9XNoPo76O6uYWO/b4EbNilcU3pvwDU0tX/e5An
AaOitSH5HhmIuiro3pFwI2DWX0mX2dWD0Pj+bb9YewJWw0dJ5tr3EO0hUYu8
dI2A5cIcEreEEHSy5zzNth4Bo3lsX9l/FIKuZaw+ytMhYAi3a/GyVyh6Wjo5
9VCVgJ0rk6v1vRmG6t6cLWzEEbCzsq9Cxm9GoJYS9cKO4sf61VSk16xEoK5/
oiuYhAnYbmvTbJdPJBqfhKvz4iJgeoFfbY6eRKE9bQ87xGkJ2O9HNF21RzHo
5KNrml+oCdjjRNt7pQWx6JqZUHcMBQFb3BDHh1yOQ09v9Q5+28djTOmzetLF
8ehlXs653O94bLb09opIUgLqjhd13vqGxwSkAkO7CYlo4kW5DbU5PDYa3l7f
mpeIDtvqHX4bw2NWJW/zWSOTUKuCIDaJD3iMQTFB7YVXChpcG5sX1IbHXvmF
n3z5OwUt6EgT7m/BYyyqLy0pAp6gy/Mv5bxr8Ri+TOfE7+RU1It/2rApF48F
33ClIqylo09kvo/TZOMx/atX/9HGZ6CvL+3aWKbjsaWTUgPfpZ6i+/Zn7xw9
wmM7t9sraMIz0cgiEKf+AI9dityMf2nzDC2pv8yQ7nccl3O+bM33HO1+b/J0
2ROPcUkrMi6uPkfpvt0pjnPCY41PxIhel3LRp4K5HQPGeIzjHt3bU2T5aItc
hQ6fAR7L/f3yh71/Pjql0Tjgo4vHxNrFdYs381Fex/5pZjU8Zi5N7JX4UYBW
FJPs38Dhsbt1OylqNC/Q3tenw16J4TFCO+HK4tMX6OZHFhpSITwWkWUpelKi
GJVbxrEUXsBjihcXlzmtSlBM+KbMKg0es3iuWkS6XobOKbg1K1PisdZUgxzy
7HKUQvvexUekeOzHAZWusl4FquOcdBW3J40pZ0WeLSZWosOlba5+i9LYM7si
8mLXKnSn6b/tjzPSmOP15w4zI1Uo66fx+6yT0lhxjrzcc9Vq1Gp1M7plUBpz
mJEkneOuQZdEeYvIMGmsoYrCRoGkDrWZm08vaJbGflfaub31q0PHnhbFXnot
je2MBbnN/6xDP1GJeES+lMYe3Dz6enG1Hn35TUqZ5pk0xrhIGrJN0ogKPd+U
KM+QxsxQXo1TjxvRXONabt0n0phP3/tqJc4mNOmdHOXjuON84HYmr9Yb1Ccf
GaC/L40Z3OPp2+1oQX+YHXXU+EpjH/4rbCl3aUUd6Nsarnke49E4RXLmt6hJ
8KXsVCdprKyV/+CnPxFVsrrsyGoijQ1cYO7YlG1DSdjMDrhlpDF+wrpSdOI7
9N4A20ablDRWKsn13JvyPboVPTlnKyaNpfPcWp0Leo/O71p3FvJKYxtsBU4h
dz+gH0YcUoTppTH/R9+ZFGM6UfBIOLLr9HE/l0/Ktp7rQhsvrfrfppLGhF+X
issUdKFltW5WFUc4zP7Cgah81yf0UZKPCG4dh+VtnaTQVv4PpdSW4xhYwWF3
KuIKWWf+Q4NI9mi9FnGYk8CHxhvRvajHnQe/aidx2NsEapPI+T7U6EooUb4b
h3HsK4mL2Q2gbNSJxqAEh/FOJLEHFg+jwtlflXcKcFjUlWsnaphHUDkpMd7K
HByWXWrvLhI7ghoaf1hnSz+u5/S1z6f8RtGYvP2onQgc5iXvKj51ewxNk9Fx
rwzBYcVVPiy31sfQwo/pRvaBOKy0OeVTnM84iv3A8wz64LCV89Qs36Mn0D1F
5zeVdjjMLdNhzXpoEqX8ryHX3hqHreJkeA3dvqLnbMij2C1wGLumhZQ+zRQq
FZlzLcYQh5GX8Y4UXJlGHQZH1uxVcRimz/Ox8mAGHbl9kYuDC4fdrM27F0qy
gM4dJFAMseEw5YOGrUDnBXQj8ev3mPM47Hwag33o8AJ6+rV/4+4ZHNb69qJg
T9UiGk1pVfDijxT2/WblvG/YEloo/ufOuU0p7NxW8sdPB0soZvhEJXRZCvt2
faXP//4yuvv808iNz1JY/4NXz089WEEd5OWpmOqlsCx0Jko98zsaemNwOLRC
CuvZhZVZwmvo8zC3vI0CKWxVucP6RdMaOtJXoNSTLIU9blZpp1n4gV5yonML
85DC+EQj2d5IbKA8T1cGNsWksFj0K73BxhZqq/m7sIhXChsKUg/0Mt1G83+T
+JuxSmEmS7arL9u3UX5DFs42SilseSI2PO/ZL1TwlObtxFlJzApxaXnivoM6
NBkil8YksSGaLzR1yztosaMV3V6vJFa+Qf7w0q1dVPidb4N1iyT2y8/r/tKt
PVQ0sJBMKl0SI0n1M46K/IveFqsamXskiRmxqJwLZvqHlo83l6SFS2J/1KpD
dYv/oeJyQ3qHnpJYyaxgQ+rQPir1kzTrP11JzCaV98/tq0eozE1rgiuZJIat
Ezn/eJMBn7MulNx/JDCPFNaWOyNkoL7Vb3zopwRGRPuCOxVOADm2xw+Vv0pg
zQ3JtGoU5EBxqKWbplEC01XGHxk3UID7IZ3P376UwFrd2kpHhSjBG6lhT68i
Cey5ial+aBYlUIn/zjyRLIG9/NL5ISTmJEDV2exL3SQwt88WvSoh1CBoW0D+
hr0EZpcpUS5FQQOIedI09BYSmKqiEWduHA2Ah1pV/loS2C1WGUXB3FPg4uu7
+5p8Eti0Ehk/1coZoCky8uTbmDgWI8TsfzOUHsgI6gLFfnHMOs/4O+sIPeDl
61iJ+yiOvfO6Y4SKMIB9jmpUukEca37IRDk3wgBq6B4tP0gRx67fK7FXUj0H
cs6Qp/TGimPUTlN3d3POgXiaBwhPqDhGdK7KvUrCBBzJnZM/eIhjaqNwZuM9
E+DYu6RCryeO3eYV78+7xQxofjd/s1MXx7LaCK92B5jB7iY+qUFFHHOiP2XC
BVnA4HfubxZi4pj3dFoOCS8riJreT3hBJY4VnDScHttnA1sf6uaVO8SwU/i7
JgVMXGC6Q+zx4zdiGEu5pndRPhfowfIVZqvFsFghg/5/LNyg+E3io8hcMcys
Lejd53JuYPnSVX4gUAy75chLlJ3hATrl87N8vmKYM0dSkS+OF8iXmMf7uYph
12KjfMhCeQFDvtYsu4UYFqOTdvO8CB/4mMof56AghjFHaZ2vi+IHdclZsk1S
YlilzRPPpTl+kJ/AMHNKSAyzNPgcnQgEQEAMiWw1kxiWkJeXYnYgAPCBk1P/
tkSxvqKGKNs4IZBt/wSfVCmKJTS9jXDYEQUvVx7MixSKYqybr11jfcUA5m73
pD1TFFP79FlvZEcMLPrjd7ajRDFVDiyVlEQCSD7qb7puK4oFl2npF0lIAcjQ
ePunqSjGTmvvuflWChim57BH64tiFa4fdIxFcOBunntgk4oo1mmSGPMOwwGs
/rQqB7MoVjo/v0pyJA0GlX5t1p0RxXK6l5hmDPBggfgl/wq5KObCIhXC8QIP
qD+VkT/cFMFoE+gL2wwJwHBKq3O2WwSbYAsIvdoqA+YpI/SLg0WwLb6mS9cm
5cFOnCsJvCuCvYM5kUmaCoCK3qh6zE0Ey6VaW46sUwDi7HyMNBYi2MKnht+v
UhSBj1TbqKusCKah1JRb6agMIutKoijERbBVx08j12eVQYZiosJzXhEswJFh
edVSBbSqWWf2nRXB7ntd/LVuhgBK04Mb+FVhzN++Aoq6AsDydYG2e0YYC4tP
cvnxGwBR2x6i3WdhTFTkAf0qhEDfNYsn9Z0wli7OcZqpH4KMYMXF3efC2EuO
2N1v/1SBaKmva+s1YeyvINb5O/4ScFj0IQ/VEcY8Kr0sJOYvgXwen2wNVWEs
ruAiV7mSOmDP9OrpkxTGgqpmSWN/qIPTcXfE56iFsZW++4xX7DTBT1fnNUpM
CJP0iLvZk6wDxEudwrsbhLAHvhH5vkc6wGnRkSOxUggTos02rHS7DGZuOOiy
ZglhyvUhxV/0dMGgnl2FmJ8Q1hX43BLj1wN1uBuuV8WFMD59kaOn9AZgw9WS
nIlPCDO8OpqQamwAJEotssdZhTDtkFaP0EwD8ILHvMf2pBD2s4o2UlnIEKQz
mIj7zgli6VolFwJ0r4H7v66uPc0QxLrLxwNHOo1BA+5quFWCIMaYlCatfeE6
2HLV5+CLFMSeOwg3T3ldBy6LV3QrvAUxXxc+iwAeE2A5qlPxVk8QK3OCWVPx
pgA0XnKdJxfEgtRiSVVyLICw2qsvGvsCmB1Z8qgJiSVg6GW9XLYtgJHeWX6b
Y2sJFubXRTznBDAOGdhBFL0Bos8+XTokCmCJNV5pqV1WoN/hhy3bAwHsD71j
rzDvTdC0aTIY6CWAmdD7ufVb3gT5Ae2qs84CGL/QORWhjJvAJzmdu8RUANuV
Hz2zQmcLWN6qTsnKCWCarW45azR24CZTmpnBJj/WFlD2w4f3FtDJJemqW+bH
LmyYWU863QIyYi4KLDP8WG72kw+0VbcApSpknu7lx15w32r7Ah1AmevqsGsF
P5YleoJKx9URbHWgV6Md+TFj9WnyC2vOIMxrSYP4lQ/LbU2jUH92ByRGtLc4
DfNhD86OOT8l9wDPM57hGbr5sAvVaIe4sgd48/Ya561GPqzjjxFesswDbNFg
v2lS+LCfDBWM7QmewLYgo/C6Fh9GHW3dZXvfG3g0eLORAD4sq37M7/0bbxDU
pZdYKsuHeQdodEz88waZP8kD9nn5ME0JknXeYB8wqOx5Lf+AF5uOYWo0SPIF
F4e1ydZreLHM57Zlbp/vgqtL/P7ppbzYFEl5SDGfP7D6e/QD5vJirxTiFMo9
/MF97obxlEe82Jn7b3Hnz9wDNa681YpOvJiu54mvBfr3AQ/FP+uIC7zYvQRN
1bX9AEAiV9HKEc2D/dHujDEJCQHN6Vs0tx7yYC+vmLpS14QAvz8KppV+PJja
L41zwvMh4HvL+y3kFg/2CDPifKkRCkbVpoWsL/JgiafWtn4whIFyA4bkvH1u
TANPpt+OhQOHWtPplW1ujFtC7Fr0XjjgZsoRx3/nxnoyHj9/h4sAaWNiH9vH
ubEK/WjL/PwIEGytvj/fwI1ZsE8kksVHgutu/g6CntwYmVlf9bBvNKDve1vr
7sSNXTKT9lerjwY9OArS19bc2OeJr6HSv6OB6q+kLE09bqyqNjn2kV8MEH9Q
3u8kxo11ppQpGD2MBWQMrb7Xu7mwg4X05wml8cBEO4bTpo4T8523YaWvSQTc
D9SjtAo4sVk5egO38USwWkG6gUvmxIRI8rbOkCaBILr7baQenNjngiKJCwZJ
oPDzbfsCMU4syrTT0/9XEti4pVv2Lf8Cxt4cwKGplQJiQ8/KuSVxYGwUK/xQ
IA0Y1XU/Nw7mwCRYwmN9jNPAhW9RJ9E7HNjXQYqUzYg0UKVNMk57hQPbwe0O
vV9KA5/pNh9UUXFg6Zc9usdepgP+nMG27Yfs2PPSzic1Ok9Ba3PqlfvubFit
SHSZZlM26D/Ad6xbsGGLIaWywbvZYAH0K9hps2EpO4rKtHLPAM07Gn5dfjbM
QX5ZXbTuGTDtefj3wgQrBirTpqzqnoPtSefiNnVWrHqEdf6ybS4QOURIqS+w
YDOjXav2SfkgFX6rS+9mwv7bKQOxN4sBGbf5uPYbJuz3u+jx8Khi4H7038G/
EibM9DPRNLOyGGi9rdewiWTCeItMts/9LQb7yhFjwqpMmID73y/wSQmwleff
b2o4hzl5FhTh/ysFUpK2apN5jNgqm5Oktn4F6GKfGuD2p8ceGcYIrBCrQPAp
wgnrW/RYgVHHXvVoFZD7FyXzzJAe4+g7TAj4UQUKJ6TTWSXosbLm35+Z2KtB
0NMIS4Y5Ouyg28joql81wDNLLJ3QpcNUDWu+5IjXAAWBvb3/AC3mEvIec02r
BUXk+RY6bLRYmdWu/mBFLWBYuPz2w68z2IZftoVURy34kZ8TRiw9g6WzY3G9
P2tBPrcmbTXjGWxG+ktLulYdOM2Rxvdk6RRW+y8XpdqrA9MMMnrmCdQYU4ZO
7NblBvCrV+VK5G1qLPiEV46yTQOgiVPXrVGnxnSCfLs9fRqA3AkTHZp9KmxV
WOt8YXYDiN++p/HGiQpzt4kDzGsNQGmYiLJdPIkRKaoi1iNfgyepl6UmfpFj
yH1FOq6yRlBmYCRJ2U+OrVaN8N5ubgTEMzck8OXkWL7mFl1GTyNYjXAXi71J
jll/OKuTtd4IVP2ShJR6T2CN4nH/yUk3gfXrn7kyi8kwlxw2s+CqJqDFYkdn
bk6CeUeGuDqmvgF0Z1ndSBVIsKT7n67n5L0B4xR9XSVMJJjlvQnVhso3YPib
L+XPvCPixN13hsHv3wDWZwJrIgmHRHqvLxTB229APnXE6xznfeJCNQwj124G
hN0Nj3X+faJw4zzH+WvN4N2CpSgy8494qpRt6MSNZvCNKPNs4vo/okfD83Uv
j2Yg5rcQynTpL3HxwSuvrNRmUDenphfHuUd8pCx47tdYM1Dvf3VyYnyXGNEU
wVE/0wxGW9nbhFN3iWOyTiv6y81gL2Ob8OHULpHycZg+w24zQPQLWEn//CZa
vXdZ+sDQAnpVzg7p1/0malHslBqytgAb0Qfxz+/8JrZqfkZfc7WAUIprR8rf
fhGt9R570Yi3gA/NZIt+Q9tEVZuHoqMXW4BJqfvz94+3ifUaBwUCWi1gOW3C
5JzONrHP97HglSstgMar5lM1tkXcOktc5zNpAVnWnOEkAVvEIbkt6iGLFiB+
JRbRl98izuvdHDezaQF6wrZVa5WbxNDhu5rrTi1gmqnXWdl5k9hIpGv759oC
PE4o8cXybxJF8rsKZzxaQPIUfZpQ1gYRvttyxPm3AL6eQH2/6xtEv/V2oawH
LaCuaYXqPf0G8bDTm+FrUAt4KRK2+47uJ3H0iIj7Ft4COKPsBtofrBN7DHaS
lqJaQMKCWjn27Qex5fFAeWNsCyC5yB/x1uAH8Vn67ztmj475c8itW1rWiDJf
/vV3JbSAmf0FhTdCa8T9j97t1MktwMD8PUNj8nfilOy8AuuTFtD+umit/mCV
+PHjB5G91BaAZ4r8UOu0SmRWT457kd4C8r0ccquHVoidq1XG/E9bAGO/xv1X
6AoxpC4i2DOzBYRLCBlVli4TdZ65UDzOagG/Yk9Klp9bJvKO1U/dy24B9stL
J0sfLhE1SKpOyj5rAcPqnbMvVr8RoerzAOIxvlRQ0lxo/I1Y4teqxPq8BdST
xKTmY4vEUjU1ePEYC1o538kVWyRq8FrFKx3jtGZt7edpC0St27JcZMeYklWU
L5t0gbijv/In4zjfXT+ag6eu88R7E8mcR8f8y0Oro+mf54hUg2qJMsfYVLq7
KvXiHLGjiPKa4nG9nY/LY1MqZ4l62lMuZ477UVyLs09imSWK03yYqcpoAWXa
rmhC2AxxwrK6ke9YDxm9pzi2r9PE/Ly4f7eO9WKiNl9gqp0iXpqVr7mb0gJ2
Otgy6GO+Eo1DEr+ZJrWAz0FfLp+xniT6bzgUUB/70aiYfUQl+4VopRP2Kya+
Bdx7dcGRZHaMqCcRGPUnsgWY355i22/4THyb27i4HNYClARyenfjR4nVc7/o
SoJbwH4mt9xPhWHiTuYr+rR7LeCr8ezKKu0QUYNM6tR73xbwli7/2beFAWL0
8ivWd57H83FGk6aFp4+oWszbiXc+9ju007P2vx7iHeuilHz7Y//2tMfL7n0i
fljQ7p6zbgFUC7olTwfeE+v/uzUzbHw8f35F8etkTUTP9omHoeB4Hm6WWHw1
ryOOdvaE+Su2AJ3M68YZt14R7euIvYDQAmoS3/EWxz4lxtn5Nl4UbAGxFpE7
sg9KwCtnkogLNC3g4kUoXrFYBR4x3LfPIzuu9zpyo/VRPfAe68jZ/dsMGh7K
E6e/vgVfn668Y//eDIaXU1UZiJ1AISlDXrOrGSx8hEf23z+B+MMcj39YM9h+
8b3lNfN/IOZdLEVMYzOIqeHOlmzsB1u0s6O44mZQ4uHHPEw3AoaqJdRfhzaD
pTUeWq72r0AyuvlNO74ZuFvuumqNTQFGMRMtLuFmsNPd0+25Pg14T8p+NLnQ
DMJGmi/ZnpkFYsrXDG+cbAYpdQ5k9YrzwG79ex9x/A2o8WoJNE9eAqvlvrVn
/N8AP1EhiTsXlsFX5RUp6PIGKM0lTYaVLIMcDdI2A6s3oN3AUbny7QowcDL+
x3DpDRjAMfw5Wv0Oms+UzjLSvgH+u4Q3gzwbIDWIxF01uwlk1MfI+t//BQzV
7utv5DeCa/1vzAbf/wIZ7m9vMCU1Atrv3wPF6X+DsXTxWo6HjSCMW+/DTPFv
wNAxEz5k3gjc4xhMtEd2QNHhI7rvdI1A/WaWPxvuDyiLb1Y44/8abJ2ubG5Z
PABbXCfjImUagCB+OTe45AQ01EvdPLxXC+ysjc5OLZ2G7PupvE0D5cBhxEbI
huYM1DRdW7lRWg6cLruBOfEzMKAZnmEKKQeu8pF3vnmegVLLmQPNuHLgc7ax
b/3fGbgazkL5O7EMhBPZE4/OnoXZHNEHNsalYCjBM5oumw5acm4MaG28AMOf
7j4xqKSDnrMqAmOfXoBRiqDc5Ld0MOOxRlBY0Qsw9iC28dwsHRzUO6EiZfEC
TDoWLLMI0sN5+PrR7Mei4//ViBZPFT2ctI+bmX9RCH79VKDGv2OANrfp5zsC
8kE5mxXV0igDDGASc3AxzQe26mEns1cYYD7HAauyTD4YyPyPgvIsIyxt6Xl3
bS0PvFS3JZswY4Rc0+Ot7lZ5wCkr7l/IT0Z4gs9P2VUnF0xqTP0YYGOCaWPy
p4rDs0GK54kfkRJMsOceS1KYRjbQyRZeU4ZM8DGt0/XXVNnH+5fXatEtJjgi
x7TB/zgLpGWfXLpXxQTPf58QYXuWCa5u4WZ4NM7DPwJuqz7dGeDds7BBT09m
SEmvadHvnAp4xQZ5V0KZ4XeRd1X7iqkguJHb2+YJMwyu0jP1oUkFykOtjPqv
meGeRhZOveIJqKHaMxI/YIZX+vr7nLdTQJ636+dv0SzQ3Ovr67yEZBCkbTxp
kcsK/xQlGdodJIDJ0QLxoWpWSGV6o4C0KgEo2W8F6HSwwiTfXX5xuwTwOyjh
guI3Vki6fOOAr/sxcK3rsjovzgbl/u3GJOc9AuZc6Gz/azZIyx9Le8IpDsj/
Fvym3scOQ60Ur9abRAF4TsPp1gw7HDO5FsDOEQV0CLdWwzfZYYFj7ereTCSw
8ixY72DkgGGa6u7MrpEg/AfXrqopBzxJVKMdjooA/YssVOgsBzxIuPVpYDgM
TJArxN7Y4oBJ5iriLrlhYJ7P5HTgiQvQ9uMOnbdrGNi5mUrXInABfpO15uuh
CAMXpuhZlW5fgGmmZFkpSCi4PUojKrd9AdYNrljsYcHA57dIhTE5J9zTsx+R
TQkGgee0JX2ZOKHKvbSasVvBINEwCl8nzwmZT/to654OBg29J5TxAZzwbvXA
vfrmIHDi4/5lSQouuEe5ZyYoGAB6LXblUk5xw1Z/1KU37C6QtEvbnDzHDVXe
2GjnKN4Fj2/LVghyckNljXkTwoYf0LvnzfMGxw05LdhBjrUf+C/t56lZY25Y
fDZq84amL+gZWJqRzOWGPzoHM+QVvYH4eGSWfyk3zBwo+ZHw1wvEzwhcb6/h
hs80klqftHgB3Z923cbvueHC99VLzy96gZ7TM/UBq9zQ6+XyndjrnqBbcyz2
kwwP9A1l8pdUvANE9e+qn0N5YP06/zWhfncQe/08iZUmD7x5reTPFSd3oHPL
yHfTjAce0FEibNlu4FNovzXLQx4Y6c52xYHeFXxq7ZRx6OKB5OLJ/1JwzkD0
vePPV4M8MI5dik1+3AnE9lCW/fnCA5tZueumQ52AzpdLXI/WeeB+N7FOftwR
dO1h1HWMvNBuMeMCluQAOglNU6RWvHAvM1xZCGcPHqyttVU48MLDszWnB9fs
gGQRd5HJHV5ouSrjAcvsQOr5aJfKYF4oQhf/0UbIDtj+ub5nWsALG+X3kSBR
W/Dv7S/6qmVe2NDLo1NqaANe3hX+bb7JC83SqdVa2GyALc5yjOIvL1yPDhhZ
/2ANOvM6nluc4oO2y7cyiD+swJPwZLGTknzwD3SWyNC5ASR1cOpW3nwwuv3B
dRfUHMyS2QtTB/BBmb62lxfmzMCT5vRTdeF8sO7UQ8qfkWbgr/jRAHUaHwx1
WGWdHzIFH8/2WtU38sGWd2kd2H0TYDPi4n/6kA8akUwozv8xAoyPcyxeU/JD
8MUhUOalEfigMYTanuWHHZNSmL+dEZBoVKJo5OaH0el5//r6r4G/mdTJdmr8
ME542serwRCk2BSXv4nmh2FavGk3y68C3qTb0VzJ/PCS+55JutNVUNUmcSs8
ix+KUTE3twheBT28dZx6L/kh8wHp19TL+oByEUuaHeKHESaeMbo3rgB/54m7
VFwCMO2kf/bGgDagzHxm5CYsAF9Xq9O1OGqDJ59spAelBaDU3jId/ZEWqBZb
Ws26JABt1VxpL+G1wOqP7RtStwWgV4QZjWaZBrD0OnPper0ALCM7GVs9qQZW
8/u5m98KQAe+acJstBrwH0o54OoUgLxaHRcN5NRAqgzb65WJ43x1crOzTy6C
3h1B0UASQQhmhQYMbVSBpdAq5Ry1IFzxdTvBeF4VrJpUzmswCsK9VxPW2z0Q
nGwiPKMTFIQLQe+0KVAI4ANIV3hZEOJCXSRpzFHQW37iB5WxIHTU4aVqHkWA
5eSHLjcrQdi+lMLvaYyAe8iVMHlPQVg+6CIwYKoCao7Mdj6lCcLDufMvcv2U
gEC49+TmrCCMn0x7gVHJg9gDzkHR74Lw/beutw8L5cC636ePdr8EIdWzA/Je
VTnQ4MxTO0IpBH3gBWayEFmgod8X0yQmBA82FN5L08uAss77D7dkhGDwsu3l
oUYCoL0o6CuGCsH0nfrM8ZsE8Fkm0ObZ1WP8hfkxSSMeOLGJyYf4CsET1XPf
JX2kQU/KqPibICHokSLi5SYoDXBnQnm3o4Qgzbyu8uo4DuwdjZ25lSkEXRyP
nOMv4UDMYuSCFlEIAosrcuv6kqCsai6JjloYOmssV9tpigJa0cdR2gzCEM1x
+JnTJwK8ChQDQ9mFYQ5nQPmQmQhQTkt0+iUhDFs33yyd8BEGPQ9QMGYoDE2d
guta3goC3O8VGXpLYfizzSRgxVgQPHFPFdW5JQzjo4ux4XUBYHlzjanlrjDs
NNPb7RYQAD80Mtdyso/5zsRGRRbzAUNMfW6sSBjiBtQOfl7mAw2Km5/pXwnD
+4l3sxc2eUGQuFZHWJswjKuZVzO5yAtoGXaeOn4Thu3xskJvf3ED3FcDTSmc
CHwiRUdxS/YCWD6ZfKtLQQSW822bptRygBz8YJidqghsT3WpGSdwANpoQyzd
UATmzHLSJCixgzX8NUUSXxEIzPlOfLBmBYU3UkwyA0XgSR6eh19/sACL6CFf
mUgRqP9xuq0/kAV8+nqtxildBHLvahlJFjCD4mgjsYEmEXiUY7BKfuI8sKp9
ou3SLgLfd6tJKuYwgfNTw44U3SLw1nm/U4wIEwgnGBcqTorAYZ8vos8DzwHb
KeML+YciUMqS7Ic9PSPglDE5660mCikOz2QkBtGBUat0iTO6ovD5+dNMV/F0
4FHM58vFRqJQMVh7u7r3LNifMon+cksU1g6ekr5VRgsmYkxJL0WLwpqBwJVf
QadBcl0G11SiKMx+0bC0/ecU0J4eQ/yfisLroaHd8ndPgUYZs/sVZaKQJHjn
i7M/DUidNts+958o5Gm75/7wCRXQpcmkfzUiCnnbAv5WcFMBctkJKe0pUTi2
/HF2/OVJ4BVr7hr4UxQahPNeoR+gBFdlLRYX6cVg3uuzk6ziFOB0nOXnhuti
8NunVU1qOTLwXEL8J42NGBzA7Z3T+UwKpPv/UVo7i8GaX3q7ZvdJwXWmLLmT
AWIw+q+n8Yf3JCA3ZzzVJE8MnjRvs16ePUTxF0sry8vEoLIOnHgODtH3C/7v
j2rF4OhVlti7uQfoqgjL7+IPYlCnXEz5uss+Klt33Wjvuxj8bOhQe4n/L9p5
XdBV97cY/NP3cC/y6R/U/M/vsNxDMTh53bAtiP4PGoym1mrRi8NMhaCXltR7
6KfOIYancuJwm7JdOoh5B7X6enVAMUQcDku411sVbKEbD7lXHsWKw0DZ7L1g
dAsN490gmUsRh1E/gjNefNlESxwTcLEvxOHUX69XI+yb6NbmfwkT3eJQ8WUr
V8itn2j4k2fFkiPikGFMkrjdtI4yy7sRQ6fEobdsrfUk/TqqEnD6p+imONRc
/8HwX/caGkl5We/BeQm4WcOuc9thFWUpZXPo45KAFEzOc53DK2j55dVAPhEJ
SOYNirg0VtD+xJjKbmUJ6Ia/++WB9DLKxt55muOmBPTwV/N3EvmGvpJS724p
l4AXtjs+vEieQ5+ElZ7yqpOAWUyVurzSc+j9z2d0hVol4BcJO4OwgVlU4+Fo
T1KvBHTZZosYZJ5Fp3odex02JaB612klN+9p9B1vDy3HXwmYNxzDPNkzhZb5
4fQHyCShz1yEXKLIFOrL+adP+ZwktMO7FcWuTaKn3WMH6OQlIQVX1LhQ+gS6
1bZO/wFIQu8pG1dO6gl0jOma4QMtSUiwWGpfDBxHC1vZhxbNJOH14VzB6jtj
qPKZyuE3AZKQLqMto99rFL1d0ffZvl0S2heZcmWsDaJXSWRY2LolIfNlzo+d
EYOonFGGad+QJPSrYt8/zTOIku7bjCsuHvONhdQW3xhAMy5vTdBSScHalcRs
sck+NCjnOvs7Oil4ifM/+nyJPtR++43FPVYpaNlCql4c2ovissIm50WloPBM
Ng2L/H/ox9VzU41XpGDonlxA88dPaAV6j9P9uhR8Z9FJ1kv4hCYnf7Xis5aC
q74SQd/zu1ArpRfTjzykYMcnkj2a2E50J0Z+1jZFCvbzLJVfuv8B5RcxXzg9
LgVVdd70YqPt6Mz7F0jarBQsT5FYoL7TjmbbbqdxrUrBmZtKwj7U7Shjdrw2
/p8UjCuX+RtyqQ0NibL+XE6Lgz/iVy93FxLRqRGK8A0GHPSdZL5G+P0WVeGv
wMky42C6tJEzqv0W3cP2Yt5y4eCN7xmLv/61oB5/k1QGcDho/p2mcjfmDdqr
pbDCJIuDfTJXdWJ/N6Hi6VOp5oo4WBMuVS9n34QuE8R+zqvi4HUfVZXnOo2o
tdu7vB3D43zOFxFSpQZUb2aHksMXB79Zrip9SKtBKySf1drcw0F5zxqClEQN
ShOoZlMUiIM0NVORo++r0Q+siU2SkTi4fg6Q1BxUocg1EVfVdBxcCWhK6zr9
Cs3M62OJzMJBUG1Cf9biJbr30/f9pxwcdNF+68hXWYnWxbdzGpXg4DuuMh9n
ywpU/IPFgEMTDlpr6rcbL5aisefIgspbcTBahPrkX/1SdNm2RHSjDQcfRtSY
jbWWoAVHv8LufcLBnDsP7xzlF6Nsio/l4r/gYDXz3wippCLUP0pmvn8aB8+a
4/fHGYvQ0ZGJBKYFHIzcVDIBTwvRZC+hledrOGhD07RKUlGAUldgWdUHOFhg
SxI98TMPNWqQVL9GJg2hGIghCcpDc7Hs9V+U0pBlSs9vkjYPlRvxV1Wgk4Zz
dL+v3FXIRe0PcUtveaXhVkO6s/C1Z2gVVU6ijZA0XHO81hSeno3+YzijRCYu
DSXDQhptZ7LQZKGVeHVZaRjkve+o9DATxa7m4Xs0paFJMihNW09HT1ucnXTT
lYYOgleslYzSUZNbgRFnDaThnqeHQ1ZrGrp+z2zM0Fwa0hT1CiBZqSh7AX3Q
uKs0FB4771j1MAV1qHwo9MBTGpbHOTOtkaSgNa9/9HP4ScPHxkyvYUQyqtXT
xWfzUBq639Ck+Z6WhPr9Dun6liQN0RejLBWNCWj70U+v6DRpaGVgOtO//Bg9
Q2PFIZolDe/Mw+/nOB+jhZxKd9wKpaGIPVPhw/R4dEBz69yvBmnYL1b1prg9
BuUwtHmb2iwNtyOxghiWGNTJstdRHjvmj+T/r8grGj30KHtzv0saPum5d0WQ
EIWKZ9rakE5Kw08FlSyZc+Gof2E/dcGMNDwnGTyUZRKOdrxEay8tSsPUI1MC
a38Yat7BRhm9Lg0jqG2zpLtD0ei1wXJaUjzk+WDLmLMUjA7vQOMqCjx8ERLp
AP2CUS7SV4cGNHhI5pxFSTwZjDYwxRmkMuJhQ735CJtDEDqPqu2yC+JhXBwJ
jbjhA3Qs75+MuygeXhwrOewouo/2ktd5YZJ4KAu/dPse3EMbP/Gv28vjoXJk
uf/HRn80/jrlYqUWHn64N5dVYOmHhjS95SW5goepIq9PRPX6on4cd20MDfAw
e/eO9aCaL2ozt/RlxwwPW16vkRoo+KAy7l2DwAUPd3yLykY1vFCRgRC65Dt4
mMmJSk0PeKKcMkp6C9542H6+rOuNtSdK9besKzoADzmXrrqUhHmgkxHx2MAj
PCQwneVUGXFDB5YvHfIl42Fx+4jr33Nu6IfLB8p+aXhIL9wj6GDmilbRu79m
y8HD1mv+uqM/b6Phz/Rf2lXhoW5f+KbkVSf0HgnVWn3dsT4C4mnONY6oux0m
QtWEh+mL0sKhLI6oqYh0UUUbHmYEcF/Y+HkLFa9nyP49eIxH7kUbdNmhPCzd
45qf8fD6kOtfai079PyDMObML8f3L1M+3u6yRUlUfyWjC3jopLDXdvrzTXSk
ZyQm6jceKvbTaBues0E/ST3+OP4HD1lNI9bPG1ujWLIGhfghHv5CCPI9kVZo
menr4H5KAuxn/Xv24R9LNGgh4y4rCwH2LbnKlbOYo96aBvUuHARo00aYGnYx
Q53KqLdbuQnwndTFNcMOU9TQ4767rQgB0hjNVcwGmaCC+xa3ypUIsGzp1HaI
gDFKxT6ZYw4IkLgiKjkYb4R+V7ScoL5EgM9k6f309q6hVXct9Z2uEOC0ZLKo
xRdDVHnbUlHAhgAnHT9JTfZeRTkZvnoP2xPgZZ7eZ8+NrqIk0jdehjkTIMuL
et/AZn30g/sNvjkvAvxAMdx9b/sKenX1xpmcCAL8c5kl80WFDoqnntLUiyVA
zp4LjhdXtFEmYavQg8cE2HO4y6Qjpo1O3LLatcg45nPeF6QmaqK3Zq1mWcoJ
kDXe5sidRx3VIplm73xFgNHzaa/jIi6holzW1+/WEeDmWwte8nU1dMPSunuk
lQC/dWGiid0X0ftj1vXJ/QRYbDVTv1cPUcvd6Z+qIwQYftL7R78iRMF5G9HN
cQL8ef7rxNVQgJIb2eTozx/rf5k8Y7kWQRP6bGJO7xzr6z95c9dWCfVan+lo
/ntcD7u7VtwzRdTozM3D20cE+OLKT/emrwoo2+Wb3l1UMrDbPGhe010eLfxw
80Ykuwx8/PXjZc4eGTRycTZdllsGxreHObpJyaDO5LaDC/wykL/C6rJ8OgGV
vGirqSYpA5k/LCm2euPRxlZbaRJVGcjt+7Fa9wYOzZycc3mlLgN97QULrrRL
oYH/bF9Y6cjA15j3XeEBSfSioh176zUZSHc78kvkCQn0vzo7ivsOMrBxPeRl
Yb0Iai4uOTx++5hf+EcC06Ew+q1gL1/xjgy0ro8LDr4sjB4mP4J/7spAN8dN
d+IvQVTS8/UD/xgZuDl8gds1kB99sxyiM/ZIBnZE+0xJr/KhGja6rArJMlCv
0vj2vjkfaq0/27CbKQO5bhYUEbR40USJU1t+FTLQ8yXtgrkeN8pRNIKNVslA
VGbo+kIVF1rCkZsgVy8DL3D3DT3q5kTbTslK7LTKQL7eyvd5jBfQrRUrJ98+
GaicNsmNrLKiQTdF5EeGjrFSh3mZBCtKM75NITsmAyv7ikj0/VhQvs7ogl8z
MjCitPVk1Xlm1OhFzZT31rH+XDMynInn0JkLgZVDOzIwTkBd5NEfRtQ1VTOA
8O9YX1ZJLwlHRjQifJJ1+4QsjPilUvRYjwFtsKU09mKShZXnghNHdOjQixP9
fIOssnCh6YFIetFZtNcga0uaUxb21HVMIS206BLEJW4KysIQPrUZkoPTKAuX
ebeHgixkjdDoifpIjRam8Wf2q8jCJ18rq29TUaM42p9OOFVZONmrOVOtR4Vq
H4RRbmjLwg2TjKrRVUr0/pdK1TsWstCe9wvuyQ1ylPKaP12ftSxUpVI9W/H+
BJr86eK0pL0sDDv0EjmHP4GWN30OWHeVhSlMmt8tmMnQyXTSRreg4/zxl8Re
0JGgQwSY8jpUFkbtTneOyBwhn/qC3EmjZOGS+eemI71DpOnkPn9qgiz0/rKt
F5i2j6Td3UlqyZWFfoZ3Uizc/iCPGGXdKItkoZpHty5H9R4S/spb62qpLOQU
86UT/7uLeC1tHM5Xy8LXwyLhhVk7iL7Jd5dTHbLwREbYDg/LL0RjW0TT+KMs
VJh7lhAQun38wJx4c7plYbbDPji/uYWIf1wcww/LQqULPKkJE5sIlfyMuvmi
LByF/lkUr38iR4OcPIUrspDJ/PeCZ9c6suN+Y//HD1n4b97+9Yu5H8jii4ma
kB1ZeJiax10mvIa0nx/hKj0pB9OfKhhwHy4jTTWM/7ZOycFJkZ2MPtVlpErP
cFSFTg4mk3H8txS7hORE9sX3s8jBV33xR43i35CAna4/uyJyUITznPRc2Tzi
nUw1oiopB+enmbFhpnnktqRmVRxeDsZa7omfj5hDTB3eOXApy0HH508UaDxm
EdnRt0MaunLwZj7JlVMrU4i418HLxKty8E2tyoL7wVeEn1YldsJIDtpcr7at
YPmKMGg0Hf9d5KC8rGvqT9svyHp9bWWquxzsGVJmeKA6hiwabEVPe8lBRfL3
Z6KjPiOTP3D2InflIPHsuwyKoVGkW+AlW+tDOeg3mplYd28EKUktiVpIlIPB
+TKP/iMdQh79eGkdlyoHA09NM5+2G0S81Ovl8Zly8OQN49vmXQOI8u+2pYcF
cpDkYM0psrAf4b7SSRQskYNO/IxszKz9CHlRb/p/FXKQsnKOSZm/D+k1+qLJ
3iAHK/pavfZ5/kNqK2a52t/IwSwqthFhiR4kg3x514koB01jOW7hYDdys+5X
cUOnHEwN+Hb2c0AX8ouRlsrwixy8/2+IiknnAzLucm5mb1oOvo/n58x59B55
28HWmLMgB7tOLquCz++QKG8hpx8/5KC18e23hw86ENduCfhkSw7+myK9fryv
IFf5ZFiUd+VgThSZ3aRcO8I2BDujSeThc+eR3ruUbciRqGauFIU81Gkx9S70
xZCF0Cv+o9Ty8NzZRarTQ0SkEm8uzM8oD21rPurmtrYiMNk7miggD98ob8TK
7DYhAqv3bBxE5eEJHN3oIUsTQnMxWOGMlDyUvHgl/szFRmRoM37ZXEEeLtne
Nj1d2oA0aqdgpIg8VFZYPhv3rR7JznuaUaIqD1myPcxcROsRB4MXWjs68rBW
5eto8Lta5HJpBfczfXnY5R8rZchWi+BIa/fUjOQhlfFrnVbfGuRPFbEk6YY8
NEWe9JWqVCPxdONUEh7ysFAUyb12+iXi6TQ9M+QjDyN8pGJZqCqR69hi4/17
8rCzLC/swekKhMtjy6kzVB6OdCxok0iWIeSde/BOlDwsFs/8+1SnFFnmOmI5
Hy8PtW89t25zL0Fq+k512aXKw19kHmxYz/EuKMSQR5MpD2O+r3VwUb5AHjxk
uVf9/Lgfb86yCxpFyCUpAZGjYnno/eS9MOt4AfL5MRqT+UYeZih+Y/dUz0Mc
QMLvzbfykAJPvUfZmIv8+jl9U7tDHqp9tminkcpF6AxClPa65eFWvaN/4bXn
yHPSwRf6/fIQGVA4V2z+DJGo4WUsHpaHn4Qdlh44ZyM6jO++G3+Vh9J5xofF
zzKRsY5zppWzx34n5jbEtD9FHH1uvSP/Jg83P3D4GK5nIOEjlM9q14/959wY
wczSkdZ0bT16EgVI8UJOJuT+E0RXK/ONE7kC3Gji/nvYn4JM7K0KYlQK0Gjm
oe8X8RRkxyz+yJ1eAco3S9if/JWEhNN8dfnApABLx629KayTEMZmibELbApw
rjPZktibiOA4+qp6eBXgSByFVf7dBORtD9cFfiEFOCpFrdPu+Ri5EugR80BM
AVZzrvxV9HmE3J6itxWVUYCEeLVrwklxSEGuEWO0ugLUoyrrkOGPRvAGRQ+n
tRXg40sdzfLmUQhGuvNdTk8BJmN+WrVpkcikbfq7xesKULi4b1GdNwK5zbiM
QywU4OReU+cfj3DkT4fCsyfWCrDtZmuP9fsw5LzAhK+akwKc7gsXjw8KRQpH
ROcyXRVgOI/B4d+5EIQQ+UBvy0MBBs18/+iqG4JcXeIQyrunAC9T2eQ0SgQj
MaXWY4exCvCljENA3uUAhMW86tL1BAUok/FpztzyAfKChrS6MkUBCtAuRg77
3EfaXfJjLLMVYL/ZpTLaFn/kKsf279pcBai90XDGZPUuMt2jZnuqSAGGXLUy
u8N1F9mXWFR6U6kAZ0s63AnPfJHYKdli+hoF+DleyNp30QdhTYhkdG5QgCnx
ibdrCT6I3IbQGjNRAS7Hh3+6OeuF3Km5/cy3XwGuV2dbxQd4IKucYZSiIwpQ
aFSeRLTzDuIQl3Vnalzh+H29I6fJd0es7HtUNecVYCfsxDf5uCIT/Qtl/5YU
4L016S8Dri7IdeSAsWrt2G9Kx9O67rcRvfOS31h2FGBaEps8a7wT8ilUQ/+/
vwpw20bV4L9iR0Tjp1VjyJEC/MqbQ1HU7YCgnQmxq1SKcC1A/t5z0VuI5P1N
yRZ2RbjffJ/VArVFyr5RZ3hwK0LFwqenmlNuIoLXeEkFBBTh9+z3Zoo/bRBO
8WtDjyQV4Z+vg5fd7lgjmRkuKhcJihCfW4Fkalkh5ynCi3bkFeEml1jKTfEb
CO1U3V1rVUV4giAyoMZggcTq/DfDqKEIB+cpmEoZzRHK14vanTqKMMeWUhnh
NEMOE85zSBspQn/DO3dKrpggP1T9MTJHRWhkxoDynjFCnF4mirx2UYQX5s8t
ButfQxbYSpNdPBThgrtFFpZhiExuj9sP31OEvX6DTauoAWJqs/VfdJAitD6t
q2mVdRUZ7qGRR8IUoedZcYbYf/pIT5Ey9Yt4RWgX9EdGpPgKosVg5GWepAjj
K32KxB/pIu+CXL/Qpike7+cJ0/cCLyMtJs8q7+YoQqV5168PHmgjFdRHBto1
ivBLnSc+Y14dEfZjbj5oUITbZQdBlxnUkcI5Kf6aZkWYLdM1XKF1Ccluttlh
e68I06ervtt0X0RYhO9Z93UpwkythUAJ5ovIkydJnWG9ijDO+0xilrMqEu/W
nrn2WRG2vVEXcOaBCNXExIm8SUWo4dz0u+Q0QMI1tl2NZxWhbgAuZ3MWQQK4
+MHbVUUotGwvJlOpjLgMRMwnHChC3CJs6WyWRwxtGcwkyZSgnd+ZYP8JOURh
+3lvD6USbB4qd7QilUMomRqbqOmUIP/BdYd8BxnkR9ElqZJzSnBVPGTWs5CA
DMsNFGqwKkEu8VPs5it4JN90NSGMVwmKOlXre0VJIzErfhS8Qkrwm4N+g+AM
DvG4f+IBJqYEXUBg7D6KQ9BsDocDGSXo8/MltxmHJDI+radyV1MJBl//uD88
LoJgHl+qmXSVIImJ87u+WWHkBamTUN1VJfgrs+3ox5YQ4sMXwrBppgRdf/sJ
q0sJIhZ1Z6ITrJTgzstXZV/NBJCL6pkHEnZKsGu1ItU0nh+hc6xdvu2qBFkp
HiFDJ/mQ3V1gRe2pBKmzC2W0rvIiU9E9Q8W+SjCw7dyXmBwepKJs8e1CkBJk
9L1K52/AjWiuM6daJSnBH4cZswp/2BHJh4U0B6lKcO7d5Zfkq2zIOTrp4KxM
JTiUVea2usCKzEnruIwVKEFBCq/0+F1mpKt9dMavRAli6d97UmmZkaprdteZ
KpWg5+81PUPJ80iQb4CqYYMS3Iyok8qLPIfcoqR+vfFGCX7/+LAn4y0jopue
Kp5AVIJ81x8enDlkQNiaXjL3dCrByy/f3zBLpkfq92d+qH9RgmTXZr1fMdAi
2Y/c7BamlWDG7isB1rXTSCjn37HQBSXoX22z+bT/FHIVMr4j/lCCZ5k7bGET
NSI/kKNotaUEU7Neyue0UCGctuKv9neUIMdpLxjVdRJZC1PPVCRRhkIfbnyN
O6RAhs4Nnh0jV4aNHXdOHwhQIG+KrCL8qJXhszsfnXONyZHoj3c9ahmO4xb6
Klo9ZAjfqTINCQFlCEYbdOBZEuTSlIl5t4Qy5CVXMVL9fKDiUE3h7iynDNPP
P40gNv5TiQqvDTkJlCGL44CJJPZHpcTkZmqRpjIsXw1y2lzdVekSPVuqdlUZ
dnFWP3oqt6OyetDSMmuqDAdEiodnc3+piBeyLFy4rQzv7JDfIu3aVLly98Nu
s5cy9NwMC6AO21Bx1/E5Zf5AGa6f0hS4ULKuknCBl2svTBlSPy3U3vBZU6na
6MOnxStDYfw7oRTnVZWBjkANmVRlmCinEwvDllW20sTMB58pwylt/g92xG8q
MkhUCO0rZWgv+M4zI3VexW9+rkQHU4YlYtTj0xMzKo0xaH/kgDKULkTwLiRf
Vf5KZe62zylD2uzoUNHNMRWV0d+cR9vK8PvTX77uniMqQQEGGsoUKlDnc+fL
CrdBFYy30u3ueRUoxcZYvF3ap0LWRZVaK6QCpwv/fLsp3a1y6Y59y08FFair
aTmha/pRRSbLbFPfSgWmPKw1CiRiKgIf9QSrwlTg7Uy9suiD1yqFrj/ELaNV
4Pt3+ndnSF+r8DLEE6geqcDzv85ftaVrUOG80QVt0lRgPQUPp45Oncr5bTUL
ulIVuFTbfFtPqFqFkksx0aNXBZpuPz+nGFiiEv7ucxrHkAoM1aGOHrhXrEJ2
2+9Z52cVWMtOijsKfqFyWFdbxj17HBe50Hu7slBlR0fyff+2CjzxKUM11ztP
ZcmP7y+OFYFFL04Hfx3OUOnsPWO/aYfAGff/mJvIYlQ2enYOrzgh8GF6iRtC
Ga3C0j39tMwVgZmWiheeMEapOH6s7rPzReAT2lk/JZ0IFUrMWHk0EoEey5dF
Wi+EqqhVP2NoLkVgTsbmy08y91Xepki0hf9EIIt7pku6rotKvekVTpYHKPTP
UPlyjuOKitVB6u+2eAA/CLKy2OnQqdT3OjwcMYdQW+NpXKXWJ+WN2iuPLBch
3Jv/SCMaG6V8Y2iL7eMShCWHcua7NyKVP22ll0j/L0sBtP7qQEAwvaIRkkCF
O6Qx4sMG70BAKhTsGFUvgztXr3b6sPhAQMu8bBvnQX87vqqfZwUMQUB8NaPZ
Mrd0O4uh8UGuMkFAwg3WuqgZYjv4wJbPGDVBQMEYw7fjLmE7ZOA7XYM3QUAy
JVTh5U9gOz4fhnhYPEFAWxAhTeBlXTvynBqvAkZBQHCEv9nv3Fc7WJhDHFdZ
QUBmTr5AgmdPO8W36KnBW0FAhYhxFcPMTTsy1403LF5BQDJqZFjMRkw7DBbY
UgFjQUDGOVxHG3VJO7+TbImrbEFADxm/LqGgRDsssxEXFm9BQOeeWSG3kUM7
mNK2pIBxQUCLlIUikZBCO3IRAcBVdkFA9Ik98dS0QDvfMKZNwHhBQMhLNWXs
sT87TFBL2yp7QUCglqwhkxA+O7lv8GiVfUFAyLAjE32EPDsmj5X2/39BQCT4
laGXDDs7srNmLA==
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1: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
c/soXBPOD6b/ecF8XfV/UmxkLA==
       "]]}}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Up-sample\"", TraditionalForm], 
    FormBox["\"Distribution\"", TraditionalForm]},
  AxesOrigin->{-14.68, 0.},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->700,
  PlotRange->{{-14., 20.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6877081192938213`*^9, 3.687708130869183*^9}, {
  3.687708162814308*^9, 3.687708166114053*^9}, {3.687708212706067*^9, 
  3.6877082266183567`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Volumes/MicroSD/PostDoc_SD/ZrC/Thermodynamic_Integration_Analysis\>\"\
", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"andyFah", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"ReadList", "[", 
        RowBox[{"\"\<Fah_surface_andy_tu-tild\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"Number", ",", "Number", ",", "Number", ",", "Number"}], 
          "}"}]}], "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", "5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MVTintAll", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"ReadList", "[", 
     RowBox[{"\"\<MVT_intall\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "Number", ",", " ", "Number", ",", "Number", ",", "Number", ",", 
        "Number"}], "}"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"horizontalListPlotFill", "[", 
    RowBox[{"listplot_", ",", 
     RowBox[{"axisOrigin_:", " ", "0"}]}], "]"}], ":=", 
   RowBox[{"listplot", "/.", 
    RowBox[{
     RowBox[{"Point", "[", "a__", "]"}], "\[RuleDelayed]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Point", "[", "a", "]"}], ",", 
       RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"axisOrigin", ",", "#2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"#1", ",", "#2"}], "}"}]}], "}"}], "&"}], "@@@", "a"}], 
        "]"}]}], "}"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.687708330343856*^9, 3.687708330560853*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"horizontalListPlotFill", "@", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Labeled", "[", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"3", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"Transpose", "[", "andyFah", "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ",", "\"\<TU-TILD\>\"",
         ",", "Above"}], "]"}], ",", 
      RowBox[{"Labeled", "[", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"2", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"Transpose", "[", "MVTintAll", "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ",", 
        "\"\<MVT MEAM TI\>\"", ",", "Above"}], "]"}], ",", 
      RowBox[{"Labeled", "[", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"1", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Transpose", "[", "MVTintAll", "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "+", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"dft4", "-", "meam4"}], ")"}], "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}]}], "}"}]}],
         ",", "\"\<MVT MEAM TI + UP-sample\>\"", ",", "Above"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"SwatchLegend", "[", 
      RowBox[{
      "\"\<TU-TILD\>\"", ",", "\"\<MVT MEAM TI\>\"", ",", 
       "\"\<MVT MEAM TI + UPsample\>\""}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "3.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "20"}], ",", "25"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<ZrC: Fah at 3805 K\>\""}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\>\"", ",", "\"\<Fah (meV/atom)\>\""}], "}"}]}], ",", 
    RowBox[{"Ticks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", "Automatic"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.68709190860106*^9, 3.687091944112029*^9}, {
  3.687708249437643*^9, 3.687708257949836*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{3., -0.02198894}, {3., 2.5837645}, {3., 5.0497218}, {3., 
       7.7660415}, {3., 12.195615}}], 
      {Opacity[0.3], 
       LineBox[{{{0, -0.02198894}, {3., -0.02198894}}, {{0, 2.5837645}, {3., 
          2.5837645}}, {{0, 5.0497218}, {3., 5.0497218}}, {{0, 7.7660415}, {
          3., 7.7660415}}, {{0, 12.195615}, {3., 12.195615}}}]}},
     Annotation[#, {{Labeled}, Charting`Private`Tag$40432, {1}}]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{2., -12.88}, {2., -6.05}, {2., -2.03}, {2., 3.91}, {2., 
       11.55}}], 
      {Opacity[0.3], 
       LineBox[{{{0, -12.88}, {2., -12.88}}, {{0, -6.05}, {2., -6.05}}, {{
          0, -2.03}, {2., -2.03}}, {{0, 3.91}, {2., 3.91}}, {{0, 11.55}, {2., 
          11.55}}}]}},
     Annotation[#, {{Labeled}, Charting`Private`Tag$40432, {2}}]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{1., 0.1604873143558354}, {1., 1.2297602103966394`}, {1., 
       0.66993966584096}, {1., 3.2364542079201573`}, {1., 
       5.940366646040039}}], 
      {Opacity[0.3], 
       LineBox[{{{0, 0.1604873143558354}, {1., 0.1604873143558354}}, {{
          0, 1.2297602103966394`}, {1., 1.2297602103966394`}}, {{
          0, 0.66993966584096}, {1., 0.66993966584096}}, {{
          0, 3.2364542079201573`}, {1., 3.2364542079201573`}}, {{
          0, 5.940366646040039}, {1., 5.940366646040039}}}]}},
     Annotation[#, {{Labeled}, Charting`Private`Tag$40432, {
       3}}]& ], {}}, {{}, {
     InsetBox["\<\"TU-TILD\"\>", Offset[{0, 2}, {3., 12.195615}], 
      ImageScaled[{1, 0}]], 
     InsetBox["\<\"MVT MEAM TI\"\>", Offset[{0, 2}, {2., 11.55}], 
      ImageScaled[{1, 0}]], 
     InsetBox["\<\"MVT MEAM TI + UP-sample\"\>", 
      Offset[{0, 2}, {1., 5.940366646040039}], 
      ImageScaled[{1, 0}]]}}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\"", TraditionalForm], 
    FormBox["\"Fah (meV/atom)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{1009.859375, Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"ZrC: Fah at 3805 K\"", TraditionalForm],
  PlotRange->{{0, 3.5}, {-20, 25}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{
  3.687091898148932*^9, {3.687091934475758*^9, 3.687091944579627*^9}, {
   3.6877082643070583`*^9, 3.687708266989765*^9}, {3.687708310281076*^9, 
   3.687708332142828*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", "andyFah", "]"}], "[", 
  RowBox[{"[", "4", "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.172075`"}], ",", "2.719392`", ",", "5.650589`", ",", 
   "10.236911`", ",", "18.74885`"}], "}"}]], "Output",
 CellChangeTimes->{3.6877086572972517`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Mean", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"dft5", "-", "meam5"}], ")"}], "[", 
     RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Mean", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"dftf5", "-", "meam5"}], ")"}], "[", 
     RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Transpose", "[", "MVTintAll", "]"}], "[", 
   RowBox[{"[", "4", "]"}], "]"}], "+", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Mean", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"dft5", "-", "meam5"}], ")"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6870921048641376`*^9, 3.687092108478628*^9}, {
  3.68709218140688*^9, 3.6870921830493183`*^9}, {3.687092454554111*^9, 
  3.687092454821209*^9}, {3.687708641398323*^9, 3.687708655493449*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "15.14317295792141`", ",", "7.886556311880524`", ",", "2.6520451732668127`",
    ",", 
   RowBox[{"-", "1.4545590965341628`"}], ",", 
   RowBox[{"-", "5.387340655941031`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.687092045561631*^9, {3.687092105393713*^9, 3.687092108666891*^9}, 
   3.687092183642076*^9, 3.6870922178632183`*^9, 3.687092455426586*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8.433202351485084`", ",", "1.1611865717817555`", ",", 
   RowBox[{"-", "4.1776191212875675`"}], ",", 
   RowBox[{"-", "8.693694306929817`"}], ",", 
   RowBox[{"-", "12.83612933168277`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.687092045561631*^9, {3.687092105393713*^9, 3.687092108666891*^9}, 
   3.687092183642076*^9, 3.6870922178632183`*^9, 3.6870924554452333`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.3231729579214093`", ",", "2.1465563118805235`", ",", 
   "1.5520451732668126`", ",", "4.635440903465837`", ",", 
   "11.07265934405897`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.687092045561631*^9, {3.687092105393713*^9, 3.687092108666891*^9}, 
   3.687092183642076*^9, 3.6870922178632183`*^9, 3.687092455458493*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Mean", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"dft4", "-", "meam4"}], ")"}], "[", 
     RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Mean", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"dftf4", "-", "meam4"}], ")"}], "[", 
     RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Transpose", "[", "MVTintAll", "]"}], "[", 
   RowBox[{"[", "3", "]"}], "]"}], "+", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Mean", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"dft4", "-", "meam4"}], ")"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Transpose", "[", "andyFah", "]"}], "[", 
  RowBox[{"[", "3", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.687708362921739*^9, 3.6877083716201277`*^9}, {
  3.687708541097311*^9, 3.68770854115099*^9}, {3.6877086065858183`*^9, 
  3.687708606759392*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "13.040487314355836`", ",", "7.279760210396639`", ",", "2.69993966584096`", 
   ",", 
   RowBox[{"-", "0.6735457920798429`"}], ",", 
   RowBox[{"-", "5.609633353959961`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6877083722330437`*^9, 3.687708427457556*^9, 
  3.6877085430389233`*^9, 3.687708607045527*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10.506475866336045`", ",", "4.4735519801986765`", ",", 
   RowBox[{"-", "0.16411200495117712`"}], ",", 
   RowBox[{"-", "3.7488025990091494`"}], ",", 
   RowBox[{"-", "8.613237933168028`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6877083722330437`*^9, 3.687708427457556*^9, 
  3.6877085430389233`*^9, 3.687708607055451*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.1604873143558354`", ",", "1.2297602103966394`", ",", "0.66993966584096`",
    ",", "3.2364542079201573`", ",", "5.940366646040039`"}], "}"}]], "Output",\

 CellChangeTimes->{3.6877083722330437`*^9, 3.687708427457556*^9, 
  3.6877085430389233`*^9, 3.687708607059951*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.02198894`"}], ",", "2.5837645`", ",", "5.0497218`", ",", 
   "7.7660415`", ",", "12.195615`"}], "}"}]], "Output",
 CellChangeTimes->{3.6877083722330437`*^9, 3.687708427457556*^9, 
  3.6877085430389233`*^9, 3.687708607063718*^9}]
}, Open  ]]
},
WindowSize->{1343, 830},
WindowMargins->{{22, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2536, 76, 201, "Input"],
Cell[CellGroupData[{
Cell[3119, 100, 471, 11, 54, "Input"],
Cell[3593, 113, 220, 3, 32, "Output"],
Cell[3816, 118, 220, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4073, 126, 325, 8, 32, "Input"],
Cell[4401, 136, 119, 2, 32, "Output"]
}, Open  ]],
Cell[4535, 141, 3316, 94, 159, "Input"],
Cell[CellGroupData[{
Cell[7876, 239, 5038, 129, 222, "Input"],
Cell[12917, 370, 84676, 1601, 717, "Output"],
Cell[97596, 1973, 1106, 26, 108, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98739, 2004, 891, 21, 54, "Input"],
Cell[99633, 2027, 379, 9, 24, "Message"],
Cell[100015, 2038, 1708, 44, 114, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101760, 2087, 508, 15, 32, "Input"],
Cell[102271, 2104, 1258, 36, 114, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103566, 2145, 94, 1, 32, "Input"],
Cell[103663, 2148, 122592, 2027, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226292, 4180, 1840, 47, 75, "Input"],
Cell[228135, 4229, 160965, 3031, 424, "Output"]
}, Open  ]],
Cell[389115, 7263, 1749, 50, 96, "Input"],
Cell[CellGroupData[{
Cell[390889, 7317, 2911, 77, 138, "Input"],
Cell[393803, 7396, 3549, 75, 652, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[397389, 7476, 119, 3, 32, "Input"],
Cell[397511, 7481, 211, 5, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[397759, 7491, 1243, 37, 96, "Input"],
Cell[399005, 7530, 398, 9, 32, "Output"],
Cell[399406, 7541, 412, 8, 32, "Output"],
Cell[399821, 7551, 365, 8, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[400223, 7564, 1294, 40, 96, "Input"],
Cell[401520, 7606, 349, 8, 32, "Output"],
Cell[401872, 7616, 365, 7, 32, "Output"],
Cell[402240, 7625, 314, 7, 32, "Output"],
Cell[402557, 7634, 287, 6, 32, "Output"]
}, Open  ]]
}
]
*)

