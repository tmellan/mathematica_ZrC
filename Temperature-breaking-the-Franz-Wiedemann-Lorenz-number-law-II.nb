(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    960043,      17553]
NotebookOptionsPosition[    956898,      17448]
NotebookOutlinePosition[    957250,      17464]
CellTagsIndexPosition[    957207,      17461]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Constant", ",", " ", 
    RowBox[{"Fermi", "-", 
     RowBox[{"Dirac", " ", "and", " ", "Fermi"}], "-", 
     RowBox[{"Dirac", " ", "changing", " ", "with", " ", "energy"}]}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"K2meV", "=", 
     RowBox[{"1000", "*", "8.617332478", "*", 
      RowBox[{"10", "^", 
       RowBox[{"\[Minus]", "5"}]}]}]}], ";", 
    RowBox[{"K2eV", "=", 
     RowBox[{"8.617332478", "*", 
      RowBox[{"10", "^", 
       RowBox[{"\[Minus]", "5"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fermiDirac", "[", 
     RowBox[{"energy_", ",", "temp_"}], "]"}], ":=", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"energy", "/", 
         RowBox[{"(", 
          RowBox[{"K2eV", "*", "temp"}], ")"}]}], "]"}], "+", "1"}], 
      ")"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "define", " ", "sigma", " ", "and", " ", "kappa", " ", "kernels"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigmaK", "[", 
     RowBox[{"energy_", ",", "temp_"}], "]"}], ":=", 
    RowBox[{"-", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"fermiDirac", "[", 
        RowBox[{"energy", ",", "temp"}], "]"}], ",", "energy"}], "]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kappaK", "[", 
     RowBox[{"energy_", ",", "temp_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"1", "/", "temp"}], ")"}]}], "*", 
     RowBox[{"(", 
      RowBox[{"energy", "^", "2"}], ")"}], "*", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"fermiDirac", "[", 
        RowBox[{"energy", ",", "temp"}], "]"}], ",", "energy"}], 
      "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.686903834011775*^9, 3.686903914813656*^9}, {
  3.6869040124922247`*^9, 3.68690402726449*^9}, {3.6869040773321457`*^9, 
  3.686904091096046*^9}, {3.6869042124019117`*^9, 3.6869042278455057`*^9}, {
  3.687002391408482*^9, 3.687002418389557*^9}, {3.687002494783204*^9, 
  3.687002584157371*^9}, {3.687002614731841*^9, 3.6870026884262114`*^9}, {
  3.687085662628477*^9, 3.6870856666060753`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Plot", " ", "Kernel", " ", "for", " ", "charge", " ", "transport", " ", 
    RowBox[{"(", "sigma", ")"}], " ", "and", " ", "heat", " ", "flux", " ", 
    RowBox[{"(", "kappa", ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"B", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"sigmaK", "[", 
       RowBox[{"energy", ",", "1000"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"energy", ",", 
       RowBox[{
        RowBox[{"-", "B"}], "/", "5"}], ",", 
       RowBox[{"B", "/", "5"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Energy\>\"", ",", "\"\<\[Sigma]-kernel\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"kappaK", "[", 
       RowBox[{"energy", ",", "1000"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"energy", ",", 
       RowBox[{
        RowBox[{"-", "B"}], "/", "5"}], ",", 
       RowBox[{"B", "/", "5"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Energy\>\"", ",", "\"\<\[Kappa]-kernel\>\""}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.686904094887207*^9, 3.686904127166093*^9}, {
   3.686904168183402*^9, 3.686904177571847*^9}, {3.686904229385264*^9, 
   3.6869042435591717`*^9}, {3.686904296723089*^9, 3.686904391564746*^9}, {
   3.687002441025131*^9, 3.687002476637371*^9}, {3.687002693613229*^9, 
   3.687002768512457*^9}, 3.6870028923663*^9, {3.687016603524066*^9, 
   3.6870166691066236`*^9}, {3.687173769977148*^9, 3.687173776920741*^9}, {
   3.687173836382634*^9, 3.687173950902729*^9}, {3.6871739973963213`*^9, 
   3.687174001771165*^9}, {3.687175771794199*^9, 3.687175779846695*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwtWnc01//3V3i/pYwkJWRmZ2V8Iu7LKFK2IitUkiQZGdkkkj2iYZaRWdmj
Z/bIJnvPtzfebyKh4ed3zvef5/M8zr3nce695zyf9z7OudzWD/XvHKSgoMjf
P/7/FgMW4t4eGSW9v45frWWDhzu8ITu7ZDR4MK2mcJMNij5L8m/8JKNOkVPq
XQLsICWoZb2wTEbvCI1PBCLZQe5o0Ej7IBnp3Um5rGPNAdjseltSIRl55GZ6
n2DjBP1nHbnnbpLRtdeUwX0PuCFWefTyWRMyUhJ9PfcpnBv6fxMW+a+R0cb6
Wlh7Pjdcd6TiO3WFjGp+EW4WkbjB9IbCGwo5Mrqb8/jnRWceuC2S86KDnox+
1aufpQ3hBbeuoAd3v5BQ4oxrpOjsGXix/Hhws5yE2DqW1eLo+SEdf0854DMJ
Cb33oNOX54d20Dr+NpuEpCUIgb0x/MBTdLymN4aELpptU+2qC0BnVOYRpbsk
9OShcptvvSDM5SU+/mZFQorBrB9ebwrCTsvzKWMzEuoRclg5yS8EfAceFjvr
kVAns1uy/HMh8HwkZ5ajQEKH6PplJIyEgV+/JZeZkYSW5ZYk46lE4YJD5fF0
WhJyrWFkPXNBFPSe5/mKU5PQao2PGK+LKHjVRRlo7q4irekGnQfzotArdeO3
79wq0tyIq9brOAvex4iay+WrSOC+iR/vZ3Ho7z9MrLVaRQxu5wObSJLgf7vk
S67ZKmooOj2zzSAFYpsWsfFGq4itXqfYVlIKQo59unBPaxUNqpl7HnSVAkV9
40jG86vo3O8/kiJ7UpDZ9U76JuMqIghuK1ZwSoN7m6Lvny8riM/pU6tMvCyc
MVk0WKhYQYN/o2sokSz0LkUJdhevoCv3NI9xLsmC6KG5nowPK+i8lCQPpiQH
0+rP+a4krKBarg8VCityoNk40Jr0YAWpul4seG10Hji+PmSWY19BFG9uYLqO
F6CdScZF/sQK6mgYaF7OuACed3b7FJlWEG2zxebc4AUYoH0aq0azgtxiTeZ/
YIoQde0Vk/7mMhpqc6KJOqEElMsNjA/al9EBnmuOdoMAS8dP0WV4LSNhRm5z
iz5lSLSdtM90W0aD8n26ZRvKcKnqXXuO0zJSMRPf0mRWgXRL8RdFtsvotmA0
Bd91FTDLVTv8xXAZGbvJLmWPqUAX9vDQsOgyClV9jd38qQol9xuoGcaJ6IdZ
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
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Energy\"", TraditionalForm], 
    FormBox["\"\[Sigma]-kernel\"", TraditionalForm]},
  AxesOrigin->{0, 0.00010588654716649768`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.686904061949601*^9, {3.6869040961066113`*^9, 3.686904127659749*^9}, 
   3.686904178064423*^9, 3.68690424400251*^9, {3.6869042979660873`*^9, 
   3.686904394149117*^9}, {3.687002760410614*^9, 3.687002769045733*^9}, {
   3.687016620421714*^9, 3.687016669492944*^9}, 3.687085672877165*^9, 
   3.687173784284542*^9, {3.687173900117292*^9, 3.6871739514266357`*^9}, 
   3.687174002690874*^9, 3.687175780795054*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Energy\"", TraditionalForm], 
    FormBox["\"\[Kappa]-kernel\"", TraditionalForm]},
  AxesOrigin->{0, 6.874027101781581*^-11},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.686904061949601*^9, {3.6869040961066113`*^9, 3.686904127659749*^9}, 
   3.686904178064423*^9, 3.68690424400251*^9, {3.6869042979660873`*^9, 
   3.686904394149117*^9}, {3.687002760410614*^9, 3.687002769045733*^9}, {
   3.687016620421714*^9, 3.687016669492944*^9}, 3.687085672877165*^9, 
   3.687173784284542*^9, {3.687173900117292*^9, 3.6871739514266357`*^9}, 
   3.687174002690874*^9, 3.6871757809294033`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"lorenz", "[", 
   RowBox[{"energy_", ",", "temp_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"kappaK", "[", 
         RowBox[{"energy", ",", "temp"}], "]"}], ",", "energy"}], "]"}], "//",
       "Simplify"}], ",", "3"}], "]"}], "/", 
   RowBox[{"(", 
    RowBox[{"temp", "*", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{"sigmaK", "[", 
           RowBox[{"energy", ",", "temp"}], "]"}], ",", "energy"}], "]"}], "//",
         "Simplify"}], ",", "3"}], "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.687171770695694*^9, 3.6871717729017887`*^9}, {
  3.6871718180052357`*^9, 3.6871718557578487`*^9}, {3.6871719555110292`*^9, 
  3.687171977763748*^9}, {3.6871720529169064`*^9, 3.687172074875169*^9}, {
  3.687173290413245*^9, 3.687173294669694*^9}, {3.687173664149727*^9, 
  3.687173666393091*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "@", 
      RowBox[{"lorenz", "[", 
       RowBox[{"energy", ",", "temp"}], "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"energy", "\[Rule]", 
        RowBox[{"-", "2"}]}], ",", 
       RowBox[{"temp", "->", "100"}]}], "}"}]}], "//", "N"}], ")"}], "-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "@", 
      RowBox[{"lorenz", "[", 
       RowBox[{"energy", ",", "temp"}], "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"energy", "\[Rule]", "2"}], ",", 
       RowBox[{"temp", "->", "100"}]}], "}"}]}], "//", "N"}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.687173002188814*^9, 3.6871730828566647`*^9}, {
  3.687173134496687*^9, 3.687173143611596*^9}, {3.687173174574933*^9, 
  3.687173174707428*^9}, {3.6871732186898518`*^9, 3.687173231001953*^9}}],

Cell[BoxData[
 RowBox[{"-", "2.455176391336072`*^97"}]], "Output",
 CellChangeTimes->{{3.687173020246649*^9, 3.687173083322384*^9}, {
   3.687173137136957*^9, 3.6871731439534807`*^9}, 3.687173175144698*^9, {
   3.687173219713274*^9, 3.68717323141469*^9}, 3.687173297243762*^9, 
   3.687173669788713*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lorenz", "[", 
  RowBox[{"energy", ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.687173394316733*^9, 3.687173413478383*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.01`3."}], " ", 
  RowBox[{"(", 
   RowBox[{"1.`3.", "+", 
    SuperscriptBox["2.7182818284590452354`3.", 
     RowBox[{"116.0451917751803378893`5.064627150575935", " ", "energy"}]]}], 
   ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"energy", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.01`3.", "-", 
          FractionBox["0.01`3.", 
           RowBox[{"1.`3.", "+", 
            SuperscriptBox["2.7182818284590452354`3.", 
             RowBox[{"116.0451917751803378893`3.", " ", "energy"}]]}]]}], 
         ")"}], " ", "energy"}], "-", 
       RowBox[{"0.00017234664956`3.", " ", 
        RowBox[{"Log", "[", 
         RowBox[{"1.`3.", "+", 
          SuperscriptBox["2.7182818284590452354`3.", 
           RowBox[{"116.0451917751803378893`3.", " ", "energy"}]]}], 
         "]"}]}]}], ")"}]}], "-", 
    RowBox[{"1.4851683807279`3.*^-6", " ", 
     RowBox[{"PolyLog", "[", 
      RowBox[{"2.`3.", ",", 
       RowBox[{
        RowBox[{"-", "1.`3."}], " ", 
        SuperscriptBox["2.7182818284590452354`3.", 
         RowBox[{"116.0451917751803378893`3.", " ", "energy"}]]}]}], 
      "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.687173397509068*^9, 3.687173414145932*^9}, 
   3.687173673412129*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"symDOS", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"energy", "^", 
       RowBox[{"(", 
        RowBox[{"1", "/", "2"}], ")"}]}], "]"}], "/", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"energy", "^", 
         RowBox[{"(", 
          RowBox[{"1", "/", "2"}], ")"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"energy", ",", 
         RowBox[{"-", "B"}], ",", "0"}], "}"}]}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"Abs", "[", "energy", "]"}], "/", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"Abs", "[", "energy", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"energy", ",", 
         RowBox[{"-", "B"}], ",", "0"}], "}"}]}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"energy", "^", "2"}], "]"}], "/", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"energy", "^", 
         RowBox[{"(", "2", ")"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"energy", ",", 
         RowBox[{"-", "B"}], ",", "0"}], "}"}]}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"2", "energy"}], "-", 
       RowBox[{"4", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0.2"}], "]"}], ",", "energy"}], "]"}]}],
        "+", 
       RowBox[{"4", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"1", ",", "0.2"}], "]"}], ",", "energy"}], "]"}]}]}], 
      "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"2", "energy"}], "-", 
          RowBox[{"4", 
           RowBox[{"PDF", "[", 
            RowBox[{
             RowBox[{"NormalDistribution", "[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "0.2"}], "]"}], ",", "energy"}], 
            "]"}]}], "+", 
          RowBox[{"4", 
           RowBox[{"PDF", "[", 
            RowBox[{
             RowBox[{"NormalDistribution", "[", 
              RowBox[{"1", ",", "0.2"}], "]"}], ",", "energy"}], "]"}]}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"energy", ",", 
          RowBox[{"-", "B"}], ",", "0"}], "}"}]}], "]"}], ")"}]}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"largeValDOS", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"energy", "^", 
         RowBox[{"(", 
          RowBox[{"1", "/", "2"}], ")"}]}], "]"}], "+", 
       RowBox[{"Ramp", "[", 
        RowBox[{"2", "energy"}], "]"}]}], ")"}], "/", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"energy", "^", 
           RowBox[{"(", 
            RowBox[{"1", "/", "2"}], ")"}]}], "]"}], "+", 
         RowBox[{"Ramp", "[", 
          RowBox[{"2", "energy"}], "]"}]}], ")"}], ",", 
       RowBox[{"{", 
        RowBox[{"energy", ",", 
         RowBox[{"-", "B"}], ",", "0"}], "}"}]}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"energy", "^", 
         RowBox[{"(", "1", ")"}]}], "]"}], "+", 
       RowBox[{"Ramp", "[", 
        RowBox[{"2", "energy"}], "]"}]}], ")"}], "/", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"energy", "^", 
           RowBox[{"(", "1", ")"}]}], "]"}], "+", 
         RowBox[{"Ramp", "[", 
          RowBox[{"2", "energy"}], "]"}]}], ")"}], ",", 
       RowBox[{"{", 
        RowBox[{"energy", ",", 
         RowBox[{"-", "B"}], ",", "0"}], "}"}]}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"energy", "^", 
         RowBox[{"(", "2", ")"}]}], "]"}], "+", 
       RowBox[{"Ramp", "[", 
        RowBox[{"2", "energy"}], "]"}]}], ")"}], "/", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"energy", "^", 
           RowBox[{"(", "2", ")"}]}], "]"}], "+", 
         RowBox[{"Ramp", "[", 
          RowBox[{"2", "energy"}], "]"}]}], ")"}], ",", 
       RowBox[{"{", 
        RowBox[{"energy", ",", 
         RowBox[{"-", "B"}], ",", "0"}], "}"}]}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"2", "energy"}], "-", 
       RowBox[{"4", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0.2"}], "]"}], ",", "energy"}], 
         "]"}]}]}], "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"2", "energy"}], "-", 
          RowBox[{"4", 
           RowBox[{"PDF", "[", 
            RowBox[{
             RowBox[{"NormalDistribution", "[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "0.2"}], "]"}], ",", "energy"}], 
            "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"energy", ",", 
          RowBox[{"-", "B"}], ",", "0"}], "}"}]}], "]"}], ")"}]}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"symDOS", "+", 
  RowBox[{"Ramp", "[", 
   RowBox[{"2", "energy"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"largeCondDOS", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"energy", "^", 
         RowBox[{"(", 
          RowBox[{"1", "/", "2"}], ")"}]}], "]"}], "+", 
       RowBox[{"Ramp", "[", 
        RowBox[{
         RowBox[{"-", "2"}], "energy"}], "]"}]}], ")"}], "/", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"energy", "^", 
           RowBox[{"(", 
            RowBox[{"1", "/", "2"}], ")"}]}], "]"}], "+", 
         RowBox[{"Ramp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], "energy"}], "]"}]}], ")"}], ",", 
       RowBox[{"{", 
        RowBox[{"energy", ",", 
         RowBox[{"-", "B"}], ",", "0"}], "}"}]}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"energy", "^", 
         RowBox[{"(", "1", ")"}]}], "]"}], "+", 
       RowBox[{"Ramp", "[", 
        RowBox[{
         RowBox[{"-", "2"}], "energy"}], "]"}]}], ")"}], "/", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"energy", "^", 
           RowBox[{"(", "1", ")"}]}], "]"}], "+", 
         RowBox[{"Ramp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], "energy"}], "]"}]}], ")"}], ",", 
       RowBox[{"{", 
        RowBox[{"energy", ",", 
         RowBox[{"-", "B"}], ",", "0"}], "}"}]}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"energy", "^", 
         RowBox[{"(", "2", ")"}]}], "]"}], "+", 
       RowBox[{"Ramp", "[", 
        RowBox[{
         RowBox[{"-", "2"}], "energy"}], "]"}]}], ")"}], "/", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"energy", "^", 
           RowBox[{"(", "2", ")"}]}], "]"}], "+", 
         RowBox[{"Ramp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], "energy"}], "]"}]}], ")"}], ",", 
       RowBox[{"{", 
        RowBox[{"energy", ",", 
         RowBox[{"-", "B"}], ",", "0"}], "}"}]}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"2", "energy"}], "+", 
       RowBox[{"4", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"1", ",", "0.2"}], "]"}], ",", "energy"}], "]"}]}]}], 
      "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"2", "energy"}], "+", 
          RowBox[{"4", 
           RowBox[{"PDF", "[", 
            RowBox[{
             RowBox[{"NormalDistribution", "[", 
              RowBox[{"1", ",", "0.2"}], "]"}], ",", "energy"}], "]"}]}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"energy", ",", 
          RowBox[{"-", "B"}], ",", "0"}], "}"}]}], "]"}], ")"}]}]}], 
   "}"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.687002936166147*^9, 3.687003065619885*^9}, {
   3.687005127436575*^9, 3.687005138605295*^9}, {3.687016009033737*^9, 
   3.687016153558309*^9}, {3.687016360912075*^9, 3.6870165163985233`*^9}, {
   3.6870167735830927`*^9, 3.687016791565425*^9}, 3.687084986222299*^9, {
   3.687085030715042*^9, 3.687085031837657*^9}, {3.6870850844885273`*^9, 
   3.687085166517543*^9}, {3.687085197227749*^9, 3.687085215330206*^9}, 
   3.687169654452324*^9, {3.68716978320332*^9, 3.687169816345819*^9}, {
   3.687169865277493*^9, 3.687169906215165*^9}, {3.687170826459859*^9, 
   3.687170852579969*^9}, {3.687176111537264*^9, 3.687176164540648*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.13416407864998667`", " ", 
    SqrtBox[
     RowBox[{"Abs", "[", "energy", "]"}]]}], ",", 
   RowBox[{"0.0799999999999999`", " ", 
    RowBox[{"Abs", "[", "energy", "]"}]}], ",", 
   RowBox[{"0.02399999999999997`", " ", 
    SuperscriptBox[
     RowBox[{"Abs", "[", "energy", "]"}], "2"]}], ",", 
   RowBox[{
   "0.034482761347458687719763731545753342203901015279996062946337673028454989\
00212`49.69897000433602", " ", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{
      "7.978845608028653558798921198687637369517172623298693153318516593413158\
51798607`50.", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{
         "-", "12.\
50000000000000000000000000000000000000000000000000000000000000000000000000022`\
49.69897000433602"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "energy"}], ")"}], "2"]}]]}], "-", 
      RowBox[{
      "7.978845608028653558798921198687637369517172623298693153318516593413158\
51798607`50.", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{
         "-", "12.\
50000000000000000000000000000000000000000000000000000000000000000000000000022`\
49.69897000433602"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "energy"}], ")"}], "2"]}]]}], "+", 
      RowBox[{"2", " ", "energy"}]}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.687003066071108*^9, 3.687016030450439*^9, {3.687016075211664*^9, 
   3.687016096997427*^9}, 3.6870161278046503`*^9, {3.687016437727943*^9, 
   3.687016442483829*^9}, {3.687016487426939*^9, 3.68701651678266*^9}, 
   3.687016793119173*^9, {3.687085007688898*^9, 3.6870850321751757`*^9}, 
   3.687085171403666*^9, 3.687085217546887*^9, 3.687085254096279*^9, 
   3.6870856801488533`*^9, 3.6871698215259123`*^9, 3.687169908816345*^9, 
   3.687170854150875*^9, 3.687176168512919*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.13416407864998667`", " ", 
    RowBox[{"(", 
     RowBox[{
      SqrtBox[
       RowBox[{"Abs", "[", "energy", "]"}]], "+", 
      RowBox[{"Ramp", "[", 
       RowBox[{"2", " ", "energy"}], "]"}]}], ")"}]}], ",", 
   RowBox[{"0.0799999999999999`", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Abs", "[", "energy", "]"}], "+", 
      RowBox[{"Ramp", "[", 
       RowBox[{"2", " ", "energy"}], "]"}]}], ")"}]}], ",", 
   RowBox[{"0.02399999999999997`", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", "energy", "]"}], "2"], "+", 
      RowBox[{"Ramp", "[", 
       RowBox[{"2", " ", "energy"}], "]"}]}], ")"}]}], ",", 
   RowBox[{
   "0.034482759984074117540388056427055644398072899412811847612411436823484530\
3999`49.69897000433602", " ", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
       "-", "7.978845608028653558798921198687637369517172623298693153318516593\
41315851798607`50."}], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{
         "-", "12.\
50000000000000000000000000000000000000000000000000000000000000000000000000022`\
49.69897000433602"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "energy"}], ")"}], "2"]}]]}], "+", 
      RowBox[{"2", " ", "energy"}]}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.687003066071108*^9, 3.687016030450439*^9, {3.687016075211664*^9, 
   3.687016096997427*^9}, 3.6870161278046503`*^9, {3.687016437727943*^9, 
   3.687016442483829*^9}, {3.687016487426939*^9, 3.68701651678266*^9}, 
   3.687016793119173*^9, {3.687085007688898*^9, 3.6870850321751757`*^9}, 
   3.687085171403666*^9, 3.687085217546887*^9, 3.687085254096279*^9, 
   3.6870856801488533`*^9, 3.6871698215259123`*^9, 3.687169908816345*^9, 
   3.687170854150875*^9, 3.687176168633885*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"0.13416407864998667`", " ", 
     SqrtBox[
      RowBox[{"Abs", "[", "energy", "]"}]]}], "+", 
    RowBox[{"Ramp", "[", 
     RowBox[{"2", " ", "energy"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"0.0799999999999999`", " ", 
     RowBox[{"Abs", "[", "energy", "]"}]}], "+", 
    RowBox[{"Ramp", "[", 
     RowBox[{"2", " ", "energy"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"0.02399999999999997`", " ", 
     SuperscriptBox[
      RowBox[{"Abs", "[", "energy", "]"}], "2"]}], "+", 
    RowBox[{"Ramp", "[", 
     RowBox[{"2", " ", "energy"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
    "0.03448276134745868771976373154575334220390101527999606294633767302845498\
900212`49.69897000433602", " ", 
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{
       "7.97884560802865355879892119868763736951717262329869315331851659341315\
851798607`50.", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
          "-", "12.\
50000000000000000000000000000000000000000000000000000000000000000000000000022`\
49.69897000433602"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "energy"}], ")"}], "2"]}]]}], "-", 
       RowBox[{
       "7.97884560802865355879892119868763736951717262329869315331851659341315\
851798607`50.", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
          "-", "12.\
50000000000000000000000000000000000000000000000000000000000000000000000000022`\
49.69897000433602"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "energy"}], ")"}], "2"]}]]}], "+", 
       RowBox[{"2", " ", "energy"}]}], "]"}]}], "+", 
    RowBox[{"Ramp", "[", 
     RowBox[{"2", " ", "energy"}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.687003066071108*^9, 3.687016030450439*^9, {3.687016075211664*^9, 
   3.687016096997427*^9}, 3.6870161278046503`*^9, {3.687016437727943*^9, 
   3.687016442483829*^9}, {3.687016487426939*^9, 3.68701651678266*^9}, 
   3.687016793119173*^9, {3.687085007688898*^9, 3.6870850321751757`*^9}, 
   3.687085171403666*^9, 3.687085217546887*^9, 3.687085254096279*^9, 
   3.6870856801488533`*^9, 3.6871698215259123`*^9, 3.687169908816345*^9, 
   3.687170854150875*^9, 3.687176168657865*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.030813260619513366`", " ", 
    RowBox[{"(", 
     RowBox[{
      SqrtBox[
       RowBox[{"Abs", "[", "energy", "]"}]], "+", 
      RowBox[{"Ramp", "[", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "energy"}], "]"}]}], ")"}]}], ",", 
   RowBox[{"0.026666666666666637`", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Abs", "[", "energy", "]"}], "+", 
      RowBox[{"Ramp", "[", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "energy"}], "]"}]}], ")"}]}], ",", 
   RowBox[{"0.01499999999999998`", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", "energy", "]"}], "2"], "+", 
      RowBox[{"Ramp", "[", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "energy"}], "]"}]}], ")"}]}], ",", 
   RowBox[{
   "0.040000001833863099693165231165156824960878482513496363445563535719325881\
83721`49.69897000433602", " ", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{
      "7.978845608028653558798921198687637369517172623298693153318516593413158\
51798607`50.", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{
         "-", "12.\
50000000000000000000000000000000000000000000000000000000000000000000000000022`\
49.69897000433602"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "energy"}], ")"}], "2"]}]]}], "+", 
      RowBox[{"2", " ", "energy"}]}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.687003066071108*^9, 3.687016030450439*^9, {3.687016075211664*^9, 
   3.687016096997427*^9}, 3.6870161278046503`*^9, {3.687016437727943*^9, 
   3.687016442483829*^9}, {3.687016487426939*^9, 3.68701651678266*^9}, 
   3.687016793119173*^9, {3.687085007688898*^9, 3.6870850321751757`*^9}, 
   3.687085171403666*^9, 3.687085217546887*^9, 3.687085254096279*^9, 
   3.6870856801488533`*^9, 3.6871698215259123`*^9, 3.687169908816345*^9, 
   3.687170854150875*^9, 3.687176177565555*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"symDOS", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"Evaluate", "@", 
           RowBox[{"largeValDOS", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"Evaluate", "@", 
           RowBox[{"largeCondDOS", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"energy", ",", 
          RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"SwatchLegend", "[", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Symmetric\>\"", ",", "\"\<Large-val\>\"", ",", 
            "\"\<Large-cond\>\""}], "}"}], "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1200"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.68717085905899*^9, 3.687170896622713*^9}, {
  3.687170980745129*^9, 3.687171003315218*^9}, {3.6871710388108397`*^9, 
  3.6871710522846737`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwVxXk41AkYAGCUNkcz9GzUJuVoFllyRChfekrJKl1PJ1JJa5QSEumQ3Apb
7iuSccQ0B0b4fjKupsE0kxqTGEyblmiVYyp294/3efVOBuzzUVJQUDjyn/83
A62P8/NkIv3GutcupgIImDWInZWTCR77bO6EiQDoTAvK5Fcy8ezR7Z3pxgKw
NHI7+f5vMlGjt91tmCIAW82o3hevycS9aopGhJ4Atgx9fp5ZRSaS+/jBpVoC
2BfDL7fyIhMxKp9TxxQEcLkr6pxvI4koj1uYp/eqG0QitY9N3ksI+W1X++yg
blhFBPxsq6NO/PSDPhSwvBvYVK4yuU+VUFNO6SKFdsGJRIsJcaQKoTMWWkUr
64SZ1PBYhMUE1aFbe17GhyLSuxUZ0kVEzQOHkHlVPuTssggUxikT30v7N8X8
9gIi/b1DjV0WElFu1zwfHOZB+IKyy4FjSsQ9Q0GNld9z8L7RZdhDUyQeshKW
cm91wP0GWUaOnwIR6yhdVJXZDnX9RuoV+nOYbu0bciGlDQw0tmw9kPcN+xsU
Nb/fbQWGSazf4NAMes/bCJ2pLdDf8mSNjc0UioMq7CQOXJCZ3rfE6kmUvNY/
N0JuBs1rpTZmip/xR7/XdWtWE5jajJsWT45iODRdpR0k4Na2sW5O6F9oX1rv
4ebXAMsOVCYf0R5EYc+tNF0hBxiUhLrtCwbRYtpbt5XLAfdZ32GLcSk2qbkV
+1RzID5Pb6NqmxQdd+4LS8zkwNyHe/11IVIMUx1pvOzFgfcR4WY6PQPoEqaj
UztSC+f3pGQ0GPejX+6gS+B0DTCmWsjthr3Im3HaVTLJhjtlhc8cZ8X4Iq02
5rCUDVTP68FsvhjNp3hn5J1sMGzdKCkMEWNNn+s5chkb0u6XP4pof4M6wUbm
YV5sCLNO2Wzl/xrLDaw7TNtYsDXwODWPKUIv+ZObFbFM0KXY6S6LFeHMq9Zj
2kFM+CZeJkg4LsLqZvohfy8msJy6bK4oi7DY0ydLuIEJFM2tSgcOCXH22VmH
u1IGqNJ/zVT5JsAJlYnhIGsGFEtkSSNRndh6MFrfo4UOvVe18nOtOnGSNTEw
XUkHku4O+t5BPibSws4EZdAh5ATtJQf4yKiYFmlQ6eAs89OOl/NwdlRvoJ1E
hw+fxgtMLnRgxepLxdT8StBJXsN4p9uBDBoRfvB8Jbhb7G1O5bejx9y+ovFN
lVB7iSGTm7SjP2c/20z8GOJmgkx4slZ0GiEVlC55DCZKcib1GBdHFa0oY6fL
wbPIpGW1KhcVjcqmlMzKIXXbsR5hbTM6h5ZP0KbKQB5dP+Og1Yw+IbupWdFl
wFO7vlld0ITStaf0iYJSeGOy+M6RpEYk/WMpUHpaAlvO/UFv+tiAY0Pab2LD
S4BW9fyl8c4GVL3Rd9HboQSuWCdpy5XqUb9NcHSy9hH84rj0QVYoB4+6ONfI
yorBY68OS3KKhbu2mUe/P1kEo5Nf7YK5TNxsxN0ep1UEV9O6kLSWieNLdhR8
bS+EHEkkz+n9E5RMG3BHjQuBxXvZskdQiencrGG33gIQaUQLIlMfIyNgcdqm
yAKYPGjXx95fgREeDR6uRgVgOZD/ZWVPKbq6/94W/zYPqr74G3zofYjvNoUW
mddlQ6fdGvOVOUVorxCdMj+YBZ+uCe13exSibb1W/duFWXB4adDDs5iPaqZj
7k/XZ0B6Tu/TTqdcnLgYKZZsTIceipPQmpuFFHgsXm+TBvsdSEqKHfdxg1tE
Tb/KPUhtCVrh6/onZmvTzOslqdC9R7Kez09G/Xk7a+/MFNBl3Uo+U5CIWn3i
1pWOyZDd7o6WxTHYaMNepxudBMv7Vn2aK43EqOKEUzP28bBu6JVdmkc4brGN
uhsWHA0U9QvpZr4XUeLn+HHuw02wUzYvGZCdxkbBsfIrTeHwL4o18Mw=
             "]], 
            LineBox[CompressedData["
1:eJwVjnk41HkAh50RNVOz1Co3YUZJlx6iz7fVdPNoumZTlBRFpbZIpdjo0DUh
lGtypMYxpjQjuYdcTeaHDlchbWW7JHJb+8f7vH++r5HHYc5eJQUFhR0T/G9b
1fnp7e89UUS5ZgSWnsKpyFU1PouDwei3H/nhdxFjZwLjkuaH4VimedvqH5cR
fCDTt4EVjqCd7D1DtOtQ3vrWQc3sOo7sOavg3cOD1PDShYRpETD6y1zTDREI
jTb2W3otCs56LYxx/0ismlLApTRjkMt9f4zER6Hq11emqlo8Tqjb6MbkRyP8
4EVGUmgiBntNahIlMbjbwwvSDeHj1Drl7lBBLLy8WPvEY8lI0J9s4eB/G2uM
A7afc0jF4sPKtk9d4mDRJnV2OZ0GbhKlLzSNRzdn59LuwXTss+JU1ecnwHc5
T12/LxMKn+xqGVv5cBpsHelelI3hfDamCvmwymX2SI4KkWq0rNhm0h0MRHV8
thjIgZvXs6IQ4R081jj1ouz4Q3QbHGJ5fk8Gf552g9A4F7bOCzn1jik47yKU
x9fl4t8AgWHbzRRsjn5X688U44HJ7klTbFLx3WhDGastD/NZKmIP7zSY2eoJ
I1YWgWrc4p2dmI4pOySZZ3uKUDWbN1LZkY7eMxsFvonFsPD/yTA3vYddnWUc
k9MlMKCpQnb3HqwsfjmNvihF1nBToVPqfVQ/dF8pulQOkeBZ/ui5DNhXzJWa
t5cjrH5PXGZhBnJeDq5ItKkAJ6YluKs/A9GDkbj8rgIn11/mDXllwhNVdnsd
KuG4nbtLnZ2F8RrrBTo91eBb/9BN+5yNJZ2K+iHcOphHVDfqjufAKn9bj/X9
Ojw//+XjVy0RzCKyytsH66C6J5mksUTQvJO5hO8kB8tnlmvJFhFGXLit41/l
cPTO03oiEKEtR8gsXlAPba7HDIbLAyT5uZU7SBpRrL2xd3f4Q5h8fzJoV9aE
opag3w1rHuG0zDH055cm2CUtS4lufYSXglpatk4zXi/ZlDL69RHC97aYGB1p
hkDUlZjwmxjfm4ec1AxbECZ14DN3iFFUYZvcENSKnHhdGa9bjO1xknW+tm8R
x3jMCRyVYG1Kk8yZ24lrA4tMOYr5YDsxlPsefQBPqUMawSvEdfdXwdaSzxj9
s+/GjZUlqHTWm+rC6IFrZp6rXmEpvhhpn6m/3YsxS7Gfp5IUx49Z7r4+ox9W
lScCfeaV41XrNM6+qgF8219u4OdegV2B9h/UNgxD4KHNZB96Cqnl0nCp6hjE
Wj7tBucrYTa54GPqGgWyWaU5yCq4CnoFPmzVi4oka2zAUsW3GgpDSvePdiqR
pLGhsjCPGvzaWOhWMUeFKF69tbiA1KJlsfvsOaGqRJalLahjPoPftmnTjVsn
EbVFJ8cvqMmgE9XFVdFTJzfXd+lck8uQ7cpP7z0xmbzpX92Vm/oc2xzOrqkq
1CDnXT6VSfbWQeR20NhuRJOwa3c2raTLMaDhqPx4y1QyqJpvan9EDg61zEYv
lkbMhLe+JdfIobFMs7QggUbsNd9+nPdMjtLU5vU7UmjE82B7YZ5MDusTgbvj
smnEbh6GZXI5aAaSKzoVNMIe+bu8/6Uc1b4L32n/oBHRpKpbK97JQdSZPNoG
OvFmno0sGJ7oHxmYlb2RTlj72TMdR+UQtlSmOW2jE37AWED1mBz6wn1PrnjQ
CU98SP5CkcLIltR/NALppLTa+c1nNQqSFAMHtbt0wuhb6q+lReHQ1G+VdzPo
pEF6VRarTcEsoIizSkQn3M0+SnozKUSt2+kdVkAn+l6dKnNmUTjacztSuYFO
7piXHFxkSIHlekA/5TWd6PZteiA2otBRbnv/jzd0MvtYXqOtCQWX2NdFIZ8m
fh/MfAgzCupK99YafaMTzSDTw2XmFIp9AhpLfk78TDebzGZS8H+xyn3XEJ0s
PzAnpJJFwQozusfH6SQm2PLV2rkU/gMLmrnu
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwVxXk41AkYAGCUNkcz9GzUJuVoFllyRChfekrJKl1PJ1JJa5QSEumQ3Apb
7iuSccQ0B0b4fjKupsE0kxqTGEyblmiVYyp294/3efVOBuzzUVJQUDjyn/83
A62P8/NkIv3GutcupgIImDWInZWTCR77bO6EiQDoTAvK5Fcy8ezR7Z3pxgKw
NHI7+f5vMlGjt91tmCIAW82o3hevycS9aopGhJ4Atgx9fp5ZRSaS+/jBpVoC
2BfDL7fyIhMxKp9TxxQEcLkr6pxvI4koj1uYp/eqG0QitY9N3ksI+W1X++yg
blhFBPxsq6NO/PSDPhSwvBvYVK4yuU+VUFNO6SKFdsGJRIsJcaQKoTMWWkUr
64SZ1PBYhMUE1aFbe17GhyLSuxUZ0kVEzQOHkHlVPuTssggUxikT30v7N8X8
9gIi/b1DjV0WElFu1zwfHOZB+IKyy4FjSsQ9Q0GNld9z8L7RZdhDUyQeshKW
cm91wP0GWUaOnwIR6yhdVJXZDnX9RuoV+nOYbu0bciGlDQw0tmw9kPcN+xsU
Nb/fbQWGSazf4NAMes/bCJ2pLdDf8mSNjc0UioMq7CQOXJCZ3rfE6kmUvNY/
N0JuBs1rpTZmip/xR7/XdWtWE5jajJsWT45iODRdpR0k4Na2sW5O6F9oX1rv
4ebXAMsOVCYf0R5EYc+tNF0hBxiUhLrtCwbRYtpbt5XLAfdZ32GLcSk2qbkV
+1RzID5Pb6NqmxQdd+4LS8zkwNyHe/11IVIMUx1pvOzFgfcR4WY6PQPoEqaj
UztSC+f3pGQ0GPejX+6gS+B0DTCmWsjthr3Im3HaVTLJhjtlhc8cZ8X4Iq02
5rCUDVTP68FsvhjNp3hn5J1sMGzdKCkMEWNNn+s5chkb0u6XP4pof4M6wUbm
YV5sCLNO2Wzl/xrLDaw7TNtYsDXwODWPKUIv+ZObFbFM0KXY6S6LFeHMq9Zj
2kFM+CZeJkg4LsLqZvohfy8msJy6bK4oi7DY0ydLuIEJFM2tSgcOCXH22VmH
u1IGqNJ/zVT5JsAJlYnhIGsGFEtkSSNRndh6MFrfo4UOvVe18nOtOnGSNTEw
XUkHku4O+t5BPibSws4EZdAh5ATtJQf4yKiYFmlQ6eAs89OOl/NwdlRvoJ1E
hw+fxgtMLnRgxepLxdT8StBJXsN4p9uBDBoRfvB8Jbhb7G1O5bejx9y+ovFN
lVB7iSGTm7SjP2c/20z8GOJmgkx4slZ0GiEVlC55DCZKcib1GBdHFa0oY6fL
wbPIpGW1KhcVjcqmlMzKIXXbsR5hbTM6h5ZP0KbKQB5dP+Og1Yw+IbupWdFl
wFO7vlld0ITStaf0iYJSeGOy+M6RpEYk/WMpUHpaAlvO/UFv+tiAY0Pab2LD
S4BW9fyl8c4GVL3Rd9HboQSuWCdpy5XqUb9NcHSy9hH84rj0QVYoB4+6ONfI
yorBY68OS3KKhbu2mUe/P1kEo5Nf7YK5TNxsxN0ep1UEV9O6kLSWieNLdhR8
bS+EHEkkz+n9E5RMG3BHjQuBxXvZskdQiencrGG33gIQaUQLIlMfIyNgcdqm
yAKYPGjXx95fgREeDR6uRgVgOZD/ZWVPKbq6/94W/zYPqr74G3zofYjvNoUW
mddlQ6fdGvOVOUVorxCdMj+YBZ+uCe13exSibb1W/duFWXB4adDDs5iPaqZj
7k/XZ0B6Tu/TTqdcnLgYKZZsTIceipPQmpuFFHgsXm+TBvsdSEqKHfdxg1tE
Tb/KPUhtCVrh6/onZmvTzOslqdC9R7Kez09G/Xk7a+/MFNBl3Uo+U5CIWn3i
1pWOyZDd7o6WxTHYaMNepxudBMv7Vn2aK43EqOKEUzP28bBu6JVdmkc4brGN
uhsWHA0U9QvpZr4XUeLn+HHuw02wUzYvGZCdxkbBsfIrTeHwL4o18Mw=
             "]], 
            LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAAOQUvp+DlZD8Fo/qVPI9+P3uTRspr
NIA/mvfVWxbKjD/+fnmbny+FP6TH1rnL0JA/gGqsbNMqij/PEFwYOwqTP8Mg
iYedEJI/frbNKEgYlz+EliJwN46UP1HR90v/+pg/Rgy8WNELlz9efXjJVsua
P8j37ikFB5w/bQ62p9k/nj9nZypmtv6iP5ZzsRDsU6I/SCJ3WoM9pD801Omm
uxajPyjdw05QfKU/mSSMJzvWoz/qUl036vmnP8fcwhdjTKU/bD6QCB71rD/g
j8G1OBuoP7kKe9XCdbM/YonOguJhrT+gLRXTryK0P1x6UOYdEq4/hlCv0JzP
tD+4Zobw9cCuP1SW48t2KbY/6Uvcpl8NsD/wIUzCKt24P3xUKXYlYLE/Jjkd
r5JEvj90NEk+gO6zP8mzX0SxicQ/s7RyxZHHuD814gEegVjPPw8OWbzB6MA/
I/C7+TrC2T+1XQjn5bfIP0mj2c1OWOI/Mp7wKqJY0D9FTRID9bXnP9E5X8af
HdQ/j1/XgDC37D9of2G4WIvXP8dOHQ1QEvE/i1RX50Qx2z/tIRV+0przP23A
ZiL2i94/dXQrYY8W9j+JlS4L6eXgPy6wonWivfg/oHH4j6ad4j9dQ+XP
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwBEQTu+yFib1JlAgAAAEAAAAACAAAALj8W6v//D8Bju3TGcbjTP2/5I4j5
+g/A4hYWSai10z+wszEm8/UPwE+RfMXestM/MihNYubrD8CmAZOrS63TPzcR
hNrM1w/Aq4a8LCWi0z9A4/HKma8PwDrrtQHXi9M/UofNqzNfD8CFXsHrNV/T
P3fPhG1nvg7A07M2auAF0z/U1AvqwWENwNi+FibSQ9I/HcBvFDccDMABh837
J47RP7VrxAUP3QrAVCh9vZXb0D9gjDHw2YIJwN5AZUtQGdA/+JJ7iL8/CMBS
jFxg38bOP6MO3hmY4QbAvqtUqlA7zT+cSjFy04kFwCnXAJl8tcs/gmxheClJ
BMDY/piFaEjKP3sDqndy7QLAi60+I8u6yD9hgM8k1qgBwL/hj6zLRcc/lb3l
mJxqAMCB/JbEQdbFP7rfKAysIv6/Jp0kOh5FxD8jEEBCVJ77v8p9CehRzMI/
siqIauLj+L9C6TOewDDBP9/FsSA2Nva/0ptC2goyvz/lLJUyv7bzv5QjCjm9
Mbw/EX6pNi4B8b+3TOK6Jua4Pyw27yyl8+y/vS8KTNLGtT+DRO3QuXjnvywg
tBrZU7I/FVSukFkX4r/E8nvzWrOtP7L2xQ/IJNq/qTo89O/4pj+l2+WN6YTO
v28Kf/IPdJ4/2nwWn50zzr9wTARraDeePw4eR7BR4s2/WdLeH6X6nT92YKjS
uT/Nv3NKHXXJgJ0/RuVqF4r6y78n+oeZsIucP+ju76AqcMm/tMeXU4Obmj8q
Avqza1vEv9wttxWXnpY/XqMqxR8KxL+NH7AaSV2WP5JEW9bTuMO/U66hwMcb
lj/6hrz4OxbDvzc3ieYlmJU/ywt/PQzRwb/q+a1RP46UP9gqCI5Zjb6/jY2N
ynxukj9dURy022O0v+KHe6+93Is/7PP1OXXEs7+udig1AEiLP3yWz78OJbO/
gusElCWyij+c24LLQeaxvwtnH47fgok/tMvSxU/Rrr/G1iXEMxSHP9QQhtGC
kq2/B3b147V0hj/zVTndtVOsv9U4lSF/04U/MuCf9BvWqb9BW+bhbYuEP6/0
bCPo2qS/1CRuRIjggT/OOSAvG5yjv7YruDAaL4E/7n7TOk5dor94WbkPe3qA
P1gSdKRov5+/eJJTk44Mfj+XnNq7zkGdvwgXNYOri3w/1iZB0zTEmr+Jovep
3QB7P1M7DgIByZW/FWFIZXLHdz+SxXQZZ0uTv5iSLw61FHY/0E/bMM3NkL9K
36gpZU90Px60g5BmoIy/DNkLjzFzcj+byFC/MqWHv3HctkzMeXA/GN0d7v6p
gr+fXHJYrLJsPyvj1TmWXXu/6wFsLlsBaD8mDHCXLmdxvyfs4hg7mWI/OQUv
p+DlZL9acifuABNcP/ekDY4=
             "]], 
            LineBox[CompressedData["
1:eJwVz2k81HkAx3GRSJm/tamsqFEpHdKmA+n721UqNcWUI11SmY6JYXMVY0aO
TEKMtEnE5Jzmr5PkKMcLlRBdjIQOLGKVK2XbB5/X+/GH6eLOPqyooKCw52f/
a6q8LP3dh0PwdLc+kRi4C6djrR4fNxGgxSs/YeZJV/zg+yUkLQtBtk1k8F/S
oxAck3LrF4kQH7DCdPdZLpTsWyxUDKJQIp33nc10R+mc8LBEjRj0GrlLvEt5
CL6oz1sdKUZ0vSCvuNUDVlMLHOumxONB927Zgs+eqBzqNVRWuQJCm+sfbD0J
0YmzmknBV5HLzpe/rPJCWn90wCxhMnQ6Er5+y/AGh7PI9d6PFFxyjptmu90X
m/R9nM5YSKBRU+80baYfFjaXbrPxvw7mF3POo0Y/dLH3ru4aSYcwXOLVvP00
uOuiVfW+SvEg4q1PtxIfrBH5WNcKGXrmrTl6JJ0PozuG/bmeNMpiYzQjNwZi
WNzavXA4B2zrpx4sCHBf7fSLEq/baLV1WDPDVYjkpVr1tP4d0J3xrgW3hAi1
oWuv1NyBxOQ+U+eHEDsvtj/xNryHFiW+tuWFIPQxt5Ysas6Dp7bpKJ11Bgam
unTM+iI4xLvc6rkVgql7cqWB/UV4ygmwjukLwQDfNot7tRgc7WNR55aGwrmt
hD3X/yFCx1/SF66HwmjhEOv7i0dwNe/knIwMQ9Xt/etvhpehTDB4nrkxHGvL
l5QueFcGnnAocLZ/OHJejvxxdVU5JENDc3NywnFxJBbn2stxdl32s9iZIhxC
pdlhiwp0Lj51KL1dhPHHxsu1+6vQrPS5qPZIBFa2TdATOtbgzMGKHqFZFIzy
HfqNM2vg2ysJ/NslCgYxN8rejdQgulGkwxdFYco16cpkVi2M7Nzcbr6JwpiN
o3y8txaW5N9VXWbRaM6hDYuXPwfHP6f32fNoJPH2lVnkNiDndMBY5MAFzO17
MGJW8galJrTvqYli+FdbBn/peYNBgW0ST0uMl1lPGDLtRnwcf8t3NBBDdLhp
LtOjEQ4Ct6HvG8XoaxxlqcxpQoIVLy5VJEZRuWlKfYAcm0xqFbzV4+CUkGvN
NW3B6Lwj05TULmJz6pvqbY5tCHooXdvRHo8NLE2lr3c/4dKKYQ11wwRE7X8l
MM7thk5Q8ceS9kRUbNNVt9Hsh7pGYXH1lmT0MLX4zy8P4Et1RV6y9zV4nVx8
IGr6ICx1eIb24Sl4Jddgu1YOQzG1UuqTkgpnv7WfVLZ+wxaXj3OsEiQoXbxa
VKr8A51Vedx9V67DYHJBh2STArkyS/ZtelAadAuOb1A+O4GkBmTdLXJKh8Ko
YqZnmyI5p5q02MQiA0O2hfvK508kdctCLR0nZ6LJZL/O/GBlEtc1ycSnJRM8
B41f9OWTyM444rEgOwva4veOE3VViVZMk13DwWzIdienD/hOJm93bFiXbyCF
g0XgpspCNcKW5+SpvZbi5r4T+mZjU4h8tn11g/AGhtUsle7bqRN3eb5xw0oZ
2HXmq3QvMYhAPdF4RqMMauZTHhUkMghvpPl9t1yGR5LGLXtSGYSvEGBf0iKD
sa/fgQQZg2Td0fPkfpCBMTs3QrucQdyN+yIK+2So4v7ervUvgxxQlDrvUKFB
VA2jGVspMtGu+TvLhMawx/BvMluKDBY+FuispkE3VVxnOVAkxsq2tMOUhh7t
+iDChSLOCu5hQaAxZif5qOZHkRROrfptaxq5qbMtVNIoomW/RF/1AA039c8V
adkUyeDkp9UdpGHgU8S2ukmRnvUD/1x2pSG23nskpIAiTmUZeUu4NDz7L8cq
1VPEv214D8uHxqLdx/RSX1Ok6MLtjmmnaLSWmWb++ZYiy6iklXJ/GjaXXhcJ
OymS3Gn967EgGqqKGZuZnylS57ZEYhxCo/i4T8PDLxS5pikcHAyj4f3Car/z
KEX67XepFYpoGGF61/j4z5975S1B52n8ByjMv3U=
             
             "]]}, {}}, {{}, {}, {}, {}, {}}}, {}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-4, 4}, {0., 0.581744462196685}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"Symmetric\"", "\"Large-val\"", "\"Large-cond\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {194.4, -189.}, {
     Center, Center}, {360.00000000000006, 360.}], InsetBox[
     TemplateBox[{GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwVk/s/03scgBkqWpucIqeIFmdJauUQqveUWnKLVKtOMV1ci5ZbiDVyeym1
nZQicg1FmcoKny+bcmkuM8q9hsJRTYpZJ53OD8/r+Qeex9Ar0O0kTklJ6fAv
/rcZaI///EnELnQVWr2LkEDgLClxVkHEFvU/kxWFSeAhj2I89Y2IZQ6JCpnB
EthIdvJ6/w8Rq5ZNLVU9IwHLxXE9r14TsTkN6hdjhgSoQ5NN6WVELBreFAfQ
JOCWICrZ5EHEWPcWrJD/JoGw1rjT3jUELDbCd47woAMkkoXjtYxFGH0Y1UyI
xKCHBS6xXIHHfFP1h7k/2uGxv1CN2K+B2fw45uBKaQfPFIqsm62O9W0wL63Z
1wZyTmQiggVYkANpYly9FXIJA7o3383DXmLzz1XaiyBjD4XZkaSGZT8vu1B+
rRnYAYzwNfaqmGyzjxvMNEKkSnEY8yMO67fdo29q3QAMVuvqrnvKmK1oS0XJ
rRdwvXrkZoafEkYe+CI6qFIPzwbJ+Pur5lBphHjguL0ASJrU7e53vqPi9Do+
7kEtlJsk+kmH5CghsVJHpQ/BYP0jAwuLaVQ3yhQcOlMFI6bXN6InU2jMyVml
y4YPi6OLLMyUJ5FjUxRFS/gYTC0+m+ZPTaDbDq+mziWUQ6zdxzZ++Afk2NC/
e+3CUljqXnr1kI4UBRIpfANyIZRP1xMbVvegAM8Xrozn2ZDfO3J5LK4FIaRy
ZUciF3qitLMyN7Ugjfufx23cuUDQpz10lYqQ+81emrkBF0I974n5IEJjQTxl
o0oO7Brx00lWNCOtVcdD5o1eg9FPn7NNghrRqbi6vxppV8EEp+D5HxEiXQ7u
4B1CMhzLNalfqSFED/x6NFMLkoBjd6Sro1KAtu8ob4rZlgSK+Cq5jbYA+X9l
bGOcSYTmhTFb8e21CB2oNVrdEg9vTBZcOXS5Bp1czvpadDkWjrquqOg9XoFO
2H8n+etGwMTUN6sQIQ+5VKd0ezmdh6i0VkQw4iFrin7q4YvhkNHLbrZ9/whp
6doq7MdCoaJZXO/SXopqRuPbyPxzUPY1gDTak4c2aRopXj3ygxYrg/XLM3KR
upx2skrXFz5Fd1g7H81B7wb92kouegNdKzjPB2WhK2UPC5JdT8A+GwJOufE6
EmeGF1yVHgFOfbCutwMXxZyuiQosp0ObS+8GkegqMt2qus+ZvR9uN+xFG/MT
EIG/8qeOnTMs69f7NFfERr70kpLOIRqsHeq0SjsaiYQzFnRurC0Y44NumHmf
RdvMLqnn7LIAloQsWS44ika6N9db40lgSuz3U1tnB0RFY7r/MRJ0TbKzNOU+
cC679S1DTgOZyx9fApmhQGGknf47ZT9Ecnc1+ZuzYM0X4fjMCg+Yiz5/O2v9
JbhWO8t7cOAEsPzuB3SYJANe4xpzUN8XBAZJCZmaHGCLBsPuHjwL3t4mp57M
5QA/TN/KfAsb+BqRnXUhPOh8VZ1+oZQD2euWdpStqoAkw3eSmF89xe8ta8to
rYAtoaqabAUX3NOGmkPXPIGClQ7x8buug8zQsc6kvxLCmW+YqQM3wNhKr4xj
VwO/L5tyuEvIhEaeh92jJCE8pCyJ8XqaC39KlfUv0lthOsqeEq9TCiTZ81nr
um5QKEIJoc8qwT63W+RMl8KwvDAjOKMWdjppqXx7/AGwocYCsuAFpHq8Zm14
OgGbac/cVv/6/aWz3qK9WpMwoXIDzzreBh8Nl0aLb01BikEltlgshpDgtYxU
7WkY/rqpzNO8E173abqdapBDW9hkcVbTa/A8v+XDfMfvgLdMC2Ob94BgrWWy
QG0OevKiXPeL+8BYvWo0b7cSdcZ5z7/NOwZBr8p/p1qiMtWHzpfFSN6CkgJX
xJTiqHc8P40tNpTCjGv1sXojVer3eTeaQw4OQa+5x3KjODVqTtxbXnvhMBR9
uB/DoMyjav/IJxs4j8B/w4zSjQ==
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
wxhbFvwHjt/CDA==
             "]]}}}, {}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-4, 4}, {0., 0.6657868188775946}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"Symmetric\"", "\"Large-val\"", "\"Large-cond\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {583.2, -189.}, {
     Center, Center}, {360.00000000000006, 360.}], InsetBox[
     TemplateBox[{GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
91xqZA==
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
//8EbhChfyPFkwH/AdC9IGI=
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
s0IlsqKCq4NfNuL/f4DosHcvMy5sxH8BP3/bfg==
             "]]}}}, {}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-4, 4}, {0., 0.5759999608163264}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"Symmetric\"", "\"Large-val\"", "\"Large-cond\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {972., -189.}, {Center, Center}, {360., 360.}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
954P8//v+f4HuKbYEA==
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
Kv7vf574///z/wNzPfv/
             "]]}}}, {}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-4, 4}, {0., 0.3995486583692546}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"Symmetric\"", "\"Large-val\"", "\"Large-cond\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {1360.8000000000002, -189.}, {
     Center, Center}, {359.9999999999998, 360.}]}, {}},
  ContentSelectable->True,
  ImageSize->1200,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.687170897405809*^9, {3.687171000689809*^9, 3.687171003943233*^9}, 
   3.687171053477944*^9, 
   3.6871761784234657`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
9XX7vKnmQkwJADpsmHM1vZ/9HTbuWzp3SYukMFXyUk4YFigitJAKjPI4+NIG
Ax3Cy1E4iGWlrd5j481APKkr8PW1ftku9WO+4LNctIc6T7wrknOlyTIyZqQT
Cnzb+KBsGxRfnPaYYDCquFHDNRoGo1My1vHchy+btX2WQYn1bquqpsTcm/j8
Byu+y7iGJhD4dKOdz6w7dK1Eyi+VWtxxg30HrSt4LpHtUUYo+upIH//Zy35C
RbNu0CMcxqll3siN7Noaa0xMV+Oo1OXzx68UKFOXJ9sxbGjmaS5vKdh6rLvW
hs80qz1TIUg3t8mONtEZGGyvztnCOXiKhlcbel237mVuDCjOvsLCd3ROOotw
sZHRAw2qykDHXo8ofX39QcrI30sPGn/dDMUQFIksNadbGvax+2SDYprTl1/N
JTkdvtqLHbgYtrZ+TC8vEosLVJIv4JKdE8ePCQYiOoVqRSxt9ZZaOYykUzAU
ZN0e8dWuMtiC9k3S93tLyq/YDMKnw3cwVNPWuEakBGqIkBzpRD/UZqKsZmSU
HM9dNd81LZW6e/v1pedxH4Wo13O5ZAnIj7JOtEqUfANUpuCjCedPvNJyEE5t
uedtjZAaImdxV6FZubfxVxPVnpbOvdhc/h0uWKnfv90x0lWPIjZjtXliLLwI
obr9sOM+3TZFDBdkKTemf4/jHBeYZWFH0DNo9ooKW8YPGw/K7jqFlQoYnhXm
kdu2pXFTU7wCmpyuXBUN4+v7Lo+UdsccQ559CfDAI1iGJNSPl+3kRyE9b9G6
KoW3xzLMaew6mM+G1G8yzFHJqrjVNxw4GrZ8/5TAcok5JhX8GEAiagTKxlFm
CQIt29MsiIr+TlBtEGVv6ihfYXCobm8Z7bLy9a+sNOODpj3wgrE21LpZFAlc
wnXfdbttZRmMWMNOrQbvhqgImU1ffg1NmX0/apOcLVFge76zaKbxlSTaGWTo
rIeWtSg9rG0tksM7ClJZLkGr31WU8ZZGVy2WzqSKnUtp9lLdruzDpZfT+vnf
ULtyLRUvjqXayi1fM89FhmD0DNQzw+WgOwLIVoSZUToShtpeYq3bDLqcxSkH
yORMziq3Ey2wLVOVwMWUCwSHhL/VHCjiFs7QoWESo7Vzd3fLD1weKVy0a9t0
bd7uX+4RHKtr7rbdi56Ylsd+RbWMheY0OjlCx1k/7xsMHzgkFAMR0ROmQcAn
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
90E2YVpX/c6EASYwm0YYCowGhaPNh3s9p7oDJ/Poiz/FBgRBypiEBgS4Szvv
VkpNl/vuh3j0T8wLbK9azCx65pIrqKW5yk3hkD4DmPPJ3soDK0MQMgOU1287
ZNvNnBqL/hQ7B5xnOwfoFj+Ky9SV6PY9PgrDjUIoe49BGDdXq/Dto/2d3H0H
KF1WnSIpuVvmTmIXI1EoTAp/CVdILP6zDaG4tUSennUt509V7G+3vkZ4tuMX
3QE10ebLO1MUDvdUC+9287NeOsaNCs+7L/r02gYoWQuZzdjdmcuukir0koua
TBq7fZQ2STd5GMa87WSMo83W+4QOyJgqqEzJn7gAXbg0D36ZezlafHp+dYpo
/anW8n9GSbQodVw7xqGYTDZNrdyq1Ydy33FwV9DCzDvhx9UOn/DlGx3l2bZ8
Y2pqaShJh41xKfzu2vqWZRFXm2OoNsMwEvz19zPW//lSfO2l+KwpsY8iUTbq
MmJoUqLXfe9CjPRms+CDLcU0fdkV9HHm5VSxbZmbDnCFuZS9t4t+SPWp38Y0
F5vGGRzkeQnIPKhr6ZFGLJ+EnX56xfTn2WL6uoxJHGvAJ19RdaRCSncuEULE
XxnscnMeC08F+Wq7+ErkP4izS7obKAva8tT6/dv5GGZFfNYip+jHiTm30N/m
3Y3BA5aTomnHO8tuQBtbU0BxUp6hDVe48H3JefzknPR/vHZenG6BihSKUNun
sRl9ICMpUcm5qqx4FoPsd46Ms/2AHYxTRpnBCsG0a4gVXTj4InKhrrcvEyp7
l8AV/tbJOOalxznr+I4UPs+JL4NH201X8E/GVi8W9uCoy3vXheAkhwSTypFL
jg7Dx4/5bz7FRzu5kFSNOs3dH5urMcooYdnVyl69nAqWT5YMJWc2Ulg4MaZe
ZW7U376T85JaV9yD1LtQPqOf86bh9u3rP/Zvp/ga/3/Xl1tGimiJQugUk0gA
+yAiMkWpBG6IbpnBLw2dufk0hRfA94i6C2Qc7WtcK2nRXlNyu7+iwA5/QrEl
jm3LmwNIuxnJomKl5k+i19Jv4WwW+Tpy6h94dZGk0En8eEiSfNtm8eYPc2dK
msGpsAWpKxfcdpYW65iAnVWKmA3a5knPCszhUwvTUv0zo5SO+9Wv1TSDE411
Xm1yQa3HzWoSquV0NfUWPbtmf2Kq9Z4C1Qpe83Aprkl6w/OJSDbBhWS1n944
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\
\>"]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plotoptionsigma", "=", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Sigma kernel times root DOS\>\"", ",", 
      "\"\<Sigma kernel times linear DOS\>\"", ",", 
      "\"\<Sigma kernel times squared DOS\>\"", ",", 
      "\"\<Sigma kernel times linear + exp\>\""}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotoptionkappa", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Kappa kernel times root DOS\>\"", ",", 
     "\"\<Kappa kernel times linear DOS\>\"", ",", 
     "\"\<Kappa kernel times squared DOS\>\"", ",", 
     "\"\<Kappa kernel times linear + exp\>\""}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.687017754461244*^9, 3.687017847110201*^9}, {
  3.6870819540741463`*^9, 3.687081963544691*^9}, {3.68708199555882*^9, 
  3.6870820157124147`*^9}, {3.6871699485446653`*^9, 3.68716996692185*^9}, {
  3.6872605998533792`*^9, 3.687260600711735*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"symDOS", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{"sigmaK", "[", 
              RowBox[{"energy", ",", "4000"}], "]"}]}], "]"}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"largeValDOS", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{"sigmaK", "[", 
              RowBox[{"energy", ",", "4000"}], "]"}]}], "]"}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"largeCondDOS", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{"sigmaK", "[", 
              RowBox[{"energy", ",", "4000"}], "]"}]}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"energy", ",", 
           RowBox[{"-", "B"}], ",", "B"}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"plotoptionsigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"symDOS", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{"kappaK", "[", 
              RowBox[{"energy", ",", "4000"}], "]"}]}], "]"}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"largeValDOS", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{"kappaK", "[", 
              RowBox[{"energy", ",", "4000"}], "]"}]}], "]"}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"largeCondDOS", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{"kappaK", "[", 
              RowBox[{"energy", ",", "4000"}], "]"}]}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"energy", ",", 
           RowBox[{"-", "B"}], ",", "B"}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"plotoptionkappa", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "\[IndentingNewLine]", "}"}]}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1200"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6870166782266083`*^9, 3.687016706246901*^9}, {
   3.687016746489151*^9, 3.687016866975617*^9}, {3.687017226077285*^9, 
   3.687017227568068*^9}, {3.6870172590658503`*^9, 3.687017443228815*^9}, {
   3.687017474411847*^9, 3.687017482023488*^9}, {3.687017550755536*^9, 
   3.687017574007381*^9}, {3.687017626018712*^9, 3.687017735069313*^9}, 
   3.687017787515732*^9, {3.687017863107902*^9, 3.68701796339329*^9}, 
   3.6870179956392317`*^9, {3.687082027285323*^9, 3.687082049907544*^9}, {
   3.6870827151761093`*^9, 3.687082724850009*^9}, {3.687082960044077*^9, 
   3.6870829601481943`*^9}, {3.687085910198447*^9, 3.6870859534383173`*^9}, {
   3.687169926523183*^9, 3.687169934966416*^9}, {3.687176300555147*^9, 
   3.6871763066145983`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{{{{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
           Opacity[1.], LineBox[CompressedData["
1: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
X4qD
            "]], LineBox[CompressedData["
1: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
A4ioxaM=
            "]]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
           Opacity[1.], LineBox[CompressedData["
1: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
X4qD
            "]], LineBox[CompressedData["
1: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
sRvy9dijWdWf+/v/9N7v1JBnrMf+B8MnW14=
            "]]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
           Opacity[1.], LineBox[CompressedData["
1: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
vGm78wafPcyR4a4cpDIC/wPMXmSq
            "]], LineBox[CompressedData["
1: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
d3bIWPDbw5tdE0/Q/wC0j87N
            "]]}, {}}, {{}, {}, {}, {}, {}}}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 1.0024583239880616`*^-7},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"Sigma kernel times root DOS\"", TraditionalForm],
       
       PlotRange->{All, All},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {194.4, -118.66252583997979}, 
      ImageScaled[{0.5, 0.5}], {360.00000000000006, 222.4922359499621}], 
     InsetBox[
      GraphicsBox[{{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1:eJwt23k0F9//B3D7vryXSviICFmzZUvzmigUlSIiEqGSJCEiCsm+R0LZsidR
kjAjO4Vs2fd939fw8z3n99ec55k5997XzJ25j/njHjV/eNWSioKCQoOaguJ/
x2fjF5f29sj4cqN38JFXyciY66HV7n9knCbDwvRLbjJyidC//m2TjE9ftD2T
1JWM8CnZ7TxcJuPVr/J5/U6kID/9wxkGxsj4s0KNyejeFIRB8u8R/DcZl3tP
sXJbKxV59PP90bg6Mm5ncPlw29NUpEv/7jHnajLOHD3/LjMzFcny2BSRKiPj
WYf7+HyY05BLf7hPJnwh41KVwc6HmtOQSIdbWs9jyTj1n5/Xbj7OQHYYRC4Z
vyHjRa3Jt90yMhCr+EUdxddk/CtwdrEMZCAKVZ76C8FkfLs7qdz3UibSxfHB
7JYnGWfoyteil85C+H5MPkHvkXFd9bNj2ywfkSzKxykUCmT8Vv7yBZbIXERR
N5MuRpaM5ySErygU5SJVKYN3paXI+IPllY2igVxkQENHwlyEjIuFFkvUSX5G
DgVLFJRzk/G7K2QbgcbPiCfXRLUPBRk3H+rTdT6ajxBseEV5d0i4h5hH8tOL
+Uh8iX7gt00S/nZXInTQJR8pvFWpM7FEwo/OcLUOtOQjs6lJnedHSfjWP3WP
0sAvyHVZk2mWOhLuc25yr4ZUgIx5R178UEXC3bS4crzPFSCP2+s/nS4n4dbm
xUpfnAuQYBdlB9tiEr40IUL3eKAAKcc4dhpzSDhraj4W+PUbIqndzBYRQcKz
gr1m+Z98R2gtNWQ4TUg4m0313QXTEqT5prTBtCEJNzVLV+l4V4K8u87tVqJP
wl3uUA+e6ytB5LXnK810SPg3oYP0326WIlay0YaZaiQ8o0MXIVhhSA3l+PNT
oiS8sFJutqkaRyK3mz6wCpPwnQJ5/sJpHLm1WlTXL0DCHW/dTZpmL0M2J4IP
ePOQ8AjFcQZlwzJEtEk+/ReBhNsUil/3mS9DAt/5NJqsE3G20uYyO7Fy5Pob
u5UTK0S8+NzXf9Z65cixcCNOqkUibvOcV7b4WTlS8lLyduoUETeztrOz+lOO
zNm0r831EvHZKpvwObcKROeU0JHnFUT8Xx5jjuNoJULuqLRJCiPiVnafxNco
axFcLNHXO5iI+yeUKJ6Vr0VsPNxSrAKIeEW6b++udS1SJSTbI/qSiGspHXxU
0laLPHVM0Mp3JuK/q98mOefWIUMkV9EKUyIuocug9cX1FxJipa+eakzEV6sv
Jyt++4WoFEmb+xoS8SsBPvcUl38hUWYTMdq6RPxD7yPFHJvfyIXca4xt6kT8
eE3RkRDLBiTvotTEqAQRP/Mq2ZpesQkxTWSmqREl4nwfRouHDJsQltUx3kxh
Ip7n1y5F49aEWMXFG9geJeLyyLtS7rImhGuaqXrtABHnWeF0/njpD+LpO/qB
/h8B/6Me9rj/STNytfztbZE6An7z6BXmfro25FjrSF91FQEXloyzvyPfhqyN
SBpZlRNw04w8WyOrNiSGrlwnuZiA0zl1d3pVtyED56dP83wi4EI2f/p2g9uR
B02nDhMjCTgTT2z8Q9kOBBl8GfEplICfnaFsOGDdgRCWGtkuBRHwL4qpRnKJ
HcgXsgVtgA8B1zLsrB4jdCJb+oFLNC4EnO3r6RMKa52Ib2/Prw0TAm4j8X7X
o7MbMZoT0ow2IuA7HFTalw/3IOJ7duUnDQh4sXoKU5ZBD9LIR1tkr0PAaz/r
fmfp6EEOWUikzagScArWlhex/b1I8tSzFwPCBPzYiyknT9oBxHX+tE3oMDv+
5mSlhqbtEBJnpjCB9rLjOQvFXBuRQ0hxi5TFYjs7fuVgsOXGjyFk95uA8dU6
dnzAnntrhmkY8XzOqH3gMztuQvsssDB7GPEntom9cWfHp5j0Tj6iGEWyvBrS
NJ3Z8Qvb8ywu4qPIr9Vqgc1H7PjTuC6DnuujCFtXEbeRJTu+Wy+sWJg3ioQn
JTD/p82OyyYpMnVZjyFvZW2m33Oy41Ti64r2s+PIjw+Wd3TI++0X98UH8k4g
PRymwxSs7PhVLZZptqsTyJF/V7rNKNhxrc6ciEuFE0hShUK9wDgbPlHN0vLH
bxLJuEadlfaFDZfeE76ddWYaKXzy1vrTZTbcll2NT5B5HuG3ePShQ3P/equL
2g+vzCNBOpoDlKpsuM6MAKXBm3nEXGTtmp4cG/5K8+ppqgMLCHP3lTObh9lw
jwz5cx5pC8hNhPGw2hArPs9whO163yJSIzpw1aabFR+N+uxQSreEyHB8C3rd
yoqr+8ed9jixhNAvWFBPVLHiLbEPD5E9l5DcRHwuMIsVl9QyFngrtoxQ0zpX
tjuw4leuT1j0hq4gtouXKChsWfE/AnMXtLAVpKNX8JTIHVbc80tAP9/cCpJd
0JLrasiK/ySS0ukuriL6d0/E8SGsuFvSvFg7+xqSXj9mb03Pijf91T1lkLmO
XAq/xrcbw4L/+YR1DCptI09l2M9rRLDg9g/eBTM4bSOpzTWPQgNZ8NY7hPd5
edvILkmlnN+DBfeZj1V5LfEP+RjBb6VhwYKfnTefyBfZQVhez2eFSrLgTjIH
eoxU9hDFkxmtncIseLDi4gr6Yg+xaDPf4T/Kgv/elD5ZUrWHFB9sv/SVzIJL
RNbHlopQwP2o4sXODWY8HfnxmreIAuqi/RQEypnx2rk9r81JSlhTULtlU8yM
/yR/1bYhUgF/xz/fr1+Zca6v8gNySlTw9LBdl0Y6M76rm6lR50cFIjH6z2yC
mPFKabcgrhPU4PtWoPyrATOOzTd82/SnAY34kkuaM0z4LnOayaUgelgI6vlH
M8aEF3ubPH5eQg9v3bczy/qZ8IQfJp3kOXqYMVWiP9XChOcNysWZ6TBAOP9X
TKKICR/djXLJ4WSEvrRsKbIvE04fJHWvFGMC3zf1fY0vmHBbi/krt9eYQNpv
KjDQlQl3p/h61UmCGbytj0/SPmTCk+ce0E7FMYOoRErixjUmPOsfhQ3fCxZw
yosl9Qkw4ZzTb3JDTdmAL7kIf8vDhNubkiaex7NBbUSnrQEHEx426JE4280G
/zly1DcxMeEuxan2qBE7/FSI8CpfZMSdqj7YPZYkAFuJ/0o6xojzrKYMB5wm
Qmq1S/vjG4x4fTHqqBJGhhgZJ7UMPUZcqwLNulFMhsB4+9y+i4x4285Lh45x
Mtg/vu9/HmXEPemN+mbhAJzmNUF4BRnxH5iI4ruVA9DqhKbWzTHgFgthpfV2
h6B6UIVMMcGAT24X0QsmHYIibaXnJwcZ8Nd9odyTLYcggV/GKKGFAW+oW5L4
qsgB9xsE2JwKGfBHMCTpRH8YqITonY56MuDWDgS9+0WcsBpKPazvyoCHDFyy
7F/ihIntvcuBDgz4ccWv6r/FuKDhz4bIuhUD/pSO4znXey6IeTbV+0uLAb/U
XnM/OoAbpNp+n3M+yICTOu+w0z/jgZvekQcb0+nxioj/8mtG+KAB1uidk+hx
N8z0mwL9UYBtgy2+OHqcm3vyw7TIUeCz5+63D6HHc99tGB+zOwpDpknph5zo
cckiapGJvaNgdSr31E01etwwLQGVkxCA9jWiJP1pevzBk0BpWT0B0Mh7zJcr
T4830B5f8HAVgOMiCrRUovT4wQVHOdp6AZg6VNrwgUCP8+8sZTQ+OAa2S/Vm
s710+DMXXt+5n4LQ91FCL+ovHf77Q04ueV4QLt8LUYc/dLia9+vkUG4hkBq4
KhZWQYf7pLOGRToKwdLvzhW5LDo8rSnG5q+EMDhljL9yc6bDD/WW3Bz5dBzc
b1HnMJPp8CgLoqnynhjkNmoEt7LQ4fFSjabx8uIwhATaxtPR4d6fO6Pv24qD
Os/BEye2aHH8/Y1W7X5xYOsSyr06SIsLLgv1KFZJwDvdC3kxn2jxbBHBRtuM
E9D0MzjcPIMWr3tRXz42fgKoZFrsxZJp8e1/8jH3yVJgRTCWLYmixcvin74g
6UqB5O8HXwae0eJpV1i/qbdJAaYeViCsTYtrtXhofRqVhqWvbVEL52jxwNTm
gFEGGTgmyPXkO9DisrWsj0zFZcCXOllBS5YWpyrRO8rnIAM6+JdCWy5anFnI
gnmYThYGlDqKvk7Q4OcPs3sMKskBhQQvpvaSBj+pTbft3SkPbofO3Hzpvp+z
mJdomBRgfc98p+oJDT6Qg4tPKivAXHPqqQvWNLjmR8HAwXgF6HaWLNS5TIMH
uSjwpN9VhIKK059NOGnw4I4HZaokZZDJMdV5T6LBp86+Sr1zXhk+Rr+YH2Cm
wbMujm3sPFeGFOtKCYtdatzsKb+V56IyhBMuZloPU+MN6otnqDtOwQNj4+Qn
H6nxI5GxFp9/nIaJc+6q31OpcU5jJMZw6zRYnEgY3HpPjcuF8+2+UELAiGqE
1z2cGq+4pnfO4DsCmun347yfUOOV71VTT2AAx1aevg47Q41f0DfSRJZQ6AqI
eZXVRoWTMvN9fS+pQUslX/atRip8Ul8lWtJBDX7tpTUdrKXCu5brP3C/VYPS
xwWcz4upcIZHG9ivMTVIutGSpZe8f36vmiLG6yxYi7E27dhR4WaWN8Uu1p+D
7brnh3VYqHA5xlS/mShNWKFhOE1LR4XbPmzbcK7ShDkkxKxojxJn742dM1nT
hIG8+Mxjy5Q44evnLlmD81Dxtkhls5MS75bTHebjuQCB1iu3ktIocdbh9EuB
RVrwH9PdjBVVSrzttzj1GfQy3Cz9FcivQokviutTiry4DIn20nY6JylxMOM4
GP7zMgh1b8lnC1PirWu2cY4COnAiO6jiNgslftvn1dJkpg6oXsrvb26jwLnq
X37MqroC3lSHyykaKfAQ9uohs+krUF3glipZQ4HrDx1/dItwFbR51R/4F1Hg
TEmlaYo3roL+QsfWmfcUeFG3PKvFylW4F7578PNdCnxebLKL56QeZKvf3uwz
o8A1ltC1Nzf1YG6ruoflBgV+3uclhaWvHtjfDku+e5ECv3HeUWCpRw/c5I5J
88lQ4K+fCMUt+F2DIx8j3hxZ38O4uHzaKVb04f5JUdru//awHr0C1hwWI7Cn
/Z7mxL6HBYzyxzmhRvC0TeMCiWoPc6jZICc4GIG/o2XI+fFdzHTxmcbhPiPI
/JrAWfh5F1NsZn//6esNmDzJIflafRdTmNhLZ3Y2gTvyNAaX7Xaw1qDcMxxp
t8CWLmJzynwHk7Os0sqpvgVO7UfjfK7tYHj2uQ/PJ26BjxMMlijvYKnsa0Ud
omaQWvD0vjjtDtZ9Xe3LrTwzGJVf9GB8+w+jP/DwP4Hf5nBboS+9vHwbc/2u
cYBHzhKs0hX01b9tY9wPtfs4jCzBmjOMujZzG1sTmh/WeW4JdttqNxvCtjGz
Md0F99+W4IZlkDtNtzFmj7RTrdZWEKnh6D63vYUJKd55+/HzHagyYNHjlNvC
GleO19jbW0NtjSVlnPAW5iAc2NqZYA2/lLCcI9xbWNbPrWa/Rmto5rZnPEa1
hT2Lvk1VJXEf+vv/lko2bWKcugV5hbP3YeNOsshZm01MN1rTp8X1AYg6K+/Z
pmxgAlqs997dswO895LocNQGxn5a6BKHrx3oq92+ZuC3gd24SfG4LNUOPNkC
s8B2A7tHOqOTOWIHnSm9BgTFDcxCX5S71fwR+P55nvu5fh1zan6v9PWuPYyJ
VputLK1hHZxb3+jjHMAttDvw7uga9vGO2AmmMgcgrc1/6/m7hlm6eC+pjTkA
UnaYrbJ4DXv7WILqprQjvDawLnrts4Zdqr2eLFXnCGe9WckKXGvYS4GLxXZ0
TyCxV7fC5cwqdllVTOZUpgvIjMhstcqtYrdKpUWdWlygYoooJXV8FfP6JOI7
8s8FxtYbY8fYVjFOjT9JN3SegihJ+7Fuzwq20Ug0+rL5FPLUz/JLPFnBkD+5
PQf03aDik9zzgexl7HBGNKPnSQ8Yf3FQRePwEpYq6vOeq9ITmJ59mo9gWsL+
WFrJSg95gqTz+eSBf4sY0jybbLbnCU62z5ieDi5iIKiowq7sBXQ3RjuyMxex
pOi+v1G5XnBM7qsj6fQido1VMulIkjeYj+l96jVbwKbujDFMRPpA0evj5yb0
Z7FZvqObKon+wHBj/Dalyiwm+zabfK7MH/T5Uj25js5iC79fIucH/WEpUwDX
np7BfOM9a1SPBoAIfuTUZ48Z7JFJhthoQgC8mTog/TR9GpPpV9+WfhcIjkDJ
w7I1ifVIlXtm+wfDTxr8lGD/JObL8JAzJD0YCHXuRkjFJLZcr2SvUxUM2Xr/
ou2CJzGFl4U71pQhMHJvndTGP4k1fxId6ncMgauRswzvtCawM2kLWmZioZBg
mC38TWoC++4beZlaKRTmjtxXbzo4gdH2vJMLUA8F/4wJL6qBcayitYd4wSwU
ykqHd60cxrFyx1ftj16HgtRk58qJ+DFM+fWdEy3roeCwICHC4T2GvdBzXPpB
FQaF6y9Mdq3HsIIhhQhv1jA4Qyda9UtxDDtCFjqczx8GVwWeRt9rHcX+NbRl
OGiFQZRoQ73Oj1Hs05+6Lq1rYdAtzU+hmDSKcZ9TEdm9GQYWaN1dOrtRrL70
aO7iozBwNOFSTmYexfiq2pSpo8KgyMLW1n9pBPu9VSid9C4Mdu//THrUOYJV
xIhd50gLA5+n1sxo2gg203vv84tvYfAmuqinR3UEW5r6PHG2PQx63rERK0RG
sKgYr3yv3jDgSzU/l0UYwX62/o2LGAmDjC9MOS59w1j5Q1z52NJ+f3+MPA49
HcaYvegT15jCYbcjJ3/n1jD2XzXhVjYhHFQHqCZGNIYx46dKhyQPhUP9XKZO
/sFh7PIFvCmcLxwIa7veb/8NYS2Hjf0cBMNBb+fq9xfDQ9hpr+REXtFw6GHe
PqrzeQg7kBFv2CgTDnzky/oKb4Yw+S/ZH5vlw8GSK9n/iMcQ5jguXRenHA6Z
R9dLaa2GMIw9m1ECCYe541rLM9pDmExPXZXnmXCQkXov3Co7hIlddTaOPxsO
TgrLN35wDWGbFkOCbhrhUIRohCZRDmFJud7uRy6Ew9652Aq/iUEs00Dmp5d2
OJy9OL9h1ziIhVPzXcy6FA6+emoS1wsGsdf0c66ROuHw60a0GcQPYoEf8rKQ
q/v13Z5+LeQ9iN1woFHO0N2vzxrqWO8PYrXjNC9b9MIh5lHE7sqVQUxg03q6
+Fo49DmPy/QoDmJ3FoJ+WeiHA//zU3fKeQcx04t2vnX72epVSGwm3SBm1FTn
MbufM4OHG8NmB7DuRI4Dv/fz3GsFGpfWAaz5TXza3f0sGx+geOvHAPbnnWs8
tt++c0q/jUbSABYp/cXwz37/xVmyiZJ+A5g+pdKZ+P3xUeS/ajtoN4DdyFr7
zr8//rNF3Yw7+gNYV8iAqNl+fTmZH5SqTw1gWOFcw/H9+g/HPrwXxjeAXWtd
eh6rFQ6eAUoxN2gHMCMPA89CzXBoX6cL12rtx2yOKB7yOLc/3o63i/3x/dib
m49fzO0/D/fvklcc7vRjy10lTHT7z0vQVZ8Qv9WHmT1ejBU9GQ4bN6YeSlf0
YauC3Kfkpfbvr4p7Y2VQH3b2ybbQ+P78cNj9EDzH14eNdvKLyfOGg2a/0pzn
VC9Wy60303w4HLjx3xc5vvRiwTYK2iRSOPx8scqCavRixrlU15yowyHK3M+m
ldCLWZHmi2K2w+CeGs+vu109GLCWKpkshwGB9lxA2IMe7IttENfPwTAYGe2Y
ElTowahnhXTMO/bf7yqbC0UUPZik0s65hIYwMPWNZByO6MaoPTxPLX8PA5l7
x+89MenGKuT7hek/hQHdheIaZuFuTPfSv48FyWGQwzzySq6oC8NH5XzGAsLg
X7Asnc9AJxY9/l7YzSAMmh5WW3JldmJcd60CTM+HQbLOjcqcx51YGOvDsS7l
MLhA8vL+S9eJFWUKbEf/FwYxr5upRCQ6sCR31c6j3aFg42RlXrL2F+tbuXjw
R20ooAZbZVfwv5gjvWTm5LdQmDjM/+Kp7l9s+czHEdqIUJCPe7RX79KOXQ0a
aZU7G7q/ftCa3lJrxzh7cuftT4RCr0lM6QpLO8Zq6TF3lisUvHnLnvEktGE0
iJGrZm8ItCQR/tlWtWLNL45+iD8WAnYZnzaI5BYsSeRBWYF/EEix2XqpDjRj
/knMfSYGQbBoL872+GMzZsgbYXJBIAjsVTIEWjWasT9h8iqrhfvf/8akS1Fu
f7D0AC23hO4AWJ4SO3/yVyP2aWK6v3vXDxy+pN+MsmrEbvUpj/LifrD2TNBh
naIRe/vh050vz/1gg8D7/vvJBozCqGG9ec8X/smTVk+//4VtPX8ySbP2Cui8
NhLU7WuxGvvYDJ3yl/BK27EgjaUW0zBpzRR9+hIYDi3VM6TVYDzy137fk3oJ
TBnTa3Xd1Zhtj+IkT6w3sDf2aV8+V4WtRv1JDLznBYe5KzcMDpdjf7d0Qrhm
noO+lUBis9t3LMOtLalO/An4P3rsG/61ECtJXnpV5+4EJW7lD6/OfcPqOT45
8jc5wrGI20izaQFG6UXom7VzgCUsufuPaj5Guayj+izrERyR1RRPImZiXNYc
gv3Eu/Dy/MTWUa90zDrnCzHqgxXMmPrWJq6kYh6xl5sSFC2hKLDGKvFvMsZ1
TfJzj7E5fPwVpnrmVCxWUFd6QwkxBNfNP/3okTfY2q0smjMm+nBeiPQMpXyN
VTfHDcW76kL93rGHHsFBmGX1txM3H2jBXcMPGe56r7DGJubxI2nngCZfcOQZ
1wusU5tw3AEHQDm1T2/hjlj6fHbhN2k5WHgTY7EYY46xlP8oKDt7FNyoIivV
Fc+DX5P5FfwePUi+vV19QP4hZEiUcjtuikMf5+c5ZnY3aKM/ptHArAy6sh3F
Pme8Qf23qTXrb1Uo6DTwfOXqD4+UDBaTIzSBFZ8WqDAKBfEsijfuhpfgkdX9
yYrIKDjoMUJ5fFEPkpTEtCs/x4D8je27T5oNoJVlOqeyIQ7eeA9NE/KNIM7w
pPJt70TY69KwGFW8BRQUX/dul6ZBwAMnY7dFS6j+1ekvq1sIubwJ8SnHneCu
c1f1DbHvYPb2k+KPUSdgONZN401dBAfng+oZkp7ABdce99b8H7D6Ts1V6rAL
/BLpt3c8gIFrVOYy05Yr3FWz/9g99RPEE8ulnKqfg2LMUv28fjlI3vqraXLk
BTDM209Rl5eDju/dg/kOLyDj7WNh8dgK8Gujn0ng9YSpRYdEN60qYMihr1K1
9QKbhCevebJrIdc4/eTHmZegsraeL324Ds5JXWO1VfIBFm3n5nPedXCwUEbA
9aUPfFx3Zrc1rocK42yqx9yvYO7SU79Slt/APEWky0J8odC9tPSTfBMMKre1
zd/yh4SM3d/fbZrgfF7oWtG+73xbkd7ypCZw635Y9mPfc9dFse2/bH9Ax7PU
xMg0ADbbMEWK8T8w9aUpYkknEJQlyvJ0olsgaIInepYlGE62tkeV1rZA1KO7
Vuqng0HKdeap+L8WWFNknR+1CQahWg41BrNWKKFzu7ZRGwxkS9sWTLQNNoLv
2lm5hgAbi/c3CZM2sI3WrV74EAJM+TGxsSFtYD6bT13WGAIUlJW3n6y0gfLv
U59iCKEwE8e9IlnaDgc6WK9/NgmFcTXpjriFdugqWPdhtwuFoSn1YiaBv7Ah
qg5Ez1DoVLT3Hnv1F+qNGfr3UkKhqrXmwLsrHTASGJkePLbvP9e+DWbvDrj8
jqqddS0UivlXelwKOoCi2ZtNhjYM8ux4P1zj7oRwq5NJ1vu+e8/idJJ1tBP+
s5EjplwPg7f5AZyuHF3wEMpVdC33vWeUuDNxvmt/ntVWZ+x7LjD9V2VFThcE
p98yveQXBq8uD2XIDHaBZbDfsfjIMPBcWw9KIHeDjC5aFPk+DJzPCui7OXeD
CveVMY8vYfB4WlF5KrMbYp6lXXAoDQPb8EtHrvd2Q4/4PW5yTRhYDriMyar2
QFtK9PcrXfv+dGtymmbuhRpM265/KwwuCowZGSK9MKJLyJGl2l9P67aRarte
oElLo5JnDAfksDB9clsvyNbqz6nve04JU5kmMPSB7Yq+n/5/4SBndbXRXbkP
WvwHVA/xh4PYl2fRRu/7oO1VrUS6eDgI3YhwrfnTB0L9KY9cpfd9Q5VhKk/T
Dzn9YxsU+57jyShVS5HvB9+/CzpK+547rNMqTLrXD7uELwyC+z4gr08yP4/t
B9aSlNyKfT+wvdubn/3dD96L2V2H933hncQ0JUExAGE/eLn49/1B5XSwx4Jz
ALo0sqkH9z1ndCuzuVBuALiypCJfXQyHvAtQy6IzACF6lGc7LocD08lW7Nb9
ATDyu9fWciUczHnvFXzx2c9W2iyu+z4qYtzNZkgagMg7pJyGfT+RVsKTjUsG
YJAr+kXjvq+s+4Tf5nYMgMTeocvu+/76WVMcSrMyAP5hPAPd+5kr/8qr6+yD
cMbv8d7EfraPH3uWLToIxLOsLqn7ue6VqwOF+iDE3N7kPPg//9kT7uuZDQJb
/OXck/vtPzX+YJbuNggyxbzMjPv9N6srX/8XPQjWXbe2Qva9JirdeEknfxCW
6wYu1e97zYvb4lxKwyBMFMt2/dj3Wg/t5qmNyUFgPJBia77vWbmFIBlt2iHo
debvx86HQ2AXv0gC3xCs8cnvtaqHw0jFN96VU0OwcHk2KUktHFQ+aR/SNBiC
JmLDOxE0HCJjBlni7IdA+UR1tbXKvhdtmbfUMobgZaLd2hG5cIi7nrAQXTEE
tZQ+aREnwmFF9eT4dP8QVBua9VTu+y2Fw7Q14tAwTAVTiFrt/w/8o1ypG5ce
huxomfk2rn0vz/iWnbo4DHwGM6F0B8OBpiwvZ9hrGPqEdH5+ZAgH4yyNDwrv
h6GHrmZHcH++fnndExtQNAyRQRcemO97zsKazk92cRjqUfPTYrNhUEk2uu11
cwR+l8gPkPe9dmR3zvCvywiI6u1sV1SGgdOEl47Y6xHAi3em0JIwECr5eLql
fgR+5mn5xmXt/z9ZUR4WUBqFWKGF55svw6BPJ4rtid4oaB+7u83hFgbyp8Ro
6x+OAv2YWRm9fRiMsV9bsk8dBVeTm8Y3TcJA/Xv6r5/kMXj6N7BpRzoM6Fl0
XpjPjYEPQ7duXksoXBc2wuUZx2F/iWJ7Vh0KmaoWe0zHxuHLKfdXQj9C4ZKL
87N8w3HooiQ9PpwUClFjCS40leNQeUeWGGAbCkJli49SYyeA8+I9LYQqFM45
RZhPaU6BCeeLbUOZYPAaaFezT54Fxas9b5nV/aHvu9YD5+JZ4HBg4VQ87g/K
EXiUe9ssxK5J8Fsw+cPCucxJf/o5ENahpC9p8IObWc9Cku/PAaEplPGFgR8o
Ox3rbpWdh+mzqjzl93xhk1bpO7f5AiRxVelcj/SB3FgfHfelReCP6rYKP+gF
9WSfcXaKJSB+XzKP2vCEsYCX7omsS5DDHxqR3+0J/7l5Z1ccX4Ida1Ur5SRP
8DX2ZGA2XQKUnv68h5Qn3OJxx6Prl2C7ZpqZ9eoLILx3lPqcsgxFR7dFDPQ8
QIzDsVo1bxnYUPr35456gHqIw81WbBm8eRJzbOfcwc3jceB61zL81nFkfuTn
DhOmjyZOE1fgVHqQntLPZ4DzPUioe7YCllF+HOOIGzxMsiCM6K/CtZLdwS4L
Fwh2iYkLvr0K8dePJHGouECOTsNxJbtVsP/MXPmK7AJzuwpngv1WIZlsvkJZ
7gw2N5jtFYtXQf/4L7LxMWewPpDXEnh0DQhf4evrBSew8tmLOjmzBv/Nn4yy
zXEAHxM5gYGNNXh0caZjOsABUuXuffKnXQd2FX+IuecAo0PN1f1H1sH4d8mM
l6ADWEDqht+VdXCq9umLfP8YzDe0jfoK1uGvxqF07zh7uGn9lufViw0Yckxv
eVVoB9udjA2LQRsQQpUvqxNnB2/Ou7gbv90AoykZkupzO/hz/Hq/dP4GvHkf
n5qoaQdnxw8m9oxswPmTLnrRBQ9BxCLsmIzmJvi0PL5ykWALKya+Yr1sW8AT
2/g0cccaQn+vd2twb8GsuOfD+QZrkDh9JzBPeAsk62SbXyZYg9V/6rOv0C24
lqEa4H/WGjq7qD/J2G/BbuL9R1Mh96DUwEPGt20LDtyYMPsuexf8rjgpycZt
Q/XarUnVj5YQ/kvUJjtjG765Hhgo8rKEOI3+d4LftoGlRuGjq5El5J7WpDnc
vA0GlNHC7QyW0CHC1fiP/h+4yrbLDd+1gONUpRZVj/8B40SNEbX8bajKow01
1NqBks3b7DGUZtAkUfSz+foOLK8MgtXALehKt13VstqBTw/+YA+xWzD37q8R
8mIHTg60yMq734JDARmCAt92wJ2/SJd1xxQsb1/8McO/C0cX+WdryTeB5sDr
MY+tXehi+E/pfLgRkObc2Uj0e9AZcJ7mPzMjOFpzVz6FvAfUJbuBZ6WMAHFT
8akR3wOHVY+yyEZDcBkZFiSa7sF/iQ9VBUiGMPdFxjKpfA+EzlTt+aQawIzo
xCNzdQp0gV9F8B/DNVjh6H2ZpU2BTvHP54YM6sE2TXPMylUKdF2MxelekR4w
9f8o8zGlQBVylUZmbfRAOCKEmOVMgYYdu74u0aYL5tvyn5czKVBjzQVu0byr
8Lf+5YI3OyXKfTm4VCRWByKR+HPXDlGi/QGuU+wuOnD185e3gjyUaJeR/X9K
BjrQEDV8tkqUEuXglsm8ekAHqszOxNCrU6JFPFIuogKXoWD93xl/N0p08tgd
9aETF8HB+kC0kRclWvZOYvv9sjbI9IrNiPpTotSduEDbN23I+WkUVR9NiUbc
dzJOOqMNqUGFUyz5lKj/Uf2QXCMtiBJwiAiZpESvNPdGDyaeB72ogAnTBUr0
0EzIn88254HEmHxaap0SXaCoujSjcB6C5/6MN9FQoQ9OvlyLa9QEn+8nVEh8
VGjKP4Mnf6k1weny9EikPhVqyBR1idFDHa65msu/LadCjU38f5n9UIOo+AN0
67VU6PWJ6fXaSDVox6radJuoUDbth6KutmqgTyPmyNpLhZ7Tbn9TwK8G14OW
85+vUaF8iz8dvYJVwei9t/QdEWq0j7+tgO7xGXhbJk9ZcYIa9XP9klCucwa6
hyea+OSpUYHaCLxM8gwYH79o16VKjWb+N1zrMY2CyeeDny4aU6Pmtlmqa3dQ
uFWeKi4XQo3WpBD9mzsQSBi9/i/0NTUa19r1kj4OgUF65l+zsdQozYx5R64p
AubaD++npVOjsbl3TphMnIbbbQqZXD+p0cX6znzaPRWwGq8RplylRocFZAjD
6CmwYZ7mbzCiQYkSHrluREWYdimiYTajQad62PbShxTAesJvTOMODepE3c8o
+UUB7lQezyx7TIOGP7dogOsKYO5hJf01kAa1+iucapciD4bLgxBXSoPO3ud8
76F9EjrMPh/trKBBafL4ZOf4T4J+03PqQ/U0qHtV/WjWphzofeStDvlLg5bN
w21Suhzo3DG55LVAg+Zup3K5MciBeneHsTU/LepIcvfQ/CsDlefTkbTjtKjf
Cw3GO3kycLbwCd+IJC3adY+D+CtIBs68PjRicooWrbs5F37nnAyoXNa7f0WP
Fp34uW7Y/k0aZMobXRR9aFGRrehEwQwp4M2qiqKbokWDDv/n+cZBAvTeF36v
W6BF/Y3LAr6flAD/iMye4HVaVMH005jJujisuAbzc9DSoY6WWtbibuJQp62f
I8xHh57f8GOtCBADp7nRSk19OrSy5I7uXpkIZA/9nWAxoUPfnjFi6vUXgcH2
WuY/t+lQzbzQG5J6IqCNfbxi+IgOleF9xXd84jjwhzr23gukQ2suxwzdPHgc
fkvTrvr/pEOtdCtsD3gLAZXQOsflWjpUrfmrcpmuEChyTSqTm+jQm095vrcI
CEES1e/nsb10KET9ChKqFATnlkiW7A06tAwOyD5gEYRjjseO/ZakR7lwintN
2QLgWqimyx5Lj+Y2P9H/deIoyBg3LZgm0qPScQODJ1iPwtSecXBuGj2qxdA5
9HeKD4w0nGqvfKFH+bI7Ti6n8oFyezpE/qZHC3CZCU1+PthYZhXnpGBA+WYS
E6gvHIHc6Le19+gY0BuqrcmDLEfg7inhO0UsDKh0M+usYhMPdHiiSTc4GVCa
2xxpl6/zwDfi48PvZBjQkc3qhzS2/4HTiQ4aAUsGFKaVPatyuECyxSLp8X0G
lL913bLBmQvGnBah4hEDKlM2lHpGjQuulTK5WrozoA+YT+xadXKC3MXTi2nR
DOhv3Sy/KCZOWLZO6hWvY0A1VyNluzw4wC7VpkD+BCM6mHFhojr3APQ1cr9m
k2dEWx2sh1W9DsDFzbrHYyqM6PMb6258+gdAVFtEOuoCI2rC7KVBsUOGkcXR
rFVLRlRD4FbJqctkMDhtmvgljhH9Z3Q0cZmGBFVWbM8DkxnR8Ifv1pV6iSAX
WnLTIpMRpdGciWn/SgTCMPd/BwoZUXRnaZj9LhHqfDuiHrcwoncKtRpsmwiA
tF4JlGFiQgfakl38brFD9g7FfSYiE3pw0SJGiZsduIVzzw9xMKERZikfn7ez
wYYLG324IBMqaSCf1XCJDfJ4618sokzoY2zgioY6KwjeP/sk9wkTKiNWbPru
MjOwUCmYS44yoQdoJs5ul9PD9yfUumPTTGiLsfzb06H0YDXbqPZuiQl9yPr6
v3ljesA77gqyUTCjM4GDu7HrdPD409uJWS5mdOB01B61DB10Ge/aftRhRr+Y
9R07X0QDr5rrTC0NmNEfJoIqB4JoQE4zWofnJjOKaXz+iN6igWBZKZmg+8wo
64jw3SJ6GjjDZL5q48OMnrY2IHPfoIb0b5Wu4sXMaJ/qlv4oiQquSYTbjPxk
Rrnvhy7enaYEquSbJnG1zOi69dXyMxWUYBy8jrD8ZUYNTcKUFpwogd1ShGpm
kRltOKO1Jz5AAU6kIN8sYRaUypma54jXHnLugd5r0QgWdEBj8TfTk23EIfwH
xcMYFvRyhRCpH9lGUr7x2+S/Z0Hv1a1NHKPfRqioFlVVslnQK+dKqihjthA8
KmjhYiUL6l5ze3a8bBNRxqu0Hq2zoNgFih/pwhvIvVGJb193WNAR/xD8xNo6
8obpNf8WNStqEZO8zVW5jqzr3d70JLCirzall7ks1pEvk3upkSKs6O9C0u2s
1DVEkqxEVXiDFZW0X9+zOr2KmCgmPPhnxop+Ck5qbCeuIoEm9J3oXVZ04HMv
9fuxFWQ6re1TrQMrOhTr9/dk2AqSrmJv0h3EinpdXhe0nlpGBKyyCncxVtTz
hKC3YfYScvg7z8Nzx9hQFsnAp2v3FpDd22ncRDE2NCfIJMn03AIywiZd0yPN
htZwbLziPLqA5FqcPeqwr+/dE3Zxm3nziAbhfkuSERvaT+Sq7YmdQ5zuFCpQ
hLGhT7s2ktv9ZhBjkupIfTQbKnySkZL/wgyiWlIfGv2ODSW9Gz+xxTSDsJH7
JyWz2VAfCn8F7eBpJLWUNs6kmg29qg6z12KnkLaDuhQ/dtjQKzGOnBQNE0gR
3pPtQ8OOln1gnA2KmkAS7lsZXmVmR7lY7npHmU4gNmUueZOH2dEVKvEG8vI4
QvMgweKwHDtKp3NwM5F3HJGrmK1xtGZHv518IiMRPIqE2/uGSf1lRzmixB/Y
FQ0hW7+yC3172dF7FrGCSMQQYi78p39gmB2NxA3ETGyGENkeTsmwBXa0gLnD
O5B3CJlKuja6QUNA+YzJ3u/8BpFAlvEXhkcIqE3fDW8amwEEV3J5/fIoAY23
rvoce34AWbFizvh8jICqeuldfyo8gBiXnWhiFCOgnzZnAjlq+hEJJ+cjRQoE
lOz3qKQP70Ma+hl/cF0hoO+xtYFn9T0IFWtcg7oeAeVP+pZ4KKQHkVeWHLI3
IKC/FbJoJXR7kHeRVxnrTQjo5NX0nIaebuTh+VgDV2sCOn3A60ftahdCyBdf
6fYioEkKYltVpzuRqz6XJeILCKj2PC/qxduOpBounP/+nYDyyMQwTS22IZvi
YVZtxQR07BI7IaeiDUloaX7PWk5AtWiudV2434bM8umT3BsJ6IfSVf7y4lbE
94fx+s0JAnrdtGmSYNeC9ATvkF2nCWhFjRrrmkYLcsL8nVT0HAHNGhK7IMHX
grQzDNxrXCGgX48VPgn504wI6N/uAUoi+o73ZwlBsRkpXbhXxsdFROeVPm66
kv8gpAqmPhUeIpogpWOvsNCEWEZnbV3nI6KFQa9lT/1uQliQWdkwISI63UOp
zunbhBgG2KVSyhLRgg25EV7KJmRF8EnAkBYRfbHTvVm49xsRveF9LeUZEX3l
QFKdvV6HGD4qING8IKJNA7Ma9Tx1iO+ricbb3kSUs+4Um8RwLTKar31BIICI
1pp8uPrkYS2SwHIQkt4Q0S2K/hf0wTXIwdIPxxPyiSgbVUrYsaEq5Gzr39G9
AiLad7jF40dOFWI/xZhsWkREZ1iIPJWuVUjTIVse3jIiaqgvYyfOUYX4P5Qn
vWsgol5GjWekdCsRiqPV27GT+/dDze6bUn85ckJhs3B7hohWt/zR8ssrR25e
FHO6sUBEr51uylHxKUd+uIQscK0TUYlRBdt6yXLEqdlgNIaGhF44PM31yPsn
Mu010RDNS0LPK1I9EDxThrSPMSZFXCOhom8v879bLUGq9Pzivl8noSZd50/H
FZQgBT8ZovtvkNBZ/+h/PM4lSNQ7+kAxcxLaxF0qlP6vGLmmT+tUbktCI0ua
Or4zFyOtlRQXll+RUE2lFIF5tAipkH1+ljNgv39zYdVsxiLkS+IeAsEk1N+v
ZLmn+TsS+WxXNiCShNZavrz62uo7onvyH49AIgm9xqSprBlRiDSnrC9eLSKh
Wky+OXMU35CfpCczziUkNNF1KM25qQDJe7429g4noUbSbAfvJhQg4car3VNV
JNT3lyqlw5kC5MqB5UrPFhL6dfu0m4jvV6TJay4mb4aE+g0YKtwQ/oI0mI+e
IfGS0Y8pudEf0z4jgzRpG6/5yeifaDTkP/fPyErq3U+cQmT0RRVXw4zeZ4Rz
evq/oxJkNO+iU+xH6s+IxeOl9ROnyKiKtYLyG8tcZMtr7+NFAzLKQPVTLdsh
B2EVKrP4Y0RGSwKDW8bFcxC+Gk/uazfJ6MtHYd71ox+Rcyx0fsaW++enqKRf
Gn5EQiNZLO4/JqPUvXVV0ZrZiNAHTi6/EDLKItSXsqqWiShpdDexRJBRpu/u
d6npMhHtybhXoVFk9JHXHbukmgzkkQTfanQ8GRXIC6MLuZyBFH8VakrNIqOf
OnQZdm+nI1erZH0qqsnoccLtSa7UVMTy7qqKZj0ZPVk+3JRil4o4M31brm8g
o/REUfnsU6lI/CVls5Y2MhqfxDQl2fIBmWhHVYaGyWizL93bEfoPyJYz1bLl
OBl1/Fi1p9yegrByV2RMTpHRyvJ6OroPKYiMqQbH4iIZtabyKVpVS0HOUTI2
OKzu1/vp4qXDB1KQ68l13hsbZPQSp8OVrJFkxPpc4Cm3f2S0/URAycevycj/
7y9CV/5/f9H/Adhd6bY=
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1:eJwtW3c4l+/3t/d4e78r6yMrWdkyUs95GlIZqUSJZCZkE1FmKCMrskpkvlWK
rPA8Ioqyyd5b2Svz63ddv7/u63Xd5z7jPuc+449b0MzhqiUVBQXFOWoKiv9b
H01qL+3tkfDlpsCIw8HpyITXodXebRJOk2NhUpifjugQBteL/5HwWW3702k9
6YiAquOOwzIJrwsu4H8q8xb5+iyaYWiChD8q0ZiO73+LMEj/Poz/IuGKrylW
zDUzEaevrwWT60m4o8Flro6HmUiPvvURjzoSzhw//yo3NxMh+/wTl60i4WSu
AYEg5ixEp4X3eGohCZf9FuFxqDULiXW9o+mbRMKpW75ev+2Sg+wwiOsYvSTh
Ze3p5t45OYhVyqKuygsS/hm4e1iGchDlWn/9hQgSvtWbVh2ik4v0cGaY3vEn
4Qw9BZr0cmRE4Mv0A/QeCb92/tzEFss7hEzp8pZCmYTfKVi+xBKbj6hcy6VL
UCDh71OjV5TL8pHat8PWcrIk/P7yykbZUD4ypKErZSZOwiUjy6XqpT8ihyKk
iqp5Sbj1CslOuOkj4s8zVRdEQcLNRgaueQgWIAQ7fgn+HSLuI+mT/lC7AEmp
0A8r/kfEE3elIoc9C5CSO990p5aIuOAfnvahtgLkb2Za98VxIr65fd6nMqwQ
uaFgPMtST8SD1Kf3vhOLkInAWO2MWiLurcnzPlC9CHHpbPhwqpqI25iVqxZ6
FCERnidc7cuJ+NKUOJ3LUBFSjXHuNL0n4qyZBVjY52JEWquVLSaGiJMjAv4K
PShFaC015LmNiTibXZ31gkkF0npbzmD2JhE3Mc0+2fWqAnl1g9e7Qp+Ie96l
HlYfqECUtOa/meoS8eKjB+mLb1ciVgrxN3PPEvGcrmsIwQpDvlNO+qpJEPGS
b4p/m+twJHarOYNVlIjvFCkJlcziyJ3VsvpBYSLudsc6bZa9Cvk3FXEgkI+I
x6hMMpy4WYVINCtl/yQQcbuSYzeC5quQsFdBTcbrHDhbZWuVo2Q1cuOl44rM
Cgderv5520avGjkSbchNtciB2/nyK5Q/qkYqnkibZ85w4KY2jo5WLdXInF3n
2lw/B/631i56zrsG0VU7eti3hgPf/sT43m38G0Lq+maXFsWBWzl+OLZG+QPB
Jd+EBEZw4M9SK1TOKf1A7Hy831qFcuA12SH9uzY/kNqjCn0STzhwTdWDThUd
P5CHbqmaBR4c+K+6xDSP/HpkhOglUWPCgUtdY9As9PqJPLfSP59pxIGv1l1O
Vyn+iZwskzMLucmBXwkNuqey/BOJM51K0LrGgWf0O6m8t/uFXMq/zthxngMX
+152+LllI/JJW3ZqXIoDPx2cbkOv0oyYvGGm+S7BgQtkjJeP3GxGWFYn+HNF
OfBPTztlabybEavkFAN7QQ5cCXlVyVvVjPDMMtWtHeDA+Va4Pd7ptCD+IeMZ
9NsEvOV8lMvgg1bkanWiuXg9Ab8teIV5kK4DOdI+NlBXS8BFpZOd7yp1IGtj
0oZW1QTcJOeTvaFVB5JAV62bXk7A6dx7uwPqOpChi7On+D4Q8KN2LQO7EZ3I
/WY1Lo5YAs7El5TioNCFIMNPYj5EEvBzfygbD9h0IYSlJjadcAJeqJJpqPim
CykkWdCGBhFwzZvddROEbmRTP2yJxpOAs30+JaO81o2E9Pf93DAm4HZSr3d9
unsRw7mjF+INCfgOJ5XWZa4+5NieY/VxAwJefv4tE9mgD2kSoC1z1iXgPz5e
K2Xp6kMOWUhl/TlDwClY2/ySBvuR9JlHfkOiBPyI34y7P+0Q4jV/yi5ylB1/
efybxgX7ESTZVHkK7WfH3y+U82zEjiDlbbIWi53s+JWDEZYbX0aQ3WJho6v1
7PiQM+/mH6ZRxN+XUevAR3bcmPZRWEneKPKMo0Py5WN2fIZJ77gTxThCDmjM
uuDBjl/ammfxPDaO/FytE/7nxI4/TO4x6LsxjrD1lPEaWrLjuw2iKiWfxpHo
tFTm/7TYcYU0FaYemwkkUcFu9jU3O051bF3F+e8k8iXD8q4uaZ9/+UBKGP8U
0sdpMkrByo5f1WSZZbs6hRzevtJrSsGOa3a/j9EpmULSapQbhCfZ8Kk6lraW
p9NIznVqclYhGy63J2pOPj2LlDxItPlwmQ23Zz8rIMI8jwhZOGV0Xdint9LW
crgyj4TrXhiiPMOG6/4RpjR4OY+Yia9d11Nkw4MvXD1FdWABYe69cvofFxvu
k6Ok7pO1gNxGGLnOjrDi8wyH2W4MLCLfJYau2vWy4uNxH10r6ZYQec7i8Bft
rPj5Z8mnfGSWEPoFC+qpWla8LcnhEMl/Ccl/g8+FkVlxaU0j4UTJZYSa1uNb
pysrfuXGlEV/5Apiv6hDQWHPircIz13SxFaQrn4RNfG7rLh/YeigwNwKklfU
lu91kxX/ykHMptNeRfStZZIFEFbcO21espN9DclumHC2oWfFm39fUzPIXUd0
oq8L7Caw4C0fsK5h1S3koTz7RY0YFtz5/qsIBvctJLP1u1NkGAvefpfw+tOn
LWSXeLJayIcFD5pPOvlCaht5FyNkpWHBgp+bN5sqEN9BWF7MkyOlWXB3+QN9
hif3EJXjOe3doix4hMriCuq3h1h0mO0ICbLgv/7JHa+o3UPKD3bqfCax4FKx
DUmV4hRgG1e+2L3BjGcjX17wl1FAffxTZeFqZvzH3F7Av2lKWFM+e8eunBn/
SvqsZcdBBUJd2yGfPzPjPJ+VhhRVqeAhl2OPRjYzvnstV6P+KRWIJ+g/sgtn
xr/JeYfzyFBDSKJw9WcDZhybbyz+94wGNFIqdC78YcJ3mbOMdcLpYSG8b5tm
ggkvDzR28a2gh8THW7lVg0x46hfjbtIcPfwxUaVXa2PCPw0rJpvqMkC00GdM
qowJH9+N83zPzQgDWXmypBAmnD5c9l4lxgQhLxsGmvyYcHuL+Svma0wg93Qm
LMyLCX9M8fmquxQzBNqITdM6MOHpc/dpZ5KZQULq7ZuN60w4eZvCTsCPBdw/
JREHhJlw7tmX+ZEmbCCQXoYn8jHhzibEKd8UNvgR021vwMmERw37vPnbywb/
uXE2NDMx4Z7lmc6oITt8VY4JqF5kxN1rMxxdpAnAVvFsJRtjxPlW346GnuKA
zDrPTpdbjHhDOep2MooECfLuZ3P0GHHNGpR8q5wEYSnO+QPajHjHzhPXrkkS
OLvYPruIMuL+9IYDf+EAnOI3RvhFGPEvmLjKq5UD0O6OZtbPMeAWC1GVDY6H
oG74JIliigGf3iqjF0k7BGVaqr7HhxnwFwORvNNthyBVSN4wtY0Bb6xfkvqs
wgm2jcJs7iUMuBOMSLvTcwHVUXp3QX8G3MaVoGdbxg2rkdSj+l4M+PMhHcvB
JW6Y2tq7HObKgIupfD7/S5IHGls2xNetGPCHdJy+PK95IOHRTP9PTQZcp/O7
bXwoL8h2/FL3OMiAE7vvstM/4oPbgbEHm7Lp8ZqY/wq+jwlAI6zRe6TR496Y
SbEyvSDAlsGmQDI9zss7nTErLggCzryDzs/p8fxXG0ZHHAVhxCQt+5A7PS5d
Ri0+tScIVmr5arfP0uM3s1JRRSlh6FzjkKY/RY/ffxAmp6AnDBqfXATylejx
RlqxBR8vYRATV6alkqDHDy64KdI2CMPMocrGDAI9LrSzlNN0/wjYLzWY/u2n
wx958ofMfRWBgXdSenG/6fBfGe/zSfMicPne8/PQQoefDXyRHsl7FGSHrkpG
1dDhQdmsUbFuR2HpV/eKIpkOz2pOsPstJQruOZPB3h50+KH+ittjH8Tg8R3q
98wkOjzOgsPkxJ4k5DdpRLSz0OEpsk0mKUrHYAQJs0+ho8MDP3bH29ofg/N8
B2VkNmlx/PWtdq3BY8DWczT/6jAtLrJ8tE+lVgpeXbv0KeEDLZ4nLtJknyMD
zV8jos1yaPF6v4bqiUkZoJJvc5ZMp8W3tpUSbEmyYEUwUqiIo8WrUh76Ea/J
gvSv+4VDj2jxrCusxec7ZAE7H1UkqkWLa7b5aH4Yl4Olzx1xC+q0eFhma+g4
gzwcEeF5UAq0uMIPVieTY/IQQp2urKlAi1NV6AkKuMqDLl5YYs9DizMftWAe
pVOAIdWuss9TNPhFLnafYVVFoJDix84+ocGPa9FtBXYrgfeh07efPN7HZOYl
GiZlWN8z26l9QIMPvcePTZ9QhrnWTLVLNjT4hXciYcMpytDrIV2ie5kGD/dU
5su2VoGimlMfjblp8Iiu+1VniCdA/r2J7msiDT5zLjjz7sUT8C7eb36ImQYn
a09s7PiegLc236Qsdqlx04dCVv6LJyCaoJ1rM0qNN55fPE3dpQb3jYzSH7yj
xg/HJll8/HIKptQfnynNpMa5jZCEm5unwEImdXjzNTWuGC2w66eKgCHVGP/j
aGq85rqeukEpAheybZMDH1Dj316fyZTBAI6sPHwRdZoav6RveAFZQqEnNCGY
3EGFE3MLQkJ0zkLbN4G8O01U+LT+yXhp17Pwcy+r+eAPKrxnuSGDN/EsVLoU
cfuWU+EMThvYz4mzkHarjayXvr+/V0eREHAObCRZm3ccqXBTy9uS2g3qsFXv
y6XLQoUrMmY+/RN3AVZoGE7R0lHh9g4dGx61F2AOeW5atkeJs/cnzRmvXYCh
Tym5R5YpccLnjz0KBhehJrHs5L9uSrxX8dqoAN8lCLNZuZOWRYmzjmbrhJVp
wn9M1jkrZyjxjl/HqE+jl+F25c8woZOU+OIxfUpxv8vwxlnOUfc4JQ6mnAej
v16Go72bSnmilHj7mn2ym7AuyOSF15izUOLmQcFL07m6cEanYLC1gwLnaXjy
jlx7BQKpuKopmijw5+x1I6azV6CuyDtT+jsFrj8i5nSHcBW0+M/ff1ZGgTOl
VWap3LoK+gtdm6dfU+BlvUqsFitX4V707sGP1hT4vOR0D99xPcg7b/5vwJQC
11hC117e1oO5zbo+llsU+MWgJxSWIXrgbB6Vbq1Ngd+66Ca81KcH3opH5ATk
KfAXD44mLzy9Doffxbw8vL6H8fAEdVKs6IPtcQna3v/2sD69Itb3LIbgTFua
5c6+h4WOCyW7o4bwsEPjEpFqD3P9vkFKdTWEZ26Wzy9O7mImi480uAYMIfdz
KnfJx11MpZX99YfPt2D6OKf0i/O7mPLUXjazhzHcVaIxuOy4g7WH55/mzLoD
9nQx/2bMdjBFy1rN93V3wL1TMDno+g6G56ln+E7dgSB3GK44sYNlsq+VdUmY
QmbRQ9tjtDtY742zhXc+mcK40qIPY+I2Rn/A4T/hX2ZgrjyQXV29hXmVahzg
U7QEq2xl/fPFWxivg9YAp6El2HBHUf/I3cLWjs6P6vpaguPW2duNUVuY6cS1
hce/LMEbyyF1m2xhzD5Zau02VhCr4fZ4bmsTO6pyN/Hdx7tQa8Cix624iTWt
iH13draBH98tKZNFNzFX0bD27lQb+KmKvT/Mu4mRv262Pm2ygVZeZ8YjVJvY
o3hzqlopWxgc/F0p3fwP475W9Knkry1s3E0XP2f3D7sWfyGozes+SHic2LN/
u4EJa7Lee3XPEfB+HYnRuA2M/dRRHc4QR9A/a37d4OkGdus2hUtVpiP4s4WR
wX4Du0c8rZs75gjdb/sNCCobmIW+BG+7mROEtPjmf2xYx9xbX6t+tnaGCYk6
05WlNayLe7OYPtkVvCN7w6zH17B3dyVlmKpcgbg2X9z3ew2z9AxcOjvhCkgV
F9u38jUs0UWK6racG7wwsCl7EbSG6fy4kS5b7wbnAllJyjxr2BNh7XJHugfw
pv9ajefpVezyGUl5tVxPkB+T32xXXMXuVMpJuLd5Qs0Mh6ys2CoW8EE8ZGzb
EybWm5Im2FYxbo2WtFu6D0GCqOVyrW8F22jiMCz89xA+nT8nJPVgBUNa8vsO
6HtDzQdF36G8ZYwrJ57R/7gPTPodPKnBtYRlSgS95vnmD0yPPszHMC1hLZZW
CnIj/iDtcTF9aHsRQ1r/ppvu+YO7/SOmh8OLGIionGQ/EQB0t8a78nIXsbT4
gd9x+QFwRPGzG/HUInadVTrtcFogmE3ofeg3XcBm7k4wTMUGQdkLMfUp/b/Y
XwHBfyffPAOGW5PmlCf/YgqJeST1qmegL5DpzyP4F1v49QS5OPwMlnKFca3Z
P1hIiv/3M4KhII4fVvvo8wdzMs6RHE8NhZczB+QeZs9i8oPnt+RehYEbUPKx
bE5jfbLV/nnPIuArDa4mMjiNhTA4cD/PjgBC/WNDpGYaW25QddatjYA8ve14
x4hpTPlJyY4N5XMYu7dO7BCaxlo/SIwMuj2Hq7F/GV5pTmGnsxY0TSUjIfVm
nmix7BRWGhJ7mVo1EuYO255vPjiF0fa9Ugw9HwnPcqYCqIYmsZr2Po5LppFQ
VTm6a+U6iVW7BXc6vYgE2enuFZmUCezEi7sybeuR4LogJc4ZOIH56bktfaGK
gpJ1P+NdmwmsaEQ5JpA1Ck7TSdT+VJnADpOOchUIRcFV4Yfx99rHse3GjhxX
zSiIk2hs0P0yjn1oqe/RvB4FvXJCFCpp4xiv+knx3dtRYIHWW9M5jmMNlYL5
i05R4GbMcyKdeRwTqO04QR0XBWUW9vbPlsawX5slcmmvomDX9muaU/cYVpMg
eYMzKwqCHtowo1lj2J/+ex/9iqPgZXxZX9+ZMWxp5uPUuc4o6HvFxlEjPobF
JQQUBPRHgUCmmTqZMIZ9bf+dHDMWBTmFTO89B0axagf8xJGlfXkthj6HHo5i
zAH0b9aYomG3633Bzp1R7L86wp08QjScGaKaGtMYxYweqh6SPhQNDXO5ugUH
R7HLl/DmaIFoIKztBiZuj2BtXEZPXUWiQW/naqnf6Ah2KiD9Db9ENPQxbwnq
fhzBDuSk3GySjwYB0mV95ZcjmFJh3rtWpWiw5El/dthnBHOblKtPPhENuYLr
lbRWIxjGnscohUTDnJjm8h+tEUy+r77W/3Q0yMu+Fm1XGMEkr3oYpZyLBnfl
5VtfeEawfxYjIt4a0VCGaESmUY5gafmBjw9fioY99aSap1PDWK6B/NcArWg4
pz2/4dg0jEVTC2iTdaIhRO+s1I2iYewF/ZxXrG40/LwVbwopw1hYxicycnXf
PvPZF0cDh7FbrjQncq7t22cD9ay2w9iPSZonbXrRkOAUs7tyZRgT/mczW349
GgY8JuX7VIaxuwvhPy30o0HIV+1uNf8wZqLtGFK/j62Cnyfl0g1jhs31Pn/3
cW7EaFPU3yGs9w3ngV/7eO6FMo1n+xDW+jIly3ofK6SEqtz5MoS1vPJKwfb5
e7wdtNNIG8Ji5QpvtuzLLycrvJF+OoTpU6qeTtnXj6IguOOg4xB2i7xWKrSv
/7myXsYd/SGs5/mQhOm+fe9zM1Tr1IYwrGSuUWzffq4kh3tRAkPY9fYl3yTN
aPAPVU24RTuEGfoY+JdciIbOdbpozfZBzO6wyiEf9X19uxIXB1MGsZe3Xfzm
9v3xuFT6iuvdQWy5p4KJbt9fIl76hJTNAczUZTFJ4ng0bNyacZCrGcBWRXjV
lGT37/fk46Zv4QPYuQdbRyf348N1NyNiTmAAG+8WklTij4YLg6pz/jP92A9e
vT+tXNHAi//S5izsxyLslLWIxGj46rfKgmr0Y0b5VNfdqaMhzuypXTuhH7Mi
zpclbEXBvbN8P617+jBgrVQ1Xo4CAq16aNT9PqzQPpzn63AUjI13zYgo92HU
f4/qmnXtv+9au0tlFH2YtOqOempjFJiExDKOxvRi1D7+asulUSB/T+zeA+Ne
rEZpUJT+QxTQXSr/zizai13T2X5XlB4F75nHghXLejB8XDFoIjQKtiMU6IKG
urH4ydei3gZR0OxQZ8mT243xWFuFmlyMgnTdW9/eu3RjUawOEz0nouASMSDw
N103VpYrvBX/XxQkvGilEpfqwtIen+kW7I0EO3crs4q139jAivbBLz8iATXY
rLqC/8bc6KVzp4sjYYpLyO/htd/Y8ul3Y7QxkaCU7LTX4NmJXQ0fa1c8F7lf
P2hN7pztxLj78uedZSKh3zihcoWlE2O19Jk7xxMJgfxVj/hSOzAaxNDrQv9z
aEsjbNvXtmOtfoIZKUeeg2POhw0OUhuWJn6/quhZOMiy2QecGWrFnqUxDxgb
hMOi8zE2l3et2E3+GONLwuHgfDJHuF2jFWuJUjq5WrKf/5vSdOK8W7DsUE3v
1N5QWJ6RvHj8ZxP2YWp2sHf3KbgWZt+Os2rC7gycGOfHn8LaIxHXdYomLDHj
w91C36ewQeB/XXq8EaMwbFxv3QuBbSXi6qnXP7FN3wfTNGvBQBewkXre+Qf2
3TkpR7f6CQRruRVlsfzANIzbcyUePgGGQ0sNDFnfMT6l67/uyT4BppzZtfre
Osy+T2WaLykQ2JsGtC6r12KrcS1vwu4FABfvtw0Drmrs96buc54/vqBvJfym
1bsUy/HuSKs/9gCeObmERH8uwSrSl4LrH7tDhXe1w9W5YqyB84ObULMbHIkx
R1pNijDKAMLAX0dXWMLSe1vOFGCUy7pnHpGd4LDChWNpHLkYjw2nyCCHNTy5
OLUpGJCN2bwv5IjLsII/JiE/3qxkYj5Jl5tTVSyhLOy71Zvf6RjPdemPfUZm
8O5n1JnTaklYUX3lLVXkJnj9axlED7/E1u6QaU4b68PFo8RHKOULrK41eSTF
6xo07B1x8IkIxyzrimVu39cE65sZOY/1grGmZubJw1nqQFMgMvaIxw/r1iKI
ueIAKLfWqU3cDcuezyspllOEhZcJFosJZhhL9ZeiqnOC4E0V++28ykW4+x/T
Kd3ngiCdaF53QMkBkLTGds4v6jDA/XGOmd0bhmhvfe4JuQbXFLrKg04HwlTB
c/5YBSMo6jbwD/Z6BgdtKVfL7M2AFZ8VrjGMBDNfiqXD1VbgZGU7XRMbB68r
O6nK7zkABcXnPfPKLBBrvaHO5+YLdT+7nylcK4EaThV3r1eRYO3RU3dLshS+
FwTYaB2LAoYjvTSB1GWg65L7Mmj//V7y6nvcXvAFVIqdjY607ucf8UFntwMY
9C1gSiFbsWB91vld78xX+OokclFOMgFUEpYa5vWr4Rzh7N/QdwnAMO88Q11d
DR4//0tlkUmEnEQX0WNJNaCNM5s5ySTBzKLrG2/NWmB9wixuIZICdqkPXvDl
/YBAdWTKzykVTq6tF8hx1YPC2N5TIjkVWLQ8WtUD64HAZGX431gqvFv3YLc3
aoAYdcozcXpvYE7n4dNKll8Q4hB+jkImDUoeV1Z+UGoG8T8mQwXf0yE1Z/dX
qV0zFD/5o6L1Lx1C2pH+6rRmSBkjtWiJv4UbEtjWb7YWKB/WqQ0Ifgv/OjAV
iskWyA/um/t8MgNOSFV90o1vAxt7fblPTzPheHtnXOWPNpC73vhz5V0myHr9
eXhsuw1KZy665LVkwtEfnGcZTNuBjZYPfciZBSRL+zZMogNO2Oq0hyVnARtL
YLGUcQdEf3z8wrU8C5gKEpKSnncA01Lt1+beLKCg/Gb+YKUDugq6gya4suFP
Mu+KdGUnHK45QPMsLBsmz8p1JS90gka0yyXO7GwYmTlfziT8G9zQ6QHu6mzo
VnEOnAj+DXKhYY0+69lQ2/79wKsrXaDfNrDdcTMHqrwGNpgDu+DBX+qqA045
UC600udZ1AUUanUHG4Jz4JMjf8Z13m7o49Zdfl2QA69Z3I+zjneDRFoj9xpN
LiQWhHJ7cfaA2OCR3m3OXIgzfLMzdbEHJArekx9L5EJY9s9vNe97oGOb8HxV
OxeCL4/kyA/3QPz1xqLZ27ngv7YenkrqhQbvO5wmDrngcU5Y39ujF3qyPbux
iFxwmVU5MZPbC1Yntxzep+SCfbTO4Rv9vXCxmi/nv7xcsBzynFA40wfoA/O4
h3W5cNW72X2WuR/y+F3ELm/kgrbwhOFNpB86H3E90aYmw4X6LaTOsX+/D9yi
bmElA8IlSp/e0Q8/pfwtbQTJoIqdnCUwDECGPVWjnwQZFK2uNj0+MQCnmnUt
BBXIIFn4KN7w9QDgmu/PbZ8hw9FbMV7fWwagVOeBhOolMghR5Zgo0QxC0GVD
N8orZODLqTz7VmkQtM/e+3fdgAxcuu2ixHuD8IibLVzZmAyk9Wlm36RBiOFd
Z8gyIwPbq735v78GQd2G+kLGXTIEpjHNSFEMwc0EGVEFOzJQuR/ss+Aegu+2
/k+uOJLB8E5ua4niEGRTXLyt6UqGT5fgB4vuEPzepbSqeUAGpuPt2B3bIaDX
OYxXPCSDGf+9osKgIQhOcI5WeUSGMsbdPIa0IbidxEur5EMG4kp0ulHFEFzN
NjtT7EsGmwHRxPyuIah5nOZe4UeGr9/LI2lWhuCy4bHmi/5k4Cm4EnyDfRhG
tKV8jPexc8rEozyJYeCZiPn8b5++PtjLleL8MFgeXMvk38dCzgRbPdNhiLV9
ENK8L++hUYZptvcwXEr8EMn6mAyt50/c2I4fhlSNqPXfXmSQkGvS0S0Yhvuy
V9ZkPckQwGuh/rZxGIyStOu43cnQR/tPbWN6GFgPr2XEOO/7ayFcXot2BLQ+
FzS+tidDWI+QeKrACDjKtTwGGzKM1RTzr6iNwNS6+YqLJRlOftA6dMFgBEp4
jtsjd8gQmzDMkuw8Al21uZKphmQ4Z8+8eTZnBDSWsp2kdciQfCN1Ib5mBN5R
XfQy1iDDypnjk7ODI0Cmi64XQ8nwltOkPebQKNzupIAEWTJsU67UT8qNgv9o
wwQqRga9PyFVatqjkO9v1v2Unww0VZ/ejwaMgs4Jj3Sa/Xg0ImtkKL8ehUtM
edsq+/Fa+KIvKbRsFEza59NJ/3LBwobuqcLiKMiakvrw0Vz4RjI0D7g9BgX/
XW3m+5wLh3fnbv72HAPY3fLMys4F96kAXckXYyCQ5H1nOCkXjla8O9XWMAbC
YU4/bfxyIciKkktYdRymVK1Pr13IhQHdOLYHeuPgrPTfP+ETuaCkJknb4DAO
jN3ENGbJXJhgv77knDkOKmHhz1hZcuF8afbPr6QJUDrbVrJdnwP0LLp+ZnMT
8CPs+6PQUzlwQ9QQV2KchOO2Ji/UJHMg94zFHtORSYi4eaqhlCsHdDw9HhXc
nIRaqqS8I8vZEDeR6knzbRIyeX8lNGdkw9GqRafMpCnIWOZzMqbOBnX3GLOZ
CzNA15bqXZ2RCQFDnWed0/9C7imRwpDCdBgo1bzvUf4XOAx+ECVepcOJGDzu
ccdfWPVI424ITocF9dzpZ/RzwLeNfmO9lQ63yY+ep9vOAUvysbpUyn169yO9
7Qrz8LFg8frVy2nwj1a1lNdsATZjYk+emU+F/KQg3cdLi6BgejHxVmoyNJCC
JtkpliDhoF3ssGsyTIQ+efyGdQloFW8Yh19Mhv+8A/NqxJbAO9U8wWA5CUKM
/BmYTZZg6Nmzv5UXkuAO32M8vmEJPN8NR5G2EoDw2k3249tl0LrpbXLaJx4k
Od3qznxaBiZHdeWVG/Fw/rnr7XZsGYQ7N6ja5OPB28clbL1nGRK3478fmIyD
KROnqVMcK3AMsdnLvRIHuMD91PpHK/BTNuuKlMwLcEizIIzprwIFm4/4W+YY
iPBMSI4wXwW3r3GlHH/35xvdRjFVx1U4+O17W0bj/jy1q3w64ukqlEVcfHA6
OhrsbjE7q5SvAnq4m02dNxpsDnxqCxNcg5918xqOilFgFbQXd/zPGuRM6A5n
0D6HIGNF4aGNNRBzNfs23BIBmYr3PjyjXYdDhpcHLV9FwPhIa93g4XVgKvxv
VF0lAiwgc+PplXWQk6zXNnEIB7MNLcOBonWothXcrp0Jhds2iXzBfhvQmu9d
0XDgKWx1MzYuhm/A74AwbY+ZEHh50fOxUeIGBJto8ZrjIdAidmNQrmADLBz+
eC7ZhcC5yYNv+sY2YH3S0GfxezCIW0Qdkb/wDzIGDu2ohgXBinGIZD/bJugX
8v6nigRC5K/1Xg3eTfj05k2MAm8gSJ26G/ZJdBPSf2caW2wEgNV/5/8Go5uw
t+s0dbcgALp7qD/IO2+CTymhY14yACoNfORDOjbh8jl7xoaj/vD0iruqQvIW
HCplkFk67QvRPyXs8nK24IcRu9hPIV9I1hh8JVK8BYyd01V91L6Qf+oCDVfr
FlD7m6mdDveBLnGepm36bVDRPt2kl/IYxKgqLWpdtoHNSIqBtsUbaj/RRt7U
3IGktYPxlv6e0CxV9rX1xg7YzbeaJOh67tdV+1VNqx0IPlL2WpTfE+Ze/TZE
/HbgcnOF9pUKDzgUmiMiXLwDAwkNuz92HoClufaXP0K70K3Y4/Q7wh1oDryY
8Nnchbd0HTNFf12AOPeYjUi/B2NiytQd311A8Lu10lvSHlSzYvcU3roA4n0y
6PuxPeDc4I/6cMsFPMdGRThM9qCjpM0p8ZczzBXKW6ZV70FffjuMlzvBH4kp
J7PzFKi1Yo/yw3AHWOHsf0LWokBNCq2eGlx1gC2a1oSVqxTo4mmi3CtOB2Aa
/FIVZEKBXgvR77RItwfRmOccZA8KtFuJZrkGuw9mW0ofl3Mp0FC7KXFgtoPf
DU8WAtkp0Sz3jpTKKWuIRVLUrx+iRBuvlA7Gf7aGqx8LE0X4KFGNEHJuh781
NMaNnquVoETTxDT3vA5bQ63p6QT685So1qGxHhPDu1C0vn36mTcl+uHWr8Lp
UUtwtTkQbxhAiRKUzbaLiyxBvl/yj8QzSvRrWnPP4FNLeP/VMK4hnhJ933zj
m6qcJWSGl8ywFFCiYgm+tjSBFhAn7BrzfJoSrTCekLunag56caFTJgv7/BYl
jZ9wmAORMf2U7DolWuh7QG1x2gwi5lomm2moUOLUaMnnJDMIKpU5SRSgQr12
/BKGqczA/fLsWKw+FVodvLB5fvAOXPcyU0qspkKZwpo+EROMIS7lAN36Dyo0
oG94WdrEGDqx2o5rzVTowaVMrETEGPRpJN1Y+6lQa+fT4xyFRnAjfLnAd40K
zb/3VvZbxy0wfB0od1ecGtUuBOKzY4aQWKVEWSOzj0vZnET+3YTe0almASVq
tPBdf6pQ7U0wEtN27DlDje7ltr8H05tg/PHgB20jajRGhNJiMekG3KnOPKb4
nBqNUwufTBEygNTxG9uRL6hRN36Lt7Sr+jBMz/zzbxI1Si13Ka2mTh/MtBxs
s7KpUdea8FF1e30w71DO5flKja7eGD1/DrsOVpPfRSlXqdGZRBGtXEc9sGOe
FWo0pEF/mZoE8rFehVnPMhpmUxr0g4gmtjt9BWymnk5o3KVBX565GyxUdwXu
fhPLrXKhQe/faeiR8b8CZj5Wcp/DaNDw4RRvvS1duLk8DMmVNOi4YKY9tnQZ
ukw/CnbX0KB0zB+1LAsvg36zL/WhBhq0Iudjl5/7ZdB7x1/3/DcNmjY5GMu7
rQO6d411AhZo0GDPTdEyFh0439tlZCNEi+bznsL+nNGCbxezkSwxWlT7zGx4
IrMWnCt5IDAmTYvWHk7n/tSuCadfHBozVqNFZSIsjXitNeHkZT3bK3q0qPHb
5aCqmEsgX93kqRJEiyLr5s4lOxeAn1wbRzdDi9oQX5g6c54HvdclpfULtKg1
bYuY5pQ6PIvJ7YtY398Ppr4fVKoOK14RQpy0dChXWMllQWN1qNfSfy8qQIeq
PBRlass+B+5z498u6NOh1xrDH/tcOQt5I7+nWIzpUMWP1XUiYmdhuPMHc4s5
HVr0JK9GaO8MaGHvrtx0okOtDCy5Dr8/A0KRbv33wujQ31tL4vSEM/BLjnb1
2Vc6NBwhXWMfRYHq6Drn5R906Cdjhj/NlSio8EyfIDXToXW8nfUDiSikUf3y
TeqnQ/Mdb870XUPBoy2WJW+DDn1j8upnejTAEbcjR35J06OiAn4pKgGnwKvk
7DX2JHqUvrzA71OdKsgbNS+YvKFHNWeaW+tiVGFmzygiP4sedQpTbz97RxUM
Ndx/XCmkR2WpvjXbbarAic5siP1FjxIFtYzuK6jAxjLrMW4KBpTLybPEv1gJ
8uMTf9yjY0Br5AZP5DxVAms10btlLAxohnH9RwkjJejyR9NucTOgZ59dqVCj
UoJiDheuV/IMqO1Wx7WAq8fBXaaLRtiSAXWQzRs+QK0I0m0WaS62DCj3oOfP
xB4FmHBfhBonBnScIHHK6ZMCXK9k8rJ8zIBGX0hHWM0VQFH71GJWPAPa8xid
XKiTh2WbtP5j9QzoWvGHzNHXcuCYaVekJMOItu469EkyysBAE+8LNiVG9NQH
/utjNdKg/a/eZeIkI4oyunyR9ZMGCS1xubhLjChr1Dlb3y0pGFscJ69aMqKz
ioTk7rVjYHDK5E1hMiPqyfDJ6T69JNRasfmGpTOit7LuL3c2SIBiZMVti1xG
lNZuZKIqUgIIo7z/HShhRAe9/nRw/icB9SFdcS5tjGhyrNPxTBVxQNqvhMkz
MaF3h07w3g0RhbwdClsmDia0uZBZwVZPFHhF8y+OcDKh0hfV/IcERGHDk40+
WoQJNa+ypuD9chQ+8Tf4LaJMaPxz60efV0RAxPbcg/wHTKiVwK+6Iq8jwEKl
bCY9zoSyU7932W4VhNIH1NcmZpnQ19+yFaTzBMHqb9PZV0tMKKne4XrBE0HA
u6xF2CiY0Y/i4nuFqoLg8iFx6i8PM2r9Pn/PP0MAeox27d/pMqPPo7WL73Py
Q3BrvYmlATP6kkXF8FXbYVC8EK/Ld5sZfTX7lMY08jBEKMjKh9syo8ROteR4
5sNwmsls1S6IGTXip07JZuCD7OJvXsfKmVFtiwdUN/7jhetS0XZjX5nR7NQb
NnzDPECVfts4+Qcz6pK69dYskweMItYRlt/MKB2Lob61PA+wW4pT/VlkRj+P
LDw+q8sN7sTwELIoC0qZ+PWFfhonqN/XeyERw4JOrbryXEg4AK7RXygcElhQ
NVKKtqjDAXhbLGRX8JoFbeIsfX9L/QBQUS2eOZnHgu4ss16vWiIBHhe+oP2N
BTXpZFq6f4UEJ/BaTad1FpRdBQ2r5CPCvXGp4s87LKhktm1z+gYHvGR6IbRJ
zYoyF5SdbG/jgHU983/+BFZUxMtS6UAoBxRO72XGirOiiUw6zyh2CCBNUqUq
ucWKnpNc9uHpYwdjldT726asKF2ni/LXRHYIM6bvRq1Z0eZnP5/M3WSH2ayO
Dz9cWdG2ezrVzd1skH3S2bg3fP/8+pLK60FWELYil+xirOjZOuXzQVQswFXK
56B+hA0lqrcWL75igF3zLF4OSTb0iV6YC7s1A4yxyX3vk2ND84RXNDPlGCDf
4pygK7Che8J6x9Vq6UGDYNuWZsiG3g1vixtfoQP3uyXKFFFsaG/65uadu7Rg
RDwz1hDPhvZP1vomKNPCmYqGyPhXbGhE0d90NQZaYCMNTkvnsaEWvlnipbk0
kFlJm2xcx4ZWuM47+a5QQ8fBaxRfdtjQHXkukm8iFZThfXlBNOzolZN1TjOO
VJBqa3XzKjM7SmLUGc3XoAK7Ks9P01zsqDLVmx6dNUqguZ9qwaXIjtJuNz0s
NaAExZq/391s2NFL1t3jbyQoINo5JEr2NzsqPPw1PZtzG9n8mVcS0s+Ovjp0
T6W/bwsxE20ZHBplRwdTqatC07YQhT5u6agFdjSK41zdVZktZCbt+vgGDQGV
Y+Krva+ziYSxTPrdPExA0349raVL20BwVc8XTwQJ6OzrnGf37DeQFSvmnI9H
COhozeNAZbUNxKhKpplRkoCe/fIxh6NzHZFy9zhcpkxAm44eZMsirCONg4xf
eK4Q0BL2UutXL1cRKtbkxvN6BDSh9OI/XdtVROmE9IizAQHtuYfWmCKryKvY
q4wNxgRUBtmlShpfQRwuJhl42RDQ/MtpWgYqKwih4NhKbwABLbuXqnZ9bgm5
GnRZKqWIgHouczqmxS8gmTcXLpaWEtC48aVgB7cF5N+xKKuOcgIq5cUc5n9t
AUlta33NWk1AVaoxYQ/CAvJXQJ/4uImArqc4Fh7hnUdCvhit354ioDTPS25z
i/1F+iJ2SF6zBPTou3HS4uwfRMbslWz8HAGlaD89fzb/D9LJMHSvaYWw3x/G
Khic+IMI65v3ASUHel8m/T9uvVmkcuFelQAPBzrRGbCmmjKNEGuYBk7ycaDz
Fzwkr1lPI5bx5M0bAhxorN6dX10K0wgL8lch6igHatpANS3ycwq5GeqYSanA
gRLdLnd+oJxCVkQehI5ocqACuxZf6n0mEIlbgdffPuJALX+HL378OorcdCoi
0vhxoCnWS2434kaRkOCpJvNADjTmd169qc0oMl6gdUk4lAM1oNt+lEAaRVJZ
DkLaSw60HL375onNCHKwMkMstYADDaVUu58kPoyca/89vlfEgWZdHXjNQj2M
OM8wppuUcaAff/zsaOsbQpoP2fPxV3Gg1biInmnUEPLMQYn4qpEDraEvNvu+
PYhQCNZtJU1zoPaWYjGdjf2IjPK/kq0/HCi5omzxV2g/cltb0v3WAge6d0uF
7tbFfuSL5/MFnvV9fr+vicjV9iHurQbjCTRE1PHtneyc2l5kNmCqMZ6fiN7X
CxAuGe5GOicY02KuE9HXBV8SlDw6kVq9p8mlN4horfm61OqFTqToK0P84C0i
Kp/t9OgQTycS94o+TNKMiPbFsvE9ruhAruvTulfbE/f7rWSzBoYOpP0bxaXl
YCK6JvHFsCC/DalR8D3HHUpEi5+myJ0ObkMK3+whEEFExUQbi0RutyGxj3YV
QmOJqAHL2M48Sxty7fg2n/AbIorRF0m627cirW/XF6+WEdES+gmqArQF+Up8
8MejgoiW9k0/MvyvBfnkuzbxCiei1Bn17DobzUi00WrvTC0RteJeouD82Ixc
ObD8zb+NiH73lubjP9qMNAfMJXz6Q0Qbm+naGNQakUaz8dNEfhJKvR5iHuhV
jwzTZG28ECKhZaNDnRKn6pGVTOsP3EdJaJW42HHzvR8I9+zsf4JSJDTUVe5e
4JMfiIXL0rqMGgk15L9mYPHyO7IZsPdO24CEBvm1yPv9rkVYj1ZZtBiS0Ijp
3IF3b2oRge/+vNdvk9AjB++n37CrRdRZ6J4aWZJQNtmvY8LUtUhkLIuFrQsJ
rRbh6nBS+oYczeDmefqchD5NzlTb+FSNqGr0NrPEkNA6JpMI/8BqRGs6OTgy
joS+SNNu99SvRpykBFbjU0hokvrfc+Str0j556PNmWQSGjCCBO1e+opcrVUI
qqkjoYe1mGRit3HE0nr15IUGEmrdmpvs1Y4jHkzFyw2NJPRb2GuxqjwcSdE5
YdrWQULX/gXLmN/GkalO9OTIKAlV+8U42RmKIZseVMuWkyRUlibX58ZpDGHl
rcmZniGh2RlyTE/XKxF5Ew3OxUUS+pr6R/yCZSWiTsnY6LpKQlOCXd2OHK5E
bqTXB25skNBVEelNit8ViI16mJr39v591+kmB0ZWIP//XwidV67reHepAvkf
SOzqqQ==
           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
rTLH/DN0SXFrv8hzbiyioFtUxvYZan2xtqBfuqP/StHkZG4a+szt/YtSzo0F
XAgM1XZKQ+/8V8fTCG7sm/o1N0XJNBRjvtIzXcuNvSeZvE56nYou7lqqCWjj
xjQ2sl6GF6Wg5sC5xHe/dvRKfj97cCAJNdqOqXMLkLGoHqxBLTQBDdFlrT8R
JmPODVR4s34CWs68lrdXlIwZFYpcG+dPQHtnZvYJSZGx2bLUgzF58cju1uLa
UVUytjl8dr2h9wnaCNx+o2tMxsypj0jV68YhdtFKuxZTMnaPyWp4fn8cEqwP
4De0JGNvtIvfPJyLRRpsDI/M7clY2wK1F210LIqKY7NzukXGLsf2dnH2xCDR
l3v5Hj0mY0zVqCojIBodO9PTzBZLxhhFt5OMTaKRzlTKw6h4Mrb6ev6cs0w0
cpMSXElIJWO831jz3g9EobIi0ebMXDLmGTVsmn0yCunXygdX15GxR7uDwhvl
IpH9tRU1ra9kLMmk2yl4JgJRWD4sfW0kY8zOEaljLyJQ6vnjNm0dO/o6S4Zj
90agyR+Y2vAIGdtrUygczBKONig0S/YTZCxZzTLnfH0YYuevzp6a3vFvWlr4
LjgMyVmd4VlYIGOPL1tknKEPQxrUzI0eK2Ts4nRZuWdNKLqc0RC0vk7GyoV+
Vx4LDkWOGuGqvltk7NY0h37MmVD0//8nYQu4Gfkecyj6H67b/xA=
           "]]}}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 1.9399136313253853`*^-7},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"Sigma kernel times linear DOS\"", TraditionalForm],
       PlotRange->{All, All},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {583.2, -118.66252583997979}, 
      ImageScaled[{0.5, 0.5}], {360.00000000000006, 222.4922359499621}], 
     InsetBox[
      GraphicsBox[{{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
/t/3HOj//57j/wD3sr3n
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
IuT/ABp62mU=
           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
/9+2/4jBhqjpPjxyODbHyS4AVFLCDlt/7MNlfsocybiw7ae0k3XDpA9v9Ah3
YEIB8Cb75ZGvan146/ffLAIHA4A/yfm/KNE+fL+qrkH3/gBoX2KKPt3ai9M7
HTt3c/e2/q/Eud6UXtyqz/+sASUAfEvkz7lf6cWrh2/7/mQNgD0+Jtwpqz34
QI/zzn///GHZYsJZqbIH95qo/Bk66Q916r4NVeE9uNyP134Nff7gvvkyYka0
B8+9XXHermb7vgX848B0uvHinicR7xL8IZ764FordzeusOv3YMlDf/hPU6jO
oaMLd9ZI5b/mt33/GLXCoq534cuQbtFu6w9WIbGsgzGd+Mtgq4zPe/1hPUKF
KbjvN6599vGd21p+0Oj89bJg9m98Lfd4K72YH6QbWFS9ufEbR4aMvANrvnCK
HBj0k+k3zsweX5Ke5wsJcc10Mvt/4c/o8v8Cly8cTHbdqr3Zjk9+4/XenXd7
+33HaGWt2Y53wWqUgv9t6L6YULbA0Y5/p6XjeGZwG4JEvtwRet6GT1od+Rz3
xwda0rjXnapb8TrTfJfFPT7gkpW3zENpwcfVDbx0PG6CIskpUKOvGb8j++DK
aewmzLnJkW7kNuOG9akhP9hugpt6lkSrTjPeqXXSxeCpN3g0pOnH327Cl3zJ
/5xwL/g7IXvyQF0DrrDfmOCb9ACmwOXn2m7fcYaGgcGWOVe4r+dRlMnxHb9f
Kn5TOM8VWHjna1kyv+EaMltaO7ff72xZk4s1nV9xn7bgFdKwC3A19Oid1arG
71ayazVmOAP/rqplU/4K3PVsfnGHtiOY2EukNt8uwdXXJfP4gQqhrjdCot8X
49/lfxSF5NnA59sVzoYzH/CnRxpvdIjYgGSMLWq2KsK9O7JiVGmsYR5P72zS
KMTV3DXE7/hbgLCKrlwaTzZ+3CKImxRoCPdOjq2KBb7CQ4AvSNvuHExZhXxP
XcjAE6Ip8Q1aBlD68Jt96s90XC3kWdA0RQ9y66I0jqsl4Qz6KcRuBU3wWWnq
xYSf4JcLeRnuLmNwUop8B6ONw42umknuDT4GtVuSzn4R4bhBYnogU7EqOJi9
zPI9fx837VcWYjRWBIbCPUN3BANw+rmQsdpxacAE9I6tEh74qomKsqyVMMw+
SbCbS6DiYZ47BrJmWOE2XWyV9uGTIOLF/iI/Vw3JJ9p+3XHQGR7rv59YVrqH
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
wXNmuErXhAm7v7Vy+NiyIPxQYvwXWs6EsWmwtIUw8gOd1BLf2e9MmMz+i3Jc
v/ngsOD4UUojE5a4F5IHc/ggje6Hf1I3EyYgc/uHuzEfeLfEcuQsM2Fourh5
XzYvSHpISv6QZ8Z4ZSKDbtnsBJ9iTSOuJGZM63n4zA0GCihbNs5apTJjevO8
rSqDZJjYsozIz2TG+CpHJWXLyWCu4/n93DtmrDlH922ZPxmOtr+C2B/M2KuS
KTkXGjIs/+WUE6Bhwa65bI0VsvKAp8IvBonLLJhLnkiMcCAJ5Fvs0m44smA0
plmJx86QYMRzDipdWbBSEfF3H/hIYFzG5nPZlwXz0E3uKs3lBNUzx+YyH7Ng
e+Q9nKa7OeDv1bRuuRoWbOi/f34P9NnBJeNa0UEFVuxyE9uPhWss0NOwK450
kBWraTTKqjvGAmdWam6MqLNi/pe+rK+RWGCfnoxS/ClWbM4Of3mpgBmG5oZf
/7vMiuWEnfKV2GAC02NWqe+SWbGoGjfdfWmMgFrPPVRmY8OKbbOjjaToIWeD
xpGNhw3zEm0Kpaelh13S+ScH+NiwHXmpT1Y66WD5Jok5eg8bdm9Tja4omg4K
RGoD5jA2jMF7KJZKTwd7HE945XuxYeotzcFiczTAQXeIKj/Mho3+UHops7iB
SrzojUYm2bDyfYY25p82kP10g+bTeTbskW3jv8W7G4j45bCHRMOOPd1rnuXC
s4Fu5CWOTQuyY8OTmw/OqayjDstNp1yDbX7gnikduopefajykfvEjjW/XfY0
8VtCxvujrw2Vs2P06So3Xp5bQnTply4mf2fH7HoLI09JLiHLiCXE8ZMd008y
+hRbs4i4LsvQTc2xYy8aecX4dy0iT3J4yGtpDkwsZVzvQu0C0rp+Pm5fDAeW
HPMmvcNuHrlHf6RxTuDAxF90lahrzqMXH8SvFT7jwAxZR/07xOYRHd2chnoO
B3aw7lbo1945RMSHz56p4sAEztaFW16aQ0eJ6tOuSxyYd6erx277WSRPOUJX
bMGJIQURie9Hp9HFw8+vr9twYt/Glq4zMU6jhxeZf2MOnNii4fxyesMUmsxs
y/vuzokZ+Dsf2rg8hV6pu13sDOfE/rvQdpX38SSSsH9dvIlzYs20lUWmbBOI
v0TIWUuShMWa+PyaUBxFm7aZu3hkSVhkgOfFK3SjaIik9K1LiYQJ9IV1oNYR
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
f4NQhuY=
           "]]}}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 6.444397516247402*^-9},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"Sigma kernel times squared DOS\"", TraditionalForm],
       PlotRange->{All, All},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {972., -118.66252583997979}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
      GraphicsBox[{{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1:eJwtm3c41+/3x423vd4ooWRWRkaIqF7n9SmzJFtkREhIElJGJWQlW1YZ2e9E
JGm8Xtmr7JW999771/e6fn/d17nu+5z7vq5zzn09H38cfsv7OtYUZGRkJEoy
sv+tXhPXlg8O2PEqtlXKmPZkZNyDY61nlx13Fo5+cH8rGdEkDmx82WLHXZc+
1UXxpCB8Ck5791fYce+DTKzSJgUpC4qgHRxnxy+L9D1t2U1BaCU6j+O/2XFa
90Y+0XNpyIOyd/yJdey4wVHJQ0SLNOSvga2QezU7Ln9BLVwjKA3JfbolIvWL
HU+P/kre0JeGaDYfPZtcxI5vKZTtbwa8R6Jcbl19lsCOn4k0Cvq0mI7s0Ypo
mrxhx0MO6AqMeDMQm6QlrXPR7Ph3z+futzUzEPkqH4PFUHb8QVTnqdQPGcjf
I+kWt3zYcTn+H1wjTpkI37epR+hddnzC1eX1GYZsJJf84Xsy+X/xWL4L6EaT
kHO6OdRxMux4hmpFm0AnCal6P2R7Rood/6l5RTCQ6wMyqKolbinCju8v/1w6
nvwB4QgVLy4/yo5LmW09jy7KQ3y4J6v9yf75N35jXvPKR4gOvKK8e2y4yEtF
67G0fCTph0HIly02nPvDYffTdflIya1KrcllNvz5eYrJX0cKkLmM1G71MTZ8
aFZ3nPdLAXJDxnSGsY4Nf9ZJM2dKU4iM+0ZdS6/652+2JcMtU4g87Kj/eLGc
DX/0k89U0bwQCX2s6OL4nQ3Hznwcyi4pRMqxI3uNeWx4i7PhmplTESKh0cIc
GcmGX6MncCyvfEaorFWluUzZ8Ltuf8eKdL4iLWZnDGeM/t2npOmzEPAVeXvj
qOcPAzb8aKnskyTsKyKnsVBpocWGq5mf1DCUKEVsZGKNci6z4Sjf/VhT1m9I
DfnEs/OibPg0RfjzqPnvSNROUzrTKTY80sLPzuP0D+TWWmndgCAbnkBY7Buz
+4FsTYYe8uVhw8etnL+pT/1ARJvkshqIbLgC2ijjMPsTCXnr32i6wYovJITd
e+WPIzfeOK1KrrLid27slw5m44hQhDEXxRIrTkkeQXj6G0d++EnczphmxeUM
OwjvDv9C5h061uf7WHENIfrr3tm/EK3zJ48/q2DFTXFx4tXBMoS9q9IhNZwV
z7lg2jQfWongYikBvqGseOTJx2tU3ysRh6ee722CWfGQsu8lT6YqkaqTMr2i
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
Vf8PYOF1Dw==
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
10+HGvyvn+7/AFd9YbQ=
           "]]}}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 5.017018210412023*^-7},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"Sigma kernel times linear + exp\"", TraditionalForm],
       PlotRange->{All, All},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {1360.8000000000002, -118.66252583997979},
       ImageScaled[{0.5, 0.5}], {359.9999999999998, 222.4922359499621}]}, {
     InsetBox[
      GraphicsBox[{{{{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
           Opacity[1.], LineBox[CompressedData["
1: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
            "]], 
           LineBox[CompressedData["
1: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
BnfH9Be2tgj4W3yDzfwNMfgfJSjhmQ==
            "]]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
           Opacity[1.], LineBox[CompressedData["
1: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
            "]], 
           LineBox[CompressedData["
1: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
UIQF
            "]]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
           Opacity[1.], LineBox[CompressedData["
1:eJwVVnk01k8fRfb9eZ6itFhKtpQQlXyIJIXsS0VCoiQ7iUKUJGsJ2ZWd9LML
M7L7KmtKshTJzmOn5PX+NeeeM+fOPXM/984IWt7Ru05HQ0Nzl5aG5v+rz2+t
+c1NCh5t0Ys2dJGE0Xs8S31/KVhq7xi/SJYkaHMPrpSuUXDd05IRk0FJEDjh
uHFngYKPO45WD2oehg/BkcxDoxR8zK/rwrNDR4D58Jd9+CMFr4tX8vg+kILn
rhYXfF9R8GOfvNFUL2nYYBbTvhJDwUI+Ne9PxUuDTQJV5/gLCo64t6ROrpYG
+QZ/o7lQCr7c3i/kTCcD33jfXLPwp+BobR0D7lAZEHg/7qFsR8F7EkVcD7yT
hRxal9c08hTcJJYfi8Tk4bh+NmOsDAUnPlFRO2IsDw2vf9gelaJgO062+aUA
eRhS15G0FKPgqvfFPcE/5IEnVLKkdjcFS2ga4ZHE4+DPN9b4iIaC+YdkfafE
TwK3Pb84/wYZ14iK+fOZn4SEKqOQ0jUyjvLfJ54dcRLKLOp1xubJmI7OUom6
dhKm01N7NX6R8f7nu55JtymAiYzZJHsLGXMGTlw6+EwRRgOea71pIOPltbCD
DQ2K4NJDvFWsJWNuQfl7XTQAoXdPujpUkvFoA+vvE+4AtYh3oy2fjDUi70ho
2ijBYc1OzqgoMh4+8Hw7f74yMFxXl95lRsZLevup7zpVoNP8qPGkKRnfYLAn
qhdVINFkt3eVERkXR8fHMvGqgpzmbP01HTI2Je/L1r6iCjYyL02zVcl4244f
E1XjqtBE+9tXQZyM8228I3y41SAk8VGb2QoJu8mlvAsOVweTGMfFI4skbPOf
YfxYhTociLy0i45KwtcjSM/Cf6lDVeBhq/QJEn7A0umCFc7BjH3P8kw/CTfW
FIjmT54DHYWD+3zrSNggrfyq9KXzQPlab58aQcLtO4PHIt20AEukBAWEkjCI
vogRy9IC+wfer22ekrDPqP80b78WNByU+S4eSMIz92VrN9S0wcst+UKhJwmX
fGpd39h9EX6S74nXXSVh/pBhmSx7HfhPS2rslyQJM/h9aqvT1oOrKWz0TeJb
+LtPQ4KDHrAvjfJni5CwiuBxq9xQPbCJTzB2ECTh0tGC8VttesA3ydq4vJ2E
Iz37an309cE/6Ncbpr/cWHZz+oiCjQHo1cZZibVwY+e7lMd5ZUZwoHtkoLGB
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
b6IQpsyU1Bthiv8DuSTVEQ==
            "]], LineBox[CompressedData["
1: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
            
            "]]}, {}}, {{}, {}, {}, {}, {}}}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 3.2080077358712895`*^-12},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"Kappa kernel times root DOS\"", TraditionalForm],
       
       PlotRange->{All, All},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {194.4, -355.98757751993935}, 
      ImageScaled[{0.5, 0.5}], {360.00000000000006, 222.4922359499621}], 
     InsetBox[
      GraphicsBox[{{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
wQwFyQ==
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1:eJwtm3c4V//7x+0930LlUxQqMhKhcJ8jyc4Mycpe2aSsoiSkzKyysjeRlXPs
mZVKVvYmbyNK5et3Xb+/3tfjer/Ofd2vx/18va7zzzll4aJjTUZCQnKMnITk
/379FzQ2Dw7Y8H8PMrlfgSjM+3LsjP5hw+1Ul5Rl74nCDZbvu+9/seGPLll3
K5aKAs9l178uW2z4zcJFpRbWC9AUFk0zOc+GP+Tj5HF9egFoRL6exD+y4VfJ
RnJq/cQg1tNc7WEyG06us5xcHCUOf2kEbhgnsOENjJSmv96Jg81ropZ0HBte
vmkJQcPiINUWpL8ReVj/YjGZFo8EjHBm3TEPYsMLCRvGC+USwFO3dA+1Z8PF
S6rqrWcvQQGpx1sSKTa80UgQunylQVo3nypRnA2/c1OW0r5AGtreTtmJXWDD
BXU3CBaj0jCppCVsIcCGf8idSbSWvQwckcJVzVxseIr007oWsisQdHyxPYSE
DZ+n+3rjQboMsDhxC3L/JeDBUzxFjF9l4PUH/Yj3vwg4WexraSpGWag2b9Va
3CTgMawqdQIPZGEtO+ObyhwBT8bptm7ckgNDcZMVhi4Cfmdf4WnteQTmH8dq
ZLUR8B7HzBO/bRHw+NJdItdMwPvcL9IUvEUg8v4VT+d6Av4kTJO2nBmFZozz
b18xAb+3JrXK9xwFEfVBppgYAm73X8aoZow8UForXTxmQsCnn/7J7etTgEFT
MYOVWwQ8X+lnhc6WArwx5PL7oE/AhTLOv2LjvAaS6j9a72gR8GKZ6SdaZtfA
RvzVrXwFAo7O04c0bV6DDtKFhzKCBNyqX09ljv86RLwJ6TPZZcWJZMkJMrgy
GCa4botus+Jzny5Waq4qA1+00TEyIituPUizU3JUBT48EbHMXmbFr2VFD+u7
q8C605ef6+OsuBljuZi6gCpoyZw5+bCFFTevHxlRylYDtuFWp4woVtz2R3+i
wuQNwM+nhz6OZMXnuyYsP7JrglOg31ubcFb8X2oZY5maJrSdER8TfMKKU4dG
K4RWa8IDrzS1Ch9W3DXO9qSCmhZME3wFW8xY8fLbjRWnLmpDucaFxTlhVryy
2pXxCb8umKXTU3QIsuKoDVeY33VdYNiZ584/e9hv5bOJfFtdsEl5beB8ihV/
LpTvWJSvC8dX6Np/HmHFSd5ebdAV14Og0Lks6j8s+Jt8EzFPzZug05xkKdDF
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
A3REKb4=
           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
H33Evsk=
           "]]}}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 2.2044082182476967`*^-15},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"Kappa kernel times linear DOS\"", TraditionalForm],
       PlotRange->{All, All},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {583.2, -355.98757751993935}, 
      ImageScaled[{0.5, 0.5}], {360.00000000000006, 222.4922359499621}], 
     InsetBox[
      GraphicsBox[{{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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

           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
sQj8//8M6BGN+Lj8KyLwP8yYtcs=
           "]]}}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 9.54347996686641*^-19},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"Kappa kernel times squared DOS\"", TraditionalForm],
       PlotRange->{All, All},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {972., -355.98757751993935}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
      GraphicsBox[{{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
MPzv/yWq8b//l/8H3FtTMA==
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
           "]]}}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 5.593028900436673*^-15},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox[
        "\"Kappa kernel times linear + exp\"", TraditionalForm],
       PlotRange->{All, All},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {1360.8000000000002, -355.98757751993935},
       ImageScaled[{0.5, 0.5}], {359.9999999999998, 222.4922359499621}]}}, {}},
  ContentSelectable->True,
  ImageSize->1200,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.687017939313945*^9, 3.6870179646088057`*^9}, 
   3.687017997062461*^9, 3.68708196727286*^9, {3.6870820514808826`*^9, 
   3.687082056720395*^9}, 3.6870827283343782`*^9, 3.68708296150032*^9, 
   3.687085264026582*^9, 3.687085692245446*^9, 3.6870859208031054`*^9, 
   3.687085955682663*^9, 3.6871699712317877`*^9, {3.687176290015492*^9, 
   3.6871763097449017`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sigmaT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"symDOS", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{"sigmaK", "[", 
              RowBox[{"energy", ",", "T"}], "]"}]}], "]"}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"largeValDOS", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{"sigmaK", "[", 
              RowBox[{"energy", ",", "T"}], "]"}]}], "]"}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"largeCondDOS", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{"sigmaK", "[", 
              RowBox[{"energy", ",", "T"}], "]"}]}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"energy", ",", 
           RowBox[{
            RowBox[{"-", "4"}], "B"}], ",", 
           RowBox[{"4", "B"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"T", ",", "100", ",", "4000", ",", "100"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kappaT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"symDOS", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{"kappaK", "[", 
              RowBox[{"energy", ",", "T"}], "]"}]}], "]"}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"largeValDOS", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{"kappaK", "[", 
              RowBox[{"energy", ",", "T"}], "]"}]}], "]"}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"largeCondDOS", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{"kappaK", "[", 
              RowBox[{"energy", ",", "T"}], "]"}]}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"energy", ",", 
           RowBox[{
            RowBox[{"-", "4"}], "B"}], ",", 
           RowBox[{"4", "B"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"T", ",", "100", ",", "4000", ",", "100"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"temmps", "=", 
  RowBox[{"Table", "[", 
   RowBox[{"T", ",", 
    RowBox[{"{", 
     RowBox[{"T", ",", "100", ",", "4000", ",", "100"}], "}"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.687018076083315*^9, 3.687018235186943*^9}, 
   3.687084016353304*^9, {3.687085995831238*^9, 3.687086022607373*^9}, {
   3.687169990006908*^9, 3.687170003325542*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "100", ",", "200", ",", "300", ",", "400", ",", "500", ",", "600", ",", 
   "700", ",", "800", ",", "900", ",", "1000", ",", "1100", ",", "1200", ",", 
   "1300", ",", "1400", ",", "1500", ",", "1600", ",", "1700", ",", "1800", 
   ",", "1900", ",", "2000", ",", "2100", ",", "2200", ",", "2300", ",", 
   "2400", ",", "2500", ",", "2600", ",", "2700", ",", "2800", ",", "2900", 
   ",", "3000", ",", "3100", ",", "3200", ",", "3300", ",", "3400", ",", 
   "3500", ",", "3600", ",", "3700", ",", "3800", ",", "3900", ",", "4000"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.687018248361515*^9, 3.68708207868158*^9, 
  3.687084022844398*^9, 3.687085280884338*^9, 3.687085702140649*^9, 
  3.687086033548072*^9, 3.687170003730505*^9, 3.687170161912931*^9, 
  3.687176505117449*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotoptionsigma2", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Sigma - root DOS\>\"", ",", "\"\<Sigma - linear DOS\>\"", ",", 
     "\"\<Sigma - squared DOS\>\"", ",", "\"\<Sigma - linear + exp\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotoptionkappa2", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Kappa - root DOS\>\"", ",", "\"\<Kappa - linear DOS\>\"", ",", 
     "\"\<Kappa - squared DOS\>\"", ",", "\"\<Kappa - linear + exp\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotoptionsigmakappa", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Sigma/Kappa - root DOS\>\"", ",", "\"\<Sigma/Kappa - linear DOS\>\"",
      ",", "\"\<Sigma/Kappa - squared DOS\>\"", ",", 
     "\"\<Sigma/Kappa - linear + exp\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotoptionlorenz", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Lorenz - root DOS\>\"", ",", "\"\<Lorenz - linear DOS\>\"", ",", 
     "\"\<Lorenz - squared DOS\>\"", ",", "\"\<Lorenz - linear + exp\>\""}], 
    "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.687082103150527*^9, 3.687082127940013*^9}, 
   3.687082240417841*^9, {3.687082312402999*^9, 3.6870823456638117`*^9}, {
   3.687085820433558*^9, 3.687085835581131*^9}, {3.6871700180720377`*^9, 
   3.687170034022703*^9}, {3.68717030920691*^9, 3.687170335177435*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"sigmaT", "[", 
      RowBox[{"[", "temp", "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"root", ",", "linear", ",", "square"}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"symmetric", ",", "asymmetric"}], "]"}], "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", "sigmaT", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"root", ",", "linear", ",", "square"}], "]"}], "]"}], "]"}], 
    "[", 
    RowBox[{"[", 
     RowBox[{"symmetric", ",", "asymmetric"}], "]"}], "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"GraphicsGrid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", "sigmaT", "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"plotoptionsigma2", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"SwatchLegend", "[", 
           RowBox[{"{", 
            RowBox[{
            "\"\<symmetric\>\"", ",", "\"\<large val\>\"", ",", 
             "\"\<large cond\>\""}], "}"}], "]"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "1300"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.687081351594709*^9, 3.6870813681032047`*^9}, {
  3.687081399638185*^9, 3.6870814066081953`*^9}, {3.687081452422641*^9, 
  3.6870815230665627`*^9}, {3.687081556162242*^9, 3.687081696367056*^9}, {
  3.687081734564891*^9, 3.687081899851022*^9}, {3.687082139634211*^9, 
  3.68708214123598*^9}, {3.687170039359988*^9, 3.687170042217244*^9}, {
  3.687177150322585*^9, 3.687177189914257*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7F8c1f9/LaLbHirg8MR6VUJ42GQon8NB4EXc
9ufrpkP5Ag6vwOpnQ/kiDolzxTx0J8+D8iUceh9ICsjvXwDlyzhM5Yg9PU9s
EZSv4MBmAzJ/MZSv5DD3SrL9wqYlUL6Kw0+naTHL5i2F8tUcNH5x6pxaswzK
13CwA7tnOZSv5TDPMPRIxbIVUL6Ow5GNF+etn7ISytdzaJGr3NpRtQrKN3B4
CXb/aijf0OHoD9H3PgZroHwjh3uR/wWaGddC+cYOYZNmMv89A+ObOOSD/bsO
yjd1+PVgjkVFyHoo38zhkvErvdkcG6B8cwelI1tUb6fA+BYO366DwgfGt3Tg
vl4b3ya+Ecq3cojS2JmumwfjWzvo6LWf1D0M49s4/ACH5yYo39bBzUBsydQM
GN/OYVKd4i7VnTC+vcP+GLebCRyboXwHBxlw+EP5DQ4OrN8zsiQWw+QdHQTy
L7zd+A4m7+jwilXmroHlFqi8k0M+OL6g/AYnh2V2we58p2Hyzg5vdiqkNwlt
hco7O/g91k5ij4TyGVwcToDjd6s9AFd4rvs=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7AOW2t1SXthnDxVwiA88bL1k3jQon8MhpJ2F
IXr2HChfwOH89w1RO74sgPJFHA6ueLX1W/JiKF/C4Ub9/ohJq5dC+TIOcm9P
eKleXQ7lKzhcSL0j9vHZSihfyWGxc4yO39PVUL6Kg8n3kIa0y2uhfDWHzs99
bXM3r4fyNRxShENVnh/eAOVrOayLMnbbuWIjlK/jELn3it+9jk1Qvp5D1LTu
0ispm6F8A4fVPKdMWW23QPmGDrs9FE6eFNwK5Rs5PJOuKM17DOMbO+yK0uAy
3bQNyjdxeMx06nhY3XYo39TBxb3gNqvHDijfzEFXN78zj38nlG/uoHNhjvSO
KzC+hcN9qdSFrDN2QfmWDrOsdHrKIndD+VYO6mtO6atL7oHyrR2mXPmtY3gd
xrdx+H3R5NTqyXuhfFuHF9KBdmv89kH5dg4Xeva/d+XYD+XbO8zodV/VdQDG
d3B47t6edtT6AITf4ODQZSaxc9U0KJ/B0eFac63Hnw8weUeHvgdXeg94HYTK
OzkoRK7q+bsYym9wcuieH3xvxx+YvLNDzbvXu7+HHILKOzvUiiiz718D5TO4
OPRc5QwSZjlsDwAXCrdg
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7H9WWZUWK+fYQwUcJnh1KW07XgLlczhwsCbN
PuZeBeULOGg5cG7NVK+H8kUcZG9Mm+18oRHKl3DYtWf+1YwXzVC+jMOW+vCV
3560QvkKDhXr/JPWnG6H8pUc5v6e9b19QSeUr+LApplSX5jWDeWrOSydE7Z5
lnwvlK/hsEia6/f2s31QvpaDYt4cQyHLCVC+jsPNAznL/7BNhPL1HPbvbA/i
vwjjGzgksXhJrZ4+Cco3dIhtXPZNMXoylG/k8PNs/8+d0lOgfGOHLi6bGetv
wvgmDm1TfbPNp06F8k0dir8Yd9f7TYPyzRy4xJYt2sA6Hco3d+izaz75bheM
b+HgfN7dNCpvBpRv6SD2aPsJfoWZUL6Vg0j0i07NCzC+tcOUpaws++tmQfk2
Dj3vP8x4qj0byrd1eCp96+iG6zC+ncODRs9Yo6Y5UL69A//C1h1V2nOhfAeH
oPJbD2dchvIbHBzK2n7umFU1Dyrv6LBoX45Qr8J8qLyjg9GnZ5eqj0L5DE4O
dX3dzDtNFkDlnRz2cjv/sWmD8hmcHWKDvs/3uw6Td3Yojd+W9Ul9IVTexeH4
xYx+nYqF9gA1krDo
             "]]}, {}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
         PlotRange -> {{0., 40.}, {0, 0.14856187349111527`}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Sigma - root DOS\"", TraditionalForm], 
         PlotRange -> {{0., 40.}, {0, 0.14856187349111527`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"symmetric\"", "\"large val\"", "\"large cond\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {194.4, -189.}, {
     Center, Center}, {360.00000000000006, 360.}], InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJwt0FkoRFEYB/BpiqSUhGwPyJZl7NtY7t+M1JRsDYmyZSmpITKKcu1bMxj7
vsuLFyllKbxIKUTK07wTyauauMf/1un2u/9zz/m+L6jOVNKgVqlUEX9Lef8/
X1Je9uHkZ1GhxA8YT1NcTbug5O3q/ainiXbHoMhNtCdK9Xe+c7Z22getYr+Z
DsDB9MnFQ2M3HYgP8X8vHQzX1se44bU+OgT94rwBOgxv3jfq3ZEhOgJGcf4I
HYmni/Pnq7YxOhoV4r4JWoPv+qN9e6WFjoNV3D9Jx8PD2Xju2J6iE2A3KfVM
04nYfy3Yc1u00UloFvXN0MnQHBqsAZZZOgVqJ6XeOToVx3KuOap/nk5Dh6h/
gU6H1ijVaM2LtBYO0c8SnYHLcK3B0LJMZ2JU9LdCZyH/JymhvHaVzsZ1g9Lv
Gi0h6j7Wv6lsnQZeRP8b/5aBmGIv9VnoJvMcOJyUedByDuyntk5d4BZzHa7F
fGhZh4MQ9/dbv23mekyJedGyHl1WS3Wx1w7zXFSJ+e1Ivwvustw=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJwt0EsoRFEYB/BpFmKhLIy8Fsgr5DkeMx73b8ZmUkJDSvLIo6SG1ExJuVEk
eZuQ5DXG+zUWFsZiVijCZCPFVpQsLER53ON/63T73f+553zfF9lgKW9Sq1Sq
+L+lvP+fN+lDtzP6Wlor8QMucxRbaF+Ynz0vrm4bHYB+kffQgagwXoTYJ/ro
YHSK/QN0OJzjRyfXzUN0BJ7E/6N0FPzab1L758fpaMjivEk6Fs9Bp2rHgJ2O
R6U4f5pOgPfEfevpmKWTUCXum6OT8d7ocj5Wz9OpGBT3L9Bp0PiY3d/Li3Q6
HixKPUt0BtbuSlb9Z5ZpLdpEfSt0Js4cppHwYQedhU9/pd5VOht7XUW2xF4n
nQOrqH+N1kFvlur0tnVajx/RzwadC0+c3mRq26TzUDyh9LdF5+P+S5teVb9N
F6C1Sel3h5agvkoJa6ncpQGv6H/v3zKQVKZRH8fsMy+ESsyDlgvRo52yGiIO
mBvgEfOhZQM2owNezkNdzI0YE/OiZSOsI8O1ZZpD5kWoEfM7lH4BZTS1vg==

             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJw10FkoRFEYB/DbRNkeJISUXUga+1zb/JlJUiJ5QKGE4mVsRQzG0hCy71le
FCUeJF7MgwdrlDWR4mGSKCklpcQ9/m6dbr/7P/ec7/v8Sg255SpJkkJ+l/L+
e960N611DgsPei0/IK5ZcR5thyrN6uBrTgntDBuRl9GuOChwPtnzqKI9MCn2
G2hv7DoGhfbpa2lfZIj/62l/bD7vvKwbG+hAqAqV85roYMiHxWu3G0Y6BHXi
/DY6DA8XLZr2DxMdjjFxXwcdgUzdsef4SCethr24v4uOxN6619dyhJmOQquo
p5uOhtq/8m77qIeOgVX020vHosi8ZTmt6KPjkGVR6u2n4/H0abtgVQ3QGsyL
+gdpGcGaMBizh+gEfIt+/p2Ia8OZ2jw3TCch1knpb4ROxtNSo9/Qy79TMCv6
HaW1yL/3cZmRx2hAFv3TJuDRfV+12D3OPBUrYh4TzFMhpVe/r17RUhryxXwm
madBNrtZtwKmmOvgLuZFm3R4t2xf7tRMM9fjXMxvRvsDQ/uu+g==
             
             "]]}, {}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
         PlotRange -> {{0., 40.}, {0, 0.07645542030173887}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Sigma - linear DOS\"", TraditionalForm], 
         PlotRange -> {{0., 40.}, {0, 0.07645542030173887}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"symmetric\"", "\"large val\"", "\"large cond\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {583.2, -189.}, {
     Center, Center}, {360.00000000000006, 360.}], InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJw10V0oQ2EYB/C12igKRU0m37PMFhszzDkPR4iSpsnHhdBiVrZpi5hsxIW4
4AbJjRu1KzVumCgLcWd2rZRSI7RaKMI5f6feTr/3f857nuc5eYN2k0UsEomU
v+vvLlyv7GfIHVRvXDLYIOrJCq+tv8OJJO0NqBf8SazgVGKKWn9zGZxO99G0
g1F9ASwj9cjf8ypYTq6LkDX5VgvnEvHvG+B8OopYw5EcFi7EeRysoJ2M4HUL
2wwrcX4bXEKK+PRzirEDLsX3TLCGYqr9JMO2GS5D/d1wOTGBxVP5WR+spWO+
nn5YRy3nH5K7rgG4AvUNwZXk7/uKr2gssB71DsNVdJ3ZrtsascIG1G+Dq2lO
/HQolYzBNejHAdfS/nK06dHnhI3obxyuo+zdhC6P1gUz9Mb364ZZ+jZfLbHp
E+z/7xX6nxTsJdrb1D2UF08hryfi5zGNvJ5iTs7SaZtB3kAn/HxmkTdQx4tH
YnJ4kXPUys/Lh5yjG7squsrNIW/E/ObZH0tVplU=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7Ct8X7C36xjbQwUcmHZpBz/tc4byORz8Xx7O
ffrSF8oXcNA4cv7lwuAQKF/E4Zl6ilPD40goX8KBUWH+gd4l8VC+jIOXlYNR
6ukkKF/BYUsai7j03VQoX8lB6eDsvgz2TChfxaEplW2mr1cOlK/mwBziYnZq
aT6Ur+GQeEzL+H1PIZSv5fCcfa6Ia3AxlK/j0PGuYv8z1VIoX8/BuWqf8RWW
cijfwIF9dW4h74cKKN/Q4VJDW8Wk51VQvpGD6U8Oz+TXNVC+sUOT9NdH9b/r
oHwTB9MCVeUv3Q1QvqnDOY5WS78FjVC+mcPhNTNNzu1qgvLNHW6yJYuU3G6G
8i0cmo0f3rBnaoXyLR32mYg0Geq3QflWDvdZ//B7JrVD+dYOLStnNLXN7oDy
bRxuy7+6+fJWJ5Rv6/A444NosUI3lG/nsLhltZlSTg+Ub+9gUixt831vL5Tv
4PDY2EHtk2g/hN/g4LDocU8Vp9UEqLyjwxyxkCs6b6D8BkeHB5tKFZIXToTK
Oznk7PgYtyZyElTeycFC/UQ/h+hkqLyzg9P/H5vKL0P5Dc4OkxxaTvycMgUq
7+Kg8TrzQl/kVHsA0SGnwg==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7G8kPDq54ru6PVTAoXXFt+XziiygfA6Hy4Wz
UvQ3OUH5Ag5GW51TujI8oXwRh48z6jQN9AKgfAkHhpLkGTeOBUP5Mg73PC7U
2dWFQ/kKDgkNR+8khkRD+UoOaRudNjl5xkP5Kg4F/xfXF6xLhPLVHBq3vEqc
dzwZytdw+FX+9b/Wh1QoX8vhvueRSDGNDChfx0FXKzw/IT8LytdzuCyxzoHz
WA6Ub+BwSvTkWQGdfCjf0KFVIKR794UCKN/IYd/spbxywkVQvrGDkeHNt/qx
xVC+iYPjmXfaH9eVQPmmDgzez44ncpRB+WYOn8QPHGzMLIfyzR36T1RLBl6q
gPItHJIaJM+fd6qC8i0dXjnOfPR3VzWUb+UQxf47+LZVLZRv7fD0sp1yxqE6
KN/G4VWwkcYljQYo39ah33HbW/cvML6dw3Mj7aSphxuhfHsHBo2JrbumNUH5
Dg55Ci/Ct+c2Q/gNDg4dMgY3uz1aoPKODi4ymZwW6q1QeUeH2fKTX+zmbIPK
Ozm0qa0rE/8A5Tc4OTAa7trsdasdKu/sIGK/fX7oiQ6ovLPDjoClVha7OqHy
Lg6fUltaPq3vsgcAZ0+qMw==
             "]]}, {}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
         PlotRange -> {{0., 40.}, {0, 0.020849448652806718`}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )
               [
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Sigma - squared DOS\"", TraditionalForm], 
         PlotRange -> {{0., 40.}, {0, 0.020849448652806718`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"symmetric\"", "\"large val\"", "\"large cond\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {972., -189.}, {Center, Center}, {360., 360.}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7H/cyFw9kcXbHirg4PlFrriHNRrK53CQ2r5j
4knXFChfwCHm1oxTDjzZUL6Ig2mFy+v6twVQvoTDxPXKy3jiSqB8GYc7LeUM
Jx+UQ/kKDmXda8Mrm6uhfCUHmUfrMkMj6qF8FYfI/q1dfrsaoXw1h3+OdR12
35uhfA0Hn9Mv7mfltkH5Wg51jD9516p2Qvk6DldOa3xepNYD5es5fIsq+x1d
0g/lGzgYH9yirN4xEco3dMiTniF0sGYylG/kEDDDr7Bg2lQo39iBbUeKyulL
06F8E4fyxtIXu/VmQfmmDjHTVe23LJsD5Zs53JkZdu2m2Xwo39xB6p71x2lv
F0D5Fg63Hm5/c819EZRv6WCqeeS82YrFUL6Vw6djyeeu8iyF8q0dmvQZt7wv
Xgbl2zg0Nz59+vD2cijf1kFn37xSPeeVUL6dQ+3DmwtqV6yC8u0d7EwMhOdx
rYHyHRx+N5w2bslYC+E3ODhM23Ftr8fBdVB5Rwd5XukcYa4NUHlHBz+Jra9t
NkD5DE4OLqkMaXeDNkLlnRyeP/H7s+8jlM/g7HBns6nSjp5NUHlnh7SVJ2JW
KW+Gyrs4sBh28DZu22wPACx5sfk=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7Nfu4Dpwh9HbHirg0NM/LzeSKRrK53Bospsm
NtkpBcoXcNiw4Xj2ZtZsKF/E4VaW07XqZwVQvoRDl9rkiVv8SqB8GQc/q0cy
rAfKoXwFhyqJY8v8HauhfCUHm+uyfBtu10H5Kg5TKjUUH/s0QvlqDi7L9f1D
nJuhfA2HOTm/VyaHtUL5Wg73ZNk/1Ha1Q/k6DmvP9wl+etQJ5es5tB3vO3I8
sQfKN3DImugpuYu9H8o3dODrzZ6t9moClG/ksNFM4NGvpElQvrFDxp2bl1Te
TobyTRxmvBM7I9k+Fco3dbh2fVafkP50KN/M4W5f+EfFxzOgfHOHuwptfR4L
Z0H5Fg53uKQVW9PnQPmWDhMKbGY/NJ4H5Vs5rPAtn2HHtADKt3awmXTu2snX
ML6Ng5ysp/XBqwuhfFuH3Ox151L3L4Ly7RzOZV5dz71iMZRv7zBLodtEqn8J
lO/gIHcmZQJ3yVIIv8HBgc/gh0JO2DKovKPD1dXbK2+aLofKOzrY7nrswii0
Airv5JCed5hrwSsov8HJgeHOijf1+1dC5Z0daiw148onrILKOzvoFkc8SY9d
DZV3cbjGsP2BjdoaewBdU6rm
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7OcJaE0QCfG3hwo4mH3oNVgaEg/lczi08Ggb
5jakQ/kCDgEWUmUdEflQvojDg40l83bMKobyJRwSrizuqe8rh/JlHBRiWPdd
6qmG8hUcDr7VDFk3tx7KV3LY0bdu8cWnjVC+isOLSSejmwRboHw1B4392RPD
I9qgfA2HZ1VfleMPdED5Wg5pkqL8u/26oXwdhxCBBUcd2fugfD2H6VblQupl
E6B8A4cLrBunxvyfCOUbOujcWTL957zJUL6RgzMz72mJkKlQvrGDYEvU+mDZ
6VC+icMS0/11D37MgPJNHa4+UFVe/2QWlG/msO7bsu7me3OgfHOHjXKL63me
zIPyLRzCLjj7VlcugPItHSYd1t5b27IQyrdyEC67vOnbxEVQvrWDKuOxZ/cX
LIbybRy4RZb0uW1YAuXbOsxvcVD13b8UyrdzkFnk5KlzdhmUb+/g2hTw2Ojm
cijfwSE6YM6+o49WQPgNDg6PrkXsiHu5Eirv6GA7vXVJ95tVUHlHhzeFnxje
vl4NlXdysNuU02XyfA1U3snhr9aRw8r31kLlnR1kMnZVdV1YB5V3dmBY+DrY
dd96qLyLw5cGFaN5wRvsAUQMr3c=
             "]]}, {}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
         PlotRange -> {{0., 40.}, {0, 0.07700354175921481}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Sigma - linear + exp\"", TraditionalForm], 
         PlotRange -> {{0., 40.}, {0, 0.07700354175921481}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"symmetric\"", "\"large val\"", "\"large cond\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {1360.8000000000002, -189.}, {
     Center, Center}, {359.9999999999998, 360.}]}, {}},
  ContentSelectable->True,
  ImageSize->1300,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.6871771906279793`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "kappaT", "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"plotoptionkappa2", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"SwatchLegend", "[", 
          RowBox[{"{", 
           RowBox[{
           "\"\<symmetric\>\"", ",", "\"\<large val\>\"", ",", 
            "\"\<large cond\>\""}], "}"}], "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1300"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.687082193799521*^9, 3.6870821997836733`*^9}, {
  3.687170053206411*^9, 3.687170055591391*^9}, {3.687177182264214*^9, 
  3.6871771993732853`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7DeJfZ80b16OHVTA4Uf+4RObbVqgfA6HN7mX
0o5PmwTlCzh0K4DUz4HyRRxiVv9qW/h/MZQv4TBrQ/b/t56roHwZh3sl1grh
EzZA+QoOBSIg87dA+UoO95oYzlxV3QHlqzgUmYelOnjsgfLVHJjnv6prCDgA
5Ws47Aa75xCUr+XgUsQhfevrEShfx2FFCI/+/pzjUL6eg5t3f8OMXyehfAOH
IEWQ+89A+YYOd74pfJGJOA/lGzkcmpGy0Vz4IpRv7JB0ZOmh+pZLUL6Jw4ZV
IP9ehvJNHQr3vJOMbbkK5Zs5NM58b1YudB3KN3do2fB/w46VN6B8CwcJcPjc
gvItHZhTWm8/+3QbyrdyWLLb803pkrtQvrWDuVRzbUHcfSjfxuEKODwfQPm2
Dg7lnl0tpQ+hfDsHoZic7HVxj6B8eweNVw2zD3s/hvIdHLrB4f8Ewm9wcJjb
+jIt3/ApVN7RIfwA/4Lnms+g8o4Ou8UM3fnUnkPlnRz0m0Hx9QIq7+TwIOej
vqHmS6i8s0PAT+8/wgavoPLODjb/dSyLrF5D5V0cXoPj940dALrfuhc=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJwtyVtIUwEcx/ElQQsiDiU56MIqi5NI2Oamu7Tz21YSp55KFifsorVYUqYQ
QW+zl7WHsojAh15KKiL24IGFIyq2ti4bRiVLU6RNQ6qlTV26vNAFf3/48+fz
/25uOn/QW6LRaMR/+/8uTV5SrY0dN3tbHXygcmVHvd0SpLUoyGXLs4ZOWoD3
T126f38XXQpt0Jc1Jx/ROlwOz90Woiq9AcdmZbPW2EPrcWNKycRNz+gtuB8Z
fxxoitHl+FTUXQ1PJOjtKNhrHkw9fUOL2CE23Jl720tXQP6wzqMI7+lKlIRu
hQSlj96JfGRFXXU0TVdhsmVN44l9A/QuFFPdCevEIG2AJygdalOHaSMuRi+0
NMgZuhpXDLmNp5NZ2oT6d68TJmWUNqOnOf4iNPOFroHGcrxdvTtG16K2U7JW
HP1KW9CqrE4tbPtOW7FKkANrF3O0DfeG+0uVkXHajq5LRw5E0j/p3YidjF+7
nsvTDvhetdmk6UlawqbUVl1m2TQNnPIV55vLCkv2A/5CUj9g/MXuRLjq4Xr9
4Rl2J/a+FD7a2mfZXXAZhgLlapHdBY8Y6+779pvdDeeTMzq3OM/uhteTeX72
3AL7Hvzwfx6TI4uOv+Q/uXk=
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJwtyVtIkwEYxvFpCMubRJZMMTqyRL7MlYfa9PPZZ9kg3MWwsF2IfrAMlATZ
hiwM24UV2CpQR1ghKFq4NPNQFEMtGYqk5SEPGzVwyUjI5UVCSCd8Xnh5+b3/
g3KN2RqrUCjS/u3/uzPRgs9vX8Rd/2IS+cDxtb1qtVBJK1E7dCmSqHfQCXDL
HZGU1zdoFcJFk/2dN2/TagQ7zv96qLtPp8L6wPUtR99KH4DjwtPVmdE2+hAk
gyCOr7bTRxCvtJ1N0nTSGrTeM1bt6uqm0/AntfxZhdxDp6MsWJJ3zNJHC/BG
JCf8/XQGeu1a2bg9QGcisTh3cNY0TGvhSB680+R7RZ/AE2/gWrrxDX0Se8I/
r1Z+99FZaNdGN2JKR+lshDMEt+wfo3Ow9TxYqpPe0bmIWEJbNVPj9CnUJZhH
1iv89GmkiFaXJ26C1sGb1V1dNjxJ6xFqaAwJtik6DzHqfEtUfE/nw7lw+aIn
aYYWobItPbpV/4EuQP3ulsNHHR9pYL75im+/fXbHDYBLozxX5ZxjN2DEHd2I
bZxnN+B3S2Z2yLPALqHJPhfY7vvELuFl+eK6eXqRvRBfNx/3BDeX2Atxd3m6
rXnfCvsZqKp/1NpNAfEvjWy1dg==
             "]]}, {}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
         PlotRange -> {{0., 40.}, {0, 0.00002834682384633771}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Kappa - root DOS\"", TraditionalForm], 
         PlotRange -> {{0., 40.}, {0, 0.00002834682384633771}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"symmetric\"", "\"large val\"", "\"large cond\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {194.4, -189.}, {
     Center, Center}, {360.00000000000006, 360.}], InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7F8ZVGVknzS3gwo4bDpYDeSHQ/kcDhYRXVdn
HMqC8gUcfv0AqS+H8kUcZgkteBk9tQnKl3DgjASp74LyZRyK1P9Zm5lNgvIV
HHaA9U+H8pUcpBZaf3gtNQ/KV3EIEwSZtwjKV3NgsD/SkV6zDMrXcBAHm78K
ytdyuBv36fz79PVQvo7DXbB9m6B8PYc9olfS2F9sgfINHKR+guzfDuUbOjhc
+uSQdGsXlG/kUAZ2zz4o39ihYbOWdcvRA1C+iUMd2H2HoHxThy2vapn/1hyB
8s0c+MDuPQblmzv4yRVXzp58Asq3cGAFu/8UlG/pkCHHNTee8yyUb+WwAuyf
81C+tcOVHsXtKu8vQPk2DrvA/rsE5ds6MDD0l+l0Xoby7RzmgP17Bcq3d5iX
cZbneNA1KN/BgRPs/+sQfoODw4tjdyq/eN+Eyjs6RIHD4xZU3tHBSXrv3i0l
d6DyTg5Rqy2A4XMPKu/ksCI17wb72ftQeWeH6eDwegCVd3bQC/7xpGzVQ6i8
i8MkcPg9sgMARJu4hw==
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJwt0FkoRGEYBuAJZckFQhMSEtIk61iGmZdRkhuRIkVNjVGKC5I1LpQluSCS
pXAjLiREiUSWKEuyJYaY7JkxSVxY5vzeU6fTc95/+b4vUFeRo7eTyWRhtlf6
/j8WjSmyrrRsO0PNH5herbfZQDshMb/juH+tjnbD16e0vpX2xLDHyGNhbzct
h0uBtH6A9kNl6I9KqRyjAzAv9o/TQZCPqizPPlN0MPLcpfNm6BDYadbbDA3z
dBjk4vxFOhzGIuu+2bBCK2AU963REVj0OipxfFinI+H3Jd2/RUcBh1boznfo
aNSIevboGDTNhqtaNg7oWDSL+g7pOMw8Ndp/NxzRSgxlSvWe0PEo966sHew5
oxPgIOo/pxNR5u8yXOx8SSdhQvRzRatw2hm4EGy+ppOxJPq7oVPw+9tVrWi/
pdXIFv2aaA2qSnddt3LuaOBDzP/+383Aw+ZF7XvWI/NUFIh5PDFPhdZ3eXmu
6oV5GlpCkmzzeWWehkl9+Znjrpm5Fn1iXhbmWihyP03Vk2/M09Et5mdV/wGl
cb3W
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJwt0FkoRFEYB/BpnigPBmXSPCC7yb4PM/+xNTSIB2VMipIHikcPEm/IVigU
WSehULIkIhMiMfYSTZQXimzJljvH/9bp9rv/c8/5vs+nrLqgXC6TyYKk5Xj/
P0+6m/sRe+JiuJYfkCEfl5xHO8GWZG53PS+lXTH8Pirl1bQHjpUN8f7btbQS
JRrH/kZahYfmnzyDoYn2Rrb4v4P2xdp64NCzopv2g5en47xeOgDTv6aFmK8B
Ogjl4vxhOgQ6nTH27XGMVqOuxXHfBB2GT1XNtbN9io6ATdw/Q0ciuNUY+nA3
R0fhW9QzT0dD3n+bO2teoGNQIOpbomPxlPBTlJ+/QsfhyKVYqneVjsfgstFS
UbZOJ6BQ1L9BJyLTw+zeU7xJJ0El+rHSGmytqF8jurfoZOSK/nboFExOrhk0
Lru0FlWi3z1ahwG7QjG/uU8DQ6L/g383APrwLkvO1SFzPZLFPGzM9VC71dfX
fhwxT4XJGiDN54R5Krz6sjpN0afM0+Aj5nXGPA1a69vlS9s583RUivldaP8A
HwOyvg==
             "]]}, {}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
         PlotRange -> {{0., 40.}, {0, 0.000017722543454128078`}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Kappa - linear DOS\"", TraditionalForm], 
         PlotRange -> {{0., 40.}, {0, 0.000017722543454128078`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"symmetric\"", "\"large val\"", "\"large cond\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {583.2, -189.}, {
     Center, Center}, {360.00000000000006, 360.}], InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJwt0Fsog2EYB/ClXdiFoiEaxZo10pqxzWnbs0MuTCkXihtrY5TCjQutjOS0
tQNLVqMWkSXpy7FkDS3JscXNlqLIBeKOXNnh/9Xb1+/7v9/7Ps9Tahps68lg
sViixEq+08+3OufA8ur3hpX4QAaT4L17lqVKM5OCeUxL7I0HZ5PSxU3kEjiX
vnlzzkohwQXUxUnuN8BFpJf9yPNF7XAJ/jfCfMrq2JMEHL2wAOcNwUIKMs6P
hdFhWITzrXAFScPFz+bjcbgS903BYvqNvYj7yQFLcL8HrqKoQLF09eCFpahn
Ea6mzjaLmMv44RrUF4Bl1OwzhqLMCiyn9VS9a7CCJqzsuNu9Adei/k24jnYH
bGy3fRuuRz8M3ECN7MLy28cduJGaUv3tw0qaHgl9RpYPYRX6PYLVpDU/xedz
QjARpfoPpz1G1DqzaLvhnyLX0H1qHmfINXTSt8WUrUaQazGfc+RaCvxx7Bme
C+Q6zOsSuY6EPZMu39c1cj3md6f6B3IaqiI=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7Bfcdv7/eLKsHVTAwVj+u2/VHDson8OBU0gu
4uaZQChfwGGn1ZrSy2EJUL6IQ/+E8KvxYVlQvoSDgvLLP2HdxVC+jMP/k+84
1qZUQ/kKDpJr+IQZMpqgfCWHz9temfJ/bofyVRz+Xd3941V8H5Sv5nBbe6Zx
7d1JUL6GwzKXercgjulQvpbDh+gXViu2zYbydRxcfcK8I8sXQPl6Dl8FLuUH
RS+G8g0cPvVf9o3sWgblGzpk33Vb0c6+Cso3csjglXD6fnUtlG/s8Gim5PuE
PxugfBMHAaND8xssN0P5pg5fblRPeb54K5Rv5uA4Y886JdsdUL65w5rKX+f3
se2G8i0cnratvunBtA/Kt3Q482TRtWUzDkD5Vg4883aLrvU6BOVbO0znYp/z
V/wIlG/j8EBS5GYc4zEo39Yh6Tqj3XT2E1C+nYOcR7d1rvYpKN/eQaIw22l5
7hko38EhJTz2MPf5cxB+g4ODEEPfdIMVF6Dyjg4SFoa/zX5ehMo7Orhe++ry
J+oyVN7JQSLWcu3js1eg8k4O3P6ROQFB16Dyzg49ept3LX1xHSrv7CBWt+SC
28SbUHkXB+EDXc+m+dy2AwCeOLBJ
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7F0zu+rzaoTsoAIODcW7Cs4oGkP5HA6901TX
8Tu4QfkCDmme4sEdOSFQvohD5K6wp79LE6B8CYdX2cp7dPIyoHwZB3u7qapv
5AqhfAUH+fBL4gxM5VC+ksP6lFTmy+9roXwVh/2ppbc//W6C8tUcLpbVN9yZ
0g7lazhcEJW/kXaqB8rXciixvKiiGTQRytdxCL+vPU9/6hQoX89Bb+oxbnWj
GVC+gcP7Yo+F73XmQPmGDgleOie3uCyA8o0ckjj8O3ctXQTlGzvEMDzQqrRe
CuWbOEzYt+n4A/YVUL6pg9H5WZUPeVZD+WYOQfuyo7J91kH55g68PX8czZ9s
gPItHAJNuDtyD26C8i0d/s317rmwbwuUb+XQ16oVHXF3G5Rv7WB3loP5r+xO
KN/GIUQhsn9b424o39bByreJt5ZzH5Rv5yDIa+6qEn0Ayrd32KjW3Nlx5CCU
7+CwIEwqKt3xMITf4OAg1lC41+bSEai8o4Nc29+dLeXHoPKODle8jcN2G56A
yjs5xG1pnxHDeAoq7+RwclF++5Nnp6Hyzg56v+I1zz86C5V3dpg592zLjK/n
ofIuDtw7xALu8V+0AwAh5adU
             "]]}, {}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
         PlotRange -> {{0., 40.}, {0, 6.5086311244328004`*^-6}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Kappa - squared DOS\"", TraditionalForm], 
         PlotRange -> {{0., 40.}, {0, 6.5086311244328004`*^-6}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"symmetric\"", "\"large val\"", "\"large cond\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {972., -189.}, {Center, Center}, {360., 360.}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJwtyV1IUwEYxvHDQaJllLHAyMJN1rYkIt20tNqeM+3jYtoxjBRvSnQD1/Ai
u8iLPJH0RfRh0ciLMhMiwsSIyBRpkZou1grxG2W6qVm0swuDBmGFzwsvL7/3
r6+sPV4tCoJg/rf/7+qo9kg84km6bLXxgevumKvuaim9FlL8SSBd76ZTUFKW
FjQ9rqM343fS1K0MKPQWNPs+acyhK/Q2aFwh352u27QOcoXfGYjdpzNw2KQb
OCs+og04itZrhu422gjjrNU8VPWcNmPnpbvWF2OddCZ0n2tVU/g1vQtyiqxc
+NpD70Ziw6mOwLCf3gP1jJjtbe+js/CxMlokLg3S2XA2TyQ2NQRpC4o9Bs90
xxfaivJCf+kR+zCdg+3JTxPahRE6F4t/vLkzLeP0Xnhu1Ax2u6bofVjf0u8q
sczQeRCaZPsvIUzn41lq+bTknqX3I9HWF5sYmqMPoP9dk/Z0ZpQ+iCLNMV9v
4zxtwwfnxZB+fIG2Y3HjOXXZ+I0GTp5P75r0Lq1aATp3NFa0tn9nl2DJWvcS
8z/YJYSle8vB1J/sDjiTt64ojhi7A2/XPLgpW1T2AkRezfUeek8rBZgUH2pP
FMfZCxFdqe95Mxq3/QU9trYl
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJwtyV1IkwEUxvGZLEYSdiGl4KSG1JTN/Jr16jafvUuTPkyXICSIJbYCyaCu
Grg3m3aV2IVR6pVkar1hjYihkTgpBJOYEdOJq1aZa+ZMQkJNUnwOHA6/8z9w
ocFWt0OhUGg3d+tuz1LhTfv9NO+tXDMfqHOqD626KmgVVPfCfnuSnd6D5ejj
wNm71+kELLgM5l6NRCdifWZ0JXL1Np2M7k61tyqvjd6Pgbj8Bz2edlqDiMo6
qXN00akIyg8FbU03fRC+tbfNHbW9tBZZFyVNy/mndDrcl//KNoOb1mGk5Fz2
pPiSzkB0VK5+4R+kM2FM35uiXxyms/CvQnDcee2lsxETmmhoevWGzkFpmTTU
/HOMzsWlyg1x1vKONkDvGCieHnpP56HIlFi2q99HH0FbX72q3PmBPgpXONKT
UP2RFtAUfFSzJvrpfHg2brQqdNN0AcYWn7de2zdDGzHuK4n5EztLm5C8MJFT
vxSkzehY/mRSXvlMF6J/vECprv1CA52ZSt/pytC2JWDuZLvgPPGV3YJTO4/L
svEbuwXlzxqLQvrv7CKSVvt+Cylz7CLOmA5PTe3+wW6Fe2U+/tc6LVnRGI3v
ehKZZz+GtKpiuTQQNv8Hms22vA==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJwtyW1IkwEUhuFRSDosUkQCBZ2ZmebSLTe1OR+3DFKIGIQZJLFhs0EIJuTy
oxitH6lFgj8ijMSEQSVmjpjUyiiGpFPmjKlpLnUz3yRHMUQRTHwOHA7XuSX6
Gl3VHpFIlP5/d+7urBXNrHyWiUeUaj4g6r+WUDdaTkfCKuz/2/rVRB9EWYOm
1zVzk46D7oZ27MFbC30I7W8cgzE5LXQi/pTeqzW52+lkmIPVAxWyx3QKHHWB
Xv/dZ3QqQsJDi+d8D52Gucq9rqeSF3Q6Bs51/mwQv6YzMBkVrk9JstPHYZjN
E7o8DloK6ff5q1mHP9DZ+HdJ0h9h/UTnoO9jXK7O+YWWIXxidMirGKblmFJa
I+KDI/RJvNywZz03jNO5uF9/MWbS6KEVeHKhW1Ld6KWViI6Kr1zt/Ebn4ci+
5mNlwz46H1Lveq1rc5ouwC2Xe0ksn6VPoVA+bUu6/oNWYS5sbFJ45+lCGIf0
l30hP62Gxp82tXlggS5ChcrdVZq5SANHx8bNbWeWdn0HCExEx9quBNiL0VdS
kthhDrIXo6ogo0f/aJldg/L3a06p7Re7Bh2hd5ZU5wq7FobIfKN5QmDXwu47
K5iWf7Ofhvj2qzbV1qp6GwYkuWY=
             "]]}, {}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
         PlotRange -> {{0., 40.}, {0, 0.000017016089059351722`}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Kappa - linear + exp\"", TraditionalForm], 
         PlotRange -> {{0., 40.}, {0, 0.000017016089059351722`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"symmetric\"", "\"large val\"", "\"large cond\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {1360.8000000000002, -189.}, {
     Center, Center}, {359.9999999999998, 360.}]}, {}},
  ContentSelectable->True,
  ImageSize->1300,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.6870822011936283`*^9, 3.6870852919960823`*^9, 3.687085714122508*^9, 
   3.687086131068253*^9, 3.68717016412265*^9, 3.687170342458946*^9, 
   3.687177052766615*^9, {3.687177183998404*^9, 3.687177199903305*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"kappaT", "/", "sigmaT"}], "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"plotoptionsigmakappa", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"SwatchLegend", "[", 
          RowBox[{"{", 
           RowBox[{
           "\"\<symmetric\>\"", ",", "\"\<large val\>\"", ",", 
            "\"\<large cond\>\""}], "}"}], "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1300"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.687082288376123*^9, 3.687082288554256*^9}, {
  3.687082363981848*^9, 3.6870823667681293`*^9}, {3.6871700600835943`*^9, 
  3.6871700635427723`*^9}, {3.687177215643323*^9, 3.68717721798213*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJwt0EsoRFEYB/Cb5JGYGTOY8X5MZjyS8RzP+79IEfJYoKSMlBU2iiSjZjFF
Y9iIhY3GRsrCgshOIouxYSeREMlCeRRxjv+t0+13v3Pu+f5fhmu0cyhEURT7
3xLv/+dVHRiPCa4eBmv5AbZj4Ws6Au+7cc6HlEdaj6wpUX+lTXizxHq0lzfa
jLw9sf+TTsZMj+XZ1/pNp6NNnlfUf2fivkmfO3IRQltxYhb/C6Wz0f9gvDKF
hdN2eGQ/kXQuDrwJS/ulUXQ+1uV90XQB7PakRteQji7EsrxfTzvw4dJNe04N
dBGam0U/sXQxth2Gy+4bI12CcpnXRJfiVjE68r7i6DJsyn4T6HKsBU1zPwYz
7YT/SPRvoStwuRN/d56TSFdic17kSaKr4B0zqwEtma7GWbfIl0LXYEJNXJno
TaVrodlE3jRaxWy47zPgTKeBDpmfdgNPL76NhYYM1jUcyXnQbg3+i4WuyfZM
1uvQLudDu+ugO/Qrg31ZrNfjWM6LdtfDG1jcahm2st6ADjk/q/oL+06Vog==

             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJw1yV1IUwEYxvHTyDljHCYtmWLqlh9rW5mrmdvczrNNM0gId1PgRWOQN0Xh
RlEQtYxQjhB9YYPKAjHIvChmF0NoJgOJLBkWgVi0oILUUQadQmwVPr3w8vJ7
/8bw8eBhlSAI5r/7767NV+nmoZOieCnj5QND6qm7F95kaQ1e3svmHhQv0Dqo
v0/3HHQs03r4foY/tOZ+0AZoMvFrw49W6HJUDD6dLZQEac1VyGj6W1z3VbQJ
gYtX5HxJAV2N5j1zvev6CulaVIZWtb9WimgzZMFaPxLR0hZ8cb57kl0QaRv2
TkTGkwkdvR1ifT54a7mY3gGT0TfQa99IN8A2UNR5NKqn7XCcXRI9jzfRO+Hs
v3p6SSmhdyFlWJQjbgPtwOvph/bJc6V0IyZrFO9suozejfjzCG5vKKeb4A7b
ooaOzbQTyeSrEU+8gnbhyPn1fvX7StqNj9ZvBY3Xq+hm3PicHRprMtIetFtd
+868/W8vuqeOnZJ7TLSE1LPFmfm6LTSgU2Jl3S/oGKD8tvhbo9XsPuTz7fsP
lNaw+9B22dI1nKIFP1bl0fS2rlp2PxKDoYmcto49gJAymv6UoGMBBPsaOvSd
ZvYWzNxJKydUW6U/zYajbA==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJw1yV1IkwEUxvG3kU5ljElLpixzNnVt5sdMm3Pb+2x+FBSV3hRIKIO8MQo3
koKwpZSyQVSK7EItCoPMC8O8GIGZDSRSZEwQosJF6IU6UqHXklqFTwcOh9/5
69xXGi7KBEEw/N1/d3e+iQNN7Url3YiDDzxOnnnUtRijUzD3NBZ/nr5KqyDf
mu08X75Jq2Hbdn+pjX+nNUiLBHuHX+zQWmiH3kTloiDuOgfRlECN9ZmMzgVu
3/cnMpJoPU7Ufeje0yOn86Fr/qX4sZNKG3BHMBWPeBS0EfHKz5OxVSVdiONT
nlehcRVdBEVxomFgM50ugV7n7O8276NLUdSf2njJq6bNsHWsK+0T++kymAMP
rq9LGfRRvNWs+T1VGrockdkx8/TNTLoC03mSIxrOoo+h970Hg2la2gKLu9Cr
qT9AVyIUWhixB7NpK1pv7XUlLx2kq/DVtJFU0ZdD2xBciT15adHRdpw2WU/e
+PTfDrTNXL7m78ylRUy+W5v/WHCIBlSSL6ttjvYBP38bXbVePbsTicSpM+cy
89idqLtnbBl+TQsuCIHR8JGWfHYXJoaap+KKAvZqXJBGw8vjtK8aZ3tK69WN
BvYazD8MS1dlh8U/jw2icQ==
             "]]}, {}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
         PlotRange -> {{0., 40.}, {0, 0.00019080820119054965`}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Sigma/Kappa - root DOS\"", TraditionalForm], 
         PlotRange -> {{0., 40.}, {0, 0.00019080820119054965`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"symmetric\"", "\"large val\"", "\"large cond\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {194.4, -189.}, {
     Center, Center}, {360.00000000000006, 360.}], InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJw10E0og3EcB/ClZGu1lrfmfZiZmXfmfc/XOG3loNRIeYkkByfsZlyUKQeR
Gw67uXiPRHGQ4oDLkndtOWoSFy/P/9nXU/+ePs/3//z/v98vu2+kbSBGpVJZ
5CXe0edNupt77B1oDTr4AcGiZ9mvtBpb6iHNeV2E1uO450nOv+hEJO117P/0
/tAG2DRif4wUdTq8VYHtpZZY2ogS5X81nYPATIau3KOlTTjcEefpaDPsEddm
aFtPW+BWzo+nrdAYp7s3jhJoG8rs4r4kuhgH7hPtxFkyXYpb5X4DXYb30d9d
93UKXY4Gv6gnja7Ax0p9v+Euna6EaVfUl0lXYf1iXB8KZ9F2mFVuuV4jXY2w
uvPe482ma2BW6s+hazGZ6K2Uvv9dh9Ms0U8uXY+wdXEmb8pENyCkzDOPbsQp
th61cWbagU+X6PffEkLtV/aIP58G5pX+LVH7gK7ht9mgvoB5EwrHxDxoXxMe
fLqXwwUrcycub1Ll+RQyd2Jw0VYbSLUxb4a0KuZF+5rhWHPN+ZeLmLfAo8yv
WPoDsHKc9Q==
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJw10EsoRFEYB/ChZDTS5NUYg8EYY8x4jvGe+/dYzZSk5FHyCCULK49sTCyU
URYiO4+anVLeLFBKKSs2KBpEbKRZSXncc+fv1un2u/9zz/m+L71nqKkvXKVS
WeQl3qHnQ7LPB7r7Gq5d/IA1+6PsV1qNbfVA1EVFkNbipOtBzj/peOgP2g5/
un9oHaxRYn+4FLIB4yX+naX6CNqIfOV/NZ0B/0xKTFGrhjbhaFecF0ObURp0
bz3vaGkL3Mr5sbQVGuN05+ZxHG2DwynuS6DzsO851UycJ9IFeFTu19GFeB/+
3fNcJdFFkHyinmS6GMGVyl7dnYF2wLQn6kulS7B/O6p9fkmjnVCHeeR6jXQp
viLb71vH0ukyZCr1Z9DlmIofc0jf/67AWZroJ5OuxJt1cSZr0kRXoVGZZxZd
jRZsBzSRZtqFN7fo998SbpovnUFfNg1MKf1bQvYCHYMfs9faHOY1MI+IedDe
Gmw4o5+OFqzMa1FWbJDnk8u8Fv2LtnK/3sa8DtWrYl60tw6udfecb9nOvB5t
yvzypD85XZk0
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7O/0P0hM9bthBxVwWKz7CMh/AeVzOGznyOQ8
Y/UJyhdwOJDwECj/A8oXcZDeGbnrX+I/KF/CQY8TpJ7JHsKXcSg3Xbp1hgsr
lK/goA/WzwHlKzms7pLlM4rghvJVHHZtA5nHB+WrOZh98tr8dKsAlK/h4Ak2
XwjK13LgUWiP37RfGMrXcdAzA9knCuXrOezzPsxdf1IMyjdwuA+2XwLKN3R4
U/p/u/dlSSjfyMGhG+QeaSjf2OHXAusUibsyUL6Jg9J2kPvkoHxTh323ygWe
PpOH8s0cOBm9ge5VgPLNHX6xR92LqFCE8i0cFMHuV4LyLR2aRSpM7P/C+FYO
J+RB/lGG8q0dnmpN61JtUoHybRy8weGpCuXbOoQ5bHnAza4G5ds5vPIC+RfG
t3e4FXrJ7FO3OpTv4NAI9r8GhN/g4BCW/aHnhoAmVN7RQb0MFB5QfoOjwxoz
nsf7pmpB5Z0cLI1lgOGjDZV3ckicpmO5VEoHKu/s4LgQFF5QfoOzg9Mar/7u
+bpQeReHUHD46dkDAO4gmdw=
             "]]}, {}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
         PlotRange -> {{0., 40.}, {0, 0.00023180231544322574`}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Sigma/Kappa - linear DOS\"", TraditionalForm], 
         PlotRange -> {{0., 40.}, {0, 0.00023180231544322574`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"symmetric\"", "\"large val\"", "\"large cond\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {583.2, -189.}, {
     Center, Center}, {360.00000000000006, 360.}], InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJw10E0og3EcB/AnEkltiYzIO6PRNnvMhu07bxdcdlBYDDk4oB2EJu2wkpYk
xclL1IYoOZBw8FYO4mAHycEOIkouciEv/3331NPT5/97/v//9/fL7h6090ZJ
kqT+e/+/4efdelHvb+6ZebRwAYc7maPL3g86Dkv7a20juZI1bCWG7x5Glr0x
dBKCKanzF4/xtAq2jf//lXQ6AkdnfQnBRDoLQ2J/Mp2D18+vCYOsovN4Xhpd
AKdR9jvmMmg1z8+ii7HSvuk8cWfTGt6XQ5ei89LuatHk0Vrmz6d1uHoe8Lzc
F9B6vIg8aroMB7G+6fGpItrAfMW0jGBhYDHRoqHL4RB5S2gjGhtOt/xvpXQF
82tpE6K3BzsWriM2sx8dXYmm3e/ep0I9XYV10V/E1VCe+/p1njLagi7Rr4G2
wnWTOuS+jRhwi/7lsD2ALxQYO9eWs27DtZgH7bEB77JXMWlkvQbPYj4VrNfg
+OfU1xqipVrsiXmZWK/FscI+u2oys17H+ZmtvyRWqFQ=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJwtyVtIUwEcx/GDGq0TtESRERJuZ226W9vUVpvb+bl1eciHnAS+2CQUiw26
kAYhuDhQD6voAhJRVpjR1Rd1rhelwmiTICViGEhgRYXazM6DEnZhvz/8+fP5
f/WHj4XbCwRBqPy3/29+cnIq8UzpHswG+MCV2Q/Fb8RvtAaz0fPOx+IyvRn3
FwxJNbVCl2J15XZ6ba8g562DJqaNTb8spMsx0BN0rDaupyuQXXxqvZATaQP6
lZYHg32baCMeNX5unrQX0yYMTR4/ESopoSsRnrkmdfwppS1IrBt/MrdURtuQ
nU9ejH7X0Q4YDpj1ya9baCeOBlRfz3w57YKxdd/7c+pW2o2Tiv3Q67MVdDVu
ijbJndDTNbhe4Nn4pddA16KlvWExc0+id8DdP6ZNDxtpD0w3looyr7bROzFx
qqovNWOidwFN/ql4zkx7cWdP54BWU0X78M5rMTbpLXQdfsnpoLfOSvsRVt5m
h5ttdABXy35eGuqy0zLmMt3T5l4HDUxEatOFo9vzjgMPMxukWzEnez1cakck
skbH66Ft0N19cdnFHkSgSPE8l9zsQUT9n0YOjtJCCK6Fth9n9lezh6D+Pr1s
/UgLu3HE1yW2ddbIfwHP06QS
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7Hd072yuWXfDDirg0H/vtuBZrpdQPofDvex2
g9Vcn6F8AYelb5W2fd3xE8oXcfjxc/7Jf24M9hC+hAN3Dn/OpcPMUL6Mw6J6
J71fgexQvoLDzXdrtXs+cEH5Sg7Lm2NXrJvHB+WrOKwOfBpxWlcQyldz2Hy6
oNBZWBjK13AIvDVZOf2/CJSv5dDJun/N449iUL6Ow/U323qzX0lA+XoOcgHq
itteSEH5Bg4Zdl+t69/IQPmGDjIJ7tfavspB+UYOZc26cScaFaB8Y4e5XDrK
Rt2KUL6JwzQmc+5n05SgfFOH+FSfd6eWKEP5Zg4mi/fxn9yiAuWbO2jM+shy
6pgqlG/hcLJEc96OW2pQvqWDc7DtxYYP6lC+lcMc19Kl/ByaUL61w3UrLZVg
RS0o38bhvf1JJysbbSjf1sG/+cKNLRE6UL6dQ5/Yp77NZbpQvr3Ds1M1l9Sn
6UH5Dg7H401PMm/Xh/AbHBxWneJUnptjAJV3dDD4mh4f/w/Kb3B04PKRWHho
giFU3snBnqXZ/KCyEVTeySHH9snW0O1QPoOzg/7blPdV3sZQeWeHz3/KP2s/
gPIZXBzSrcu4UkpN7AG/g6QC
             "]]}, {}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
         PlotRange -> {{0., 40.}, {0, 0.0004104246828301437}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Sigma/Kappa - squared DOS\"", TraditionalForm], 
         PlotRange -> {{0., 40.}, {0, 0.0004104246828301437}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"symmetric\"", "\"large val\"", "\"large cond\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {972., -189.}, {Center, Center}, {360., 360.}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7COSNm+553fDDirgsGXqNJ4HAS+gfA4HzeWX
txo7foLyBRwWrH1gIpTxA8oXceA2ePDDdcc/KF/C4aCA5fMvW5jsIXwZBwMX
py8vMtmgfAUHX7ml8c5ruaB8JYdv+2V+B63gh/JVHJ6rxk5+vlUIyldzOMp6
d+71z6JQvobD+1kvOreWSUL5Wg6C197UeMjKQvk6DhtzFDvWJipA+XoO+rWn
b35RVoLyDRzK16WUdJ9QhvINHSw+c+6+4qYK5Rs5JGct6g+apQblGzvol04q
fXFQHco3ceh1j1r9YZ8GlG/qYH1r/9/YKZpQvpnDJcF3yWxuWlC+uUP0my/h
sjdgfAuHaC7Z+pt+2lC+pUNra+dxm3UwvpWD4+Q5y7/+hPGtHbZMUKgNNNWB
8m0cdKZrPLRMhvFtHXwOirZYtMH4dg51fK4T6hbA+PYOf5XWLni7GcZ3cJBe
3S6heAjKb3BwmLSlSqP8DEze0UFg8VplySsweUeH2AP2v5huweSdHLJ3yZzn
vA+Td3J4ue3PhoePYfLODlXyZ9qVXsLknR1u7Dzl7fMeJu/ikFuwcM6pbzr2
ANKJqPk=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7L0Fl5gt9LthBxVwmH1UZdki/xdQPofDmvBU
fwa7T1C+gMPPiL5bdtE/oHwRh0XXDMxNev9B+RIOZQqBs/gqmOwhfBmH89Of
KnPfYIXyFRyYV4V83dLACeUrOcSvelr2o4MXyldxCFzuVzTlnwCUr+aQrvm3
MjJXGMrXcAjT7s7h5RCD8rUcjJcuyfQ4IAHl6zhcP8Pltb5FGsrXc2g6fdZr
g7MclG/g0HiwPudymQKUb+hgdqLogNBuRSjfyGHRh1BLi1dKUL6xg9HVOtV1
jCpQvokDV9eS2ekMqlC+qcPsVV7fep7B+GYOc425XqhtVYPyzR2St5k/v5Sr
DuVbOBQdWj6lVUgDyrd0SLqndjF6KYxv5bA1/bhQpYYmlG/twHeKecWHuTC+
jcO6xtKi7exaUL6tw+kjH+7PTofx7Rxqvnz1dtoP49s7fGruiFYR0IbyHRyM
rj9xmhQN5Tc4OKwS5zbYuggm7+igfeNs8KRnMHlHh8a1Zlp8GjpQeScHrd/+
J9+nQ/kNTg7v020EniyDyTs75LHsXtDwFCbv7PDos/MsNxVdqLyLw9ufBoJL
k3XtAdNxoIk=
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7D0El5gt9LthBxVwmHtUZdki/xdQPofD+vBU
fwa7T1C+gMOfiL5bdtE/oHwRh0XXDMxNev9B+RIOFQqBs/gqmOwhfBmHy9Of
KnPfYIXyFRyYV4V83dLACeUrOSSuelr2o4MXyldx8F/uVzTlnwCUr+aQrPm3
MjJXGMrXcAjT7s7h5RCD8rUcjJYuyfQ4IAHl6zhcO8Pltb5FGsrXc2g9fdZr
g7MclG/g0HiwPudymQKUb+hgc6LogNBuRSjfyMH8Q6ilxSslKN/YYdrlOtV1
jCpQvomDbveS2ekMqlC+qYPQaq9vPc9gfDOHGcZcL9S2qkH55g53t5o/v5Sr
DuVbOFw5uHxKq5AGlG/pUH5X7WL0UhjfysEx47hQpYYmlG/t8O8k84oPc2F8
G4f2htKi7exaUL6tw9fDH+7PTofx7Rz8vnz1dtoP49s7xLR0RKsIaEP5Dg43
Eu85TYqG8hscHHo41Ay2LoLJOzpEmF8NnvQMJu/ocGutvRafhg5U3slB/GjC
yffpUH6Dk8NuZQeBJ8tg8s4O+/4tWNDwFCbv7BAq5TzLTUUXKu/isM/HW3Bp
sq49ACcKnzc=
             "]]}, {}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
         PlotRange -> {{0., 40.}, {0, 0.00022422208771519751`}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Sigma/Kappa - linear + exp\"", TraditionalForm], 
         PlotRange -> {{0., 40.}, {0, 0.00022422208771519751`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"symmetric\"", "\"large val\"", "\"large cond\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {1360.8000000000002, -189.}, {
     Center, Center}, {359.9999999999998, 360.}]}, {}},
  ContentSelectable->True,
  ImageSize->1300,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.687082290211062*^9, 3.687082367594666*^9, 
  3.687085294993485*^9, 3.687085720655244*^9, 3.687086151877554*^9, 
  3.687170165000449*^9, 3.687170345752173*^9, 3.687177061154414*^9, 
  3.687177112554121*^9, 3.6871772199953127`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"kappaT", "/", 
             RowBox[{"(", "sigmaT", ")"}]}], "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}], "*", 
          RowBox[{"temmps", "^", 
           RowBox[{"-", "1"}]}]}], "]"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"plotoptionlorenz", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"SwatchLegend", "[", 
          RowBox[{"{", 
           RowBox[{
           "\"\<symmetric\>\"", ",", "\"\<large val\>\"", ",", 
            "\"\<large cond\>\""}], "}"}], "]"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "40"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"3.5", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "8"}]}]}], ",", 
             RowBox[{"1.2", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "7"}]}]}]}], "}"}]}], "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1200"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.687082379705303*^9, 3.6870823892975473`*^9}, {
  3.687083057344144*^9, 3.687083111712365*^9}, {3.6870831455608807`*^9, 
  3.687083168528685*^9}, {3.6870841205322533`*^9, 3.6870842161386766`*^9}, {
  3.6870842647092*^9, 3.687084303410943*^9}, {3.68708434110035*^9, 
  3.687084345863797*^9}, {3.687084376395153*^9, 3.687084448090268*^9}, {
  3.68708453414471*^9, 3.68708458152586*^9}, {3.687085733080625*^9, 
  3.687085733216918*^9}, {3.687085871390587*^9, 3.6870858721897287`*^9}, {
  3.687086542639183*^9, 3.687086544253448*^9}, {3.687170069237327*^9, 
  3.68717007174706*^9}, {3.6871705013603497`*^9, 3.6871706059387197`*^9}, {
  3.687171079947686*^9, 3.6871711812072477`*^9}, {3.687177064530752*^9, 
  3.687177080987103*^9}, {3.687177134177321*^9, 3.687177134376933*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxd0D1LglEYxvGnBmtscIgoSpGQEFEzn7T0+attOrm5ieDgkh8h16BJoyhB
iIQw6Es0OEUfoKnBxckGXZpKcrivDhwOv3Od+7wF6q1KY9VxnPBvX4x/7ctb
uZo8fpw3cssJXmbW69x1rTeoif00xZuMxNvsXFvvcSt5kOeOdYiUeJ8LcRhX
6g/4FEdw5bwonjjGXNbHuRQn2BIf8ibnJ3kSH/27f4qR2GVN9jum2rdOszuw
zvB9Y33CVOpPuRdn6YpzPIg9hmLoWbehJHmesuR5spIXCEhewCd5kbF9f7vI
u/zHGa9L/wAwycwB
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7HXde18mV6TZQQUcSg1tuLOvwfgcDlItL+8E
SqZD+QIOMnyqx1r9YHwRhyNT869rVMP4Eg5ng678uLIQxpdx4Dml4yt4BMZX
cLhxNvTjzUcwvpJDF9cfkzv/YHwVh0XW/1inSmRA+WoOVrvfnko0gPE1HHyX
bEjtcoPxtRws1x6rco+G8XUcSjt6+47lwfh6Dr+cnlzQaYTxDRx2P7ITmjkJ
xjd0UAhi0VFdDOMbOayTYeV8vgnGN3b4In4v++NBGN/EYWm1QFvIBRjf1GHb
yTc5cvdgfDOHVZrOpdGvYXxzh89F2jViP2B8C4dbvbmKkSyZUL6lw5p1N79p
C8D4Vg7T9RmXT5OG8a0dtk9QE12gBuPbOMxzPVHuZwjj2zqcXHg9b7k1jG/n
cHt5vtgGVxjf3uFP3kaxXH8Y38Eh6JXHxkcRUH6Dg8NxLaazIkkweUeHqP5D
/9myYfKODtuCNafvKYbJOzmkuPItsKiByTs5XK7iflvbApN3dtj03kymvwcm
7+xwZqLWnLwpMHkXh7nfH6+Xm5NpBwB0OqcD
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7PXce18mV6TZQQUcig1tuLOvwfgcDpItL+8E
SqZD+QIOcnyqx1r9YHwRh/1T869rVMP4Eg7ng678uLIQxpdx4Dyl4yt4BMZX
cLh9NvTjzUcwvpJDG9cfkzv/YHwVh3XW/1inSmRA+WoONrvfnko0gPE1HLyW
bEjtcoPxtRxs1x6rco+G8XUcSjp6+47lwfh6Dt+dnlzQaYTxDRz2PbITmjkJ
xjd0UApi0VFdDOMbOWyTYeV8vgnGN3Z4I34v++NBGN/EYWW1QFvIBRjf1GHT
yTc5cvdgfDOHVZrOpdGvYXxzh/dF2jViP2B8C4frvbmKkSyZUL6lw5p1N79p
C8D4Vg7T9RmXT5OG8a0dtk1QE12gBuPbOMx3PVHuZwjj2zqcWXg9b7k1jG/n
cHt5vtgGVxjf3uFX3kaxXH8Y38Eh6JXHxkcRUH6Dg8NpLaazIkkweUeHqP5D
/9myYfKODluCNafvKYbJOzlkuPItsKiByTs5XK3iflvbApN3dlj/3kymvwcm
7+xwaqLWnLwpMHkXh7nfH6+Xm5NpBwB+uqcJ
             
             "]]}, {}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         AxesOrigin -> {0, 3.5425*^-8}, 
         PlotRange -> {{0, 40}, {3.5*^-8, 1.2*^-7}}, PlotRangeClipping -> 
         True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 3.5425*^-8}, 
         DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Lorenz - root DOS\"", TraditionalForm], 
         PlotRange -> {{0, 40}, {3.5*^-8, 1.2*^-7}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"symmetric\"", "\"large val\"", "\"large cond\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {194.4, -189.}, {
     Center, Center}, {360.00000000000006, 360.}], InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7AW5du5aJZNvBxVw+Ca9G4nP4bBedBcSX8Ch
GIUv4jAdhS/hUC2GzJdxWIjCV3DYLoLMV3L4IITMV3EwFEbmqzncR1Gv4bAB
xTwthw3iyHwdNL6ew00U9QYOU1Hca+iQhWK+kcMcFPuNHaJR+CYOs1D4pg56
KPrNHC7pIfPNHdZoIvMtHApR3GPp8AmFb+XggeJ+a4cYFL6NgwMK39bhL4p+
O4czKP6zd1iJwndwMEfmNzg4vEVxv6PDOmR+g6NDKIq8k0MEy3YkeSeHSyjh
4eywGpnf4OywHkXexeE8lA8AqAulew==
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxd0D9LglEUx/GHlpxCykrIwUriIULU/thf/arR6JCLWyLqJEhTjc8L6BVI
4NIgLQ9hYNqbSHwF+QLCpd0ih/PrwuXyuedw7jl3s9q6ri84juP+7N/zb02z
xaXB8DnSyswveNl4Nw7grw6Ng9yKQzyKw9yvWUd4Ekfph6y3mC5bx0iuWO/w
KfkuvtTbpbduvcerOM5Y8hP/+k1Sk/opOvL+PmXxAW3xIZOo9RF3Ces0i671
MU3p54Rv8SlX0v8ZFfE5Dcm/4EacYSDzZWmLYdvagy+ZP0fX2stRavRNPE/q
4c3E84zkPwp0rb0CvsQv+Zh7BjoFpTc=
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxV0L9KA0EQx/HDxmB1aPwDpriIyCEq0Wj8F5NvEhs7sRRECShYHZZW3gP4
ABGRpNWQRg/OXB7BPIJgJ5Y2YqtiivktLMtnZ5id2Ww9ODgdchzH/91/5//6
LLsj3eQhE5QGFzxO94xTROOJscuFOM2deIqrCesMTbFHnLae4XvUepbFMes5
3iTfpyP15okmrRdoi5d4lfwcN9LvMnWpv0JL3s9zIl6lIV7jw7MucJmzXmfY
t97gXPrZ5Eu8xZ70v82huMix5O9wJC6RyHxlbsXgWYfwLvNXuLcOK+yfxSZe
JX/9bOJVXuQ/anSswxpPEt+lP/APprKk7g==
             
             "]]}, {}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         AxesOrigin -> {0, 3.5425*^-8}, 
         PlotRange -> {{0, 40}, {3.5*^-8, 1.2*^-7}}, PlotRangeClipping -> 
         True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 3.5425*^-8}, 
         DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Lorenz - linear DOS\"", TraditionalForm], 
         PlotRange -> {{0, 40}, {3.5*^-8, 1.2*^-7}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"symmetric\"", "\"large val\"", "\"large cond\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {583.2, -189.}, {
     Center, Center}, {360.00000000000006, 360.}], InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7GMMUpITZlfbQQUcEuuqbnB1w/gcDn1GWkh8
AYdUXmS+iIOfCDJfwiFEApkv42DEjcxXcEhG0a/kcI0fma+CZp6aw3xxZL4G
mvlaDm2X9lxF8HXQ7NNzOM2DzDdAc7+hgwUfMt/I4SqKe4wdOISQ+SZo7jN1
cBZD5ps5zEZxr7mDH4p7LdDcb+mggqLfCs0/1g7+XMjyNg6mKP6zdRBH8Z+d
wzkUvr2DMop/HRyykPkNDg5bUeQdHSyRw6PB0eENSvg4OVxCDp8GJ4fHAsjy
zg4syOHV4OygI4ws7wIPPwBdmIl9
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7KuV4+atnJ5vBxVwWD+DfelLtgIon8PB7eSD
BdvtYXwBh02Guy7El8H4Ig6dh8rOMayG8SUcJnRY/tx2F8aXcbBVz14xh68Q
yldw2CecGnnKFsZXcri2NelGWDaMr+Lg9t4lNXw6jK/m8Np3xZX7B2F8DYej
hjvWMr2G8bUcOD/Lul4UKoLydRw2+MRdjbaE8fUcIiXfTtkYB+MbOET0mZ16
0ATjGzp0l169+20pjG/kcMxFPZvhBIxv7LBBOdOf8yWMb+JgI92yXYazGMo3
dbgjvErHVQPGN3Pw+vhgfo8bjG/u8P7MjJI/yTC+hcP9CwldcxtgfEuHKexX
XCvmwPhWDv/XJM2Ysh3Gt3bYkfiH89dFGN/GwUfq0u71r2F8W4dLAr+L9rCU
QPl2Dr7q3nPUZGF8e4e132yDvpjA+A4O79fyJmn7QPkNDg5BNVkBF5Ng8o4O
ebNuxb6ugMk7OlyxONVV1weTd3KI/BA4u38xTN7JIWDjTinlHTB5Z4eohXvj
bM/A5J0d5t+c2fXoPkzexaG55eFEsc8ldgDZoa9S
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7KuV4+atnJ5vBxVwWDeDfelLtgIon8PB7eSD
BdvtYXwBh42Guy7El8H4Ig7th8rOMayG8SUcJnVY/tx2F8aXcbBWz14xh68Q
yldw2CecGnnKFsZXcri5NelGWDaMr+Lg/t4lNXw6jK/m8Np3xZX7B2F8DYcj
hjvWMr2G8bUcOD7Lul4UKoLydRzW+8RdjbaE8fUcwiXfTtkYB+MbOIT3mZ16
0ATjGzq0lV69+20pjG/kcNpFPZvhBIxv7LBROdOf8yWMb+JgKd2yXYazGMo3
dbgnvErHVQPGN3Pw/vhgfo8bjG/u8PHMjJI/yTC+hcOjCwldcxtgfEuH6exX
XCvmwPhWDn/WJM2Ysh3Gt3bYlfiH89dFGN/GwUPq0u71r2F8W4cLAr+L9rCU
QPl2Dl7q3nPUZGF8e4f132yDvpjA+A4OH9byJmn7QPkNDg7BNVkBF5Ng8o4O
ubNuxb6ugMk7OpyzONVV1weTd3KI+hA4u38xTN7JIXDjTinlHTB5Z4eIhXvj
bM/A5J0d5t6c2fXoPkzexaGp5eFEsc8ldgDPqa9F
             
             "]]}, {}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         AxesOrigin -> {0, 3.5425*^-8}, 
         PlotRange -> {{0, 40}, {3.5*^-8, 1.2*^-7}}, PlotRangeClipping -> 
         True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 3.5425*^-8}, 
         DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Lorenz - squared DOS\"", TraditionalForm], 
         PlotRange -> {{0, 40}, {3.5*^-8, 1.2*^-7}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"symmetric\"", "\"large val\"", "\"large cond\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {972., -189.}, {Center, Center}, {360., 360.}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7N+EsLC5yebbQQUcLCOjpK7Lw/gcDkaXmKRn
qsP4Ag6zcg9/bLeF8UUc3O+7C7KUwvgSDqt0J4qpv4XxZRwinkTx3k8pgPIV
HBbJLq/aJVQI5Ss5LOs8vr+UqQjKV3E45n9n/x2NYihfzSHxvOz7/vwSKF/D
QWdtzN6Fu0qhfC2H4s9rLzx5Vwbl6zhYu7dkHvhWDuXrOTwP+ZTTc6QCyjdw
WDx9Puu8oEoo39Dhi1eU35WFML6Rwye/o1N7tsP4xg6FKROkV8yG8U0c7j2a
2fUrDMY3dSjaUzXF/BPMfDOH2UusowJLYXxzBwn7r7Xaz2HusXAI3bUktc0X
xrd02Lxt7ibutTD3Wzk0xwctyeaE8a0dWP53f2hIhfnXxqGw/eCHksOw8LB1
WDRH+8MDFRjfzmFF4Q2L112w8LN3aIjS6Yn/BgtfBwdBg2dOh9Oh/AYHh8f1
phNT78Piw9Fhj8SrxpxYKL/B0SH4AZvF/Yew+HNy2CGy+sfaHCi/wclB57Pg
rYLfsPh2dug8lPR5iSaU3+DscMzo17v+5DyovItDYLWO+P4VuXYAb8uusw==

             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7Odp6QV8l8m3gwo4bPq08oqDHIzP4XB4+6KV
SkowvoBDkck2B1ldGF/EQftNxMaXHjC+hINofeIS81YYX8Yh/lJFbMwXGF/B
YcPzkND4oAIoX8nhwkw+taizML6Kw0arwxn/0gqhfDWHNOfdNXtEi6B8DQce
s0DHG2dgfC2Hw/XLJ3DVF0P5Og6Ndx+yrlcogfL1HNzfW+8SWwnjGzh4TqxS
+SVUCuUbOrjnPu6xj4HxjRxaz+7ZENcK4xs7XPg86frCCTC+icOn30K2BY0w
vqlDWYjH0R3RML6ZwzkHKakWZRjf3OHLvY4jq+/A7LdwKNM7mbu+C8a3dJCX
Opu5wADGt3KQFNTKkrkI84+1wxmxEysC82B8G4efj7PjObhgfFsHoVsLNq1b
CgsPOwcZ1t02qU4wvr1DjBOnMvdDWHg6ONiXTlLwbILyGxwcZk6b5TJbDSbv
6HC1Izci8hw0PhocHVKtN/zcWwmLHyeHkNXunW80YPJODvycp1XebIfFr7PD
Ak7RubtUofwGZ4f4B+ZXjWfnQeVdHNxTbMLNJPLsAISTopU=
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7Gdp6QV8l8m3gwo4bP208oqDHIzP4XBi+6KV
SkowvoBDmck2B1ldGF/EQftNxMaXHjC+hINEfeIS81YYX8Yh9VJFbMwXGF/B
YcPzkND4oAIoX8nh4kw+taizML6Kw3qrwxn/0gqhfDWHZOfdNXtEi6B8DQce
s0DHG2dgfC2Hw/XLJ3DVF0P5Og6Ndx+yrlcogfL1HLzeW+8SWwnjGzh4TqxS
+SVUCuUbOvjlPu6xj4HxjRy4z+7ZENcK4xs7iHyadH3hBBjfxEHmr5BtQSOM
b+rwKsTj6I5oGN/M4aSDlFSLMoxv7lB7r+PI6jsw+y0c3uuezF3fBeNbOsRJ
ns1cYADjWzm0C2plyVyE+cfa4YDYiRWBeTC+jYPi4+x4Di4Y39ah+uaCTeuW
wsLDzuEPy26bVCcY395hkROnMvdDWHg6OEgF9yl4NkH5DQ4ON/1Wu8xWg8k7
Okz5WRgReQ4aHw2ODkfrt/7cWwmLHyeHeIvAzjcaMHknB3Xt8ypvtsPi19mB
/e+PObtUofwGZ4fHv82uGs/Og8q7OFyOCA83k8izAwDNq6VX
             
             "]]}, {}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         AxesOrigin -> {0, 3.5425*^-8}, 
         PlotRange -> {{0, 40}, {3.5*^-8, 1.2*^-7}}, PlotRangeClipping -> 
         True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 3.5425*^-8}, 
         DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Lorenz - linear + exp\"", TraditionalForm], 
         PlotRange -> {{0, 40}, {3.5*^-8, 1.2*^-7}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"symmetric\"", "\"large val\"", "\"large cond\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {1360.8000000000002, -189.}, {
     Center, Center}, {359.9999999999998, 360.}]}, {}},
  ContentSelectable->True,
  ImageSize->1200,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.6871770820975647`*^9, 3.6871771350516243`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"kappaT", "/", 
           RowBox[{"(", "sigmaT", ")"}]}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], "*", 
        RowBox[{"temmps", "^", 
         RowBox[{"-", "1"}]}]}], "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"plotoptionlorenz", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"SwatchLegend", "[", 
        RowBox[{"{", 
         RowBox[{
         "\"\<symmetric\>\"", ",", "\"\<large val\>\"", ",", 
          "\"\<large cond\>\""}], "}"}], "]"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "40"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"2.5", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "8"}]}]}], ",", 
           RowBox[{"1.2", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "4", ",", "4"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.687174360432652*^9, 3.687174476870494*^9}, {
  3.687174646469*^9, 3.68717464736751*^9}, {3.687175276890264*^9, 
  3.687175277843096*^9}, {3.687258438357663*^9, 3.687258462468423*^9}, {
  3.687258502319874*^9, 3.687258503722433*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7N+EsLC5yebbQQUcLCOjpK7Lw/gcDkaXmKRn
qsP4Ag6zcg9/bLeF8UUc3O+7C7KUwvgSDqt0J4qpv4XxZRwinkTx3k8pgPIV
HBbJLq/aJVQI5Ss5LOs8vr+UqQjKV3E45n9n/x2NYihfzSHxvOz7/vwSKF/D
QWdtzN6Fu0qhfC2H4s9rLzx5Vwbl6zhYu7dkHvhWDuXrOTwP+ZTTc6QCyjdw
WDx9Puu8oEoo39Dhi1eU35WFML6Rwye/o1N7tsP4xg6FKROkV8yG8U0c7j2a
2fUrDMY3dSjaUzXF/BPMfDOH2UusowJLYXxzBwn7r7Xaz2HusXAI3bUktc0X
xrd02Lxt7ibutTD3Wzk0xwctyeaE8a0dWP53f2hIhfnXxqGw/eCHksOw8LB1
WDRH+8MDFRjfzmFF4Q2L112w8LN3aIjS6Yn/BgtfBwdBg2dOh9Oh/AYHh8f1
phNT78Piw9Fhj8SrxpxYKL/B0SH4AZvF/Yew+HNy2CGy+sfaHCi/wclB57Pg
rYLfsPh2dug8lPR5iSaU3+DscMzo17v+5DyovItDYLWO+P4VuXYAb8uusw==

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7Odp6QV8l8m3gwo4bPq08oqDHIzP4XB4+6KV
SkowvoBDkck2B1ldGF/EQftNxMaXHjC+hINofeIS81YYX8Yh/lJFbMwXGF/B
YcPzkND4oAIoX8nhwkw+taizML6Kw0arwxn/0gqhfDWHNOfdNXtEi6B8DQce
s0DHG2dgfC2Hw/XLJ3DVF0P5Og6Ndx+yrlcogfL1HNzfW+8SWwnjGzh4TqxS
+SVUCuUbOrjnPu6xj4HxjRxaz+7ZENcK4xs7XPg86frCCTC+icOn30K2BY0w
vqlDWYjH0R3RML6ZwzkHKakWZRjf3OHLvY4jq+/A7LdwKNM7mbu+C8a3dJCX
Opu5wADGt3KQFNTKkrkI84+1wxmxEysC82B8G4efj7PjObhgfFsHoVsLNq1b
CgsPOwcZ1t02qU4wvr1DjBOnMvdDWHg6ONiXTlLwbILyGxwcZk6b5TJbDSbv
6HC1Izci8hw0PhocHVKtN/zcWwmLHyeHkNXunW80YPJODvycp1XebIfFr7PD
Ak7RubtUofwGZ4f4B+ZXjWfnQeVdHNxTbMLNJPLsAISTopU=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7Gdp6QV8l8m3gwo4bP208oqDHIzP4XBi+6KV
SkowvoBDmck2B1ldGF/EQftNxMaXHjC+hINEfeIS81YYX8Yh9VJFbMwXGF/B
YcPzkND4oAIoX8nh4kw+taizML6Kw3qrwxn/0gqhfDWHZOfdNXtEi6B8DQce
s0DHG2dgfC2Hw/XLJ3DVF0P5Og6Ndx+yrlcogfL1HLzeW+8SWwnjGzh4TqxS
+SVUCuUbOvjlPu6xj4HxjRy4z+7ZENcK4xs7iHyadH3hBBjfxEHmr5BtQSOM
b+rwKsTj6I5oGN/M4aSDlFSLMoxv7lB7r+PI6jsw+y0c3uuezF3fBeNbOsRJ
ns1cYADjWzm0C2plyVyE+cfa4YDYiRWBeTC+jYPi4+x4Di4Y39ah+uaCTeuW
wsLDzuEPy26bVCcY395hkROnMvdDWHg6OEgF9yl4NkH5DQ4ON/1Wu8xWg8k7
Okz5WRgReQ4aHw2ODkfrt/7cWwmLHyeHeIvAzjcaMHknB3Xt8ypvtsPi19mB
/e+PObtUofwGZ4fHv82uGs/Og8q7OFyOCA83k8izAwDNq6VX
         
         "]]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 2.5474999999999998`*^-8}, 
     PlotRange -> {{0, 40}, {2.5*^-8, 1.2*^-7}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 2.5474999999999998`*^-8}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Lorenz - linear + exp\"", TraditionalForm], 
     PlotRange -> {{0, 40}, {2.5*^-8, 1.2*^-7}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{"\"symmetric\"", "\"large val\"", "\"large cond\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.687174392275791*^9, 3.687174477505384*^9}, 
   3.687174647819916*^9, 3.687175278246459*^9, {3.687258441804634*^9, 
   3.687258465262823*^9}, 3.687258504289941*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"kappaT", "/", 
       RowBox[{"(", "sigmaT", ")"}]}], "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}], "*", 
    RowBox[{"temmps", "^", 
     RowBox[{"-", "1"}]}]}], ")"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.68725813479628*^9, 3.687258180904379*^9}, {
  3.687258471684073*^9, 3.687258471830652*^9}, {3.687258543539732*^9, 
  3.687258543611693*^9}, {3.6872595387836227`*^9, 3.687259569992818*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.0284386395639509`*^-7", ",", "5.8845490077145`*^-8", ",", 
   "5.8845490077145`*^-8"}], "}"}]], "Output",
 CellChangeTimes->{{3.687258141303031*^9, 3.687258181434403*^9}, {
   3.6872584695021*^9, 3.6872584722288303`*^9}, 3.687258543988587*^9, {
   3.6872595392026367`*^9, 3.6872595704654913`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "3.992211760198622`*^-8"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"n1", "=", "5.795057886125392`*^-8"}], "\[IndentingNewLine]", 
 RowBox[{"n2", "=", "5.8845490077145`*^-8"}], "\[IndentingNewLine]", 
 RowBox[{"n3", "=", "1.0284386395639509`*^-7"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "*", 
   RowBox[{"2", "/", "Pi"}]}], "//", "N"}]}], "Input",
 CellChangeTimes->{{3.6872581943515673`*^9, 3.687258266008465*^9}, {
  3.6872584221445017`*^9, 3.6872584301418943`*^9}, {3.687258550103485*^9, 
  3.687258552732499*^9}, {3.6872595862222157`*^9, 3.687259588246167*^9}, {
  3.68725961827319*^9, 3.68725962099597*^9}}],

Cell[BoxData["5.795057886125392`*^-8"], "Output",
 CellChangeTimes->{3.6872584305737753`*^9, 3.687258475564396*^9, 
  3.6872585532420473`*^9, 3.687259589031727*^9, 3.6872596216138983`*^9}],

Cell[BoxData["5.8845490077145`*^-8"], "Output",
 CellChangeTimes->{3.6872584305737753`*^9, 3.687258475564396*^9, 
  3.6872585532420473`*^9, 3.687259589031727*^9, 3.687259621647403*^9}],

Cell[BoxData["1.0284386395639509`*^-7"], "Output",
 CellChangeTimes->{3.6872584305737753`*^9, 3.687258475564396*^9, 
  3.6872585532420473`*^9, 3.687259589031727*^9, 3.687259621673921*^9}],

Cell[BoxData["2.5415209420208284`*^-8"], "Output",
 CellChangeTimes->{3.6872584305737753`*^9, 3.687258475564396*^9, 
  3.6872585532420473`*^9, 3.687259589031727*^9, 3.687259621708393*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n1", "/", "Pi"}], ")"}], "*", "x"}], "\[Equal]", 
    RowBox[{"2.45", "*", 
     RowBox[{"10", "^", 
      RowBox[{"-", "8"}]}]}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.68725918963776*^9, 3.6872592713562737`*^9}, {
  3.687259321552259*^9, 3.687259399212236*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "1.3281837994617833`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.68725941815837*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n1", "*", 
  RowBox[{"4", "/", 
   RowBox[{"(", 
    RowBox[{"3", "Pi"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.687259453751586*^9, 3.68725946187006*^9}}],

Cell[BoxData["2.4594989548814027`*^-8"], "Output",
 CellChangeTimes->{3.687259462383437*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "/.", "\[VeryThinSpace]", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.3281837994617833`"}], "}"}], "}"}]}]], "Input",\

 NumberMarks->False],

Cell[BoxData[
 RowBox[{"{", "1.3281837994617833`", "}"}]], "Output",
 CellChangeTimes->{3.687259419899913*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n2", "*", 
  RowBox[{"4", "/", 
   RowBox[{"(", 
    RowBox[{"3", "Pi"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.6872598322029543`*^9, 3.68725983226651*^9}}],

Cell[BoxData["2.4974801665180545`*^-8"], "Output",
 CellChangeTimes->{3.687259832587556*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n3", "*", 
  RowBox[{"3", "/", 
   RowBox[{"(", 
    RowBox[{"4", "Pi"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.687259598772546*^9, 3.6872596082319937`*^9}, {
  3.687259645412147*^9, 3.6872596880554743`*^9}}],

Cell[BoxData["2.455216397299603`*^-8"], "Output",
 CellChangeTimes->{{3.6872595996720963`*^9, 3.687259608394886*^9}, {
  3.687259645875133*^9, 3.68725968834663*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.687259278632758*^9, 3.687259319038588*^9}}],

Cell[BoxData["4.863903205152728`"], "Output",
 CellChangeTimes->{{3.687259280994228*^9, 3.687259314458626*^9}}]
}, Open  ]]
},
WindowSize->{720, 830},
WindowMargins->{{Automatic, 7}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2243, 61, 180, "Input"],
Cell[CellGroupData[{
Cell[2826, 85, 2031, 47, 159, "Input"],
Cell[4860, 134, 16267, 280, 236, "Output"],
Cell[21130, 416, 17057, 293, 236, "Output"]
}, Open  ]],
Cell[38202, 712, 1016, 27, 75, "Input"],
Cell[CellGroupData[{
Cell[39243, 743, 891, 26, 54, "Input"],
Cell[40137, 771, 303, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40477, 781, 155, 3, 32, "Input"],
Cell[40635, 786, 1314, 36, 125, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41986, 827, 9279, 278, 621, "Input"],
Cell[51268, 1107, 1980, 49, 167, "Output"],
Cell[53251, 1158, 1907, 49, 148, "Output"],
Cell[55161, 1209, 2364, 61, 212, "Output"],
Cell[57528, 1272, 1987, 52, 168, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59552, 1329, 1235, 32, 117, "Input"],
Cell[60790, 1363, 155969, 2763, 321, 119176, 2158, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[216774, 4129, 950, 22, 159, "Input"],
Cell[CellGroupData[{
Cell[217749, 4155, 3659, 85, 222, "Input"],
Cell[221411, 4242, 438264, 7300, 377, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[659712, 11547, 3130, 85, 285, "Input"],
Cell[662845, 11634, 820, 14, 75, "Output"]
}, Open  ]],
Cell[663680, 11651, 1400, 33, 180, "Input"],
Cell[CellGroupData[{
Cell[665105, 11688, 2037, 52, 180, "Input"],
Cell[667145, 11742, 66045, 1275, 346, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[733227, 13022, 1086, 27, 117, "Input"],
Cell[734316, 13051, 66319, 1278, 346, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[800672, 14334, 1174, 28, 117, "Input"],
Cell[801849, 14364, 66266, 1278, 346, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[868152, 15647, 2333, 53, 138, "Input"],
Cell[870488, 15702, 64068, 1231, 321, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[934593, 16938, 1673, 44, 117, "Input"],
Cell[936269, 16984, 15975, 312, 333, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[952281, 17301, 546, 14, 32, "Input"],
Cell[952830, 17317, 342, 7, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[953209, 17329, 672, 13, 117, "Input"],
Cell[953884, 17344, 188, 2, 32, "Output"],
Cell[954075, 17348, 184, 2, 32, "Output"],
Cell[954262, 17352, 187, 2, 32, "Output"],
Cell[954452, 17356, 187, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[954676, 17363, 385, 11, 32, "Input"],
Cell[955064, 17376, 162, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[955263, 17385, 183, 5, 32, "Input"],
Cell[955449, 17392, 92, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[955578, 17398, 189, 6, 32, "Input"],
Cell[955770, 17406, 110, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[955917, 17413, 185, 5, 32, "Input"],
Cell[956105, 17420, 92, 1, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[956234, 17426, 237, 6, 32, "Input"],
Cell[956474, 17434, 165, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[956676, 17441, 92, 1, 32, "Input"],
Cell[956771, 17444, 111, 1, 32, "Output"]
}, Open  ]]
}
]
*)

